[
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/.idea/history.iml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <content url=\"file://$MODULE_DIR$/search\" />\n    <content url=\"file://$MODULE_DIR$/../user\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"TestRunnerService\">\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"Unittests\" />\n  </component>\n</module>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/.idea/misc.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.5.3 (/Library/Frameworks/Python.framework/Versions/3.5/bin/python3.5)\" project-jdk-type=\"Python SDK\" />\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/.idea/modules.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/history.iml\" filepath=\"$PROJECT_DIR$/.idea/history.iml\" />\n    </modules>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/.idea/workspace.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b852bcfd-6593-4ce5-850b-383493b2292f\" name=\"Default\" comment=\"\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf SIDE_TABS_SIZE_LIMIT_KEY=\"300\">\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"735\">\n              <caret line=\"49\" column=\"0\" lean-forward=\"false\" selection-start-line=\"49\" selection-start-column=\"0\" selection-end-line=\"49\" selection-end-column=\"0\" />\n              <folding>\n                <element signature=\"e#269#280#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"search_commit_history.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"414\">\n              <caret line=\"33\" column=\"57\" lean-forward=\"false\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n              <folding>\n                <element signature=\"e#249#258#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"get_info.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"90\">\n              <caret line=\"20\" column=\"39\" lean-forward=\"false\" selection-start-line=\"20\" selection-start-column=\"39\" selection-end-line=\"20\" selection-end-column=\"39\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"mapping.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"315\">\n              <caret line=\"23\" column=\"37\" lean-forward=\"true\" selection-start-line=\"23\" selection-start-column=\"37\" selection-end-line=\"23\" selection-end-column=\"37\" />\n              <folding>\n                <element signature=\"e#252#261#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"FindInProjectRecents\">\n    <findStrings>\n      <find>commit_author</find>\n      <find>dir_path</find>\n    </findStrings>\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/get_info.py\" />\n        <option value=\"$PROJECT_DIR$/mapping.py\" />\n        <option value=\"$PROJECT_DIR$/__init__.py\" />\n        <option value=\"$PROJECT_DIR$/../search/main.py\" />\n        <option value=\"$PROJECT_DIR$/../search/git_search/search_commit_history.py\" />\n        <option value=\"$PROJECT_DIR$/search/git_search/search_commit_history.py\" />\n        <option value=\"$PROJECT_DIR$/git_search/search_commit_history.py\" />\n        <option value=\"$PROJECT_DIR$/commit_history/get_info.py\" />\n        <option value=\"$PROJECT_DIR$/main.py\" />\n        <option value=\"$PROJECT_DIR$/../user/Get_Info/syn_tags.py\" />\n        <option value=\"$PROJECT_DIR$/commit_history/mapping.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectFrameBounds\">\n    <option name=\"x\" value=\"4\" />\n    <option name=\"y\" value=\"22\" />\n    <option name=\"width\" value=\"1436\" />\n    <option name=\"height\" value=\"878\" />\n  </component>\n  <component name=\"ProjectView\">\n    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\">\n      <flattenPackages />\n      <showMembers />\n      <showModules />\n      <showLibraryContents />\n      <hideEmptyPackages />\n      <abbreviatePackageNames />\n      <autoscrollToSource />\n      <autoscrollFromSource />\n      <sortByType />\n      <manualOrder />\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"Scope\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"Get_Info\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"git_search\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewModuleNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"commit_history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n        </subPane>\n      </pane>\n      <pane id=\"Scratches\" />\n    </panes>\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n    <property name=\"SearchEverywhereHistoryKey\" value=\"&#9;FILE&#9;file:///Users/ChrisQiu/anaconda3/lib/python3.5/encodings/ascii.py\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/git_search\" />\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/commit_history\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.main\">\n    <configuration default=\"false\" name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"test.txt output --fsearch\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"false\" name=\"main (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/../user/Get_Info\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../user/Get_Info/main.py\" />\n      <option name=\"PARAMETERS\" value=\"--mp login_try.json\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"false\" name=\"syn_tags\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/../user/Get_Info\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../user/Get_Info/syn_tags.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Attests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Nosetests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Unittests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PUREUNITTEST\" value=\"true\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"py.test\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"testToRun\" value=\"\" />\n      <option name=\"keywords\" value=\"\" />\n      <option name=\"params\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <option name=\"USE_KEYWORD\" value=\"false\" />\n      <method />\n    </configuration>\n    <list size=\"3\">\n      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n      <item index=\"1\" class=\"java.lang.String\" itemvalue=\"Python.main (1)\" />\n      <item index=\"2\" class=\"java.lang.String\" itemvalue=\"Python.syn_tags\" />\n    </list>\n    <recent_temporary>\n      <list size=\"3\">\n        <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n        <item index=\"1\" class=\"java.lang.String\" itemvalue=\"Python.main (1)\" />\n        <item index=\"2\" class=\"java.lang.String\" itemvalue=\"Python.syn_tags\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"ShelveChangesManager\" show_recycled=\"false\">\n    <option name=\"remove_strategy\" value=\"false\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b852bcfd-6593-4ce5-850b-383493b2292f\" name=\"Default\" comment=\"\" />\n      <created>1506936120824</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1506936120824</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"TodoView\">\n    <todo-panel id=\"selected-file\">\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n    <todo-panel id=\"all\">\n      <are-packages-shown value=\"true\" />\n      <is-autoscroll-to-source value=\"true\" />\n    </todo-panel>\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"4\" y=\"22\" width=\"1436\" height=\"878\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.24664311\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.32951653\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"7\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"7\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.32951653\" sideWeight=\"0.5\" order=\"7\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.29643765\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.32951653\" sideWeight=\"0.5\" order=\"7\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.3994911\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.32951653\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n    </layout>\n  </component>\n  <component name=\"VcsContentAnnotationSettings\">\n    <option name=\"myLimit\" value=\"2678400000\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/git_search/search_commit_history.py</url>\n          <line>40</line>\n          <option name=\"timeStamp\" value=\"24\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>63</line>\n          <option name=\"timeStamp\" value=\"25\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/commit_history/mapping.py</url>\n          <line>25</line>\n          <option name=\"timeStamp\" value=\"28\" />\n        </line-breakpoint>\n      </breakpoints>\n      <option name=\"time\" value=\"31\" />\n    </breakpoint-manager>\n    <watches-manager />\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"25\" lean-forward=\"true\" selection-start-line=\"0\" selection-start-column=\"25\" selection-end-line=\"0\" selection-end-column=\"25\" />\n          <folding>\n            <element signature=\"e#269#280#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"495\">\n          <caret line=\"33\" column=\"57\" lean-forward=\"false\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n          <folding>\n            <element signature=\"e#249#258#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"345\">\n          <caret line=\"23\" column=\"26\" lean-forward=\"true\" selection-start-line=\"23\" selection-start-column=\"26\" selection-end-line=\"23\" selection-end-column=\"26\" />\n          <folding>\n            <element signature=\"e#252#261#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"690\">\n          <caret line=\"50\" column=\"0\" lean-forward=\"false\" selection-start-line=\"50\" selection-start-column=\"0\" selection-end-line=\"50\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"120\">\n          <caret line=\"14\" column=\"0\" lean-forward=\"false\" selection-start-line=\"14\" selection-start-column=\"0\" selection-end-line=\"14\" selection-end-column=\"0\" />\n          <folding>\n            <marker date=\"1507875960000\" expanded=\"true\" signature=\"0:7\" ph=\"import ...\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#269#280#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"495\">\n          <caret line=\"33\" column=\"57\" lean-forward=\"false\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n          <folding>\n            <element signature=\"e#249#258#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1350\">\n          <caret line=\"90\" column=\"49\" lean-forward=\"false\" selection-start-line=\"90\" selection-start-column=\"49\" selection-end-line=\"90\" selection-end-column=\"49\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"750\">\n          <caret line=\"50\" column=\"26\" lean-forward=\"true\" selection-start-line=\"50\" selection-start-column=\"26\" selection-end-line=\"50\" selection-end-column=\"26\" />\n          <folding>\n            <element signature=\"e#252#261#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"690\">\n          <caret line=\"50\" column=\"0\" lean-forward=\"true\" selection-start-line=\"50\" selection-start-column=\"0\" selection-end-line=\"50\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"120\">\n          <caret line=\"14\" column=\"0\" lean-forward=\"true\" selection-start-line=\"14\" selection-start-column=\"0\" selection-end-line=\"14\" selection-end-column=\"0\" />\n          <folding>\n            <marker date=\"1507875960000\" expanded=\"true\" signature=\"0:7\" ph=\"import ...\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"480\">\n          <caret line=\"32\" column=\"48\" lean-forward=\"false\" selection-start-line=\"32\" selection-start-column=\"48\" selection-end-line=\"32\" selection-end-column=\"48\" />\n          <folding>\n            <element signature=\"e#269#280#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"495\">\n          <caret line=\"33\" column=\"57\" lean-forward=\"false\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n          <folding>\n            <element signature=\"e#249#258#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1350\">\n          <caret line=\"90\" column=\"49\" lean-forward=\"false\" selection-start-line=\"90\" selection-start-column=\"49\" selection-end-line=\"90\" selection-end-column=\"49\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"330\">\n          <caret line=\"22\" column=\"40\" lean-forward=\"true\" selection-start-line=\"22\" selection-start-column=\"40\" selection-end-line=\"22\" selection-end-column=\"40\" />\n          <folding>\n            <element signature=\"e#252#261#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/syn_tags.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"330\">\n          <caret line=\"27\" column=\"26\" lean-forward=\"true\" selection-start-line=\"27\" selection-start-column=\"26\" selection-end-line=\"27\" selection-end-column=\"26\" />\n          <folding>\n            <marker date=\"1507875960000\" expanded=\"true\" signature=\"0:7\" ph=\"import ...\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#269#280#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"495\">\n          <caret line=\"33\" column=\"57\" lean-forward=\"true\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n          <folding>\n            <element signature=\"e#249#258#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1350\">\n          <caret line=\"90\" column=\"49\" lean-forward=\"true\" selection-start-line=\"90\" selection-start-column=\"49\" selection-end-line=\"90\" selection-end-column=\"49\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"465\">\n          <caret line=\"31\" column=\"29\" lean-forward=\"false\" selection-start-line=\"31\" selection-start-column=\"29\" selection-end-line=\"31\" selection-end-column=\"29\" />\n          <folding>\n            <element signature=\"e#252#261#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/example/rusthon_log.txt\">\n      <provider selected=\"true\" editor-type-id=\"LargeFileEditor\">\n        <state />\n      </provider>\n    </entry>\n    <entry file=\"file://$USER_HOME$/anaconda3/lib/python3.5/codecs.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"148\">\n          <caret line=\"320\" column=\"0\" lean-forward=\"false\" selection-start-line=\"320\" selection-start-column=\"0\" selection-end-line=\"320\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$APPLICATION_HOME_DIR$/helpers/pydev/_pydev_imps/_pydev_execfile.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"255\">\n          <caret line=\"17\" column=\"0\" lean-forward=\"false\" selection-start-line=\"17\" selection-start-column=\"0\" selection-end-line=\"17\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/__init__.py\" />\n    <entry file=\"file://$PROJECT_DIR$/search/main.py\" />\n    <entry file=\"file://$PROJECT_DIR$/search/git_search/__init__.py\" />\n    <entry file=\"file://$USER_HOME$/anaconda3/lib/python3.5/encodings/ascii.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"375\">\n          <caret line=\"25\" column=\"0\" lean-forward=\"false\" selection-start-line=\"25\" selection-start-column=\"0\" selection-end-line=\"25\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/syn_tags.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"165\">\n          <caret line=\"11\" column=\"0\" lean-forward=\"true\" selection-start-line=\"11\" selection-start-column=\"0\" selection-end-line=\"11\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/get_info.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"90\">\n          <caret line=\"20\" column=\"39\" lean-forward=\"false\" selection-start-line=\"20\" selection-start-column=\"39\" selection-end-line=\"20\" selection-end-column=\"39\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/git_search/search_commit_history.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"414\">\n          <caret line=\"33\" column=\"57\" lean-forward=\"false\" selection-start-line=\"33\" selection-start-column=\"57\" selection-end-line=\"33\" selection-end-column=\"57\" />\n          <folding>\n            <element signature=\"e#249#258#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file:///Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/codecs.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"148\">\n          <caret line=\"308\" column=\"0\" lean-forward=\"false\" selection-start-line=\"308\" selection-start-column=\"0\" selection-end-line=\"308\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"-531\">\n          <caret line=\"29\" column=\"49\" lean-forward=\"true\" selection-start-line=\"29\" selection-start-column=\"49\" selection-end-line=\"29\" selection-end-column=\"49\" />\n          <folding>\n            <marker date=\"1507875960000\" expanded=\"true\" signature=\"0:7\" ph=\"import ...\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/../user/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"-1371\">\n          <caret line=\"50\" column=\"0\" lean-forward=\"false\" selection-start-line=\"50\" selection-start-column=\"0\" selection-end-line=\"50\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"735\">\n          <caret line=\"49\" column=\"0\" lean-forward=\"false\" selection-start-line=\"49\" selection-start-column=\"0\" selection-end-line=\"49\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#269#280#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/commit_history/mapping.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"315\">\n          <caret line=\"23\" column=\"37\" lean-forward=\"true\" selection-start-line=\"23\" selection-start-column=\"37\" selection-end-line=\"23\" selection-end-column=\"37\" />\n          <folding>\n            <element signature=\"e#252#261#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/README.md",
      "code_snippet": "# Map Git Commit History to Authors\n\nAuthor: Zimeng Qiu\n\n## Motivation\n\nTo build a mapping relationship between code snippets in Github repositories and authors.\n\n## Method\n\nText mining on Github log. \n\n* Extract information using regular expression.\n* Store code snippets and authors in a tree structure, which can be easily indexed.\n\n## Usage\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/README.md",
      "code_snippet": "$ python your_dir_of_main.py input output_dir <--mapping|--fsearch|--search>\n```\n\n### Mapping Mode\n\nThis mode use command like this:\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/README.md",
      "code_snippet": "\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.32.12%20PM.png)\n\n### Code File Search Mode\n\nRun like this:\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/README.md",
      "code_snippet": "\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.14%20PM.png)\n\n### Code Search Mode\n\nRun like this:\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "\ndef get_code(inp):\n    code_list = list()\n    if os.path.isdir(inp):\n        os.chdir(os.path.abspath(inp))\n        command = \"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \" \\\n                  \"--abbrev-commit -p -100000 \"\n    else:\n        command = \"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \" \\\n                  \"--abbrev-commit -p -100000 \" + inp\n        # + \" > \" + outp + \"/log.txt\"\n    input_data = os.popen(command)\n    data = input_data.read()\n    lines = data.split(\"\\n\")",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/output/author.json",
      "code_snippet": "author: ChrisQiu\nauthor: ChrisQiu",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-12-04 14:31:23 +0800",
      "file": "git/history/output/commit_history.json",
      "code_snippet": "[\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CoverageDataManager\\\">\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_stackoverflow.coverage\\\" NAME=\\\"get_info_stackoverflow Coverage Results\\\" MODIFIED=\\\"1507877720752\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$syn_tags.coverage\\\" NAME=\\\"syn_tags Coverage Results\\\" MODIFIED=\\\"1507808388576\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_git.coverage\\\" NAME=\\\"get_info_git Coverage Results\\\" MODIFIED=\\\"1507877344356\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n  </component>\\n  <component name=\\\"CreatePatchCommitExecutor\\\">\\n    <option name=\\\"PATCH_PATH\\\" value=\\\"\\\" />\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"get_info_stackoverflow.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"649\\\">\\n              <caret line=\\\"243\\\" column=\\\"0\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"243\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"243\\\" selection-end-column=\\\"0\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"270\\\">\\n              <caret line=\\\"27\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"27\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"30\\\" selection-end-column=\\\"36\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <file leaf-file-name=\\\"get_info_git.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"250\\\">\\n              <caret line=\\\"96\\\" column=\\\"54\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"96\\\" selection-start-column=\\\"54\\\" selection-end-line=\\\"96\\\" selection-end-column=\\\"54\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    <option name=\\\"CHANGED_PATHS\\\">\\n      <list>\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/syn_tags.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/main.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_git.py\\\" />\\n      </list>\\n    </option>\\n  </component>\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n        </subPane>\\n      </pane>\\n      <pane id=\\\"Scope\\\" />\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.35520834\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"270\\\">\\n          <caret line=\\\"27\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"27\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"30\\\" selection-end-column=\\\"36\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"250\\\">\\n          <caret line=\\\"96\\\" column=\\\"54\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"96\\\" selection-start-column=\\\"54\\\" selection-end-line=\\\"96\\\" selection-end-column=\\\"54\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"649\\\">\\n          <caret line=\\\"243\\\" column=\\\"0\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"243\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"243\\\" selection-end-column=\\\"0\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_topics\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\",\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\",\\n      \\\"github_tags\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"XSLT\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"name\\\": \\\"Tarang Shah\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"355274_1.0\\\"\\n      ],\\n      \\\"github_tags\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Makefile\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"name\\\": \\\"Kazhnuz\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"github_tags\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"github_tags\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"name\\\": \\\"Kedan Li\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import time\\nimport json\\nimport multiprocessing\\nimport sys\\n\\ndef delete_duplicate(dict):\\n    Info = []\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    return Info\\n\\ndef search_info(developer_login):\\n    print(\\\"Getting info of users in the name list...\\\")\\n    api = 'https://api.github.com/users/{}'.format(developer_login)\\n    developer_info = request_url(api, 100)\\n    developer_info = extract_dict(developer_info)\\n\\n    return developer_info\\n\\ndef multi_Prcapi(commit_api):\\n    developer_info = request_url(commit_api, 5)\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    print(time.time() - cTime)\\n    pool.close()\\n    pool.join()\\n    merge_info = git_info\\n    # for developer in git_info:\\n    #     merge_info.extend(developer)\\n    cTime = time.time()\\n    merge_info = delete_duplicate(merge_info)\\n    pool = multiprocessing.Pool(processes=10)\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n\\nif __name__ == '__main__':\\n    Info_path = sys.path[0] + \\\"/Info\\\"\\n    # git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n    name_file = Info_path + '/login_list.json'\\n    name_list = open(name_file, encoding='utf-8')\\n    name_list = json.load(name_list)\\n    # git_info = multi_Prcapi(git_api)\\n    git_info = multi_Prclist(name_list)\\n    info_file = '/home/ace/zsj/GetInfo/Info/awesome_match_5.json'\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\",\n      \"commit_date\": \"2017-10-13 15:00:43 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\n\\n\\n## Usage:<br>\\n**1** Find the information of github developers who committed to a certain project.<br>\\n**2** Find the information of github developers in a login list.<br>\\n`Input`: The name of a github repo or a list of github developers' name.<br>\\n`Output`: A json file including github users\\u2019 name, login, location, language, tags, email.<br><br>\\n**3** Find github developers\\u2019 Stack Overflow account. **(Identity Linkage)** \\u00a0<br>\\n`Input`: A json file including github user's name, login, location, language and tags.<br>\\n`Output`: A json file including the input information and the corresponding Stack Overflow account and possible ids.<br><br>\\n\\n## Script Description<br>\\n* `get_info_git.py` dumps the Github developers' name, login, company, location, e-mail, language and topics. <br>\\n* `get_info_stackoverflow.py` dumps the Stack Overflow developers' display name, location, tags, github associated account and possible user id for identity linkage.<br>\\n* `name_form.py` lists the possible Stack Overflow display name for a Github developer.<br>\\n* `syn_tags.py` gets the synonymous tags for comparsion of tags between github and Stach Overflow users. <br>\\n* Run the script `main.py` according to the following instructions:<br><br>\\n```\\n--lt  : python main.py --lt [input file] [output file]\\n        Dump the info of developers in the input name list\\n\\n--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file]\\n        Dump the developers' info in the commit history of input repo\\n\\n--mp  : python main.py --mp [file]\\n        Mapping between developers on github and Stack Overflow, but the info should be dumped first\\n```\\n\\n## Get the Information of Github Developers\\nUsing `get_info_git.py` to dump the developers' name, login, company, location, e-mail, languages and topics using github API.\",\n      \"commit_date\": \"2017-10-13 13:41:50 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CoverageDataManager\\\">\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_stackoverflow.coverage\\\" NAME=\\\"get_info_stackoverflow Coverage Results\\\" MODIFIED=\\\"1507863878084\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$syn_tags.coverage\\\" NAME=\\\"syn_tags Coverage Results\\\" MODIFIED=\\\"1507808388576\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_git.coverage\\\" NAME=\\\"get_info_git Coverage Results\\\" MODIFIED=\\\"1507816232902\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n  </component>\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"get_info_stackoverflow.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"224\\\">\\n              <caret line=\\\"22\\\" column=\\\"49\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"22\\\" selection-start-column=\\\"49\\\" selection-end-line=\\\"22\\\" selection-end-column=\\\"49\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"225\\\">\\n              <caret line=\\\"15\\\" column=\\\"24\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"15\\\" selection-start-column=\\\"24\\\" selection-end-line=\\\"15\\\" selection-end-column=\\\"24\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <list>\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/syn_tags.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_git.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/main.py\\\" />\\n      </list>\\n    </option>\\n  </component>\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"  </component>\\n  <component name=\\\"ToolWindowManager\\\">\\n    <frame x=\\\"65\\\" y=\\\"24\\\" width=\\\"1855\\\" height=\\\"1056\\\" extended-state=\\\"6\\\" />\\n    <editor active=\\\"true\\\" />\\n    <layout>\\n      <window_info id=\\\"Project\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.2498618\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"TODO\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"6\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Event Log\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Database\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.27291667\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"224\\\">\\n          <caret line=\\\"22\\\" column=\\\"49\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"22\\\" selection-start-column=\\\"49\\\" selection-end-line=\\\"22\\\" selection-end-column=\\\"49\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"225\\\">\\n          <caret line=\\\"15\\\" column=\\\"24\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"15\\\" selection-start-column=\\\"24\\\" selection-end-line=\\\"15\\\" selection-end-column=\\\"24\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\\n         \\\"dark-mode\\\",\\n         \\\"alfred3-workflow\\\",\\n         \\\"applescript\\\",\\n         \\\"alfy\\\",\\n         \\\"npm-package\\\",\\n         \\\"emoji\\\",\\n         \\\"emoji-picker\\\",\\n         \\\"emoji-searcher\\\",\\n         \\\"nodejs\\\",\\n         \\\"lock\\\",\\n         \\\"c-language\\\",\\n         \\\"npm\\\",\\n         \\\"npms\\\",\\n         \\\"search\\\",\\n         \\\"search-engine\\\",\\n         \\\"alfred-theme\\\",\\n         \\\"theme\\\",\\n         \\\"simple\\\",\\n         \\\"minimalistic\\\",\\n         \\\"light\\\",\\n         \\\"framework\\\",\\n         \\\"javascript\\\",\\n         \\\"workflow\\\",\\n         \\\"ama\\\",\\n         \\\"ask-me-anything\\\",\\n         \\\"question-answering\\\",\\n         \\\"meta\\\",\\n         \\\"personal\\\",\\n         \\\"ask\\\",\\n         \\\"open-content\\\",\\n         \\\"questions\\\",\\n         \\\"answers\\\",\\n         \\\"questions-and-answers\\\",\\n         \\\"list\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"deprecated\\\",\\n         \\\"twitter\\\",\\n         \\\"electron\\\",\\n         \\\"electron-app\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Swift\\\"\\n      ],\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"github_topics\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"deprecated\\\",\\n         \\\"twitter\\\",\\n         \\\"electron\\\",\\n         \\\"electron-app\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ]\\n   },\\n   {\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"QMake\\\"\\n      ],\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"IDL\\\",\\n         \\\"Arduino\\\",\\n         \\\"Java\\\",\\n         \\\"Processing\\\",\\n         \\\"C\\\",\\n         \\\"Batchfile\\\",\\n         \\\"CMake\\\",\\n         \\\"Scheme\\\",\\n         \\\"GLSL\\\",\\n         \\\"Makefile\\\",\\n         \\\"Prolog\\\",\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"QMake\\\"\\n      ]\\n   },\\n   {\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"355274_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"PowerShell\\\"\\n      ],\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"PowerShell\\\"\\n      ]\\n   },\\n   {\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\\n         \\\"applications\\\",\\n         \\\"gnome-shell-extension\\\",\\n         \\\"gtk-theme\\\",\\n         \\\"css\\\",\\n         \\\"html\\\",\\n         \\\"bootstrap\\\",\\n         \\\"icons\\\",\\n         \\\"faenza\\\",\\n         \\\"linux\\\",\\n         \\\"bootstrap3\\\",\\n         \\\"css3\\\",\\n         \\\"html5\\\",\\n         \\\"education\\\",\\n         \\\"ressources-educatives\\\",\\n         \\\"logiciels\\\",\\n         \\\"libre\\\",\\n         \\\"culture-libre\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Python\\\"\\n      ],\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"ressources-educatives\\\",\\n         \\\"logiciels\\\",\\n         \\\"libre\\\",\\n         \\\"culture-libre\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ]\\n   },\\n   {\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"github_tags\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"c\\\",\\n         \\\"linux\\\",\\n         \\\"linux-distribution\\\",\\n         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Ruby\\\"\\n      ],\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"github_topics\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"linux\\\",\\n         \\\"linux-distribution\\\",\\n         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ]\\n   },\\n   {\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\\n         \\\"machine-learning\\\",\\n         \\\"curated-list\\\",\\n         \\\"coreml-framework\\\",\\n         \\\"coreml-models\\\",\\n         \\\"coremltools\\\",\\n         \\\"awesome-list\\\",\\n         \\\"models\\\",\\n         \\\"swift-framework\\\",\\n         \\\"swift3\\\",\\n         \\\"swift-library\\\",\\n         \\\"ios\\\",\\n         \\\"ios-swift\\\",\\n         \\\"ios-ui\\\",\\n         \\\"ios-animation\\\",\\n         \\\"ios-lib\\\",\\n         \\\"xib\\\",\\n         \\\"animation\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"Erlang\\\"\\n      ],\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"github_topics\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"ios-animation\\\",\\n         \\\"ios-lib\\\",\\n         \\\"xib\\\",\\n         \\\"animation\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ]\\n   }\\n]\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"if not os.path.exists(Info_path):\\n    os.mkdir(Info_path)\\n\\n\\n\\nif len(sys.argv) == 1 or sys.argv[1] == '--help':\\n    help = \\\"--lt  : python main.py --lt [input file] [output file]\\\\n\\\" \\\\\\n           \\\"        Dump the info of developers in the input name list\\\\n\\\" \\\\\\n           \\\"\\\\n\\\" \\\\\\n           \\\"--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file] \\\\n\\\" \\\\\\n           \\\"        Dump the developers' info in the commit history of input repo\\\\n\\\" \\\\\\n           \\\"\\\\n\\\" \\\\\\n           \\\"--mp  : python main.py --mp [file]\\\\n\\\" \\\\\\n           \\\"        Mapping between developers on github and Stack Overflow, but the info should be dumped first\\\"\\n    print(help)\\n\\nelif sys.argv[1] == '--lt':\\n    name_file = Info_path + '/{}'.format(sys.argv[2])\\n    output_file = Info_path + '/{}'.format(sys.argv[3])\\n    name_list = open(name_file, encoding='utf-8')\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        json.dump(match_info, ctfile, indent=3)\\n    print(time.time() - cTime)\\n\\n\\n\\n\\n\",\n      \"commit_date\": \"2017-10-13 11:28:15 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectRootManager\\\" version=\\\"2\\\" project-jdk-name=\\\"Python 3.5.2 virtualenv at ~/.pyenv/versions/nltk-3-5-2\\\" project-jdk-type=\\\"Python SDK\\\" />\\n</project>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/misc.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"<module type=\\\"PYTHON_MODULE\\\" version=\\\"4\\\">\\n  <component name=\\\"NewModuleRootManager\\\">\\n    <content url=\\\"file://$MODULE_DIR$\\\" />\\n    <orderEntry type=\\\"jdk\\\" jdkName=\\\"Python 3.5.2 virtualenv at ~/.pyenv/versions/nltk-3-5-2\\\" jdkType=\\\"Python SDK\\\" />\\n    <orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TestRunnerService\\\">\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/user.iml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    <option name=\\\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\\\" value=\\\"false\\\" />\\n    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CoverageDataManager\\\">\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_stackoverflow.coverage\\\" NAME=\\\"get_info_stackoverflow Coverage Results\\\" MODIFIED=\\\"1507817805123\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$syn_tags.coverage\\\" NAME=\\\"syn_tags Coverage Results\\\" MODIFIED=\\\"1507808388576\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    <SUITE FILE_PATH=\\\"coverage/user$get_info_git.coverage\\\" NAME=\\\"get_info_git Coverage Results\\\" MODIFIED=\\\"1507816232902\\\" SOURCE_PROVIDER=\\\"com.intellij.coverage.DefaultCoverageFileProvider\\\" RUNNER=\\\"coverage.py\\\" COVERAGE_BY_TEST_ENABLED=\\\"true\\\" COVERAGE_TRACING_ENABLED=\\\"false\\\" WORKING_DIRECTORY=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n  </component>\\n  <component name=\\\"CreatePatchCommitExecutor\\\">\\n    <option name=\\\"PATCH_PATH\\\" value=\\\"\\\" />\\n  </component>\\n  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"get_info_stackoverflow.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"1169\\\">\\n              <caret line=\\\"226\\\" column=\\\"0\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"226\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"226\\\" selection-end-column=\\\"0\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"104\\\">\\n              <caret line=\\\"39\\\" column=\\\"53\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"39\\\" selection-start-column=\\\"53\\\" selection-end-line=\\\"39\\\" selection-end-column=\\\"53\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <file leaf-file-name=\\\"get_info_git.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"286\\\">\\n              <caret line=\\\"141\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"141\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"143\\\" selection-end-column=\\\"15\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"syn_tags.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"195\\\">\\n              <caret line=\\\"13\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"13\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"14\\\" selection-end-column=\\\"26\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#22#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"FindInProjectRecents\\\">\\n    <findStrings>\\n      <find>item</find>\\n    </findStrings>\\n  </component>\\n  <component name=\\\"IdeDocumentHistory\\\">\\n    <option name=\\\"CHANGED_PATHS\\\">\\n      <list>\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/syn_tags.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_git.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/main.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\" />\\n      </list>\\n    </option>\\n  </component>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"  </component>\\n  <component name=\\\"PropertiesComponent\\\">\\n    <property name=\\\"WebServerToolWindowFactoryState\\\" value=\\\"false\\\" />\\n    <property name=\\\"last_opened_file_path\\\" value=\\\"$PROJECT_DIR$/../../..\\\" />\\n    <property name=\\\"js.eslint.eslintPackage\\\" value=\\\"\\\" />\\n    <property name=\\\"settings.editor.selected.configurable\\\" value=\\\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\\\" />\\n  </component>\\n  <component name=\\\"RecentsManager\\\">\\n    <key name=\\\"MoveFile.RECENT_KEYS\\\">\\n      <recent name=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    </key>\\n  </component>\\n  <component name=\\\"RunManager\\\" selected=\\\"Python.get_info_stackoverflow\\\">\\n    <configuration default=\\\"false\\\" name=\\\"syn_tags\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\" temporary=\\\"true\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"$PROJECT_DIR$/Get_Info/syn_tags.py\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"false\\\" name=\\\"get_info_git\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\" temporary=\\\"true\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"$PROJECT_DIR$/Get_Info/get_info_git.py\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"false\\\" name=\\\"get_info_stackoverflow\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\" temporary=\\\"true\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"DjangoTestsConfigurationType\\\" factoryName=\\\"Django tests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <option name=\\\"USE_KEYWORD\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <list size=\\\"3\\\">\\n      <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.syn_tags\\\" />\\n      <item index=\\\"1\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.get_info_git\\\" />\\n      <item index=\\\"2\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.get_info_stackoverflow\\\" />\\n    </list>\\n    <recent_temporary>\\n      <list size=\\\"3\\\">\\n        <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.get_info_stackoverflow\\\" />\\n        <item index=\\\"1\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.get_info_git\\\" />\\n        <item index=\\\"2\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.syn_tags\\\" />\\n      </list>\\n    </recent_temporary>\\n  </component>\\n  <component name=\\\"ShelveChangesManager\\\" show_recycled=\\\"false\\\">\\n    <option name=\\\"remove_strategy\\\" value=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"SvnConfiguration\\\">\\n    <configuration />\\n  </component>\\n  <component name=\\\"TaskManager\\\">\\n    <task active=\\\"true\\\" id=\\\"Default\\\" summary=\\\"Default task\\\">\\n      <changelist id=\\\"778d6186-437e-4b56-8ed0-86e00419feed\\\" name=\\\"Default\\\" comment=\\\"\\\" />\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      <window_info id=\\\"TODO\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"6\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Event Log\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Database\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.46770832\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Debug\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"3\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Cvs\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"4\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Hierarchy\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"Message\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Commander\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Inspection\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"5\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Ant Build\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n    </layout>\\n  </component>\\n  <component name=\\\"TypeScriptGeneratedFilesManager\\\">\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/name_form.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"195\\\">\\n          <caret line=\\\"13\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"13\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"14\\\" selection-end-column=\\\"26\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#22#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"286\\\">\\n          <caret line=\\\"141\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"141\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"143\\\" selection-end-column=\\\"15\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"104\\\">\\n          <caret line=\\\"39\\\" column=\\\"53\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"39\\\" selection-start-column=\\\"53\\\" selection-end-line=\\\"39\\\" selection-end-column=\\\"53\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"1169\\\">\\n          <caret line=\\\"226\\\" column=\\\"0\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"226\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"226\\\" selection-end-column=\\\"0\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#9#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import requests\\nimport time\\nimport json\\nimport multiprocessing\\n\\ndef delete_duplicate(dict):\\n    Info = []\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"def request_url(url,pagesize):\\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\\\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\\n    # cTime = time.time()\\n    res = requests.get(url+app)\\n    res.encoding = 'utf-8'\\n    info = res.json()\\n    # print(\\\"Requesting...:{}\\\".format(time.time() - cTime))\\n    return info\\n\\ndef extract_dict(res):\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    return dict_info\\n\\ndef get_langtopics(user):\\n    # git_info = []\\n    language = []\\n    topics = []\\n    print(\\\"Finding languages and topics used by github user: {}\\\".format(user[\\\"github_login\\\"]))\\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\\\"github_login\\\"])\\n    repos = request_url(repo_api, 30)\\n\\n    for item in repos:\\n        # can be  parallel topics & language\\n        repo_name = item[\\\"name\\\"]\\n        # cTime = time.time()\\n        repo_topics = requests.get('https://api.github.com/repos/{}/{}/topics?'\\n                                   'per_page=10&client_id=ff50be78bda6f9fd0f2f'\\n                                   '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\\n                                   .format(user[\\\"github_login\\\"], repo_name),\\n                                   headers={\\\"Accept\\\": \\\"application/vnd.github.mercy-preview+json\\\"})\\n        repo_topics = repo_topics.json()[\\\"names\\\"]\\n        # print(\\\"Requesting...:{}\\\".format(time.time() - cTime))\\n        topics.extend(repo_topics)\\n\\n        if not item[\\\"languages_url\\\"] == None:\\n            language_api = item[\\\"languages_url\\\"]\\n            language_dict = request_url(language_api, 100)\\n        else:\\n            language_dict = None\\n        language.extend(language_dict)\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    topics = delete_duplicate(topics)\\n    language = delete_duplicate(language)\\n\\n    print(\\\"Github user {} languages: {}\\\".format(user[\\\"github_login\\\"], language))\\n    print(\\\"Github user {} topics: {}\\\\n\\\".format(user[\\\"github_login\\\"], topics))\\n    user[\\\"github_language\\\"] = language\\n    user[\\\"github_topics\\\"] = (topics if not topics == [] else \\\"null\\\")\\n    return user\\n\\n\\ndef get_info(developer_info):\\n    Info = []\\n    # for item in developer_info:\\n        ### For a list of developers, find their url\\n    item = developer_info\\n    if not item[\\\"author\\\"][\\\"login\\\"] in Info:\\n        author_api = (item[\\\"author\\\"][\\\"url\\\"] if not item[\\\"author\\\"] == None else \\\"null\\\")\\n    else:\\n        author_api = \\\"null\\\"\\n\\n    if not item[\\\"committer\\\"][\\\"login\\\"] in Info:\\n        committer_api = (item[\\\"committer\\\"][\\\"url\\\"] if not item[\\\"committer\\\"] == None else \\\"null\\\")\\n    else:\\n        committer_api = \\\"null\\\"\\n\\n    if not author_api == \\\"null\\\":\\n        author_info = request_url(author_api, 100)\\n        author_info = extract_dict(author_info)\\n        Info.append(author_info)\\n\\n    if not committer_api == \\\"null\\\":\\n        committer_info = request_url(committer_api, 100)\\n        committer_info = extract_dict(committer_info)\\n        Info.append(committer_info)\\n\\n    return Info\\n\\ndef search_info(developer_login):\\n    Info = []\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    print(time.time() - cTime)\\n    return git_info\\n\\ndef multi_Prcapi(commit_api):\\n    developer_info = request_url(commit_api, 5)\\n    print(\\\"Getting info of user in the commit history...\\\")\\n\\n    cTime = time.time()\\n    pool = multiprocessing.Pool(processes=10)\\n    git_info = pool.map(get_info,developer_info)\\n    print(time.time() - cTime)\\n    pool.close()\\n    pool.join()\\n    merge_info = []\\n    for developer in git_info:\\n        merge_info.extend(developer)\\n\\n    cTime = time.time()\\n    merge_info = delete_duplicate(merge_info)\\n    pool = multiprocessing.Pool(processes=10)\\n    merge_info = pool.map(get_langtopics,merge_info)\\n    print(time.time() - cTime)\\n    pool.close()\\n    pool.join()\\n    return merge_info\\n\\ndef multi_Prclist(name_list):\\n    print(\\\"Getting info of user in the commit history...\\\")\\n    cTime = time.time()\\n    pool = multiprocessing.Pool(processes=10)\\n    git_info = pool.map(search_info,name_list)\\n    print(time.time() - cTime)\\n    pool.close()\\n    pool.join()\\n    merge_info = []\\n    for developer in git_info:\\n        merge_info.extend(developer)\\n\\n    cTime = time.time()\\n    merge_info = delete_duplicate(merge_info)\\n    pool = multiprocessing.Pool(processes=10)\\n    merge_info = pool.map(get_langtopics,merge_info)\\n    print(time.time() - cTime)\\n    pool.close()\\n    pool.join()\\n    return merge_info\\n\\n\\n\\nif __name__ == '__main__':\\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n\\n    git_info = multi_Prcapi(git_api)\\n    info_file = '/home/ace/zsj/GetInfo/Info/awesome_match_5.json'\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(info_file, 'w') as ctfile:\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import time\\nimport urllib\\nimport urllib.error\\nimport multiprocessing\\nimport requests\\nimport sys\\nimport json\\nimport Get_Info.get_info_git as gt\\nimport Get_Info.name_form as nf\\nfrom Get_Info import levenshtein as le\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        return []\\n\\n\\ndef match_account(git_developer):\\n    syn_file = sys.path[0] + \\\"/Info/syn_list.json\\\"\\n    syn_list = open(syn_file, encoding='utf-8')\\n\\n    default_info = []\\n    # Merge the languages and topics to github_tags\\n    git_developer = merge_langtopics(git_developer)\\n    # print(\\\"Finding Github user {} on Stack Overflow...\\\".format(git_developer[\\\"name\\\"]))\\n    possible_name = nf.possible_names(git_developer[\\\"name\\\"], git_developer[\\\"github_login\\\"])\\n    print(\\\"Possible name of {}: {}\\\".format(git_developer[\\\"name\\\"],possible_name))\\n\\n    for name in possible_name:\\n        # All info of developers whose username contains the input name\\n        stk_info = InfoByName(name)\\n        stk_info = gt.delete_duplicate(stk_info)\\n\\n        if not stk_info == default_info:\\n            print(\\\"The possible info of Stack Overflow user {} is {}\\\".format(name, stk_info))\\n            cTime = time.time()\\n\\n            for stk_developer in stk_info:\\n                user_id = stk_developer['user_id']\\n                git_account = GetGitAccount(user_id)\\n\\n                if git_account == git_developer[\\\"github_login\\\"]:\\n                    git_developer[\\\"stackoverflow_login\\\"] = stk_developer[\\\"display_name\\\"]\\n                    print(time.time() - cTime)\\n                    break\\n\\n            # Continue to establish mapping if the possible match has been found?\\n            if git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" or git_developer[\\\"stackoverflow_login\\\"] == []:\\n                git_developer[\\\"stackoverflow_login\\\"] = []\\n                print(\\\"\\\\nNo linked account has been found. Mapping the users using tags and location...\\\")\\n                print(\\\"{} tags: {}\\\".format(git_developer[\\\"github_login\\\"], git_developer[\\\"github_tags\\\"]))\\n\\n                cTime = time.time()\\n                for stk_developer in stk_info:\\n                    developer_tags = get_tags(stk_developer)\\n                    stk_developer[\\\"tags\\\"] = developer_tags\\n                    match_name = match_info(git_developer, stk_developer, syn_list, 1)\\n                    if not match_name == []:\\n                        git_developer[\\\"stackoverflow_login\\\"].append(match_name)\\n                print(time.time() - cTime)\\n            else:\\n                break\\n\\n    if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" and not git_developer[\\\"stackoverflow_login\\\"] == []:\\n        print(\\\"The Stack Overflow display_name for github user {}: {}\\\".format(git_developer[\\\"name\\\"],\\n                                                                              git_developer['stackoverflow_login']))\\n    else:\\n        git_developer[\\\"stackoverflow_login\\\"] = \\\"null\\\"\\n        print(\\\"The Stack Overflow display_name for github user {} not found\\\".format(git_developer[\\\"name\\\"]))\\n    return git_developer\\n\\n\\ndef multi_match(git_developers):\\n    pool = multiprocessing.Pool(processes=10)\\n    git_info = pool.map(match_account,git_developers)\\n    pool.close()\\n    pool.join()\\n    return git_info\\n\\nif __name__ == '__main__':\\n    Info_path = sys.path[0] + \\\"/Info\\\"\\n    info_file = Info_path + '/login_try.json'\\n    git_info = open(info_file, encoding='utf-8')\\n    git_info = json.load(git_info)\\n    stk_count = total_count = 0\\n\\n    cTime = time.time()\\n    print(\\\"Matching developers between Github and Stack Overflow...\\\")\\n    match_info = multi_match(git_info)\\n    print(time.time() - cTime)\\n\\n    for item in match_info:\\n        if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n            stk_count = stk_count + 1\\n        total_count = total_count + 1\\n\\n    print(\\\"\\\\n The number of developers with Stack Overflow account is {}\\\".format(stk_count))\\n    print(\\\"The number of developers is {}\\\".format(total_count))\\n    print(\\\"Ratio:{}\\\".format(round(stk_count / total_count, 4)))\\n\\n    print(\\\"Saving the results of matching...\\\")\\n    cTime = time.time()\\n    file = Info_path + '/awesome_info_1.json'\\n    with open(info_file, 'w') as ctfile:\\n        json.dump(match_info, ctfile, indent=3)\\n    print(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    output_file = Info_path + '/{}'.format(sys.argv[3])\\n    name_list = open(name_file, encoding='utf-8')\\n    name_list = json.load(name_list)\\n    git_info = gt.multi_Prclist(name_list)\\n\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"elif sys.argv[1] == '--cm':\\n    # 'sindresorhus/awesome'\\n    git_api = 'https://api.github.com/repos/{}/commits'.format(sys.argv[2])\\n    git_info = gt.multi_Prcapi(git_api)\\n    output_file = Info_path + '/{}'.format(sys.argv[3])\\n\\n    cTime = time.time()\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\nelif sys.argv[1] == '--mp':\\n    info_file = Info_path + '/{}'.format(sys.argv[2])\\n\\n    git_info = open(info_file, encoding='utf-8')\\n    git_info = json.load(git_info)\\n    stk_count = total_count = 0\\n\\n    cTime = time.time()\\n    print(\\\"Matching developers between Github and Stack Overflow...\\\")\\n    match_info = st.multi_match(git_info)\\n    print(time.time() - cTime)\\n\\n    for item in match_info:\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import multiprocessing\\nimport time\\n\\n\\ndef f(x):\\n    for i in range(x):\\n        for j in range(i):\\n            print(j)\\n    # time.sleep(2)\\n    print(x)\\n\\n\\nif __name__ == '__main__':\\n    pool = multiprocessing.Pool(processes=5)\\n    pool.map(f, range(10))\",\n      \"commit_date\": \"2017-10-12 22:22:52 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUSAGE: %(program)s input_code_file output_dir <--fsearch|--search|--mapping>\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport json\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:17:00 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"    # check and process input arguments\\\\n    if len(sys.argv) != 4:\\\\n        print(len(sys.argv))\\\\n        raise SystemExit(\\\\\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\\\\\")\\\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\\\n    if not os.path.exists(output_dir):\\\\n        try:\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:17:00 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"        search_commit_history.print_match_result(search_result)\\\\n    else:\\\\n        print(\\\\\\\"Wrong argument!\\\\\\\")\\\\n        print(\\\\\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\\\\\")\\\\n\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:17:00 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"        snippet_remain = regex_remain.findall(line)\\\\n        if len(snippet_plus):\\\\n            snippet = snippet_plus\\\\n        # elif len(snippet_minus):\\\\n            # snippet = snippet_minus\\\\n        elif len(snippet_remain):\\\\n            snippet = snippet_remain\\\\n        else:\\\\n            snippet = str()\\\\n        if regex_pause.findall(line):\\\\n            break\\\\n        if len(snippet):\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"    return snippet_list\\\\n\\\\n\\\\ndef get_date(line):\\\\n    regex = re.compile(\\\\\\\"date:\\\\\\\\s([0-9\\\\\\\\-:+\\\\\\\\s]*)\\\\\\\\sauthor:\\\\\\\")\\\\n    date = regex.findall(line)\\\\n    return date\\\\n\\\\n\\\\ndef get_change_section(line):\\\\n    regex = re.compile(\\\\\\\"^@@\\\\\\\")\\\\n    if regex.findall(line):\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"    else:\\\\n        return 0\\\\n\\\\n\\\\ndef get_line_index(inp):\\\\n    a_start_line_list = list()\\\\n    a_total_line_list = list()\\\\n    b_start_line_list = list()\\\\n    b_total_line_list = list()\\\\n    lines = inp.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n    regex_a_start = re.compile(\\\\\\\"@@\\\\\\\\s-(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s\\\\\\\")\\\\n    regex_a_total = re.compile(\\\\\\\"@@\\\\\\\\s-\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s\\\\\\\")\\\\n    regex_b_start = re.compile(\\\\\\\"\\\\\\\\+(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s@@\\\\\\\")\\\\n    regex_b_total = re.compile(\\\\\\\"\\\\\\\\+\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s@@\\\\\\\")\\\\n    for line in lines:\\\\n        a_start_line = regex_a_start.findall(line)\\\\n        a_total_line = regex_a_total.findall(line)\\\\n        b_start_line = regex_b_start.findall(line)\\\\n        b_total_line = regex_b_total.findall(line)\\\\n        a_start_line_list.extend(a_start_line)\\\\n        a_total_line_list.extend(a_total_line)\\\\n        b_start_line_list.extend(b_start_line)\\\\n        b_total_line_list.extend(b_total_line)\\\\n    return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"              # + \\\\\\\" > \\\\\\\" + outp + \\\\\\\"/log.txt\\\\\\\"\\\\n    input_data = os.popen(command)\\\\n    data = input_data.read()\\\\n    lines = data.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n    for index, line in enumerate(lines):\\\\n        code_dict = dict()\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"            email = get_info.get_email(line)\\\\n            if len(email):\\\\n                commit_author = author[0]\\\\n                commit_email = email[0]\\\\n                commit_date = get_info.get_date(line)\\\\n                if len(commit_date):\\\\n                    commit_date = commit_date[0]\\\\n        elif get_info.get_change_file(line):\\\\n            commit_file = get_info.get_change_file(line)\\\\n            # code_dict['file'] = commit_file[0]\\\\n        elif get_info.get_change_section(line):\\\\n            code_dict['file'] = commit_file[0]\\\\n            code_dict['author'] = commit_author\\\\n            # print(commit_author)\\\\n            code_dict['email'] = commit_email\\\\n            code_dict['commit_date'] = commit_date\\\\n            # print(commit_email)\\\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n            code_dict['code_snippet'] = \\\\\\\"\\\\\\\\n\\\\\\\".join(code_snippet)\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Commit Date: {}\\\\\\\".format(code['commit_date']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        print(code[\\\\\\\"code_snippet\\\\\\\"])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/git_search/search_commit_history.py\\\",\\n      \\\"code_snippet\\\": \\\"\\\\n\\\\ndef print_match_result(data_list):\\\\n    print('\\\\\\\\033[1;34m')\\\\n    print(\\\\\\\"Found {} match result\\\\\\\".format(len(data_list)))\\\\n    for data in data_list:\\\\n        print('\\\\\\\\033[1;31m')\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/git_search/search_commit_history.py\\\",\\n      \\\"code_snippet\\\": \\\"        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Commit Date: {}\\\\\\\".format(data['commit_date']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        print(data[\\\\\\\"code_snippet\\\\\\\"])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-09 12:11:20 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"# Map Git Commit History to Authors\\\\n\\\\nAuthor: ch-chiu\\\\n\\\\n## Usage\\\",\\n      \\\"author\\\": \\\"Zimeng Qiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:49:49 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"cd a folder which is a git repository, then run like this:\\\\n\\\\n```\\\\n$ python your_dir_of_main.py input output_dir <--mapping|--fsearch|--search>\\\\n```\\\\n\\\\n## Mapping Mode\\\\n\\\\nThis mode use command like this:\\\\n\\\\n```\\\\n$ python your_dir_of_main.py input_code_file/folder output_dir --mapping\\\\n```\\\\n\\\\nThe script will generate a JSON file in output directory including author, file name and committed code snippets of every commit.\\\\n\\\\nYou can explore all time commit history by either scrolling screen or looking up generated JSON file.\\\\n\\\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.32.12%20PM.png)\\\\n\\\\n## Code File Search Mode\\\\n\\\\nRun like this:\\\\n\\\\n```\\\\n$ python your_dir_of_main.py input_code_file output_dir --fsearch\\\\n```\\\\n\\\\nThis mode enable you to search a code snippet in git commit history of a file or whole directory and find who created this code snippet and which file is this snippet in.\\\\n\\\\nAttention: The input code file of this mode is not a complete file from git repository, it actually stores a copy of code snippet that you might come across from somewhere of web but you are not sure which project or file it belongs to. At this time, you can copy this code snippet and save it as a .txt file as input code file of this mode. Then the script will automatically find the information you want.\\\\n\\\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.14%20PM.png)\\\\n\\\\n## Code Search Mode\\\\n\\\\nRun like this:\\\\n\\\\n```\\\\n$ python your_dir_of_main.py \\\\\\\"your code snippet\\\\\\\" output_dir --search\\\\n```\\\\n\\\\nThis mode generally has the same function with ```--fsearch``` mode. However, unlike that mode, this one enables you avoid save code snippet as a .txt file, instead, you can copy them in terminal and run command directly.\\\\n\\\\nAttention: Remember to add \\\\\\\"\\\\\\\" to declare your code snippet as a string.\\\\n\\\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.32%20PM.png)\\\",\\n      \\\"author\\\": \\\"Zimeng Qiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:49:49 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n            code_dict['code_snippet'] = \\\\\\\"\\\\\\\\n\\\\\\\".join(code_snippet)\\\\n            code_list.append(code_dict)\\\\n    return code_list\\\\n\\\\n\\\\ndef print_code_list(code_list):\\\\n    for code in code_list:\\\\n        print('\\\\\\\\033[1;31m')\\\\n        print('*' * 150)\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:33:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"        # snippet = code[\\\\\\\"code_snippet\\\\\\\"]\\\\n        # for line in snippet:\\\\n        #     print(line)\\\\n        print(code[\\\\\\\"code_snippet\\\\\\\"])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:33:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/git_search/search_commit_history.py\\\",\\n      \\\"code_snippet\\\": \\\"        if input_code in code['code_snippet']:\\\\n            match_data = code\\\\n            match_data_list.append(match_data)\\\\n    return match_data_list\\\\n\\\\n\\\\ndef print_match_result(data_list):\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:33:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"            raise SystemExit(\\\\\\\"Error: Could not create the output dir.\\\\\\\")\\\\n\\\\n    if func_argv == \\\\\\\"--mapping\\\\\\\":\\\\n        if not os.path.exists(input_file):\\\\n            print(\\\\\\\"{}: No such file or directory\\\\\\\".format(input_file))\\\\n        else:\\\\n            commit_history = mapping.get_code(input_file)\\\\n            mapping.print_code_list(commit_history)\\\\n            history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\\\n            with open(history_file, 'w') as f:\\\\n                json.dump(commit_history, f, indent=3)\\\\n    elif func_argv == \\\\\\\"--fsearch\\\\\\\":\\\\n        commit_history = mapping.get_code(dir_path)\\\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\\\n        with open(history_file, 'w') as f:\\\\n            json.dump(commit_history, f, indent=3)\\\\n        input_code = search_commit_history.get_input_code(input_file)\\\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\\\n        search_commit_history.print_match_result(search_result)\\\\n    elif func_argv == \\\\\\\"--search\\\\\\\":\\\\n        commit_history = mapping.get_code(dir_path)\\\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\\\n        with open(history_file, 'w') as f:\\\\n            json.dump(commit_history, f, indent=3)\\\\n        input_code = input_file\\\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\\\n        search_commit_history.print_match_result(search_result)\\\\n    else:\\\\n        print(\\\\\\\"Wrong argument!\\\\\\\")\\\\n        print(\\\\\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\\\\\")\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:33:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/test.txt\\\",\\n      \\\"code_snippet\\\": \\\"from commit_history import mapping\\\\n\\\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\\nif __name__ == '__main__':\\\\n    program = os.path.basename(sys.argv[0])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 21:33:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"    return email\\\\n\\\\n\\\\ndef get_file_name(line):\\\\n    regex = re.compile(\\\\\\\"\\\\\\\\+{3}\\\\\\\\sb/(.*)$\\\\\\\")\\\\n    file_name = regex.findall(line)\\\\n    return file_name\\\\n\\\\n\\\\ndef get_code_snippet(lines):\\\\n    snippet_list = list()\\\\n    snippet = list()\\\\n    regex_plus = re.compile(\\\\\\\"^\\\\\\\\+(?!\\\\\\\\+\\\\\\\\+)(.*)$\\\\\\\")\\\\n    regex_minus = re.compile(\\\\\\\"^-(?!--)(.*)$\\\\\\\")\\\\n    regex_remain = re.compile(\\\\\\\"^\\\\\\\\s(.*)\\\\\\\")\\\\n    regex_pause = re.compile(\\\\\\\"^(@@|hash)\\\\\\\")\\\\n    for line in lines:\\\\n        snippet_plus = regex_plus.findall(line)\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"        if len(snippet_plus):\\\\n            snippet = snippet_plus\\\\n        elif len(snippet_minus):\\\\n            snippet = str()\\\\n            # snippet = snippet_minus\\\\n        elif len(snippet_remain):\\\\n            snippet = snippet_remain\\\\n        if regex_pause.findall(line):\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"    else:\\\\n        return 0\\\\n\\\\n\\\\ndef get_change_file(line):\\\\n    regex = re.compile(\\\\\\\"diff\\\\\\\\s--git\\\\\\\\sa/.*\\\\\\\\sb/(.*)$\\\\\\\")\\\\n    file_name = regex.findall(line)\\\\n    if file_name:\\\\n        return file_name\\\\n    else:\\\\n        return 0\\\\n\\\\n# def get_line_index(inp):\\\\n#     a_start_line_list = list()\\\\n#     a_total_line_list = list()\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"#         a_total_line_list.extend(a_total_line)\\\\n#         b_start_line_list.extend(b_start_line)\\\\n#         b_total_line_list.extend(b_total_line)\\\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"    lines = data.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n    for index, line in enumerate(lines):\\\\n        code_dict = dict()\\\\n        author = get_info.get_author(line)\\\\n        if len(author):\\\\n            email = get_info.get_email(line)\\\\n            if len(email):\\\\n                commit_author = author[0]\\\\n                # code_dict['author'] = commit_author\\\\n                # print(commit_author)\\\\n                commit_email = email[0]\\\\n                # code_dict['email'] = commit_email\\\\n                # print(commit_email)\\\\n                # code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n                # code_dict['code_snippet'] = code_snippet\\\\n        elif get_info.get_change_file(line):\\\\n            commit_file = get_info.get_change_file(line)\\\\n            code_dict['file'] = commit_file[0]\\\\n        elif get_info.get_change_section(line):\\\\n            code_dict['file'] = commit_file[0]\\\\n            code_dict['author'] = commit_author\\\\n            # print(commit_author)\\\\n            code_dict['email'] = commit_email\\\\n            # print(commit_email)\\\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n            code_dict['code_snippet'] = \\\\\\\"\\\\\\\\n\\\\\\\".join(code_snippet)\\\\n            code_list.append(code_dict)\\\\n    for code in code_list:\\\\n        print('\\\\\\\\033[1;31m')\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"File Name: {}\\\\\\\".format(code['file']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        # snippet = code[\\\\\\\"code_snippet\\\\\\\"]\\\\n        # for line in snippet:\\\\n        #     print(line)\\\\n        print(code[\\\\\\\"code_snippet\\\\\\\"])\\\\n    return code_list\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/git_search/search_commit_history.py\\\",\\n      \\\"code_snippet\\\": \\\"#!~/anaconda3/bin/ python\\\\n# -*- coding: utf-8 -*-\\\\n#\\\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUtility for searching code snippet in git commit history\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport os\\\\nimport json\\\\n\\\\n\\\\ndef get_input_code(input_file):\\\\n    input_code = open(input_file).read()\\\\n    return input_code\\\\n\\\\n\\\\ndef search_in_history(input_code, output_dir):\\\\n    history_file = os.path.join(output_dir, 'commit_history.json')\\\\n    with open(history_file) as f:\\\\n        history = json.load(f)\\\\n    match_data_list = list()\\\\n    for code in history:\\\\n        if input_code in code['code_snippet']:\\\\n            match_data = code\\\\n            match_data_list.append(match_data)\\\\n    if len(match_data_list):\\\\n        return match_data_list\\\\n    else:\\\\n        return \\\\\\\"Error! No data in this git repository match with input code.\\\\\\\"\\\\n\\\\n\\\\ndef print_match_result(data_list):\\\\n    print(\\\\\\\"Found {} match result\\\\\\\".format(len(data_list)))\\\\n    for data in data_list:\\\\n        print('\\\\\\\\033[1;31m')\\\\n        print('*' * 150)\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Author: {}\\\\\\\".format(data['author']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Email: {}\\\\\\\".format(data['email']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"File Name: {}\\\\\\\".format(data['file']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        print(data[\\\\\\\"code_snippet\\\\\\\"])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUSAGE: %(program)s input_code_file output_dir <--search|--mapping>\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport json\\\\nimport logging\\\\nimport os\\\\nimport sys\\\\n\\\\nfrom commit_history import mapping\\\\nfrom git_search import search_commit_history\\\\n\\\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"    logger.info(\\\\\\\"running %s \\\\\\\" % ' '.join(sys.argv))\\\\n\\\\n    # check and process input arguments\\\\n    if len(sys.argv) != 4:\\\\n        print(len(sys.argv))\\\\n        raise SystemExit(\\\\\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\\\\\")\\\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\\\n    if not os.path.exists(output_dir):\\\\n        try:\\\\n            os.makedirs(output_dir)\\\\n        except OSError as exception:\\\\n            raise SystemExit(\\\\\\\"Error: Could not create the output dir.\\\\\\\")\\\\n\\\\n    if func_argv == \\\\\\\"--mapping\\\\\\\":\\\\n        commit_history = mapping.get_code(input_file)\\\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\\\n        with open(history_file, 'w') as f:\\\\n            json.dump(commit_history, f, indent=3)\\\\n    elif func_argv == \\\\\\\"--search\\\\\\\":\\\\n        if not os.path.exists(os.path.join(output_dir, 'commit_history.json')):\\\\n            try:\\\\n                commit_history = mapping.get_code(input_file)\\\\n                history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\\\n                with open(history_file, 'w') as f:\\\\n                    json.dump(commit_history, f, indent=3)\\\\n            except OSError as exception:\\\\n                raise SystemExit(\\\\\\\"Error: Search failed\\\\\\\")\\\\n        input_code = search_commit_history.get_input_code(input_file)\\\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\\\n        search_commit_history.print_match_result(search_result)\\\\n    else:\\\\n        print(\\\\\\\"Lack of argument\\\\\\\")\\\\n        print(\\\\\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\\\\\")\\\\n\\\\n\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-07 18:49:18 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/get_info.py\\\",\\n      \\\"code_snippet\\\": \\\"#!~/anaconda3/bin/ python\\\\n# -*- coding: utf-8 -*-\\\\n#\\\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUtilities to get some information from github commit history\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport re\\\\n\\\\n\\\\ndef get_author(line):\\\\n    regex = re.compile(\\\\\\\"author:\\\\\\\\s(.*)?\\\\\\\\semail\\\\\\\")\\\\n    author = regex.findall(line)\\\\n    return author\\\\n\\\\n\\\\ndef get_email(line):\\\\n    # TODO: resolve \\\\\\\".com.cn\\\\\\\" or \\\\\\\".edu.cn\\\\\\\" case\\\\n    regex = re.compile(\\\\\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\\\\\.[a-zA-Z0-9_-]+)\\\\\\\")\\\\n    email = regex.findall(line)\\\\n    return email\\\\n\\\\n\\\\ndef get_code_snippet(lines):\\\\n    snippet_list = list()\\\\n    snippet = list()\\\\n    regex_plus = re.compile(\\\\\\\"^\\\\\\\\+(?!\\\\\\\\+\\\\\\\\+)(.*)$\\\\\\\")\\\\n    regex_minus = re.compile(\\\\\\\"^-(?!--)(.*)$\\\\\\\")\\\\n    regex_remain = re.compile(\\\\\\\"^\\\\\\\\s+(.*)\\\\\\\")\\\\n    regex_pause = re.compile(\\\\\\\"^(@@|hash)\\\\\\\")\\\\n    for line in lines:\\\\n        snippet_plus = regex_plus.findall(line)\\\\n        snippet_minus = regex_minus.findall(line)\\\\n        snippet_remain = regex_remain.findall(line)\\\\n        if len(snippet_plus):\\\\n            snippet = snippet_plus\\\\n        elif len(snippet_minus):\\\\n            snippet = snippet_minus\\\\n        elif len(snippet_remain):\\\\n            snippet = snippet_remain\\\\n        if regex_pause.findall(line):\\\\n            break\\\\n        if len(snippet):\\\\n            snippet_list.append(snippet[0])\\\\n    return snippet_list\\\\n\\\\n\\\\ndef get_change_section(line):\\\\n    regex = re.compile(\\\\\\\"^@@\\\\\\\")\\\\n    if regex.findall(line):\\\\n        return 1\\\\n    else:\\\\n        return 0\\\\n\\\\n# def get_line_index(inp):\\\\n#     a_start_line_list = list()\\\\n#     a_total_line_list = list()\\\\n#     b_start_line_list = list()\\\\n#     b_total_line_list = list()\\\\n#     lines = inp.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n#     regex_a_start = re.compile(\\\\\\\"@@\\\\\\\\s-(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s\\\\\\\")\\\\n#     regex_a_total = re.compile(\\\\\\\"@@\\\\\\\\s-\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s\\\\\\\")\\\\n#     regex_b_start = re.compile(\\\\\\\"\\\\\\\\+(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s@@\\\\\\\")\\\\n#     regex_b_total = re.compile(\\\\\\\"\\\\\\\\+\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s@@\\\\\\\")\\\\n#     for line in lines:\\\\n#         a_start_line = regex_a_start.findall(line)\\\\n#         a_total_line = regex_a_total.findall(line)\\\\n#         b_start_line = regex_b_start.findall(line)\\\\n#         b_total_line = regex_b_total.findall(line)\\\\n#         a_start_line_list.extend(a_start_line)\\\\n#         a_total_line_list.extend(a_total_line)\\\\n#         b_start_line_list.extend(b_start_line)\\\\n#         b_total_line_list.extend(b_total_line)\\\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-05 14:50:59 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/commit_history/mapping.py\\\",\\n      \\\"code_snippet\\\": \\\"#!~/anaconda3/bin/ python\\\\n# -*- coding: utf-8 -*-\\\\n#\\\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUtilities mapping code snippets of every commit with author\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport os\\\\nfrom commit_history import get_info\\\\n\\\\n\\\\ndef get_code(inp):\\\\n    code_list = list()\\\\n    command = \\\\\\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\\\\\" \\\\\\\\\\\\n              \\\\\\\"--abbrev-commit -p \\\\\\\" + inp\\\\\\\\\\\\n              # + \\\\\\\" > \\\\\\\" + outp + \\\\\\\"/log.txt\\\\\\\"\\\\n    input_data = os.popen(command)\\\\n    data = input_data.read()\\\\n    # print(data)\\\\n    lines = data.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n    for index, line in enumerate(lines):\\\\n        code_dict = dict()\\\\n        tmp = get_info.get_author(line)\\\\n        if len(tmp):\\\\n            commit_author = tmp[0]\\\\n            tmp = get_info.get_email(line)\\\\n            if len(tmp):\\\\n                code_dict['author'] = commit_author\\\\n                # print(commit_author)\\\\n                commit_email = tmp[0]\\\\n                code_dict['email'] = commit_email\\\\n                # print(commit_email)\\\\n                code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n                code_dict['code_snippet'] = code_snippet\\\\n                # code_list.append(code_dict)\\\\n        elif get_info.get_change_section(line):\\\\n            code_dict['author'] = commit_author\\\\n            # print(commit_author)\\\\n            code_dict['email'] = commit_email\\\\n            # print(commit_email)\\\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\\\n            code_dict['code_snippet'] = code_snippet\\\\n            code_list.append(code_dict)\\\\n    for code in code_list:\\\\n        print('\\\\\\\\033[1;31m')\\\\n        print('*' * 150)\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Author: {}\\\\\\\".format(code['author']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Email: {}\\\\\\\".format(code['email']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        snippet = code[\\\\\\\"code_snippet\\\\\\\"]\\\\n        for line in snippet:\\\\n            print(line)\\\\n    return code_list\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-05 14:50:59 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"import logging\\\\nimport os\\\\nimport sys\\\\n\\\\nfrom commit_history import mapping\\\\n\\\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\\nif __name__ == '__main__':\\\\n    program = os.path.basename(sys.argv[0])\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-05 14:50:59 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"        except OSError as exception:\\\\n            raise SystemExit(\\\\\\\"Error: Could not create the output dir.\\\\\\\")\\\\n\\\\n    commit_history = mapping.get_code(input_file)\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-05 14:50:59 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"cd a folder which is a git repository, then run like this:\\\\n\\\\n```\\\\n$ python your_dir_of_main.py input_code_file/folder output_dir\\\\n```\\\\n\\\\n## Output\\\\n\\\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-03%20at%204.31.52%20PM.png)\\\\n\\\",\\n      \\\"author\\\": \\\"Zimeng Qiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-03 16:43:31 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"cd a folder which is a git repository, then run like this:\\\\n\\\\n```\\\\npython your_dir_of_main.py input_code_file/folder output_dir\\\\n```\\\",\\n      \\\"author\\\": \\\"Zimeng Qiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-03 16:26:55 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"# Map Git Commit History to Authors\\\\nAuthor: ch-chiu\\\\n\\\\n## Usage\\\\n\\\\ncd a folder which is a git repository, then run like this:\\\\n\\\\n```\\\\n%(program)s input_code_file/folder output_dir\\\\n```\\\",\\n      \\\"author\\\": \\\"Zimeng Qiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-03 16:26:09 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"dir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\\n\\\\ndef get_author(line):\\\\n    regex = re.compile(\\\\\\\"author:\\\\\\\\s(.*)?\\\\\\\\semail\\\\\\\")\\\\n    author = regex.findall(line)\\\\n    return author\\\\n\\\\n\\\\ndef get_email(line):\\\\n    # TODO: resolve \\\\\\\".com.cn\\\\\\\" or \\\\\\\".edu.cn\\\\\\\" case\\\\n    regex = re.compile(\\\\\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\\\\\.[a-zA-Z0-9_-]+)\\\\\\\")\\\\n    email = regex.findall(line)\\\\n    return email\\\\n\\\\n\\\\ndef get_code_snippet(lines):\\\\n    snippet_list = list()\\\\n    snippet = list()\\\\n    regex_plus = re.compile(\\\\\\\"^\\\\\\\\+(?!\\\\\\\\+\\\\\\\\+)(.*)$\\\\\\\")\\\\n    regex_minus = re.compile(\\\\\\\"^-(?!--)(.*)$\\\\\\\")\\\\n    regex_remain = re.compile(\\\\\\\"^\\\\\\\\s+(.*)\\\\\\\")\\\\n    regex_pause = re.compile(\\\\\\\"^(@@|hash)\\\\\\\")\\\\n    for line in lines:\\\\n        snippet_plus = regex_plus.findall(line)\\\\n        snippet_minus = regex_minus.findall(line)\\\\n        snippet_remain = regex_remain.findall(line)\\\\n        if len(snippet_plus):\\\\n            snippet = snippet_plus\\\\n        elif len(snippet_minus):\\\\n            snippet = snippet_minus\\\\n        elif len(snippet_remain):\\\\n            snippet = snippet_remain\\\\n        if regex_pause.findall(line):\\\\n            break\\\\n        if len(snippet):\\\\n            snippet_list.append(snippet[0])\\\\n    return snippet_list\\\\n\\\\n\\\\ndef get_change_section(line):\\\\n    regex = re.compile(\\\\\\\"^@@\\\\\\\")\\\\n    if regex.findall(line):\\\\n        return 1\\\\n    else:\\\\n        return 0\\\\n\\\\n# def get_line_index(inp):\\\\n#     a_start_line_list = list()\\\\n#     a_total_line_list = list()\\\\n#     b_start_line_list = list()\\\\n#     b_total_line_list = list()\\\\n#     lines = inp.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n#     regex_a_start = re.compile(\\\\\\\"@@\\\\\\\\s-(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s\\\\\\\")\\\\n#     regex_a_total = re.compile(\\\\\\\"@@\\\\\\\\s-\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s\\\\\\\")\\\\n#     regex_b_start = re.compile(\\\\\\\"\\\\\\\\+(\\\\\\\\d+),\\\\\\\\d+\\\\\\\\s@@\\\\\\\")\\\\n#     regex_b_total = re.compile(\\\\\\\"\\\\\\\\+\\\\\\\\d+,(\\\\\\\\d+)\\\\\\\\s@@\\\\\\\")\\\\n#     for line in lines:\\\\n#         a_start_line = regex_a_start.findall(line)\\\\n#         a_total_line = regex_a_total.findall(line)\\\\n#         b_start_line = regex_b_start.findall(line)\\\\n#         b_total_line = regex_b_total.findall(line)\\\\n#         a_start_line_list.extend(a_start_line)\\\\n#         a_total_line_list.extend(a_total_line)\\\\n#         b_start_line_list.extend(b_start_line)\\\\n#         b_total_line_list.extend(b_total_line)\\\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\\\n\\\\n\\\\ndef get_code(inp):\\\\n    code_list = list()\\\\n    command = \\\\\\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\\\\\" \\\\\\\\\\\\n              \\\\\\\"--abbrev-commit -p \\\\\\\" + inp\\\\\\\\\\\\n              # + \\\\\\\" > \\\\\\\" + outp + \\\\\\\"/log.txt\\\\\\\"\\\\n    input_data = os.popen(command)\\\\n    data = input_data.read()\\\\n    # print(data)\\\\n    lines = data.split(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\n    for index, line in enumerate(lines):\\\\n        code_dict = dict()\\\\n        tmp = get_author(line)\\\\n        if len(tmp):\\\\n            commit_author = tmp[0]\\\\n            tmp = get_email(line)\\\\n            if len(tmp):\\\\n                code_dict['author'] = commit_author\\\\n                # print(commit_author)\\\\n                commit_email = tmp[0]\\\\n                code_dict['email'] = commit_email\\\\n                # print(commit_email)\\\\n                code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\\\n                code_dict['code_snippet'] = code_snippet\\\\n                # code_list.append(code_dict)\\\\n        elif get_change_section(line):\\\\n            code_dict['author'] = commit_author\\\\n            # print(commit_author)\\\\n            code_dict['email'] = commit_email\\\\n            # print(commit_email)\\\\n            code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\\\n            code_dict['code_snippet'] = code_snippet\\\\n            code_list.append(code_dict)\\\\n    # (fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list) = get_line_index(data)\\\\n    # code_data = zip(commit_author, commit_email, fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list)\\\\n    # code_dict = [{\\\\\\\"author\\\\\\\": author, \\\\\\\"email\\\\\\\": email, \\\\\\\"a_start_line\\\\\\\": a_start_line, \\\\\\\"a_total_line\\\\\\\": a_total_line,\\\\n    #                  \\\\\\\"b_start_line\\\\\\\": b_start_line, \\\\\\\"b_total_line\\\\\\\": b_total_line}\\\\n    #              for author, email, a_start_line, a_total_line, b_start_line, b_total_line in code_data]\\\\n    # print(code_list)\\\\n    for code in code_list:\\\\n        print('\\\\\\\\033[1;31m')\\\\n        print('*' * 150)\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Author: {}\\\\\\\".format(code['author']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"Email: {}\\\\\\\".format(code['email']))\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print(\\\\\\\"\\\\\\\")\\\\n        print('*' * 150)\\\\n        print('\\\\\\\\033[0m')\\\\n        snippet = code[\\\\\\\"code_snippet\\\\\\\"]\\\\n        for line in snippet:\\\\n            print(line)\\\\n    return code_list\\\\n\\\\n\\\\nif __name__ == '__main__':\\\\n    program = os.path.basename(sys.argv[0])\\\\n    logger = logging.getLogger(program)\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-03 16:21:52 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"            raise SystemExit(\\\\\\\"Error: Could not create the output dir.\\\\\\\")\\\\n\\\\n    commit_history = get_code(input_file)\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-03 16:21:52 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"import logging\\\\nimport os\\\\nimport sys\\\\nimport re\\\\n\\\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 21:28:17 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"    data = input_data.read()\\\\n    return data\\\\n\\\\n\\\\ndef get_author(inp, outp):\\\\n    author_list = list()\\\\n    command = \\\\\\\"git log --pretty=format:'author: %aN' \\\\\\\" + inp\\\\n    input_data = os.popen(command)\\\\n    lines = input_data.readlines()\\\\n    regex = re.compile(\\\\\\\"author:\\\\\\\\s(.*)?\\\\\\\\n?\\\\\\\")\\\\n    for line in lines:\\\\n        author = regex.findall(line)[0]\\\\n        author_list.append(author)\\\\n    return author_list\\\\n\\\\nif __name__ == '__main__':\\\\n    program = os.path.basename(sys.argv[0])\\\\n    logger = logging.getLogger(program)\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 21:28:17 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"\\\\n    commit_history = get_code(input_file)\\\\n    print(commit_history)\\\\n    commit_author = get_author(input_file, output_dir)\\\\n    print(commit_author)\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 21:28:17 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/history.iml\\\",\\n      \\\"code_snippet\\\": \\\"\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:49:27 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/misc.xml\\\",\\n      \\\"code_snippet\\\": \\\"\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:49:27 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/modules.xml\\\",\\n      \\\"code_snippet\\\": \\\"\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:49:27 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/workspace.xml\\\",\\n      \\\"code_snippet\\\": \\\"\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:49:27 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/workspace.xml\\\",\\n      \\\"code_snippet\\\": \\\"      <file leaf-file-name=\\\\\\\"main.py\\\\\\\" pinned=\\\\\\\"false\\\\\\\" current-in-tab=\\\\\\\"true\\\\\\\">\\\\n        <entry file=\\\\\\\"file://$PROJECT_DIR$/main.py\\\\\\\">\\\\n          <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n            <state relative-caret-position=\\\\\\\"259\\\\\\\">\\\\n              <caret line=\\\\\\\"38\\\\\\\" column=\\\\\\\"33\\\\\\\" lean-forward=\\\\\\\"false\\\\\\\" selection-start-line=\\\\\\\"38\\\\\\\" selection-start-column=\\\\\\\"33\\\\\\\" selection-end-line=\\\\\\\"38\\\\\\\" selection-end-column=\\\\\\\"33\\\\\\\" />\\\\n              <folding>\\\\n                <element signature=\\\\\\\"e#238#252#0\\\\\\\" expanded=\\\\\\\"true\\\\\\\" />\\\\n              </folding>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:46:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/workspace.xml\\\",\\n      \\\"code_snippet\\\": \\\"    </entry>\\\\n    <entry file=\\\\\\\"file://$PROJECT_DIR$/main.py\\\\\\\">\\\\n      <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n        <state relative-caret-position=\\\\\\\"259\\\\\\\">\\\\n          <caret line=\\\\\\\"38\\\\\\\" column=\\\\\\\"33\\\\\\\" lean-forward=\\\\\\\"false\\\\\\\" selection-start-line=\\\\\\\"38\\\\\\\" selection-start-column=\\\\\\\"33\\\\\\\" selection-end-line=\\\\\\\"38\\\\\\\" selection-end-column=\\\\\\\"33\\\\\\\" />\\\\n          <folding>\\\\n            <element signature=\\\\\\\"e#238#252#0\\\\\\\" expanded=\\\\\\\"true\\\\\\\" />\\\\n          </folding>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:46:30 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/history.iml\\\",\\n      \\\"code_snippet\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\n<module type=\\\\\\\"PYTHON_MODULE\\\\\\\" version=\\\\\\\"4\\\\\\\">\\\\n  <component name=\\\\\\\"NewModuleRootManager\\\\\\\">\\\\n    <content url=\\\\\\\"file://$MODULE_DIR$\\\\\\\" />\\\\n    <orderEntry type=\\\\\\\"inheritedJdk\\\\\\\" />\\\\n    <orderEntry type=\\\\\\\"sourceFolder\\\\\\\" forTests=\\\\\\\"false\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"TestRunnerService\\\\\\\">\\\\n    <option name=\\\\\\\"projectConfiguration\\\\\\\" value=\\\\\\\"Nosetests\\\\\\\" />\\\\n    <option name=\\\\\\\"PROJECT_TEST_RUNNER\\\\\\\" value=\\\\\\\"Nosetests\\\\\\\" />\\\\n  </component>\\\\n</module>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:43:07 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/misc.xml\\\",\\n      \\\"code_snippet\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\n<project version=\\\\\\\"4\\\\\\\">\\\\n  <component name=\\\\\\\"ProjectRootManager\\\\\\\" version=\\\\\\\"2\\\\\\\" project-jdk-name=\\\\\\\"Python 3.5.2 (~/anaconda3/bin/python)\\\\\\\" project-jdk-type=\\\\\\\"Python SDK\\\\\\\" />\\\\n</project>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:43:07 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/modules.xml\\\",\\n      \\\"code_snippet\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\n<project version=\\\\\\\"4\\\\\\\">\\\\n  <component name=\\\\\\\"ProjectModuleManager\\\\\\\">\\\\n    <modules>\\\\n      <module fileurl=\\\\\\\"file://$PROJECT_DIR$/.idea/history.iml\\\\\\\" filepath=\\\\\\\"$PROJECT_DIR$/.idea/history.iml\\\\\\\" />\\\\n    </modules>\\\\n  </component>\\\\n</project>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:43:07 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/.idea/workspace.xml\\\",\\n      \\\"code_snippet\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\n<project version=\\\\\\\"4\\\\\\\">\\\\n  <component name=\\\\\\\"ChangeListManager\\\\\\\">\\\\n    <list default=\\\\\\\"true\\\\\\\" id=\\\\\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\\\\\" name=\\\\\\\"Default\\\\\\\" comment=\\\\\\\"\\\\\\\" />\\\\n    <option name=\\\\\\\"EXCLUDED_CONVERTED_TO_IGNORED\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n    <option name=\\\\\\\"TRACKING_ENABLED\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n    <option name=\\\\\\\"SHOW_DIALOG\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n    <option name=\\\\\\\"HIGHLIGHT_CONFLICTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n    <option name=\\\\\\\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n    <option name=\\\\\\\"LAST_RESOLUTION\\\\\\\" value=\\\\\\\"IGNORE\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"CreatePatchCommitExecutor\\\\\\\">\\\\n    <option name=\\\\\\\"PATCH_PATH\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"ExecutionTargetManager\\\\\\\" SELECTED_TARGET=\\\\\\\"default_target\\\\\\\" />\\\\n  <component name=\\\\\\\"FileEditorManager\\\\\\\">\\\\n    <leaf>\\\\n      <file leaf-file-name=\\\\\\\"main.py\\\\\\\" pinned=\\\\\\\"false\\\\\\\" current-in-tab=\\\\\\\"true\\\\\\\">\\\\n        <entry file=\\\\\\\"file://$PROJECT_DIR$/main.py\\\\\\\">\\\\n          <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n            <state relative-caret-position=\\\\\\\"34\\\\\\\">\\\\n              <caret line=\\\\\\\"23\\\\\\\" column=\\\\\\\"15\\\\\\\" lean-forward=\\\\\\\"true\\\\\\\" selection-start-line=\\\\\\\"23\\\\\\\" selection-start-column=\\\\\\\"15\\\\\\\" selection-end-line=\\\\\\\"23\\\\\\\" selection-end-column=\\\\\\\"15\\\\\\\" />\\\\n              <folding>\\\\n                <element signature=\\\\\\\"e#238#252#0\\\\\\\" expanded=\\\\\\\"true\\\\\\\" />\\\\n              </folding>\\\\n            </state>\\\\n          </provider>\\\\n        </entry>\\\\n      </file>\\\\n    </leaf>\\\\n  </component>\\\\n  <component name=\\\\\\\"FileTemplateManagerImpl\\\\\\\">\\\\n    <option name=\\\\\\\"RECENT_TEMPLATES\\\\\\\">\\\\n      <list>\\\\n        <option value=\\\\\\\"Python Script\\\\\\\" />\\\\n      </list>\\\\n    </option>\\\\n  </component>\\\\n  <component name=\\\\\\\"IdeDocumentHistory\\\\\\\">\\\\n    <option name=\\\\\\\"CHANGED_PATHS\\\\\\\">\\\\n      <list>\\\\n        <option value=\\\\\\\"$PROJECT_DIR$/main.py\\\\\\\" />\\\\n      </list>\\\\n    </option>\\\\n  </component>\\\\n  <component name=\\\\\\\"ProjectFrameBounds\\\\\\\">\\\\n    <option name=\\\\\\\"x\\\\\\\" value=\\\\\\\"4\\\\\\\" />\\\\n    <option name=\\\\\\\"y\\\\\\\" value=\\\\\\\"22\\\\\\\" />\\\\n    <option name=\\\\\\\"width\\\\\\\" value=\\\\\\\"1436\\\\\\\" />\\\\n    <option name=\\\\\\\"height\\\\\\\" value=\\\\\\\"878\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"ProjectView\\\\\\\">\\\\n    <navigator currentView=\\\\\\\"ProjectPane\\\\\\\" proportions=\\\\\\\"\\\\\\\" version=\\\\\\\"1\\\\\\\">\\\\n      <flattenPackages />\\\\n      <showMembers />\\\\n      <showModules />\\\\n      <showLibraryContents />\\\\n      <hideEmptyPackages />\\\\n      <abbreviatePackageNames />\\\\n      <autoscrollToSource />\\\\n      <autoscrollFromSource />\\\\n      <sortByType />\\\\n      <manualOrder />\\\\n      <foldersAlwaysOnTop value=\\\\\\\"true\\\\\\\" />\\\\n    </navigator>\\\\n    <panes>\\\\n      <pane id=\\\\\\\"Scope\\\\\\\" />\\\\n      <pane id=\\\\\\\"ProjectPane\\\\\\\">\\\\n        <subPane>\\\\n          <PATH>\\\\n            <PATH_ELEMENT>\\\\n              <option name=\\\\\\\"myItemId\\\\\\\" value=\\\\\\\"history\\\\\\\" />\\\\n              <option name=\\\\\\\"myItemType\\\\\\\" value=\\\\\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\\\\\" />\\\\n            </PATH_ELEMENT>\\\\n            <PATH_ELEMENT>\\\\n              <option name=\\\\\\\"myItemId\\\\\\\" value=\\\\\\\"history\\\\\\\" />\\\\n              <option name=\\\\\\\"myItemType\\\\\\\" value=\\\\\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\\\\\" />\\\\n            </PATH_ELEMENT>\\\\n          </PATH>\\\\n          <PATH>\\\\n            <PATH_ELEMENT>\\\\n              <option name=\\\\\\\"myItemId\\\\\\\" value=\\\\\\\"history\\\\\\\" />\\\\n              <option name=\\\\\\\"myItemType\\\\\\\" value=\\\\\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\\\\\" />\\\\n            </PATH_ELEMENT>\\\\n            <PATH_ELEMENT>\\\\n              <option name=\\\\\\\"myItemId\\\\\\\" value=\\\\\\\"history\\\\\\\" />\\\\n              <option name=\\\\\\\"myItemType\\\\\\\" value=\\\\\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\\\\\" />\\\\n            </PATH_ELEMENT>\\\\n            <PATH_ELEMENT>\\\\n              <option name=\\\\\\\"myItemId\\\\\\\" value=\\\\\\\"example\\\\\\\" />\\\\n              <option name=\\\\\\\"myItemType\\\\\\\" value=\\\\\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\\\\\" />\\\\n            </PATH_ELEMENT>\\\\n          </PATH>\\\\n        </subPane>\\\\n      </pane>\\\\n      <pane id=\\\\\\\"Scratches\\\\\\\" />\\\\n    </panes>\\\\n  </component>\\\\n  <component name=\\\\\\\"PropertiesComponent\\\\\\\">\\\\n    <property name=\\\\\\\"settings.editor.selected.configurable\\\\\\\" value=\\\\\\\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"RunManager\\\\\\\" selected=\\\\\\\"Python.main\\\\\\\">\\\\n    <configuration default=\\\\\\\"false\\\\\\\" name=\\\\\\\"main\\\\\\\" type=\\\\\\\"PythonConfigurationType\\\\\\\" factoryName=\\\\\\\"Python\\\\\\\" temporary=\\\\\\\"true\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs>\\\\n        <env name=\\\\\\\"PYTHONUNBUFFERED\\\\\\\" value=\\\\\\\"1\\\\\\\" />\\\\n      </envs>\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"$PROJECT_DIR$\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"$PROJECT_DIR$/main.py\\\\\\\" />\\\\n      <option name=\\\\\\\"PARAMETERS\\\\\\\" value=\\\\\\\"README.md output\\\\\\\" />\\\\n      <option name=\\\\\\\"SHOW_COMMAND_LINE\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"PythonConfigurationType\\\\\\\" factoryName=\\\\\\\"Python\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs>\\\\n        <env name=\\\\\\\"PYTHONUNBUFFERED\\\\\\\" value=\\\\\\\"1\\\\\\\" />\\\\n      </envs>\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARAMETERS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"SHOW_COMMAND_LINE\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"Tox\\\\\\\" factoryName=\\\\\\\"Tox\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"tests\\\\\\\" factoryName=\\\\\\\"Attests\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"CLASS_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"METHOD_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"FOLDER_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"TEST_TYPE\\\\\\\" value=\\\\\\\"TEST_SCRIPT\\\\\\\" />\\\\n      <option name=\\\\\\\"PATTERN\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PATTERN\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"tests\\\\\\\" factoryName=\\\\\\\"Doctests\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"CLASS_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"METHOD_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"FOLDER_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"TEST_TYPE\\\\\\\" value=\\\\\\\"TEST_SCRIPT\\\\\\\" />\\\\n      <option name=\\\\\\\"PATTERN\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PATTERN\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"tests\\\\\\\" factoryName=\\\\\\\"Nosetests\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"CLASS_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"METHOD_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"FOLDER_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"TEST_TYPE\\\\\\\" value=\\\\\\\"TEST_SCRIPT\\\\\\\" />\\\\n      <option name=\\\\\\\"PATTERN\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PATTERN\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"PARAMS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PARAM\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"tests\\\\\\\" factoryName=\\\\\\\"Unittests\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"CLASS_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"METHOD_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"FOLDER_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"TEST_TYPE\\\\\\\" value=\\\\\\\"TEST_SCRIPT\\\\\\\" />\\\\n      <option name=\\\\\\\"PATTERN\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PATTERN\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"PUREUNITTEST\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"PARAMS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PARAM\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <configuration default=\\\\\\\"true\\\\\\\" type=\\\\\\\"tests\\\\\\\" factoryName=\\\\\\\"py.test\\\\\\\">\\\\n      <option name=\\\\\\\"INTERPRETER_OPTIONS\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"PARENT_ENVS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <envs />\\\\n      <option name=\\\\\\\"SDK_HOME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"WORKING_DIRECTORY\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"IS_MODULE_SDK\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_CONTENT_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <option name=\\\\\\\"ADD_SOURCE_ROOTS\\\\\\\" value=\\\\\\\"true\\\\\\\" />\\\\n      <module name=\\\\\\\"history\\\\\\\" />\\\\n      <option name=\\\\\\\"SCRIPT_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"CLASS_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"METHOD_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"FOLDER_NAME\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"TEST_TYPE\\\\\\\" value=\\\\\\\"TEST_SCRIPT\\\\\\\" />\\\\n      <option name=\\\\\\\"PATTERN\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PATTERN\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"testToRun\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"keywords\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"params\\\\\\\" value=\\\\\\\"\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_PARAM\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <option name=\\\\\\\"USE_KEYWORD\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n      <method />\\\\n    </configuration>\\\\n    <list size=\\\\\\\"1\\\\\\\">\\\\n      <item index=\\\\\\\"0\\\\\\\" class=\\\\\\\"java.lang.String\\\\\\\" itemvalue=\\\\\\\"Python.main\\\\\\\" />\\\\n    </list>\\\\n    <recent_temporary>\\\\n      <list size=\\\\\\\"1\\\\\\\">\\\\n        <item index=\\\\\\\"0\\\\\\\" class=\\\\\\\"java.lang.String\\\\\\\" itemvalue=\\\\\\\"Python.main\\\\\\\" />\\\\n      </list>\\\\n    </recent_temporary>\\\\n  </component>\\\\n  <component name=\\\\\\\"ShelveChangesManager\\\\\\\" show_recycled=\\\\\\\"false\\\\\\\">\\\\n    <option name=\\\\\\\"remove_strategy\\\\\\\" value=\\\\\\\"false\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"TaskManager\\\\\\\">\\\\n    <task active=\\\\\\\"true\\\\\\\" id=\\\\\\\"Default\\\\\\\" summary=\\\\\\\"Default task\\\\\\\">\\\\n      <changelist id=\\\\\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\\\\\" name=\\\\\\\"Default\\\\\\\" comment=\\\\\\\"\\\\\\\" />\\\\n      <created>1506936120824</created>\\\\n      <option name=\\\\\\\"number\\\\\\\" value=\\\\\\\"Default\\\\\\\" />\\\\n      <option name=\\\\\\\"presentableId\\\\\\\" value=\\\\\\\"Default\\\\\\\" />\\\\n      <updated>1506936120824</updated>\\\\n    </task>\\\\n    <servers />\\\\n  </component>\\\\n  <component name=\\\\\\\"ToolWindowManager\\\\\\\">\\\\n    <frame x=\\\\\\\"4\\\\\\\" y=\\\\\\\"22\\\\\\\" width=\\\\\\\"1436\\\\\\\" height=\\\\\\\"878\\\\\\\" extended-state=\\\\\\\"6\\\\\\\" />\\\\n    <editor active=\\\\\\\"true\\\\\\\" />\\\\n    <layout>\\\\n      <window_info id=\\\\\\\"Project\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"left\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"true\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.24946997\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"0\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"combo\\\\\\\" />\\\\n      <window_info id=\\\\\\\"TODO\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"6\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Event Log\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"-1\\\\\\\" side_tool=\\\\\\\"true\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Version Control\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"false\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"-1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Python Console\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"-1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Run\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"true\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.32951653\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"2\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Structure\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"left\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.25\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Terminal\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"-1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Favorites\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"left\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"-1\\\\\\\" side_tool=\\\\\\\"true\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Debug\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.3994911\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"3\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Cvs\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.25\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"4\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Hierarchy\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"right\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.25\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"2\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"combo\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Message\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"0\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Commander\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"right\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.4\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"0\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Find\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.33\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Inspection\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"bottom\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.4\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"5\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n      <window_info id=\\\\\\\"Ant Build\\\\\\\" active=\\\\\\\"false\\\\\\\" anchor=\\\\\\\"right\\\\\\\" auto_hide=\\\\\\\"false\\\\\\\" internal_type=\\\\\\\"DOCKED\\\\\\\" type=\\\\\\\"DOCKED\\\\\\\" visible=\\\\\\\"false\\\\\\\" show_stripe_button=\\\\\\\"true\\\\\\\" weight=\\\\\\\"0.25\\\\\\\" sideWeight=\\\\\\\"0.5\\\\\\\" order=\\\\\\\"1\\\\\\\" side_tool=\\\\\\\"false\\\\\\\" content_ui=\\\\\\\"tabs\\\\\\\" />\\\\n    </layout>\\\\n  </component>\\\\n  <component name=\\\\\\\"VcsContentAnnotationSettings\\\\\\\">\\\\n    <option name=\\\\\\\"myLimit\\\\\\\" value=\\\\\\\"2678400000\\\\\\\" />\\\\n  </component>\\\\n  <component name=\\\\\\\"XDebuggerManager\\\\\\\">\\\\n    <breakpoint-manager>\\\\n      <breakpoints>\\\\n        <line-breakpoint enabled=\\\\\\\"true\\\\\\\" suspend=\\\\\\\"THREAD\\\\\\\" type=\\\\\\\"python-line\\\\\\\">\\\\n          <url>file://$PROJECT_DIR$/main.py</url>\\\\n          <line>23</line>\\\\n          <option name=\\\\\\\"timeStamp\\\\\\\" value=\\\\\\\"2\\\\\\\" />\\\\n        </line-breakpoint>\\\\n      </breakpoints>\\\\n      <option name=\\\\\\\"time\\\\\\\" value=\\\\\\\"3\\\\\\\" />\\\\n    </breakpoint-manager>\\\\n    <watches-manager />\\\\n  </component>\\\\n  <component name=\\\\\\\"editorHistoryManager\\\\\\\">\\\\n    <entry file=\\\\\\\"file://$PROJECT_DIR$/example/rusthon_log.txt\\\\\\\">\\\\n      <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"LargeFileEditor\\\\\\\">\\\\n        <state />\\\\n      </provider>\\\\n    </entry>\\\\n    <entry file=\\\\\\\"file://$USER_HOME$/anaconda3/lib/python3.5/encodings/ascii.py\\\\\\\">\\\\n      <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n        <state relative-caret-position=\\\\\\\"210\\\\\\\">\\\\n          <caret line=\\\\\\\"25\\\\\\\" column=\\\\\\\"0\\\\\\\" lean-forward=\\\\\\\"false\\\\\\\" selection-start-line=\\\\\\\"25\\\\\\\" selection-start-column=\\\\\\\"0\\\\\\\" selection-end-line=\\\\\\\"25\\\\\\\" selection-end-column=\\\\\\\"0\\\\\\\" />\\\\n          <folding />\\\\n        </state>\\\\n      </provider>\\\\n    </entry>\\\\n    <entry file=\\\\\\\"file://$USER_HOME$/anaconda3/lib/python3.5/codecs.py\\\\\\\">\\\\n      <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n        <state relative-caret-position=\\\\\\\"148\\\\\\\">\\\\n          <caret line=\\\\\\\"320\\\\\\\" column=\\\\\\\"0\\\\\\\" lean-forward=\\\\\\\"false\\\\\\\" selection-start-line=\\\\\\\"320\\\\\\\" selection-start-column=\\\\\\\"0\\\\\\\" selection-end-line=\\\\\\\"320\\\\\\\" selection-end-column=\\\\\\\"0\\\\\\\" />\\\\n          <folding />\\\\n        </state>\\\\n      </provider>\\\\n    </entry>\\\\n    <entry file=\\\\\\\"file://$PROJECT_DIR$/main.py\\\\\\\">\\\\n      <provider selected=\\\\\\\"true\\\\\\\" editor-type-id=\\\\\\\"text-editor\\\\\\\">\\\\n        <state relative-caret-position=\\\\\\\"34\\\\\\\">\\\\n          <caret line=\\\\\\\"23\\\\\\\" column=\\\\\\\"15\\\\\\\" lean-forward=\\\\\\\"true\\\\\\\" selection-start-line=\\\\\\\"23\\\\\\\" selection-start-column=\\\\\\\"15\\\\\\\" selection-end-line=\\\\\\\"23\\\\\\\" selection-end-column=\\\\\\\"15\\\\\\\" />\\\\n          <folding>\\\\n            <element signature=\\\\\\\"e#238#252#0\\\\\\\" expanded=\\\\\\\"true\\\\\\\" />\\\\n          </folding>\\\\n        </state>\\\\n      </provider>\\\\n    </entry>\\\\n  </component>\\\\n</project>\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:43:07 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/example/record.json\\\",\\n      \\\"code_snippet\\\": \\\"{hash: f21727c ref:  (HEAD -> master) commit_title: Add-ast-part-and-generate-ast-of-the-program-based-on-clang date: 1506932084 author: <Zhenghui Jin> email: <zjin@vmware.com>}\\\\n{hash: 9558691 ref:  commit_title: update date: 1506751165 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\\\n{hash: 4c8f4f0 ref:  commit_title: update date: 1506751106 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\\\n{hash: 1f567c2 ref:  commit_title: update date: 1506751008 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\\\n{hash: 3e6cb9c ref:  commit_title: update date: 1506749090 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\\\n{hash: 4f04f7e ref:  commit_title: update date: 1506748850 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\\\n{hash: fc3971a ref:  commit_title: Create-README.md date: 1506748071 author: <Zhe Wang> email: <a63188722@163.com>}\\\\n{hash: 018bd60 ref:  commit_title: Initial-commit date: 1506746697 author: <Zhe Wang> email: <a63188722@163.com>}\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-10-02 19:43:07 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"a63188722@163.com\\\",\\n      \\\"file\\\": \\\"git/history/example/rusthon_log.txt\\\",\\n      \\\"code_snippet\\\": \\\"* f21727c  (HEAD -> master) Add-ast-part-and-generate-ast-of-the-program-based-on-clang 3 hours ago <Zhenghui Jin> <zjin@vmware.com>| \\\\n| diff --git a/ast/PrintAST.py b/ast/PrintAST.py\\\\n| new file mode 100644\\\\n| index 0000000..d2ab21d\\\\n| --- /dev/null\\\\n| +++ b/ast/PrintAST.py\\\\n| @@ -0,0 +1,25 @@\\\\n| +#!/usr/bin/env python\\\\n| +import os\\\\n| +\\\\n| +'''\\\\n| +    Preprocess of the code. Remove the header files and standard libraries\\\\n| +'''\\\\n| +code_path = './example/test.cc'\\\\n| +path_new = './example/test_new.cc'\\\\n| +with open(code_path , 'r') as f:\\\\n| +    lines = f.readlines()\\\\n| +f.close()\\\\n| +\\\\n| +with open(path_new , 'w') as f_new:\\\\n| +    for line in lines:\\\\n| +        if '#include' in line:\\\\n| +            continue\\\\n| +        f_new.write(line)\\\\n| +f_new.close()\\\\n| +\\\\n| +'''\\\\n| +    Print AST based on command line\\\\n| +'''\\\\n| +command = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\\\\n| +F = os.popen(command)\\\\n| +print F.read()\\\\n| diff --git a/ast/README.md b/ast/README.md\\\\n| new file mode 100644\\\\n| index 0000000..59999c1\\\\n| --- /dev/null\\\\n| +++ b/ast/README.md\\\\n| @@ -0,0 +1,10 @@\\\\n| +# Generate abstract syntax tree \\\\n| +Author: king-jojo\\\\n| +\\\\n| +First install Clang with: \\\\n| +\\\\n| +    $ sudo apt-get install clang\\\\n| +\\\\n| +Usage: \\\\n| +\\\\n| +    \\\\n| diff --git a/ast/example/test.cc b/ast/example/test.cc\\\\n| new file mode 100644\\\\n| index 0000000..33955df\\\\n| --- /dev/null\\\\n| +++ b/ast/example/test.cc\\\\n| @@ -0,0 +1,6 @@\\\\n| +#include <stdio.h>\\\\n| +int f(int x){\\\\n| +  int y = (x * 2);\\\\n| +  int result = (y / 42);\\\\n| +  return result;\\\\n| +}\\\\n| diff --git a/ast/example/test_new.cc b/ast/example/test_new.cc\\\\n| new file mode 100644\\\\n| index 0000000..52c0681\\\\n| --- /dev/null\\\\n| +++ b/ast/example/test_new.cc\\\\n| @@ -0,0 +1,5 @@\\\\n| +int f(int x){\\\\n| +  int y = (x * 2);\\\\n| +  int result = (y / 42);\\\\n| +  return result;\\\\n| +}\\\\n\\\\n* 9558691  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\\\n| diff --git a/git/user/README.md b/git/user/README.md\\\\n| index 1568efa..2337cca 100644\\\\n| --- a/git/user/README.md\\\\n| +++ b/git/user/README.md\\\\n| @@ -1,3 +1,3 @@\\\\n|  # Fetch Other Websites Account via Git Account\\\\n|  \\\\n| -Author: AlvinZSJt\\\\n| +Author: AlvinZSJ\\\\n\\\\n* 4c8f4f0  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\\\n| diff --git a/git/history/README.md b/git/history/README.md\\\\n| index bf31411..f2fad88 100644\\\\n| --- a/git/history/README.md\\\\n| +++ b/git/history/README.md\\\\n| @@ -1,3 +1,2 @@\\\\n| -# Git Commit History\\\\n| -\\\\n| +# Map Git Commit History to Authors\\\\n|  Author: ch-chiu\\\\n| diff --git a/git/user/README.md b/git/user/README.md\\\\n| index 384c03d..1568efa 100644\\\\n| --- a/git/user/README.md\\\\n| +++ b/git/user/README.md\\\\n| @@ -1,3 +1,3 @@\\\\n| -# Fetch Other Websites Account via Git Accoun\\\\n| +# Fetch Other Websites Account via Git Account\\\\n|  \\\\n|  Author: AlvinZSJt\\\\n\\\\n* 1f567c2  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\\\n| diff --git a/git/history/README.md b/git/history/README.md\\\\n| new file mode 100644\\\\n| index 0000000..bf31411\\\\n| --- /dev/null\\\\n| +++ b/git/history/README.md\\\\n| @@ -0,0 +1,3 @@\\\\n| +# Git Commit History\\\\n| +\\\\n| +Author: ch-chiu\\\\n| diff --git a/git/user/README.md b/git/user/README.md\\\\n| new file mode 100644\\\\n| index 0000000..384c03d\\\\n| --- /dev/null\\\\n| +++ b/git/user/README.md\\\\n| @@ -0,0 +1,3 @@\\\\n| +# Fetch Other Websites Account via Git Accoun\\\\n| +\\\\n| +Author: AlvinZSJt\\\\n\\\\n* 3e6cb9c  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\\\n| diff --git a/README.md b/README.md\\\\n| index ab89bcc..b69aded 100644\\\\n| --- a/README.md\\\\n| +++ b/README.md\\\\n| @@ -11,9 +11,7 @@ Our purpose is to make trace open source project more efficient and simple. To r\\\\n|  ## Project Outline\\\\n|  \\\\n|  The whole workflow contains 3 steps.\\\\n| -\\\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\\\n| -\\\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\\\n| -some other trees of code, another way is applying git log api to mapping code with developer.\\\\n| -\\\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\\\n| -visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\\\n| +* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\\\n| +* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\\\\n| +* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\\\n|  \\\\n\\\\n* 4f04f7e  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\\\n| diff --git a/README.md b/README.md\\\\n| index ad7247e..ab89bcc 100644\\\\n| --- a/README.md\\\\n| +++ b/README.md\\\\n| @@ -1 +1,19 @@\\\\n|  # codeTracker\\\\n| +\\\\n| +## Obejective\\\\n| +\\\\n| +The structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\\\\n| +\\\\n| +## Goals\\\\n| +\\\\n| +Our purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\\\\n| +\\\\n| +## Project Outline\\\\n| +\\\\n| +The whole workflow contains 3 steps.\\\\n| +\\\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\\\n| +\\\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\\\n| +some other trees of code, another way is applying git log api to mapping code with developer.\\\\n| +\\\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\\\n| +visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\\\n| +\\\\n\\\\n* fc3971a  Create-README.md 2 days ago <Zhe Wang> <a63188722@163.com>| \\\\n| diff --git a/README.md b/README.md\\\\n| new file mode 100644\\\\n| index 0000000..ad7247e\\\\n| --- /dev/null\\\\n| +++ b/README.md\\\\n| @@ -0,0 +1 @@\\\\n| +# codeTracker\\\\n\\\\n* 018bd60  Initial-commit 2 days ago <Zhe Wang> <a63188722@163.com>  \\\\n  diff --git a/LICENSE b/LICENSE\\\\n  new file mode 100644\\\\n  index 0000000..9cecc1d\\\\n  --- /dev/null\\\\n  +++ b/LICENSE\\\\n  @@ -0,0 +1,674 @@\\\\n  +                    GNU GENERAL PUBLIC LICENSE\\\\n  +                       Version 3, 29 June 2007\\\\n  +\\\\n  + Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\\\n  + Everyone is permitted to copy and distribute verbatim copies\\\\n  + of this license document, but changing it is not allowed.\\\\n  +\\\\n  +                            Preamble\\\\n  +\\\\n  +  The GNU General Public License is a free, copyleft license for\\\\n  +software and other kinds of works.\\\\n  +\\\\n  +  The licenses for most software and other practical works are designed\\\\n  +to take away your freedom to share and change the works.  By contrast,\\\\n  +the GNU General Public License is intended to guarantee your freedom to\\\\n  +share and change all versions of a program--to make sure it remains free\\\\n  +software for all its users.  We, the Free Software Foundation, use the\\\\n  +GNU General Public License for most of our software; it applies also to\\\\n  +any other work released this way by its authors.  You can apply it to\\\\n  +your programs, too.\\\\n  +\\\\n  +  When we speak of free software, we are referring to freedom, not\\\\n  +price.  Our General Public Licenses are designed to make sure that you\\\\n  +have the freedom to distribute copies of free software (and charge for\\\\n  +them if you wish), that you receive source code or can get it if you\\\\n  +want it, that you can change the software or use pieces of it in new\\\\n  +free programs, and that you know you can do these things.\\\\n  +\\\\n  +  To protect your rights, we need to prevent others from denying you\\\\n  +these rights or asking you to surrender the rights.  Therefore, you have\\\\n  +certain responsibilities if you distribute copies of the software, or if\\\\n  +you modify it: responsibilities to respect the freedom of others.\\\\n  +\\\\n  +  For example, if you distribute copies of such a program, whether\\\\n  +gratis or for a fee, you must pass on to the recipients the same\\\\n  +freedoms that you received.  You must make sure that they, too, receive\\\\n  +or can get the source code.  And you must show them these terms so they\\\\n  +know their rights.\\\\n  +\\\\n  +  Developers that use the GNU GPL protect your rights with two steps:\\\\n  +(1) assert copyright on the software, and (2) offer you this License\\\\n  +giving you legal permission to copy, distribute and/or modify it.\\\\n  +\\\\n  +  For the developers' and authors' protection, the GPL clearly explains\\\\n  +that there is no warranty for this free software.  For both users' and\\\\n  +authors' sake, the GPL requires that modified versions be marked as\\\\n  +changed, so that their problems will not be attributed erroneously to\\\\n  +authors of previous versions.\\\\n  +\\\\n  +  Some devices are designed to deny users access to install or run\\\\n  +modified versions of the software inside them, although the manufacturer\\\\n  +can do so.  This is fundamentally incompatible with the aim of\\\\n  +protecting users' freedom to change the software.  The systematic\\\\n  +pattern of such abuse occurs in the area of products for individuals to\\\\n  +use, which is precisely where it is most unacceptable.  Therefore, we\\\\n  +have designed this version of the GPL to prohibit the practice for those\\\\n  +products.  If such problems arise substantially in other domains, we\\\\n  +stand ready to extend this provision to those domains in future versions\\\\n  +of the GPL, as needed to protect the freedom of users.\\\\n  +\\\\n  +  Finally, every program is threatened constantly by software patents.\\\\n  +States should not allow patents to restrict development and use of\\\\n  +software on general-purpose computers, but in those that do, we wish to\\\\n  +avoid the special danger that patents applied to a free program could\\\\n  +make it effectively proprietary.  To prevent this, the GPL assures that\\\\n  +patents cannot be used to render the program non-free.\\\\n  +\\\\n  +  The precise terms and conditions for copying, distribution and\\\\n  +modification follow.\\\\n  +\\\\n  +                       TERMS AND CONDITIONS\\\\n  +\\\\n  +  0. Definitions.\\\\n  +\\\\n  +  \\\\\\\"This License\\\\\\\" refers to version 3 of the GNU General Public License.\\\\n  +\\\\n  +  \\\\\\\"Copyright\\\\\\\" also means copyright-like laws that apply to other kinds of\\\\n  +works, such as semiconductor masks.\\\\n  +\\\\n  +  \\\\\\\"The Program\\\\\\\" refers to any copyrightable work licensed under this\\\\n  +License.  Each licensee is addressed as \\\\\\\"you\\\\\\\".  \\\\\\\"Licensees\\\\\\\" and\\\\n  +\\\\\\\"recipients\\\\\\\" may be individuals or organizations.\\\\n  +\\\\n  +  To \\\\\\\"modify\\\\\\\" a work means to copy from or adapt all or part of the work\\\\n  +in a fashion requiring copyright permission, other than the making of an\\\\n  +exact copy.  The resulting work is called a \\\\\\\"modified version\\\\\\\" of the\\\\n  +earlier work or a work \\\\\\\"based on\\\\\\\" the earlier work.\\\\n  +\\\\n  +  A \\\\\\\"covered work\\\\\\\" means either the unmodified Program or a work based\\\\n  +on the Program.\\\\n  +\\\\n  +  To \\\\\\\"propagate\\\\\\\" a work means to do anything with it that, without\\\\n  +permission, would make you directly or secondarily liable for\\\\n  +infringement under applicable copyright law, except executing it on a\\\\n  +computer or modifying a private copy.  Propagation includes copying,\\\\n  +distribution (with or without modification), making available to the\\\\n  +public, and in some countries other activities as well.\\\\n  +\\\\n  +  To \\\\\\\"convey\\\\\\\" a work means any kind of propagation that enables other\\\\n  +parties to make or receive copies.  Mere interaction with a user through\\\\n  +a computer network, with no transfer of a copy, is not conveying.\\\\n  +\\\\n  +  An interactive user interface displays \\\\\\\"Appropriate Legal Notices\\\\\\\"\\\\n  +to the extent that it includes a convenient and prominently visible\\\\n  +feature that (1) displays an appropriate copyright notice, and (2)\\\\n  +tells the user that there is no warranty for the work (except to the\\\\n  +extent that warranties are provided), that licensees may convey the\\\\n  +work under this License, and how to view a copy of this License.  If\\\\n  +the interface presents a list of user commands or options, such as a\\\\n  +menu, a prominent item in the list meets this criterion.\\\\n  +\\\\n  +  1. Source Code.\\\\n  +\\\\n  +  The \\\\\\\"source code\\\\\\\" for a work means the preferred form of the work\\\\n  +for making modifications to it.  \\\\\\\"Object code\\\\\\\" means any non-source\\\\n  +form of a work.\\\\n  +\\\\n  +  A \\\\\\\"Standard Interface\\\\\\\" means an interface that either is an official\\\\n  +standard defined by a recognized standards body, or, in the case of\\\\n  +interfaces specified for a particular programming language, one that\\\\n  +is widely used among developers working in that language.\\\\n  +\\\\n  +  The \\\\\\\"System Libraries\\\\\\\" of an executable work include anything, other\\\\n  +than the work as a whole, that (a) is included in the normal form of\\\\n  +packaging a Major Component, but which is not part of that Major\\\\n  +Component, and (b) serves only to enable use of the work with that\\\\n  +Major Component, or to implement a Standard Interface for which an\\\\n  +implementation is available to the public in source code form.  A\\\\n  +\\\\\\\"Major Component\\\\\\\", in this context, means a major essential component\\\\n  +(kernel, window system, and so on) of the specific operating system\\\\n  +(if any) on which the executable work runs, or a compiler used to\\\\n  +produce the work, or an object code interpreter used to run it.\\\\n  +\\\\n  +  The \\\\\\\"Corresponding Source\\\\\\\" for a work in object code form means all\\\\n  +the source code needed to generate, install, and (for an executable\\\\n  +work) run the object code and to modify the work, including scripts to\\\\n  +control those activities.  However, it does not include the work's\\\\n  +System Libraries, or general-purpose tools or generally available free\\\\n  +programs which are used unmodified in performing those activities but\\\\n  +which are not part of the work.  For example, Corresponding Source\\\\n  +includes interface definition files associated with source files for\\\\n  +the work, and the source code for shared libraries and dynamically\\\\n  +linked subprograms that the work is specifically designed to require,\\\\n  +such as by intimate data communication or control flow between those\\\\n  +subprograms and other parts of the work.\\\\n  +\\\\n  +  The Corresponding Source need not include anything that users\\\\n  +can regenerate automatically from other parts of the Corresponding\\\\n  +Source.\\\\n  +\\\\n  +  The Corresponding Source for a work in source code form is that\\\\n  +same work.\\\\n  +\\\\n  +  2. Basic Permissions.\\\\n  +\\\\n  +  All rights granted under this License are granted for the term of\\\\n  +copyright on the Program, and are irrevocable provided the stated\\\\n  +conditions are met.  This License explicitly affirms your unlimited\\\\n  +permission to run the unmodified Program.  The output from running a\\\\n  +covered work is covered by this License only if the output, given its\\\\n  +content, constitutes a covered work.  This License acknowledges your\\\\n  +rights of fair use or other equivalent, as provided by copyright law.\\\\n  +\\\\n  +  You may make, run and propagate covered works that you do not\\\\n  +convey, without conditions so long as your license otherwise remains\\\\n  +in force.  You may convey covered works to others for the sole purpose\\\\n  +of having them make modifications exclusively for you, or provide you\\\\n  +with facilities for running those works, provided that you comply with\\\\n  +the terms of this License in conveying all material for which you do\\\\n  +not control copyright.  Those thus making or running the covered works\\\\n  +for you must do so exclusively on your behalf, under your direction\\\\n  +and control, on terms that prohibit them from making any copies of\\\\n  +your copyrighted material outside their relationship with you.\\\\n  +\\\\n  +  Conveying under any other circumstances is permitted solely under\\\\n  +the conditions stated below.  Sublicensing is not allowed; section 10\\\\n  +makes it unnecessary.\\\\n  +\\\\n  +  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\\\n  +\\\\n  +  No covered work shall be deemed part of an effective technological\\\\n  +measure under any applicable law fulfilling obligations under article\\\\n  +11 of the WIPO copyright treaty adopted on 20 December 1996, or\\\\n  +similar laws prohibiting or restricting circumvention of such\\\\n  +measures.\\\\n  +\\\\n  +  When you convey a covered work, you waive any legal power to forbid\\\\n  +circumvention of technological measures to the extent such circumvention\\\\n  +is effected by exercising rights under this License with respect to\\\\n  +the covered work, and you disclaim any intention to limit operation or\\\\n  +modification of the work as a means of enforcing, against the work's\\\\n  +users, your or third parties' legal rights to forbid circumvention of\\\\n  +technological measures.\\\\n  +\\\\n  +  4. Conveying Verbatim Copies.\\\\n  +\\\\n  +  You may convey verbatim copies of the Program's source code as you\\\\n  +receive it, in any medium, provided that you conspicuously and\\\\n  +appropriately publish on each copy an appropriate copyright notice;\\\\n  +keep intact all notices stating that this License and any\\\\n  +non-permissive terms added in accord with section 7 apply to the code;\\\\n  +keep intact all notices of the absence of any warranty; and give all\\\\n  +recipients a copy of this License along with the Program.\\\\n  +\\\\n  +  You may charge any price or no price for each copy that you convey,\\\\n  +and you may offer support or warranty protection for a fee.\\\\n  +\\\\n  +  5. Conveying Modified Source Versions.\\\\n  +\\\\n  +  You may convey a work based on the Program, or the modifications to\\\\n  +produce it from the Program, in the form of source code under the\\\\n  +terms of section 4, provided that you also meet all of these conditions:\\\\n  +\\\\n  +    a) The work must carry prominent notices stating that you modified\\\\n  +    it, and giving a relevant date.\\\\n  +\\\\n  +    b) The work must carry prominent notices stating that it is\\\\n  +    released under this License and any conditions added under section\\\\n  +    7.  This requirement modifies the requirement in section 4 to\\\\n  +    \\\\\\\"keep intact all notices\\\\\\\".\\\\n  +\\\\n  +    c) You must license the entire work, as a whole, under this\\\\n  +    License to anyone who comes into possession of a copy.  This\\\\n  +    License will therefore apply, along with any applicable section 7\\\\n  +    additional terms, to the whole of the work, and all its parts,\\\\n  +    regardless of how they are packaged.  This License gives no\\\\n  +    permission to license the work in any other way, but it does not\\\\n  +    invalidate such permission if you have separately received it.\\\\n  +\\\\n  +    d) If the work has interactive user interfaces, each must display\\\\n  +    Appropriate Legal Notices; however, if the Program has interactive\\\\n  +    interfaces that do not display Appropriate Legal Notices, your\\\\n  +    work need not make them do so.\\\\n  +\\\\n  +  A compilation of a covered work with other separate and independent\\\\n  +works, which are not by their nature extensions of the covered work,\\\\n  +and which are not combined with it such as to form a larger program,\\\\n  +in or on a volume of a storage or distribution medium, is called an\\\\n  +\\\\\\\"aggregate\\\\\\\" if the compilation and its resulting copyright are not\\\\n  +used to limit the access or legal rights of the compilation's users\\\\n  +beyond what the individual works permit.  Inclusion of a covered work\\\\n  +in an aggregate does not cause this License to apply to the other\\\\n  +parts of the aggregate.\\\\n  +\\\\n  +  6. Conveying Non-Source Forms.\\\\n  +\\\\n  +  You may convey a covered work in object code form under the terms\\\\n  +of sections 4 and 5, provided that you also convey the\\\\n  +machine-readable Corresponding Source under the terms of this License,\\\\n  +in one of these ways:\\\\n  +\\\\n  +    a) Convey the object code in, or embodied in, a physical product\\\\n  +    (including a physical distribution medium), accompanied by the\\\\n  +    Corresponding Source fixed on a durable physical medium\\\\n  +    customarily used for software interchange.\\\\n  +\\\\n  +    b) Convey the object code in, or embodied in, a physical product\\\\n  +    (including a physical distribution medium), accompanied by a\\\\n  +    written offer, valid for at least three years and valid for as\\\\n  +    long as you offer spare parts or customer support for that product\\\\n  +    model, to give anyone who possesses the object code either (1) a\\\\n  +    copy of the Corresponding Source for all the software in the\\\\n  +    product that is covered by this License, on a durable physical\\\\n  +    medium customarily used for software interchange, for a price no\\\\n  +    more than your reasonable cost of physically performing this\\\\n  +    conveying of source, or (2) access to copy the\\\\n  +    Corresponding Source from a network server at no charge.\\\\n  +\\\\n  +    c) Convey individual copies of the object code with a copy of the\\\\n  +    written offer to provide the Corresponding Source.  This\\\\n  +    alternative is allowed only occasionally and noncommercially, and\\\\n  +    only if you received the object code with such an offer, in accord\\\\n  +    with subsection 6b.\\\\n  +\\\\n  +    d) Convey the object code by offering access from a designated\\\\n  +    place (gratis or for a charge), and offer equivalent access to the\\\\n  +    Corresponding Source in the same way through the same place at no\\\\n  +    further charge.  You need not require recipients to copy the\\\\n  +    Corresponding Source along with the object code.  If the place to\\\\n  +    copy the object code is a network server, the Corresponding Source\\\\n  +    may be on a different server (operated by you or a third party)\\\\n  +    that supports equivalent copying facilities, provided you maintain\\\\n  +    clear directions next to the object code saying where to find the\\\\n  +    Corresponding Source.  Regardless of what server hosts the\\\\n  +    Corresponding Source, you remain obligated to ensure that it is\\\\n  +    available for as long as needed to satisfy these requirements.\\\\n  +\\\\n  +    e) Convey the object code using peer-to-peer transmission, provided\\\\n  +    you inform other peers where the object code and Corresponding\\\\n  +    Source of the work are being offered to the general public at no\\\\n  +    charge under subsection 6d.\\\\n  +\\\\n  +  A separable portion of the object code, whose source code is excluded\\\\n  +from the Corresponding Source as a System Library, need not be\\\\n  +included in conveying the object code work.\\\\n  +\\\\n  +  A \\\\\\\"User Product\\\\\\\" is either (1) a \\\\\\\"consumer product\\\\\\\", which means any\\\\n  +tangible personal property which is normally used for personal, family,\\\\n  +or household purposes, or (2) anything designed or sold for incorporation\\\\n  +into a dwelling.  In determining whether a product is a consumer product,\\\\n  +doubtful cases shall be resolved in favor of coverage.  For a particular\\\\n  +product received by a particular user, \\\\\\\"normally used\\\\\\\" refers to a\\\\n  +typical or common use of that class of product, regardless of the status\\\\n  +of the particular user or of the way in which the particular user\\\\n  +actually uses, or expects or is expected to use, the product.  A product\\\\n  +is a consumer product regardless of whether the product has substantial\\\\n  +commercial, industrial or non-consumer uses, unless such uses represent\\\\n  +the only significant mode of use of the product.\\\\n  +\\\\n  +  \\\\\\\"Installation Information\\\\\\\" for a User Product means any methods,\\\\n  +procedures, authorization keys, or other information required to install\\\\n  +and execute modified versions of a covered work in that User Product from\\\\n  +a modified version of its Corresponding Source.  The information must\\\\n  +suffice to ensure that the continued functioning of the modified object\\\\n  +code is in no case prevented or interfered with solely because\\\\n  +modification has been made.\\\\n  +\\\\n  +  If you convey an object code work under this section in, or with, or\\\\n  +specifically for use in, a User Product, and the conveying occurs as\\\\n  +part of a transaction in which the right of possession and use of the\\\\n  +User Product is transferred to the recipient in perpetuity or for a\\\\n  +fixed term (regardless of how the transaction is characterized), the\\\\n  +Corresponding Source conveyed under this section must be accompanied\\\\n  +by the Installation Information.  But this requirement does not apply\\\\n  +if neither you nor any third party retains the ability to install\\\\n  +modified object code on the User Product (for example, the work has\\\\n  +been installed in ROM).\\\\n  +\\\\n  +  The requirement to provide Installation Information does not include a\\\\n  +requirement to continue to provide support service, warranty, or updates\\\\n  +for a work that has been modified or installed by the recipient, or for\\\\n  +the User Product in which it has been modified or installed.  Access to a\\\\n  +network may be denied when the modification itself materially and\\\\n  +adversely affects the operation of the network or violates the rules and\\\\n  +protocols for communication across the network.\\\\n  +\\\\n  +  Corresponding Source conveyed, and Installation Information provided,\\\\n  +in accord with this section must be in a format that is publicly\\\\n  +documented (and with an implementation available to the public in\\\\n  +source code form), and must require no special password or key for\\\\n  +unpacking, reading or copying.\\\\n  +\\\\n  +  7. Additional Terms.\\\\n  +\\\\n  +  \\\\\\\"Additional permissions\\\\\\\" are terms that supplement the terms of this\\\\n  +License by making exceptions from one or more of its conditions.\\\\n  +Additional permissions that are applicable to the entire Program shall\\\\n  +be treated as though they were included in this License, to the extent\\\\n  +that they are valid under applicable law.  If additional permissions\\\\n  +apply only to part of the Program, that part may be used separately\\\\n  +under those permissions, but the entire Program remains governed by\\\\n  +this License without regard to the additional permissions.\\\\n  +\\\\n  +  When you convey a copy of a covered work, you may at your option\\\\n  +remove any additional permissions from that copy, or from any part of\\\\n  +it.  (Additional permissions may be written to require their own\\\\n  +removal in certain cases when you modify the work.)  You may place\\\\n  +additional permissions on material, added by you to a covered work,\\\\n  +for which you have or can give appropriate copyright permission.\\\\n  +\\\\n  +  Notwithstanding any other provision of this License, for material you\\\\n  +add to a covered work, you may (if authorized by the copyright holders of\\\\n  +that material) supplement the terms of this License with terms:\\\\n  +\\\\n  +    a) Disclaiming warranty or limiting liability differently from the\\\\n  +    terms of sections 15 and 16 of this License; or\\\\n  +\\\\n  +    b) Requiring preservation of specified reasonable legal notices or\\\\n  +    author attributions in that material or in the Appropriate Legal\\\\n  +    Notices displayed by works containing it; or\\\\n  +\\\\n  +    c) Prohibiting misrepresentation of the origin of that material, or\\\\n  +    requiring that modified versions of such material be marked in\\\\n  +    reasonable ways as different from the original version; or\\\\n  +\\\\n  +    d) Limiting the use for publicity purposes of names of licensors or\\\\n  +    authors of the material; or\\\\n  +\\\\n  +    e) Declining to grant rights under trademark law for use of some\\\\n  +    trade names, trademarks, or service marks; or\\\\n  +\\\\n  +    f) Requiring indemnification of licensors and authors of that\\\\n  +    material by anyone who conveys the material (or modified versions of\\\\n  +    it) with contractual assumptions of liability to the recipient, for\\\\n  +    any liability that these contractual assumptions directly impose on\\\\n  +    those licensors and authors.\\\\n  +\\\\n  +  All other non-permissive additional terms are considered \\\\\\\"further\\\\n  +restrictions\\\\\\\" within the meaning of section 10.  If the Program as you\\\\n  +received it, or any part of it, contains a notice stating that it is\\\\n  +governed by this License along with a term that is a further\\\\n  +restriction, you may remove that term.  If a license document contains\\\\n  +a further restriction but permits relicensing or conveying under this\\\\n  +License, you may add to a covered work material governed by the terms\\\\n  +of that license document, provided that the further restriction does\\\\n  +not survive such relicensing or conveying.\\\\n  +\\\\n  +  If you add terms to a covered work in accord with this section, you\\\\n  +must place, in the relevant source files, a statement of the\\\\n  +additional terms that apply to those files, or a notice indicating\\\\n  +where to find the applicable terms.\\\\n  +\\\\n  +  Additional terms, permissive or non-permissive, may be stated in the\\\\n  +form of a separately written license, or stated as exceptions;\\\\n  +the above requirements apply either way.\\\\n  +\\\\n  +  8. Termination.\\\\n  +\\\\n  +  You may not propagate or modify a covered work except as expressly\\\\n  +provided under this License.  Any attempt otherwise to propagate or\\\\n  +modify it is void, and will automatically terminate your rights under\\\\n  +this License (including any patent licenses granted under the third\\\\n  +paragraph of section 11).\\\\n  +\\\\n  +  However, if you cease all violation of this License, then your\\\\n  +license from a particular copyright holder is reinstated (a)\\\\n  +provisionally, unless and until the copyright holder explicitly and\\\\n  +finally terminates your license, and (b) permanently, if the copyright\\\\n  +holder fails to notify you of the violation by some reasonable means\\\\n  +prior to 60 days after the cessation.\\\\n  +\\\\n  +  Moreover, your license from a particular copyright holder is\\\\n  +reinstated permanently if the copyright holder notifies you of the\\\\n  +violation by some reasonable means, this is the first time you have\\\\n  +received notice of violation of this License (for any work) from that\\\\n  +copyright holder, and you cure the violation prior to 30 days after\\\\n  +your receipt of the notice.\\\\n  +\\\\n  +  Termination of your rights under this section does not terminate the\\\\n  +licenses of parties who have received copies or rights from you under\\\\n  +this License.  If your rights have been terminated and not permanently\\\\n  +reinstated, you do not qualify to receive new licenses for the same\\\\n  +material under section 10.\\\\n  +\\\\n  +  9. Acceptance Not Required for Having Copies.\\\\n  +\\\\n  +  You are not required to accept this License in order to receive or\\\\n  +run a copy of the Program.  Ancillary propagation of a covered work\\\\n  +occurring solely as a consequence of using peer-to-peer transmission\\\\n  +to receive a copy likewise does not require acceptance.  However,\\\\n  +nothing other than this License grants you permission to propagate or\\\\n  +modify any covered work.  These actions infringe copyright if you do\\\\n  +not accept this License.  Therefore, by modifying or propagating a\\\\n  +covered work, you indicate your acceptance of this License to do so.\\\\n  +\\\\n  +  10. Automatic Licensing of Downstream Recipients.\\\\n  +\\\\n  +  Each time you convey a covered work, the recipient automatically\\\\n  +receives a license from the original licensors, to run, modify and\\\\n  +propagate that work, subject to this License.  You are not responsible\\\\n  +for enforcing compliance by third parties with this License.\\\\n  +\\\\n  +  An \\\\\\\"entity transaction\\\\\\\" is a transaction transferring control of an\\\\n  +organization, or substantially all assets of one, or subdividing an\\\\n  +organization, or merging organizations.  If propagation of a covered\\\\n  +work results from an entity transaction, each party to that\\\\n  +transaction who receives a copy of the work also receives whatever\\\\n  +licenses to the work the party's predecessor in interest had or could\\\\n  +give under the previous paragraph, plus a right to possession of the\\\\n  +Corresponding Source of the work from the predecessor in interest, if\\\\n  +the predecessor has it or can get it with reasonable efforts.\\\\n  +\\\\n  +  You may not impose any further restrictions on the exercise of the\\\\n  +rights granted or affirmed under this License.  For example, you may\\\\n  +not impose a license fee, royalty, or other charge for exercise of\\\\n  +rights granted under this License, and you may not initiate litigation\\\\n  +(including a cross-claim or counterclaim in a lawsuit) alleging that\\\\n  +any patent claim is infringed by making, using, selling, offering for\\\\n  +sale, or importing the Program or any portion of it.\\\\n  +\\\\n  +  11. Patents.\\\\n  +\\\\n  +  A \\\\\\\"contributor\\\\\\\" is a copyright holder who authorizes use under this\\\\n  +License of the Program or a work on which the Program is based.  The\\\\n  +work thus licensed is called the contributor's \\\\\\\"contributor version\\\\\\\".\\\\n  +\\\\n  +  A contributor's \\\\\\\"essential patent claims\\\\\\\" are all patent claims\\\\n  +owned or controlled by the contributor, whether already acquired or\\\\n  +hereafter acquired, that would be infringed by some manner, permitted\\\\n  +by this License, of making, using, or selling its contributor version,\\\\n  +but do not include claims that would be infringed only as a\\\\n  +consequence of further modification of the contributor version.  For\\\\n  +purposes of this definition, \\\\\\\"control\\\\\\\" includes the right to grant\\\\n  +patent sublicenses in a manner consistent with the requirements of\\\\n  +this License.\\\\n  +\\\\n  +  Each contributor grants you a non-exclusive, worldwide, royalty-free\\\\n  +patent license under the contributor's essential patent claims, to\\\\n  +make, use, sell, offer for sale, import and otherwise run, modify and\\\\n  +propagate the contents of its contributor version.\\\\n  +\\\\n  +  In the following three paragraphs, a \\\\\\\"patent license\\\\\\\" is any express\\\\n  +agreement or commitment, however denominated, not to enforce a patent\\\\n  +(such as an express permission to practice a patent or covenant not to\\\\n  +sue for patent infringement).  To \\\\\\\"grant\\\\\\\" such a patent license to a\\\\n  +party means to make such an agreement or commitment not to enforce a\\\\n  +patent against the party.\\\\n  +\\\\n  +  If you convey a covered work, knowingly relying on a patent license,\\\\n  +and the Corresponding Source of the work is not available for anyone\\\\n  +to copy, free of charge and under the terms of this License, through a\\\\n  +publicly available network server or other readily accessible means,\\\\n  +then you must either (1) cause the Corresponding Source to be so\\\\n  +available, or (2) arrange to deprive yourself of the benefit of the\\\\n  +patent license for this particular work, or (3) arrange, in a manner\\\\n  +consistent with the requirements of this License, to extend the patent\\\\n  +license to downstream recipients.  \\\\\\\"Knowingly relying\\\\\\\" means you have\\\\n  +actual knowledge that, but for the patent license, your conveying the\\\\n  +covered work in a country, or your recipient's use of the covered work\\\\n  +in a country, would infringe one or more identifiable patents in that\\\\n  +country that you have reason to believe are valid.\\\\n  +\\\\n  +  If, pursuant to or in connection with a single transaction or\\\\n  +arrangement, you convey, or propagate by procuring conveyance of, a\\\\n  +covered work, and grant a patent license to some of the parties\\\\n  +receiving the covered work authorizing them to use, propagate, modify\\\\n  +or convey a specific copy of the covered work, then the patent license\\\\n  +you grant is automatically extended to all recipients of the covered\\\\n  +work and works based on it.\\\\n  +\\\\n  +  A patent license is \\\\\\\"discriminatory\\\\\\\" if it does not include within\\\\n  +the scope of its coverage, prohibits the exercise of, or is\\\\n  +conditioned on the non-exercise of one or more of the rights that are\\\\n  +specifically granted under this License.  You may not convey a covered\\\\n  +work if you are a party to an arrangement with a third party that is\\\\n  +in the business of distributing software, under which you make payment\\\\n  +to the third party based on the extent of your activity of conveying\\\\n  +the work, and under which the third party grants, to any of the\\\\n  +parties who would receive the covered work from you, a discriminatory\\\\n  +patent license (a) in connection with copies of the covered work\\\\n  +conveyed by you (or copies made from those copies), or (b) primarily\\\\n  +for and in connection with specific products or compilations that\\\\n  +contain the covered work, unless you entered into that arrangement,\\\\n  +or that patent license was granted, prior to 28 March 2007.\\\\n  +\\\\n  +  Nothing in this License shall be construed as excluding or limiting\\\\n  +any implied license or other defenses to infringement that may\\\\n  +otherwise be available to you under applicable patent law.\\\\n  +\\\\n  +  12. No Surrender of Others' Freedom.\\\\n  +\\\\n  +  If conditions are imposed on you (whether by court order, agreement or\\\\n  +otherwise) that contradict the conditions of this License, they do not\\\\n  +excuse you from the conditions of this License.  If you cannot convey a\\\\n  +covered work so as to satisfy simultaneously your obligations under this\\\\n  +License and any other pertinent obligations, then as a consequence you may\\\\n  +not convey it at all.  For example, if you agree to terms that obligate you\\\\n  +to collect a royalty for further conveying from those to whom you convey\\\\n  +the Program, the only way you could satisfy both those terms and this\\\\n  +License would be to refrain entirely from conveying the Program.\\\\n  +\\\\n  +  13. Use with the GNU Affero General Public License.\\\\n  +\\\\n  +  Notwithstanding any other provision of this License, you have\\\\n  +permission to link or combine any covered work with a work licensed\\\\n  +under version 3 of the GNU Affero General Public License into a single\\\\n  +combined work, and to convey the resulting work.  The terms of this\\\\n  +License will continue to apply to the part which is the covered work,\\\\n  +but the special requirements of the GNU Affero General Public License,\\\\n  +section 13, concerning interaction through a network will apply to the\\\\n  +combination as such.\\\\n  +\\\\n  +  14. Revised Versions of this License.\\\\n  +\\\\n  +  The Free Software Foundation may publish revised and/or new versions of\\\\n  +the GNU General Public License from time to time.  Such new versions will\\\\n  +be similar in spirit to the present version, but may differ in detail to\\\\n  +address new problems or concerns.\\\\n  +\\\\n  +  Each version is given a distinguishing version number.  If the\\\\n  +Program specifies that a certain numbered version of the GNU General\\\\n  +Public License \\\\\\\"or any later version\\\\\\\" applies to it, you have the\\\\n  +option of following the terms and conditions either of that numbered\\\\n  +version or of any later version published by the Free Software\\\\n  +Foundation.  If the Program does not specify a version number of the\\\\n  +GNU General Public License, you may choose any version ever published\\\\n  +by the Free Software Foundation.\\\\n  +\\\\n  +  If the Program specifies that a proxy can decide which future\\\\n  +versions of the GNU General Public License can be used, that proxy's\\\\n  +public statement of acceptance of a version permanently authorizes you\\\\n  +to choose that version for the Program.\\\\n  +\\\\n  +  Later license versions may give you additional or different\\\\n  +permissions.  However, no additional obligations are imposed on any\\\\n  +author or copyright holder as a result of your choosing to follow a\\\\n  +later version.\\\\n  +\\\\n  +  15. Disclaimer of Warranty.\\\\n  +\\\\n  +  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\\\n  +APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\\\n  +HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\\\\\"AS IS\\\\\\\" WITHOUT WARRANTY\\\\n  +OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\\\n  +THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\\\n  +PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\\\n  +IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\\\n  +ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\\\n  +\\\\n  +  16. Limitation of Liability.\\\\n  +\\\\n  +  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\\\n  +WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\\\n  +THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\\\n  +GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\\\n  +USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\\\n  +DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\\\n  +PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\\\n  +EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\\\n  +SUCH DAMAGES.\\\\n  +\\\\n  +  17. Interpretation of Sections 15 and 16.\\\\n  +\\\\n  +  If the disclaimer of warranty and limitation of liability provided\\\\n  +above cannot be given local legal effect according to their terms,\\\\n  +reviewing courts shall apply local law that most closely approximates\\\\n  +an absolute waiver of all civil liability in connection with the\\\\n  +Program, unless a warranty or assumption of liability accompanies a\\\\n  +copy of the Program in return for a fee.\\\\n  +\\\\n  +                     END OF TERMS AND CONDITIONS\\\\n  +\\\\n  +            How to Apply These Terms to Your New Programs\\\\n  +\\\\n  +  If you develop a new program, and you want it to be of the greatest\\\\n  +possible use to the public, the best way to achieve this is to make it\\\\n  +free software which everyone can redistribute and change under these terms.\\\\n  +\\\\n  +  To do so, attach the following notices to the program.  It is safest\\\\n  +to attach them to the start of each source file to most effectively\\\\n  +state the exclusion of warranty; and each file should have at least\\\\n  +the \\\\\\\"copyright\\\\\\\" line and a pointer to where the full notice is found.\\\\n  +\\\\n  +    {one line to give the program's name and a brief idea of what it does.}\\\\n  +    Copyright (C) {year}  {name of author}\\\\n  +\\\\n  +    This program is free software: you can redistribute it and/or modify\\\\n  +    it under the terms of the GNU General Public License as published by\\\\n  +    the Free Software Foundation, either version 3 of the License, or\\\\n  +    (at your option) any later version.\\\\n  +\\\\n  +    This program is distributed in the hope that it will be useful,\\\\n  +    but WITHOUT ANY WARRANTY; without even the implied warranty of\\\\n  +    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\\\n  +    GNU General Public License for more details.\\\\n  +\\\\n  +    You should have received a copy of the GNU General Public License\\\\n  +    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\\\n  +\\\\n  +Also add information on how to contact you by electronic and paper mail.\\\\n  +\\\\n  +  If the program does terminal interaction, make it output a short\\\\n  +notice like this when it starts in an interactive mode:\\\\n  +\\\\n  +    {project}  Copyright (C) {year}  {fullname}\\\\n  +    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\\\n  +    This is free software, and you are welcome to redistribute it\\\\n  +    under certain conditions; type `show c' for details.\\\\n  +\\\\n  +The hypothetical commands `show w' and `show c' should show the appropriate\\\\n  +parts of the General Public License.  Of course, your program's commands\\\\n  +might be different; for a GUI interface, you would use an \\\\\\\"about box\\\\\\\".\\\\n  +\\\\n  +  You should also get your employer (if you work as a programmer) or school,\\\\n  +if any, to sign a \\\\\\\"copyright disclaimer\\\\\\\" for the program, if necessary.\\\\n  +For more information on this, and how to apply and follow the GNU GPL, see\\\\n  +<http://www.gnu.org/licenses/>.\\\\n  +\\\\n  +  The GNU General Public License does not permit incorporating your program\\\\n  +into proprietary programs.  If your program is a subroutine library, you\\\\n  +may consider it more useful to permit linking proprietary applications with\\\\n  +the library.  If this is what you want to do, use the GNU Lesser General\\\\n  +Public License instead of this License.  But first, please read\\\\n  +<http://www.gnu.org/philosophy/why-not-lgpl.html>.\\\",\\n      \\\"author\\\": \\\"<Zhe Wang>\\\",\\n      \\\"commit_date\\\": \\\"1506746697\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"a63188722@163.com\\\",\\n      \\\"file\\\": \\\"git/history/main.py\\\",\\n      \\\"code_snippet\\\": \\\"#!~/anaconda3/bin/ python\\\\n# -*- coding: utf-8 -*-\\\\n#\\\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\\\n\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\nUSAGE: %(program)s input_code_file output_dir\\\\n\\\\\\\"\\\\\\\"\\\\\\\"\\\\n\\\\nimport logging\\\\nimport os\\\\nimport sys\\\\n\\\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\\\n\\\\n\\\\ndef get_code(inp):\\\\n    command = \\\\\\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email:%ae' \\\\\\\" \\\\\\\\\\\\n              \\\\\\\"--abbrev-commit -p --graph \\\\\\\" + inp\\\\\\\\\\\\n              # + \\\\\\\" > \\\\\\\" + outp + \\\\\\\"/log.txt\\\\\\\"\\\\n    input_data = os.popen(command)\\\\n    data = input_data.read()\\\\n    return data\\\\n\\\\nif __name__ == '__main__':\\\\n    program = os.path.basename(sys.argv[0])\\\\n    logger = logging.getLogger(program)\\\\n\\\\n    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s')\\\\n    logging.root.setLevel(level=logging.INFO)\\\\n    logger.info(\\\\\\\"running %s \\\\\\\" % ' '.join(sys.argv))\\\\n\\\\n    # check and process input arguments\\\\n    if len(sys.argv) != 3:\\\\n        print(len(sys.argv))\\\\n        raise SystemExit(\\\\\\\"Usage: python main.py input_code_file output_dir\\\\\\\")\\\\n    input_file, output_dir = sys.argv[1:3]\\\\n    if not os.path.exists(output_dir):\\\\n        try:\\\\n            os.makedirs(output_dir)\\\\n        except OSError as exception:\\\\n            raise SystemExit(\\\\\\\"Error: Could not create the output dir.\\\\\\\")\\\\n\\\\n    commit_history = get_code(input_file)\\\\n    print(commit_history)\\\\n\\\\n\\\",\\n      \\\"author\\\": \\\"<Zhe Wang>\\\",\\n      \\\"commit_date\\\": \\\"1506746697\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"# Map Git Commit History to Authors\\\\nAuthor: ch-chiu\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-09-30 13:58:26 +0800\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"CNPG-qzm@hotmail.com\\\",\\n      \\\"file\\\": \\\"git/history/README.md\\\",\\n      \\\"code_snippet\\\": \\\"# Git Commit History\\\\n\\\\nAuthor: ch-chiu\\\",\\n      \\\"author\\\": \\\"ChrisQiu\\\",\\n      \\\"commit_date\\\": \\\"2017-09-30 13:56:48 +0800\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-11 22:29:46 +0800\",\n      \"file\": \"git/history/output/commit_history.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<component name=\\\"InspectionProjectProfileManager\\\">\\n  <settings>\\n    <option name=\\\"useProjectProfile\\\" value=\\\"false\\\" />\\n    <option name=\\\"USE_PROJECT_PROFILE\\\" value=\\\"false\\\" />\\n    <version value=\\\"1.0\\\" />\\n  </settings>\\n</component>\",\n      \"commit_date\": [],\n      \"file\": \"git/user/.idea/inspectionProfiles/profiles_settings.xml\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectRootManager\\\" version=\\\"2\\\" project-jdk-name=\\\"Python 3.5.3 (~/.pyenv/versions/3.5.3/bin/python)\\\" project-jdk-type=\\\"Python SDK\\\" />\\n</project>\",\n      \"commit_date\": [],\n      \"file\": \"git/user/.idea/misc.xml\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectModuleManager\\\">\\n    <modules>\\n      <module fileurl=\\\"file://$PROJECT_DIR$/.idea/user.iml\\\" filepath=\\\"$PROJECT_DIR$/.idea/user.iml\\\" />\\n    </modules>\\n  </component>\\n</project>\",\n      \"commit_date\": [],\n      \"file\": \"git/user/.idea/modules.xml\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<module type=\\\"PYTHON_MODULE\\\" version=\\\"4\\\">\\n  <component name=\\\"NewModuleRootManager\\\">\\n    <content url=\\\"file://$MODULE_DIR$\\\" />\\n    <orderEntry type=\\\"inheritedJdk\\\" />\\n    <orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TestRunnerService\\\">\\n    <option name=\\\"PROJECT_TEST_RUNNER\\\" value=\\\"Unittests\\\" />\\n  </component>\\n</module>\",\n      \"commit_date\": [],\n      \"file\": \"git/user/.idea/user.iml\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ChangeListManager\\\">\\n    <list default=\\\"true\\\" id=\\\"778d6186-437e-4b56-8ed0-86e00419feed\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n    <option name=\\\"EXCLUDED_CONVERTED_TO_IGNORED\\\" value=\\\"true\\\" />\\n    <option name=\\\"TRACKING_ENABLED\\\" value=\\\"true\\\" />\\n    <option name=\\\"SHOW_DIALOG\\\" value=\\\"false\\\" />\\n    <option name=\\\"HIGHLIGHT_CONFLICTS\\\" value=\\\"true\\\" />\\n    <option name=\\\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\\\" value=\\\"false\\\" />\\n    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CreatePatchCommitExecutor\\\">\\n    <option name=\\\"PATCH_PATH\\\" value=\\\"\\\" />\\n  </component>\\n  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"get_info_stackoverflow.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"75\\\">\\n              <caret line=\\\"5\\\" column=\\\"15\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"5\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"5\\\" selection-end-column=\\\"15\\\" />\\n              <folding />\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"135\\\">\\n              <caret line=\\\"9\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"9\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"9\\\" selection-end-column=\\\"33\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"get_info_git.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"0\\\">\\n              <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"levenshtein.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"0\\\">\\n              <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n              <folding />\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"name_form.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"false\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/name_form.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"0\\\">\\n              <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n              <folding />\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n      <file leaf-file-name=\\\"syn_tags.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"705\\\">\\n              <caret line=\\\"56\\\" column=\\\"29\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"56\\\" selection-start-column=\\\"29\\\" selection-end-line=\\\"56\\\" selection-end-column=\\\"29\\\" />\\n              <folding>\\n                <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n    </leaf>\\n  </component>\\n  <component name=\\\"FileTemplateManagerImpl\\\">\\n    <option name=\\\"RECENT_TEMPLATES\\\">\\n      <list>\\n        <option value=\\\"Python Script\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"IdeDocumentHistory\\\">\\n    <option name=\\\"CHANGED_PATHS\\\">\\n      <list>\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\" />\\n        <option value=\\\"$PROJECT_DIR$/Get_Info/syn_tags.py\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"JsBuildToolGruntFileManager\\\" detection-done=\\\"true\\\" sorting=\\\"DEFINITION_ORDER\\\" />\\n  <component name=\\\"JsBuildToolPackageJson\\\" detection-done=\\\"true\\\" sorting=\\\"DEFINITION_ORDER\\\" />\\n  <component name=\\\"JsGulpfileManager\\\">\\n    <detection-done>true</detection-done>\\n    <sorting>DEFINITION_ORDER</sorting>\\n  </component>\\n  <component name=\\\"ProjectFrameBounds\\\">\\n    <option name=\\\"x\\\" value=\\\"65\\\" />\\n    <option name=\\\"y\\\" value=\\\"24\\\" />\\n    <option name=\\\"width\\\" value=\\\"1855\\\" />\\n    <option name=\\\"height\\\" value=\\\"1056\\\" />\\n  </component>\\n  <component name=\\\"ProjectView\\\">\\n    <navigator currentView=\\\"ProjectPane\\\" proportions=\\\"\\\" version=\\\"1\\\">\\n      <flattenPackages />\\n      <showMembers />\\n      <showModules />\\n      <showLibraryContents />\\n      <hideEmptyPackages />\\n      <abbreviatePackageNames />\\n      <autoscrollToSource />\\n      <autoscrollFromSource />\\n      <sortByType />\\n      <manualOrder />\\n      <foldersAlwaysOnTop value=\\\"true\\\" />\\n    </navigator>\\n    <panes>\\n      <pane id=\\\"Scratches\\\" />\\n      <pane id=\\\"ProjectPane\\\">\\n        <subPane>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"user\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"user\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"user\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"user\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"Get_Info\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n        </subPane>\\n      </pane>\\n      <pane id=\\\"Scope\\\" />\\n    </panes>\\n  </component>\\n  <component name=\\\"PropertiesComponent\\\">\\n    <property name=\\\"WebServerToolWindowFactoryState\\\" value=\\\"false\\\" />\\n    <property name=\\\"last_opened_file_path\\\" value=\\\"$PROJECT_DIR$\\\" />\\n    <property name=\\\"js.eslint.eslintPackage\\\" value=\\\"\\\" />\\n  </component>\\n  <component name=\\\"RecentsManager\\\">\\n    <key name=\\\"MoveFile.RECENT_KEYS\\\">\\n      <recent name=\\\"$PROJECT_DIR$/Get_Info\\\" />\\n    </key>\\n  </component>\\n  <component name=\\\"RunManager\\\">\\n    <configuration default=\\\"true\\\" type=\\\"DjangoTestsConfigurationType\\\" factoryName=\\\"Django tests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"TARGET\\\" value=\\\"\\\" />\\n      <option name=\\\"SETTINGS_FILE\\\" value=\\\"\\\" />\\n      <option name=\\\"CUSTOM_SETTINGS\\\" value=\\\"false\\\" />\\n      <option name=\\\"USE_OPTIONS\\\" value=\\\"false\\\" />\\n      <option name=\\\"OPTIONS\\\" value=\\\"\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"JavaScriptTestRunnerProtractor\\\" factoryName=\\\"Protractor\\\">\\n      <config-file value=\\\"\\\" />\\n      <node-interpreter value=\\\"project\\\" />\\n      <envs />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"JavascriptDebugType\\\" factoryName=\\\"JavaScript Debug\\\">\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"PyBehaveRunConfigurationType\\\" factoryName=\\\"Behave\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"ADDITIONAL_ARGS\\\" value=\\\"\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"PyLettuceRunConfigurationType\\\" factoryName=\\\"Lettuce\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"ADDITIONAL_ARGS\\\" value=\\\"\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"Tox\\\" factoryName=\\\"Tox\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <module name=\\\"user\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"js.build_tools.gulp\\\" factoryName=\\\"Gulp.js\\\">\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"js.build_tools.npm\\\" factoryName=\\\"npm\\\">\\n      <command value=\\\"run\\\" />\\n      <scripts />\\n      <node-interpreter value=\\\"project\\\" />\\n      <envs />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Attests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Doctests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Nosetests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Unittests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PUREUNITTEST\\\" value=\\\"true\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"py.test\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"user\\\" />\\n      <EXTENSION ID=\\\"PythonCoverageRunConfigurationExtension\\\" enabled=\\\"false\\\" sample_coverage=\\\"true\\\" runner=\\\"coverage.py\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"testToRun\\\" value=\\\"\\\" />\\n      <option name=\\\"keywords\\\" value=\\\"\\\" />\\n      <option name=\\\"params\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <option name=\\\"USE_KEYWORD\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n  </component>\\n  <component name=\\\"ShelveChangesManager\\\" show_recycled=\\\"false\\\">\\n    <option name=\\\"remove_strategy\\\" value=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TaskManager\\\">\\n    <task active=\\\"true\\\" id=\\\"Default\\\" summary=\\\"Default task\\\">\\n      <changelist id=\\\"778d6186-437e-4b56-8ed0-86e00419feed\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n      <created>1507731249492</created>\\n      <option name=\\\"number\\\" value=\\\"Default\\\" />\\n      <option name=\\\"presentableId\\\" value=\\\"Default\\\" />\\n      <updated>1507731249492</updated>\\n    </task>\\n    <servers />\\n  </component>\\n  <component name=\\\"ToolWindowManager\\\">\\n    <frame x=\\\"65\\\" y=\\\"24\\\" width=\\\"1855\\\" height=\\\"1056\\\" extended-state=\\\"6\\\" />\\n    <editor active=\\\"false\\\" />\\n    <layout>\\n      <window_info id=\\\"Project\\\" active=\\\"true\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.2498618\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"TODO\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"6\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Event Log\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Database\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Cvs\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"4\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Hierarchy\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"Message\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Commander\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Inspection\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"5\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Ant Build\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Debug\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"3\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n    </layout>\\n  </component>\\n  <component name=\\\"TypeScriptGeneratedFilesManager\\\">\\n    <option name=\\\"processedProjectFiles\\\" value=\\\"true\\\" />\\n  </component>\\n  <component name=\\\"VcsContentAnnotationSettings\\\">\\n    <option name=\\\"myLimit\\\" value=\\\"2678400000\\\" />\\n  </component>\\n  <component name=\\\"XDebuggerManager\\\">\\n    <breakpoint-manager />\\n    <watches-manager />\\n  </component>\\n  <component name=\\\"editorHistoryManager\\\">\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get/.idea/misc.xml\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get/.idea/Get_Info.iml\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#15#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"75\\\">\\n          <caret line=\\\"5\\\" column=\\\"15\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"5\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"5\\\" selection-end-column=\\\"15\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/name_form.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"0\\\">\\n          <caret line=\\\"0\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"0\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"0\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"135\\\">\\n          <caret line=\\\"9\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"9\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"9\\\" selection-end-column=\\\"33\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"705\\\">\\n          <caret line=\\\"56\\\" column=\\\"29\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"56\\\" selection-start-column=\\\"29\\\" selection-end-line=\\\"56\\\" selection-end-column=\\\"29\\\" />\\n          <folding>\\n            <element signature=\\\"e#0#11#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n  </component>\\n</project>\",\n      \"commit_date\": [],\n      \"file\": \"git/user/.idea/workspace.xml\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_topics\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"electron\\\",\\n         \\\"electron-app\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"C#\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"location\\\": \\\"India\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"355274_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"Python\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"C++\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"libre\\\",\\n         \\\"culture-libre\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"M4\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"8766_0.74\\\",\\n         \\\"120206_0.78\\\",\\n         \\\"3666431_0.93\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"xib\\\",\\n         \\\"animation\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Swift\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"web-flow\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [],\\n      \\\"name\\\": \\\"GitHub Web Flow\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"kennethreitz\\\",\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"120004_1.12\\\"\\n      ],\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"github_topics\\\": [\\n         \\\"environment\\\",\\n         \\\"cd\\\",\\n         \\\"shell-extension\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"for-humans\\\",\\n         \\\"kennethreitz\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Smarty\\\"\\n      ],\\n      \\\"name\\\": \\\"Kenneth Reitz\\\",\\n      \\\"location\\\": \\\"Winchester, VA\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"johnjago\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"John Jago\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"ad-free\\\",\\n         \\\"websites\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"print\\\",\\n         \\\"cards\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"name\\\": \\\"John Jago\\\",\\n      \\\"location\\\": \\\"United States\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"sfischer13\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"Stefanus\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"atom\\\",\\n         \\\"atom-package\\\",\\n         \\\"bundle\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"mit-license\\\",\\n         \\\"workflow-management\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"TeX\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Go\\\",\\n         \\\"Shell\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Awk\\\",\\n         \\\"Lua\\\",\\n         \\\"Haskell\\\",\\n         \\\"Roff\\\",\\n         \\\"Perl\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Smarty\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"name\\\": \\\"Stefanus\\\",\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"ukstv\\\",\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1682447_0.88\\\"\\n      ],\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"ApacheConf\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"name\\\": \\\"Sergey Ukustov\\\",\\n      \\\"location\\\": \\\"Volgograd, Russia\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"Siilwyn\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"pixel-art\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Vim script\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"name\\\": \\\"Selwyn\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"hobbyquaker\\\",\\n      \\\"email\\\": \\\"hq@ccu.io\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1941282_0.83\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"airtunes\\\",\\n         \\\"airplay\\\",\\n         \\\"mqtt\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"api\\\",\\n         \\\"serial\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Inno Setup\\\",\\n         \\\"Arduino\\\",\\n         \\\"Tcl\\\"\\n      ],\\n      \\\"name\\\": \\\"Sebastian Raff\\\",\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"stetso\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"lua\\\",\\n         \\\"gamedev\\\",\\n         \\\"mobile-game\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"mobile\\\",\\n         \\\"swipe-gestures\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CMake\\\",\\n         \\\"Python\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Roff\\\",\\n         \\\"Java\\\",\\n         \\\"GLSL\\\",\\n         \\\"Lua\\\",\\n         \\\"QMake\\\",\\n         \\\"PHP\\\",\\n         \\\"Batchfile\\\",\\n         \\\"HTML\\\",\\n         \\\"HLSL\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Prolog\\\",\\n         \\\"C++\\\",\\n         \\\"CSS\\\",\\n         \\\"Perl\\\",\\n         \\\"Shell\\\",\\n         \\\"NSIS\\\",\\n         \\\"Makefile\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"name\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"roaldnefs\\\",\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Roald Nefs\\\",\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"github_topics\\\": [\\n         \\\"prometheus\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"dotfiles\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Vim script\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"name\\\": \\\"Roald Nefs\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"chasegiunta\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"75827_0.9\\\"\\n      ],\\n      \\\"company\\\": \\\"@simplygoodwork\\\",\\n      \\\"github_topics\\\": [\\n         \\\"craftcms\\\",\\n         \\\"craft\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"craft-plugin\\\",\\n         \\\"list\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Nginx\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"name\\\": \\\"Chase Giunta\\\",\\n      \\\"location\\\": \\\"Dallas, TX\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"LappleApple\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"272692_0.83\\\",\\n         \\\"314481_0.8\\\",\\n         \\\"742907_0.87\\\"\\n      ],\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"leadership\\\",\\n         \\\"management\\\",\\n         \\\"engineering-managers\\\",\\n         \\\"hiring\\\",\\n         \\\"diversity\\\",\\n         \\\"engineering-management\\\",\\n         \\\"awesome\\\",\\n         \\\"tech-culture\\\",\\n         \\\"retrospectives\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Scala\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"PLpgSQL\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"name\\\": \\\"Lauri Apple\\\",\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"meitar\\\",\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"8124383_0.92\\\",\\n         \\\"5301419_0.92\\\"\\n      ],\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"lockpicking\\\",\\n         \\\"locksport\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"chrome-extension\\\",\\n         \\\"web-extension\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"name\\\": \\\"Meitar M.\\\",\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"angrykoala\\\",\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\",\\n      \\\"stackoverflow_login\\\": \\\"angrykoala\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"esoteric\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"music\\\",\\n         \\\"tags\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Python\\\",\\n         \\\"TeX\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"Gnuplot\\\"\\n      ],\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\",\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"ooade\\\",\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"challenge\\\",\\n         \\\"code\\\",\\n         \\\"portfolio\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"starter-kit\\\",\\n         \\\"pwa-boilerplate\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"mezod\\\",\\n      \\\"email\\\": \\\"mezood@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"2129043_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"indie\\\",\\n         \\\"indiedev\\\",\\n         \\\"passive-income\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"awesome\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Smarty\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\",\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"sheonhan\\\",\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Sheon Han\\\",\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"effective-altruism\\\",\\n         \\\"philanthropy\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Jupyter Notebook\\\",\\n         \\\"Go\\\"\\n      ],\\n      \\\"name\\\": \\\"Sheon Han\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"m1guelpf\\\",\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"6386024_1.0\\\"\\n      ],\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"github_topics\\\": [\\n         \\\"php\\\",\\n         \\\"curl\\\",\\n         \\\"php-api\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"deployment\\\",\\n         \\\"mode\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Vue\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\",\\n      \\\"location\\\": \\\"Spain\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"davisonio\\\",\\n      \\\"email\\\": \\\"craig@davison.io\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"4034514_1.54\\\",\\n         \\\"6248437_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"text\\\",\\n         \\\"textures\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Lua\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"name\\\": \\\"Craig Davison\\\",\\n      \\\"location\\\": \\\"Hampshire, UK\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"vitalets\\\",\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\",\\n      \\\"stackoverflow_login\\\": \\\"vitalets\\\",\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"github_topics\\\": [\\n         \\\"smart-tv\\\",\\n         \\\"smarttv\\\",\\n         \\\"tizen\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"eventbus\\\",\\n         \\\"listener\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"PHP\\\",\\n         \\\"Perl\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\",\\n      \\\"location\\\": \\\"Moscow\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"mipmip\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"CSS\\\",\\n         \\\"AppleScript\\\"\\n      ],\\n      \\\"name\\\": \\\"Pim Snel\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"arbox\\\",\\n      \\\"email\\\": \\\"arbox@yandex.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Andrei Beliankou\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"ruby\\\",\\n         \\\"java\\\",\\n         \\\"interoperability\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"style\\\",\\n         \\\"tokenizer\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Pascal\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"Makefile\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"R\\\",\\n         \\\"Java\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"Forth\\\"\\n      ],\\n      \\\"name\\\": \\\"Andrei Beliankou\\\",\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"k4m4\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"k4m4\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"donations\\\",\\n         \\\"template\\\",\\n         \\\"website-template\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"tor\\\",\\n         \\\"terminal\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\",\\n      \\\"location\\\": \\\"Athens, Greece\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"analyticalmonk\\\",\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"927837_1.6\\\",\\n         \\\"1189078_1.07\\\"\\n      ],\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"github_topics\\\": [\\n         \\\"data-science-competition\\\",\\n         \\\"data-science\\\",\\n         \\\"r\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"castra\\\",\\n         \\\"ipython-notebook\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"R\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Shell\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"name\\\": \\\"Akash Tandon\\\",\\n      \\\"location\\\": \\\"India\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"faroit\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"python\\\",\\n         \\\"audio\\\",\\n         \\\"audio-player\\\",\\n         \\\"vuejs\\\",\\n         \\\"electron\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Vue\\\",\\n         \\\"Jupyter Notebook\\\"\\n      ],\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\",\\n      \\\"location\\\": \\\"Europe\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"RyanZim\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"RyanZim\\\",\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"github_topics\\\": [\\n         \\\"npm\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"nodejs\\\",\\n         \\\"js\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\"\\n      ],\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\",\\n      \\\"location\\\": \\\"East Earl, PA\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"RichardLitt\\\",\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"123048_2.38\\\"\\n      ],\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"github_topics\\\": [\\n         \\\"bear\\\",\\n         \\\"bears\\\",\\n         \\\"bearss\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"access\\\",\\n         \\\"poetry\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\"\\n      ],\\n      \\\"name\\\": \\\"Richard Littauer\\\",\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"victorlaerte\\\",\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1967345_1.23\\\",\\n         \\\"5314295_0.85\\\"\\n      ],\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"github_topics\\\": [\\n         \\\"android\\\",\\n         \\\"android-seed\\\",\\n         \\\"template\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"asynctask\\\",\\n         \\\"javafx\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Cucumber\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Swift\\\",\\n         \\\"Python\\\",\\n         \\\"Gherkin\\\",\\n         \\\"FreeMarker\\\"\\n      ],\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\",\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"xiaohanyu\\\",\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Xiao Hanyu\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"tikz\\\",\\n         \\\"latex\\\",\\n         \\\"tex\\\",\\n         \\\"shell\\\",\\n         \\\"fun\\\",\\n         \\\"imagemagick\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Common Lisp\\\",\\n         \\\"Lua\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"VimL\\\",\\n         \\\"CMake\\\"\\n      ],\\n      \\\"name\\\": \\\"Xiao Hanyu\\\",\\n      \\\"location\\\": \\\"Singapore\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"DavidLambauer\\\",\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"211772_3.71\\\",\\n         \\\"1216625_1.91\\\",\\n         \\\"1301510_2.14\\\"\\n      ],\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"magento2\\\",\\n         \\\"collection\\\",\\n         \\\"magento-2\\\",\\n         \\\"magento-extension\\\",\\n         \\\"php\\\",\\n         \\\"packages\\\",\\n         \\\"awesome-list\\\",\\n         \\\"documentation\\\",\\n         \\\"documentation-tool\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"XSLT\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"name\\\": \\\"DavidLamabuer\\\",\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"kevva\\\",\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"43843_2.33\\\",\\n         \\\"249862_3.33\\\"\\n      ],\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"github_topics\\\": [\\n         \\\"binary\\\",\\n         \\\"check\\\",\\n         \\\"nodejs\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"https\\\",\\n         \\\"tunnel\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\"\\n      ],\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\",\\n      \\\"location\\\": \\\"Sweden\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"MatthewVita\\\",\\n      \\\"email\\\": \\\"matthewvita@live.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Matthew Vita\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"hl7-parsing\\\",\\n         \\\"hl7-message\\\",\\n         \\\"hit\\\",\\n         \\\"healthcare\\\",\\n         \\\"hl7\\\",\\n         \\\"hl7-builder\\\",\\n         \\\"hapi\\\",\\n         \\\"emr\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Smarty\\\",\\n         \\\"VimL\\\"\\n      ],\\n      \\\"name\\\": \\\"Matthew Vita\\\",\\n      \\\"location\\\": \\\"Los Angeles, US\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"kud1ing\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"3310503_0.87\\\",\\n         \\\"6314864_0.74\\\",\\n         \\\"2053774_0.91\\\",\\n         \\\"984652_0.91\\\",\\n         \\\"1566699_0.87\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"rust\\\",\\n         \\\"jni\\\",\\n         \\\"java\\\",\\n         \\\"ffi\\\",\\n         \\\"tinkerpop\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Vim script\\\",\\n         \\\"Shell\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Rust\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"name\\\": null,\\n      \\\"location\\\": \\\"Germany, pretty central\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"jbmoelker\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"github_topics\\\": [\\n         \\\"svelte\\\",\\n         \\\"demo\\\",\\n         \\\"examples\\\",\\n         \\\"rollup\\\",\\n         \\\"postcss\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Java\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"name\\\": \\\"Jasper Moelker\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"email\\\": \\\"david@madeawkward.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1032656_0.93\\\",\\n         \\\"1781906_0.8\\\",\\n         \\\"2459318_0.8\\\"\\n      ],\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"github_topics\\\": [\\n         \\\"life\\\",\\n         \\\"personal\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Shell\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"name\\\": \\\"David van Leeuwen\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"qazbnm456\\\",\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1981340_1.33\\\",\\n         \\\"7919645_1.67\\\",\\n         \\\"2513085_2.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"cve\\\",\\n         \\\"poc\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\\n         \\\"security\\\",\\n         \\\"trivia\\\",\\n         \\\"treasure\\\",\\n         \\\"web\\\",\\n         \\\"websecurity\\\",\\n         \\\"penetration-testing\\\",\\n         \\\"vuejs2\\\",\\n         \\\"electron\\\",\\n         \\\"prototype\\\",\\n         \\\"docker\\\",\\n         \\\"wargame\\\",\\n         \\\"ctf\\\",\\n         \\\"rails\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Swift\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Hack\\\",\\n         \\\"Nginx\\\"\\n      ],\\n      \\\"name\\\": \\\"Boik\\\",\\n      \\\"location\\\": \\\"Taiwan\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"armaldio\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"7536780_1.33\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"website\\\",\\n         \\\"armaldio\\\",\\n         \\\"blog\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"construct2\\\",\\n         \\\"plugin\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"name\\\": \\\"Quentin Goinaud\\\",\\n      \\\"location\\\": \\\"France\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"mislavcimpersak\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"mislav\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"jokes\\\",\\n         \\\"fun\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"xkcd\\\",\\n         \\\"excuses\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"F#\\\",\\n         \\\"PHP\\\",\\n         \\\"Java\\\",\\n         \\\"Groovy\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Swift\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Scala\\\",\\n         \\\"C#\\\"\\n      ],\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\",\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"sjfricke\\\",\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"webgl-programming\\\",\\n         \\\"webgl-articles\\\",\\n         \\\"glsl-editors\\\",\\n         \\\"webgl-tutorials\\\",\\n         \\\"webgl\\\",\\n         \\\"learning-webgl\\\",\\n         \\\"webgl-references\\\",\\n         \\\"webgl-spec-sheet\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Cuda\\\",\\n         \\\"Objective-C\\\"\\n      ],\\n      \\\"name\\\": \\\"Spencer\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"quangv\\\",\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Quang Van\\\",\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"github_topics\\\": [\\n         \\\"couchdb\\\",\\n         \\\"cloudant\\\",\\n         \\\"couchdb-wiki\\\",\\n         \\\"best-practices\\\",\\n         \\\"couchdb-chat\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"VimL\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"name\\\": \\\"Quang Van\\\",\\n      \\\"location\\\": \\\"Central Mass.\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"kminek\\\",\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"markdown\\\",\\n         \\\"parser\\\",\\n         \\\"standard\\\",\\n         \\\"marklink\\\",\\n         \\\"sublime-text\\\",\\n         \\\"php\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"PHP\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Python\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"name\\\": \\\"Grzesiek W\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"pmatseykanets\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"71470_1.58\\\",\\n         \\\"133476_0.83\\\",\\n         \\\"178910_0.75\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"laravel\\\",\\n         \\\"laravel-package\\\",\\n         \\\"beanstalkd\\\",\\n         \\\"artisan-command\\\",\\n         \\\"import\\\",\\n         \\\"database\\\",\\n         \\\"eloquent\\\",\\n         \\\"queue\\\",\\n         \\\"laravel-scout\\\",\\n         \\\"postgresql\\\",\\n         \\\"postgres\\\",\\n         \\\"full-text-search\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Roff\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"name\\\": \\\"Peter Matseykanets\\\",\\n      \\\"location\\\": \\\"Columbia, MD\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"gdi2290\\\",\\n      \\\"email\\\": \\\"github@gdi2290.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"gdi2290\\\",\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Dart\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\",\\n      \\\"location\\\": \\\"San Francisco, CA\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"bouzlibop\\\",\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"39182_1.67\\\",\\n         \\\"420940_1.0\\\",\\n         \\\"451116_3.33\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"name\\\": \\\"Adrian Baran\\\",\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"BubuAnabelas\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"torrent\\\",\\n         \\\"p2p\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Perl\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"podo\\\",\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"775930_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"framer-prototype\\\",\\n         \\\"framer-studio\\\",\\n         \\\"framerjs\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"autocode\\\",\\n         \\\"video-course\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\",\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"terryum\\\",\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"705767_0.9\\\",\\n         \\\"1061092_0.8\\\"\\n      ],\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"github_topics\\\": [\\n         \\\"deep-learning\\\",\\n         \\\"deep-neural-networks\\\",\\n         \\\"machine-learning\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Matlab\\\",\\n         \\\"Python\\\",\\n         \\\"TeX\\\",\\n         \\\"Jupyter Notebook\\\"\\n      ],\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\",\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"LucasBassetti\\\",\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"31172_1.0\\\",\\n         \\\"53710_1.17\\\",\\n         \\\"330171_0.92\\\"\\n      ],\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"github_topics\\\": [\\n         \\\"archimate\\\",\\n         \\\"java\\\",\\n         \\\"plugin\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"spa\\\",\\n         \\\"documentation\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Web Ontology Language\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Cap'n Proto\\\"\\n      ],\\n      \\\"name\\\": \\\"Lucas Bassetti\\\",\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"TheJambo\\\",\\n      \\\"email\\\": \\\"james@james.am\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"2536666_1.0\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"testing\\\",\\n         \\\"tester\\\",\\n         \\\"naughty-strings\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CMake\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"HTML\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"name\\\": \\\"James Osborn\\\",\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"dar5hak\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1516870_1.0\\\",\\n         \\\"6714539_1.55\\\",\\n         \\\"7498139_1.73\\\",\\n         \\\"8058836_1.18\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"beautify\\\",\\n         \\\"typography\\\",\\n         \\\"yeoman-generator\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"TypeScript\\\",\\n         \\\"Gherkin\\\"\\n      ],\\n      \\\"name\\\": \\\"Darshak Parikh\\\",\\n      \\\"location\\\": \\\"Pune, India\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"aviaryan\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"614912_0.94\\\"\\n      ],\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"github_topics\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"alfred3-workflow\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"editor\\\",\\n         \\\"bot-editor\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Batchfile\\\",\\n         \\\"AutoHotkey\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"Go\\\",\\n         \\\"C\\\",\\n         \\\"C#\\\",\\n         \\\"Perl\\\",\\n         \\\"SourcePawn\\\"\\n      ],\\n      \\\"name\\\": \\\"Avi Aryan\\\",\\n      \\\"location\\\": \\\"Gandhinagar, India\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"petk\\\",\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"1484994_1.14\\\"\\n      ],\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"community\\\",\\n         \\\"groups\\\",\\n         \\\"dojo\\\",\\n         \\\"javascript\\\",\\n         \\\"awesome-list\\\",\\n         \\\"jquery\\\",\\n         \\\"php\\\",\\n         \\\"benchmark\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"XSLT\\\",\\n         \\\"PHP\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"ApacheConf\\\",\\n         \\\"Vue\\\"\\n      ],\\n      \\\"name\\\": \\\"Peter Kokot\\\",\\n      \\\"location\\\": \\\"Area 51\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"d3viant0ne\\\",\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"d3viant0ne\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"docker\\\",\\n         \\\"nodejs\\\",\\n         \\\"circleci\\\",\\n         \\\"debian-jessie\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"TypeScript\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Python\\\",\\n         \\\"Smarty\\\"\\n      ],\\n      \\\"name\\\": \\\"Joshua Wiens\\\",\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"terkelg\\\",\\n      \\\"email\\\": \\\"terkel@terkel.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"Terkel Gjervig\\\",\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"creative-coding\\\",\\n         \\\"interaction-design\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"boilerplate\\\",\\n         \\\"starter-kit\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"Lua\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vim script\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"GLSL\\\",\\n         \\\"Vue\\\"\\n      ],\\n      \\\"name\\\": \\\"Terkel\\\",\\n      \\\"location\\\": \\\"Los Angeles, CA\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"mischah\\\",\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"702783_1.0\\\"\\n      ],\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Ruby\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\",\\n      \\\"location\\\": \\\"Kassel, Germany\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"kasbah\\\",\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Arduino\\\",\\n         \\\"OpenSCAD\\\"\\n      ],\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"github_login\\\": \\\"JesseTG\\\",\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"JesseTG\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"qt-framework\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"c\\\",\\n         \\\"gpgpu\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"FreeMarker\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"M4\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"GLSL\\\",\\n         \\\"CMake\\\",\\n         \\\"Lua\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Mathematica\\\",\\n         \\\"C#\\\",\\n         \\\"Haxe\\\",\\n         \\\"TeX\\\",\\n         \\\"Cuda\\\",\\n         \\\"Processing\\\",\\n         \\\"Ruby\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\",\\n      \\\"location\\\": \\\"New York, NY\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"sger\\\",\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"798598_2.5\\\",\\n         \\\"3273271_2.0\\\",\\n         \\\"1058584_1.0\\\",\\n         \\\"5155563_9.57\\\"\\n      ],\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"github_topics\\\": [\\n         \\\"programming-elixir\\\",\\n         \\\"elixir\\\",\\n         \\\"programming-erlang\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"hash\\\",\\n         \\\"go-programming\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Elixir\\\",\\n         \\\"Swift\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\",\\n         \\\"Brainfuck\\\",\\n         \\\"C\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"VimL\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Makefile\\\",\\n         \\\"Erlang\\\",\\n         \\\"CSS\\\"\\n      ],\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\",\\n      \\\"location\\\": \\\"Athens\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"timofurrer\\\",\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"6855712_1.13\\\",\\n         \\\"5361882_0.93\\\"\\n      ],\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"vimrc\\\",\\n         \\\"vim-configuration\\\",\\n         \\\"personal\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"heartbeat\\\",\\n         \\\"device\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Tcl\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"C++\\\"\\n      ],\\n      \\\"name\\\": \\\"Timo Furrer\\\",\\n      \\\"location\\\": \\\"__switzerland__\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"harpribot\\\",\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\",\\n      \\\"stackoverflow_login\\\": \\\"harpribot\\\",\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"CMake\\\",\\n         \\\"C++\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"Scheme\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\",\\n      \\\"location\\\": \\\"Austin, TX\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"aliesbelik\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome-jmeter\\\",\\n         \\\"awesome\\\",\\n         \\\"jmeter\\\",\\n         \\\"jmeter-plugin\\\",\\n         \\\"load-testing\\\",\\n         \\\"performance-measurement\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"XSLT\\\",\\n         \\\"Groovy\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"M4\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"location\\\": \\\"Belarus\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"hbokh\\\",\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"2524858_0.81\\\",\\n         \\\"3739287_0.81\\\"\\n      ],\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"github_topics\\\": [\\n         \\\"saltstack\\\",\\n         \\\"configuration-management\\\",\\n         \\\"awesome-list\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"ansible-tutorial\\\",\\n         \\\"mysql-ha\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Standard ML\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Nginx\\\",\\n         \\\"VimL\\\",\\n         \\\"PHP\\\",\\n         \\\"Arduino\\\",\\n         \\\"SaltStack\\\"\\n      ],\\n      \\\"name\\\": \\\"Henk\\\",\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"websemantics\\\",\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"407743_1.0\\\",\\n         \\\"453026_0.87\\\",\\n         \\\"631942_1.6\\\"\\n      ],\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"github_topics\\\": [\\n         \\\"atom\\\",\\n         \\\"styleguide\\\",\\n         \\\"ui\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"web-scraping\\\",\\n         \\\"headless-chrome\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"PowerShell\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\",\\n      \\\"location\\\": \\\"Toronto, Canada\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"vors\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": [\\n         \\\"3629426_1.64\\\",\\n         \\\"6668673_1.91\\\"\\n      ],\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"github_language\\\": [\\n         \\\"Arduino\\\",\\n         \\\"AutoHotkey\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"PHP\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"name\\\": \\\"Sergei Vorobev\\\",\\n      \\\"location\\\": \\\"Seattle, WA\\\"\\n   },\\n   {\\n      \\\"github_login\\\": \\\"nicolesaidy\\\",\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"design\\\",\\n         \\\"webdesign\\\",\\n         \\\"ui-design\\\",\\n         \\\"ux-design\\\"\\n      ],\\n      \\\"github_language\\\": [\\n         \\\"VimL\\\",\\n         \\\"JavaScript\\\",\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"         \\\"ApacheConf\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"name\\\": \\\"Nicole Saidy\\\",\\n      \\\"location\\\": null\\n   }\\n]\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/__init__.py\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\\nimport requests\\n\\nimport Get_Info.get_info_git as gt\\nimport Get_Info.name_form as nf\\nfrom Get_Info import levenshtein as le\\n\\n\\ndef request_api(api):\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"from Get_Info import get_info_git as gt\\n\\n\\ndef name_form(name):\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"import json\\nimport time\\nimport requests\\nimport sys\\n\\nfrom Get_Info import get_info_git as gt\\n\\n\\ndef request_api(api):\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\\n\\nif __name__ == '__main__':\\n    Info_path = sys.path[0] + \\\"/Info\\\"\\n    info_file = Info_path + '/awesome_info.json'\\n    f = open(info_file, encoding='utf-8')\\n    git_info = json.load(f)\\n\",\n      \"commit_date\": [],\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"%aN\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"github_topics\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\\n         \\\"dark-mode\\\",\\n         \\\"alfred3-workflow\\\",\\n         \\\"applescript\\\",\\n         \\\"alfy\\\",\\n         \\\"npm-package\\\",\\n         \\\"emoji\\\",\\n         \\\"emoji-picker\\\",\\n         \\\"emoji-searcher\\\",\\n         \\\"nodejs\\\",\\n         \\\"lock\\\",\\n         \\\"c-language\\\",\\n         \\\"npm\\\",\\n         \\\"npms\\\",\\n         \\\"search\\\",\\n         \\\"search-engine\\\",\\n         \\\"alfred-theme\\\",\\n         \\\"theme\\\",\\n         \\\"simple\\\",\\n         \\\"minimalistic\\\",\\n         \\\"light\\\",\\n         \\\"framework\\\",\\n         \\\"javascript\\\",\\n         \\\"workflow\\\",\\n         \\\"ama\\\",\\n         \\\"ask-me-anything\\\",\\n         \\\"question-answering\\\",\\n         \\\"meta\\\",\\n         \\\"personal\\\",\\n         \\\"ask\\\",\\n         \\\"open-content\\\",\\n         \\\"questions\\\",\\n         \\\"answers\\\",\\n         \\\"questions-and-answers\\\",\\n         \\\"list\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"deprecated\\\",\\n         \\\"twitter\\\",\\n         \\\"electron\\\",\\n         \\\"electron-app\\\"\\n      ],\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"IDL\\\",\\n         \\\"Arduino\\\",\\n         \\\"Java\\\",\\n         \\\"Processing\\\",\\n         \\\"C\\\",\\n         \\\"Batchfile\\\",\\n         \\\"CMake\\\",\\n         \\\"Scheme\\\",\\n         \\\"GLSL\\\",\\n         \\\"Makefile\\\",\\n         \\\"Prolog\\\",\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"github_topics\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\\n         \\\"applications\\\",\\n         \\\"gnome-shell-extension\\\",\\n         \\\"gtk-theme\\\",\\n         \\\"css\\\",\\n         \\\"html\\\",\\n         \\\"bootstrap\\\",\\n         \\\"icons\\\",\\n         \\\"faenza\\\",\\n         \\\"linux\\\",\\n         \\\"bootstrap3\\\",\\n         \\\"css3\\\",\\n         \\\"html5\\\",\\n         \\\"education\\\",\\n         \\\"ressources-educatives\\\",\\n         \\\"logiciels\\\",\\n         \\\"libre\\\",\\n         \\\"culture-libre\\\"\\n      ],\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"github_topics\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"c\\\",\\n         \\\"linux\\\",\\n         \\\"linux-distribution\\\",\\n         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\"\\n      ],\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"location\\\": null,\\n      \\\"github_topics\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\\n         \\\"machine-learning\\\",\\n         \\\"curated-list\\\",\\n         \\\"coreml-framework\\\",\\n         \\\"coreml-models\\\",\\n         \\\"coremltools\\\",\\n         \\\"awesome-list\\\",\\n         \\\"models\\\",\\n         \\\"swift-framework\\\",\\n         \\\"swift3\\\",\\n         \\\"swift-library\\\",\\n         \\\"ios\\\",\\n         \\\"ios-swift\\\",\\n         \\\"ios-ui\\\",\\n         \\\"ios-animation\\\",\\n         \\\"ios-lib\\\",\\n         \\\"xib\\\",\\n         \\\"animation\\\"\\n      ],\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   }\\n]\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_try.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n    git_info = get_info(git_api)\\n    info_file = '/home/ace/zsj/Get_Info_previous/Info/awesome_match_5.json'\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(info_file, 'w') as ctfile:\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import re\\nimport time\\nimport urllib\\nimport urllib.error\\n\\nimport requests\\n\\nimport Get_Info_previous.get_info_git as gt\\nimport Get_Info_previous.name_form as nf\\nfrom Get_Info_previous import levenshtein as le\\n\\n\\ndef request_api(api):\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import json\\nimport os\\nimport sys\\nimport time\\nimport sys\\nfrom Get_Info import get_info_git as gt\\nfrom Get_Info import get_info_stackoverflow as st\\n\\nsys.path.append('/home/ace/zsj/GetInfo')\\nInfo_path = sys.path[0] + \\\"/Info\\\"\\nif not os.path.exists(Info_path):\\n    os.mkdir(Info_path)\\n\\nif sys.argv[1] == '--lt':\\n    name_file = Info_path + '/{}'.format(sys.argv[2])\\n    output_file = Info_path + '/{}'.format(sys.argv[3])\\n    name_list = open(name_file, encoding='utf-8')\\n    name_list = json.load(name_list)\\n    git_info = gt.search_info(name_list)\\n\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(output_file, 'w') as ctfile:\\n        json.dump(git_info, ctfile, indent=3)\\n    print(time.time() - cTime)\\n\\nelif sys.argv[1] == '--cm':\\n    # 'sindresorhus/awesome'\\n    git_api = 'https://api.github.com/repos/{}/commits'.format(sys.argv[2])\\n    git_info = gt.get_info(git_api)\\n    output_file = Info_path + '/{}'.format(sys.argv[3])\\n\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(output_file, 'w') as ctfile:\\n        json.dump(git_info, ctfile, indent=3)\\n    print(time.time() - cTime)\\n\\nelif sys.argv[1] == '--mp':\\n    info_file = Info_path + '/{}'.format(sys.argv[2])\\n    syn_file = Info_path + '/syn_list.json'\\n\\n    git_info = open(info_file, encoding='utf-8')\\n    syn_list = open(syn_file, encoding='utf-8')\\n    git_info = json.load(git_info)\\n    syn_list = json.load(syn_list)\\n    stk_count = total_count = 0\\n\\n    cTime = time.time()\\n    print(\\\"Matching developers between Github and Stack Overflow...\\\")\\n    match_info = st.match_account(git_info, syn_list)\\n    print(time.time() - cTime)\\n\\n    for item in match_info:\\n        if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n            stk_count = stk_count + 1\\n        total_count = total_count + 1\\n\\n    print(\\\"\\\\n The number of developers with Stack Overflow account is {}\\\".format(stk_count))\\n    print(\\\"The number of developers is {}\\\".format(total_count))\\n    print(\\\"Ratio:{}\\\".format(round(stk_count / total_count, 4)))\\n\\n    print(\\\"Saving the results of matching...\\\")\\n    cTime = time.time()\\n    file = Info_path + '/awesome_info_1.json'\\n    with open(info_file, 'w') as ctfile:\\n        json.dump(match_info, ctfile, indent=3)\\n    print(time.time() - cTime)\\n\\nelif sys.argv[1] == '--help':\\n    help = \\\"--lt  : python main.py --lt [input file] [output file]\\\\n\\\" \\\\\\n           \\\"        Dump the info of developers in the input name list\\\\n\\\" \\\\\\n           \\\"\\\\n\\\" \\\\\\n           \\\"--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file] \\\\n\\\" \\\\\\n           \\\"        Dump the developers' info in the commit history of input repo\\\\n\\\" \\\\\\n           \\\"\\\\n\\\" \\\\\\n           \\\"--mp  : python main.py --mp [file]\\\\n\\\" \\\\\\n           \\\"        Mapping between developers on github and Stack Overflow, but the info should be dumped first\\\"\\n    print(help)\\n\\n\\n\\n\\n\\n\\n\\n\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"from Get_Info_previous import get_info_git as gt\\n\\n\\ndef name_form(name):\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import json\\nimport time\\n\\nimport requests\\n\\nfrom Get_Info_previous import get_info_git as gt\\n\\n\\ndef request_api(api):\\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\\n    info = requests.get(api + app_key)\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n\\nif __name__ == '__main__':\\n    info_file = '/home/ace/zsj/Get_Info_previous/Info/awesome_info.json'\\n    f = open(info_file, encoding='utf-8')\\n    git_info = json.load(f)\\n\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n    print(\\\"Dumping the syn_list...\\\")\\n    cTime = time.time()\\n    file = '/home/ace/zsj/Get_Info_previous/Info/syn_list.json'\\n    with open(file, 'w') as ctfile:\\n        json.dump(syn_list, ctfile, indent=3)\\n    print(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-11 22:07:19 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"{\\n   \\\"os\\\": \\\"os\\\",\\n   \\\"construct2\\\": \\\"construct2\\\",\\n   \\\"Prolog\\\": \\\"prolog\\\",\\n   \\\"uncopyright\\\": \\\"uncopyright\\\",\\n   \\\"opengl\\\": \\\"opengl\\\",\\n   \\\"coreml-models\\\": \\\"coreml-models\\\",\\n   \\\"app\\\": \\\"app\\\",\\n   \\\"awesome-jmeter\\\": \\\"awesome-jmeter\\\",\\n   \\\"pyrocms\\\": \\\"pyrocms\\\",\\n   \\\"Awk\\\": \\\"awk\\\",\\n   \\\"access-land\\\": \\\"access-land\\\",\\n   \\\"search-engine\\\": \\\"search-engine\\\",\\n   \\\"brain\\\": \\\"brain\\\",\\n   \\\"alfred\\\": \\\"alfred\\\",\\n   \\\"node-module\\\": \\\"node-module\\\",\\n   \\\"web-scraping\\\": [\\n      \\\"webpagescraping\\\",\\n      \\\"web-scraping\\\"\\n   ],\\n   \\\"Pascal\\\": \\\"pascal\\\",\\n   \\\"services\\\": \\\"services\\\",\\n   \\\"zsh\\\": \\\"zsh\\\",\\n   \\\"arcticfox\\\": \\\"arcticfox\\\",\\n   \\\"nodemcu\\\": \\\"nodemcu\\\",\\n   \\\"life\\\": \\\"life\\\",\\n   \\\"chai\\\": \\\"chai\\\",\\n   \\\"php\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\\n      \\\"php-fpm\\\",\\n      \\\"php-session\\\",\\n      \\\"php-readfile\\\",\\n      \\\"php-functions\\\",\\n      \\\"php-cgi\\\",\\n      \\\"php-mail\\\",\\n      \\\"php-errors\\\",\\n      \\\"php-cli\\\",\\n      \\\"php.ini\\\",\\n      \\\"hypertext-preprocessor\\\",\\n      \\\"php-frameworks\\\",\\n      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\",\\n      \\\"php\\\"\\n   ],\\n   \\\"typography\\\": \\\"typography\\\",\\n   \\\"lm\\\": \\\"lm\\\",\\n   \\\"meta\\\": \\\"meta\\\",\\n   \\\"eta\\\": \\\"eta\\\",\\n   \\\"poc\\\": \\\"poc\\\",\\n   \\\"excuses\\\": \\\"excuses\\\",\\n   \\\"Smarty\\\": \\\"smarty\\\",\\n   \\\"pwa\\\": \\\"pwa\\\",\\n   \\\"presentation\\\": \\\"presentation\\\",\\n   \\\"pubsub\\\": \\\"pubsub\\\",\\n   \\\"animation\\\": [\\n      \\\"scaleanimation\\\",\\n      \\\"rotateanimation\\\",\\n      \\\"animated\\\",\\n      \\\"animations\\\",\\n      \\\"animation\\\"\\n   ],\\n   \\\"sublime-text\\\": \\\"sublime-text\\\",\\n   \\\"ui-design\\\": \\\"ui-design\\\",\\n   \\\"vagrant\\\": \\\"vagrant\\\",\\n   \\\"pandas\\\": \\\"pandas\\\",\\n   \\\"smarthome\\\": \\\"smarthome\\\",\\n   \\\"twitter-bot\\\": \\\"twitter-bot\\\",\\n   \\\"ssr\\\": \\\"ssr\\\",\\n   \\\"background-jobs\\\": \\\"background-jobs\\\",\\n   \\\"portableapps\\\": \\\"portableapps\\\",\\n   \\\"craft-plugin\\\": \\\"craft-plugin\\\",\\n   \\\"apple-tv\\\": \\\"apple-tv\\\",\\n   \\\"coreml\\\": \\\"coreml\\\",\\n   \\\"Vim script\\\": \\\"vim script\\\",\\n   \\\"PLpgSQL\\\": \\\"plpgsql\\\",\\n   \\\"devops-services\\\": \\\"devops-services\\\",\\n   \\\"webrtc\\\": \\\"webrtc\\\",\\n   \\\"linux\\\": \\\"linux\\\",\\n   \\\"applescript\\\": \\\"applescript\\\",\\n   \\\"apple\\\": \\\"apple\\\",\\n   \\\"print\\\": \\\"print\\\",\\n   \\\"homematic\\\": \\\"homematic\\\",\\n   \\\"clipboard\\\": \\\"clipboard\\\",\\n   \\\"laravel-package\\\": \\\"laravel-package\\\",\\n   \\\"devops-tools\\\": \\\"devops-tools\\\",\\n   \\\"article\\\": \\\"article\\\",\\n   \\\"groups\\\": \\\"groups\\\",\\n   \\\"decode\\\": \\\"decode\\\",\\n   \\\"desktop-environment\\\": \\\"desktop-environment\\\",\\n   \\\"talk\\\": \\\"talk\\\",\\n   \\\"datascience\\\": \\\"datascience\\\",\\n   \\\"philanthropy\\\": \\\"philanthropy\\\",\\n   \\\"alfred-theme\\\": \\\"alfred-theme\\\",\\n   \\\"DTrace\\\": \\\"dtrace\\\",\\n   \\\"docker\\\": \\\"docker\\\",\\n   \\\"blaze\\\": \\\"blaze\\\",\\n   \\\"p2p\\\": [\\n      \\\"peer-to-peer\\\",\\n      \\\"p2p\\\"\\n   ],\\n   \\\"gnome\\\": \\\"gnome\\\",\\n   \\\"synonyms\\\": \\\"synonyms\\\",\\n   \\\"event-emitter\\\": \\\"event-emitter\\\",\\n   \\\"SaltStack\\\": \\\"saltstack\\\",\\n   \\\"msr\\\": \\\"msr\\\",\\n   \\\"alfy\\\": \\\"alfy\\\",\\n   \\\"GLSL\\\": \\\"glsl\\\",\\n   \\\"linux-distribution\\\": \\\"linux-distribution\\\",\\n   \\\"tasks\\\": \\\"tasks\\\",\\n   \\\"buddypress\\\": \\\"buddypress\\\",\\n   \\\"eloquent\\\": \\\"eloquent\\\",\\n   \\\"OpenSCAD\\\": \\\"openscad\\\",\\n   \\\"coremltools\\\": \\\"coremltools\\\",\\n   \\\"launchpad\\\": \\\"launchpad\\\",\\n   \\\"rust\\\": \\\"rust\\\",\\n   \\\"tester\\\": \\\"tester\\\",\\n   \\\"github\\\": \\\"github\\\",\\n   \\\"qt-framework\\\": \\\"qt-framework\\\",\\n   \\\"natural-language-processing\\\": \\\"natural-language-processing\\\",\\n   \\\"mods\\\": \\\"mods\\\",\\n   \\\"crabgrass\\\": \\\"crabgrass\\\",\\n   \\\"craig-server-game\\\": \\\"craig-server-game\\\",\\n   \\\"github-io\\\": \\\"github-io\\\",\\n   \\\"github-page\\\": \\\"github-page\\\",\\n   \\\"webgl-tutorials\\\": \\\"webgl-tutorials\\\",\\n   \\\"type-safety\\\": \\\"type-safety\\\",\\n   \\\"math-library\\\": \\\"math-library\\\",\\n   \\\"swift3\\\": [\\n      \\\"swift3.1\\\",\\n      \\\"swift3.0.2\\\",\\n      \\\"swift3.0.1\\\",\\n      \\\"swift3.0\\\",\\n      \\\"swift3\\\"\\n   ],\\n   \\\"loaders\\\": \\\"loaders\\\",\\n   \\\"android-seed\\\": \\\"android-seed\\\",\\n   \\\"https\\\": \\\"https\\\",\\n   \\\"purge\\\": \\\"purge\\\",\\n   \\\"clear\\\": \\\"clear\\\",\\n   \\\"eventemitter\\\": \\\"eventemitter\\\",\\n   \\\"github-bot\\\": \\\"github-bot\\\",\\n   \\\"davisonio\\\": \\\"davisonio\\\",\\n   \\\"0xacab\\\": \\\"0xacab\\\",\\n   \\\"slides\\\": \\\"slides\\\",\\n   \\\"Standard ML\\\": \\\"standard ml\\\",\\n   \\\"nlp\\\": [\\n      \\\"language-processing\\\",\\n      \\\"computational-linguistics\\\",\\n      \\\"natural-language\\\",\\n      \\\"natural-language-process\\\",\\n      \\\"nlp\\\"\\n   ],\\n   \\\"Java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\\n      \\\"jdk\\\",\\n      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\",\\n      \\\"java\\\"\\n   ],\\n   \\\"land\\\": \\\"land\\\",\\n   \\\"Perl\\\": \\\"perl\\\",\\n   \\\"budget-manager\\\": \\\"budget-manager\\\",\\n   \\\"benchmark\\\": \\\"benchmark\\\",\\n   \\\"financial-independence\\\": \\\"financial-independence\\\",\\n   \\\"code\\\": \\\"code\\\",\\n   \\\"less\\\": [\\n      \\\"lesscss\\\",\\n      \\\"less\\\"\\n   ],\\n   \\\"elixir-school\\\": \\\"elixir-school\\\",\\n   \\\"jekyll\\\": \\\"jekyll\\\",\\n   \\\"linux-kernel\\\": \\\"linux-kernel\\\",\\n   \\\"fsf\\\": \\\"fsf\\\",\\n   \\\"buzzer\\\": \\\"buzzer\\\",\\n   \\\"TypeScript\\\": \\\"typescript\\\",\\n   \\\"awesomeness\\\": \\\"awesomeness\\\",\\n   \\\"educational\\\": \\\"educational\\\",\\n   \\\"numerical-calculations\\\": \\\"numerical-calculations\\\",\\n   \\\"OpenEdge ABL\\\": \\\"openedge abl\\\",\\n   \\\"gbm\\\": \\\"gbm\\\",\\n   \\\"making-games\\\": \\\"making-games\\\",\\n   \\\"dsl\\\": [\\n      \\\"domain-specific-languages\\\",\\n      \\\"dsl\\\"\\n   ],\\n   \\\"questions-and-answers\\\": \\\"questions-and-answers\\\",\\n   \\\"Meson\\\": \\\"meson\\\",\\n   \\\"models\\\": \\\"models\\\",\\n   \\\"Scheme\\\": \\\"scheme\\\",\\n   \\\"dumb\\\": \\\"dumb\\\",\\n   \\\"Protocol Buffer\\\": \\\"protocol buffer\\\",\\n   \\\"macosx\\\": \\\"macosx\\\",\\n   \\\"lecture\\\": \\\"lecture\\\",\\n   \\\"audio\\\": [\\n      \\\"sounds\\\",\\n      \\\"sound-api\\\",\\n      \\\"sound\\\",\\n      \\\"audio\\\"\\n   ],\\n   \\\"dropbox-v2\\\": \\\"dropbox-v2\\\",\\n   \\\"learn\\\": \\\"learn\\\",\\n   \\\"data-science-competition\\\": \\\"data-science-competition\\\",\\n   \\\"screen-brightness\\\": \\\"screen-brightness\\\",\\n   \\\"torrent\\\": \\\"torrent\\\",\\n   \\\"stringtools\\\": \\\"stringtools\\\",\\n   \\\"software-freedom\\\": \\\"software-freedom\\\",\\n   \\\"fault-tolerance\\\": \\\"fault-tolerance\\\",\\n   \\\"log\\\": \\\"log\\\",\\n   \\\"webpack\\\": \\\"webpack\\\",\\n   \\\"readme\\\": \\\"readme\\\",\\n   \\\"ansible-tips\\\": \\\"ansible-tips\\\",\\n   \\\"unit\\\": \\\"unit\\\",\\n   \\\"Mako\\\": \\\"mako\\\",\\n   \\\"apns2\\\": \\\"apns2\\\",\\n   \\\"machine-learning\\\": \\\"machine-learning\\\",\\n   \\\"minimalist\\\": \\\"minimalist\\\",\\n   \\\"codeforces\\\": \\\"codeforces\\\",\\n   \\\"trump\\\": \\\"trump\\\",\\n   \\\"application\\\": \\\"application\\\",\\n   \\\"data-mining\\\": \\\"data-mining\\\",\\n   \\\"gtk-theme\\\": \\\"gtk-theme\\\",\\n   \\\"alfred-3\\\": \\\"alfred-3\\\",\\n   \\\"pixel-art\\\": \\\"pixel-art\\\",\\n   \\\"curl\\\": \\\"curl\\\",\\n   \\\"PigLatin\\\": \\\"piglatin\\\",\\n   \\\"Jupyter Notebook\\\": \\\"jupyter notebook\\\",\\n   \\\"events\\\": [\\n      \\\"event\\\",\\n      \\\"events\\\"\\n   ],\\n   \\\"webgl-spec-sheet\\\": \\\"webgl-spec-sheet\\\",\\n   \\\"html\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\",\\n      \\\"html\\\"\\n   ],\\n   \\\"cache\\\": \\\"cache\\\",\\n   \\\"www\\\": \\\"www\\\",\\n   \\\"effective-altruism\\\": \\\"effective-altruism\\\",\\n   \\\"haskell\\\": \\\"haskell\\\",\\n   \\\"btc\\\": \\\"btc\\\",\\n   \\\"ibge\\\": \\\"ibge\\\",\\n   \\\"home-automation\\\": \\\"home-automation\\\",\\n   \\\"Cucumber\\\": \\\"cucumber\\\",\\n   \\\"platform-game\\\": \\\"platform-game\\\",\\n   \\\"Batchfile\\\": \\\"batchfile\\\",\\n   \\\"ui\\\": \\\"ui\\\",\\n   \\\"tutorial\\\": \\\"tutorial\\\",\\n   \\\"beautify\\\": \\\"beautify\\\",\\n   \\\"wikipedia\\\": \\\"wikipedia\\\",\\n   \\\"chatbot\\\": \\\"chatbot\\\",\\n   \\\"LLVM\\\": \\\"llvm\\\",\\n   \\\"programming-elixir\\\": \\\"programming-elixir\\\",\\n   \\\"tags\\\": [\\n      \\\"tag\\\",\\n      \\\"tags\\\"\\n   ],\\n   \\\"github-api\\\": \\\"github-api\\\",\\n   \\\"string-manipulation\\\": \\\"string-manipulation\\\",\\n   \\\"coroutines\\\": \\\"coroutines\\\",\\n   \\\"buddhism\\\": \\\"buddhism\\\",\\n   \\\"emoji\\\": \\\"emoji\\\",\\n   \\\"dictionary\\\": [\\n      \\\"map\\\",\\n      \\\"dictionaries\\\",\\n      \\\"dict\\\",\\n      \\\"dictionary\\\"\\n   ],\\n   \\\"physical-security\\\": \\\"physical-security\\\",\\n   \\\"darkage-mod\\\": \\\"darkage-mod\\\",\\n   \\\"education\\\": \\\"education\\\",\\n   \\\"vim\\\": [\\n      \\\"viml\\\",\\n      \\\"vimscript\\\",\\n      \\\"gvim\\\",\\n      \\\"gvimrc\\\",\\n      \\\"vimrc\\\",\\n      \\\"vim\\\"\\n   ],\\n   \\\"Mercury\\\": \\\"mercury\\\",\\n   \\\"deployment\\\": [\\n      \\\"deploy\\\",\\n      \\\"deployment\\\"\\n   ],\\n   \\\"M4\\\": \\\"m4\\\",\\n   \\\"dna-chipsets\\\": \\\"dna-chipsets\\\",\\n   \\\"chromecast\\\": \\\"chromecast\\\",\\n   \\\"framework\\\": \\\"framework\\\",\\n   \\\"promises\\\": \\\"promises\\\",\\n   \\\"Haxe\\\": \\\"haxe\\\",\\n   \\\"search\\\": [\\n      \\\"searching\\\",\\n      \\\"search\\\"\\n   ],\\n   \\\"elixir-dropbox\\\": \\\"elixir-dropbox\\\",\\n   \\\"contest\\\": \\\"contest\\\",\\n   \\\"engineering-managers\\\": \\\"engineering-managers\\\",\\n   \\\"channels\\\": \\\"channels\\\",\\n   \\\"python3\\\": \\\"python3\\\",\\n   \\\"html5-filesystem-api\\\": \\\"html5-filesystem-api\\\",\\n   \\\"electron-app\\\": \\\"electron-app\\\",\\n   \\\"XQuery\\\": \\\"xquery\\\",\\n   \\\"interaction-design\\\": \\\"interaction-design\\\",\\n   \\\"twitter\\\": [\\n      \\\"twitter-api\\\",\\n      \\\"twitter\\\"\\n   ],\\n   \\\"music\\\": \\\"music\\\",\\n   \\\"ApacheConf\\\": \\\"apacheconf\\\",\\n   \\\"csv2json\\\": \\\"csv2json\\\",\\n   \\\"documentation\\\": [\\n      \\\"docs\\\",\\n      \\\"documentation\\\"\\n   ],\\n   \\\"slice\\\": [\\n      \\\"string-slice\\\",\\n      \\\"array-slice\\\",\\n      \\\"slices\\\",\\n      \\\"slicing\\\",\\n      \\\"slice\\\"\\n   ],\\n   \\\"framerjs\\\": \\\"framerjs\\\",\\n   \\\"minify\\\": [\\n      \\\"minification\\\",\\n      \\\"minifier\\\",\\n      \\\"minify\\\"\\n   ],\\n   \\\"GCC Machine Description\\\": \\\"gcc machine description\\\",\\n   \\\"ColdFusion\\\": \\\"coldfusion\\\",\\n   \\\"ramme\\\": \\\"ramme\\\",\\n   \\\"apc\\\": \\\"apc\\\",\\n   \\\"imgur\\\": \\\"imgur\\\",\\n   \\\"framer-resources\\\": \\\"framer-resources\\\",\\n   \\\"ppa\\\": \\\"ppa\\\",\\n   \\\"jokes\\\": \\\"jokes\\\",\\n   \\\"picking-locks\\\": \\\"picking-locks\\\",\\n   \\\"dilmes-ipsum\\\": \\\"dilmes-ipsum\\\",\\n   \\\"JavaScript\\\": [\\n      \\\"javascript-module\\\",\\n      \\\"vanilla-javascript\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\",\\n      \\\"javascript\\\"\\n   ],\\n   \\\"conversational-ui\\\": \\\"conversational-ui\\\",\\n   \\\"joke\\\": \\\"joke\\\",\\n   \\\"data-structures\\\": [\\n      \\\"data-structure\\\",\\n      \\\"data-structures\\\"\\n   ],\\n   \\\"mooc\\\": \\\"mooc\\\",\\n   \\\"math-snippets\\\": \\\"math-snippets\\\",\\n   \\\"learning-webgl\\\": \\\"learning-webgl\\\",\\n   \\\"type-token-ratio\\\": \\\"type-token-ratio\\\",\\n   \\\"lua\\\": \\\"lua\\\",\\n   \\\"OCaml\\\": \\\"ocaml\\\",\\n   \\\"bear\\\": \\\"bear\\\",\\n   \\\"cpu\\\": \\\"cpu\\\",\\n   \\\"ios-animation\\\": \\\"ios-animation\\\",\\n   \\\"brute-force\\\": \\\"brute-force\\\",\\n   \\\"react-native\\\": \\\"react-native\\\",\\n   \\\"PureBasic\\\": \\\"purebasic\\\",\\n   \\\"Clojure\\\": [\\n      \\\"cljx\\\",\\n      \\\"cljc\\\",\\n      \\\"clj\\\",\\n      \\\"clojure\\\"\\n   ],\\n   \\\"rubyml\\\": \\\"rubyml\\\",\\n   \\\"kennethreitz\\\": \\\"kennethreitz\\\",\\n   \\\"mobile\\\": \\\"mobile\\\",\\n   \\\"camo\\\": \\\"camo\\\",\\n   \\\"deep-learning\\\": \\\"deep-learning\\\",\\n   \\\"bricks\\\": \\\"bricks\\\",\\n   \\\"trump-ipsum\\\": \\\"trump-ipsum\\\",\\n   \\\"laravel-scout\\\": \\\"laravel-scout\\\",\\n   \\\"webtorrent\\\": \\\"webtorrent\\\",\\n   \\\"imgur-uploader\\\": \\\"imgur-uploader\\\",\\n   \\\"trivia\\\": \\\"trivia\\\",\\n   \\\"dark-mode\\\": \\\"dark-mode\\\",\\n   \\\"snakemake\\\": \\\"snakemake\\\",\\n   \\\"uncss\\\": \\\"uncss\\\",\\n   \\\"c\\\": \\\"c\\\",\\n   \\\"GAP\\\": \\\"gap\\\",\\n   \\\"counter-strike\\\": \\\"counter-strike\\\",\\n   \\\"Forth\\\": \\\"forth\\\",\\n   \\\"generator\\\": [\\n      \\\"generators\\\",\\n      \\\"generator\\\"\\n   ],\\n   \\\"modular\\\": \\\"modular\\\",\\n   \\\"circleci\\\": \\\"circleci\\\",\\n   \\\"transliteration\\\": \\\"transliteration\\\",\\n   \\\"configuration-management\\\": \\\"configuration-management\\\",\\n   \\\"cc0\\\": \\\"cc0\\\",\\n   \\\"testing\\\": [\\n      \\\"test\\\",\\n      \\\"tests\\\",\\n      \\\"software-testing\\\",\\n      \\\"testing\\\"\\n   ],\\n   \\\"free-software\\\": \\\"free-software\\\",\\n   \\\"process-manager\\\": \\\"process-manager\\\",\\n   \\\"xib\\\": \\\"xib\\\",\\n   \\\"Assembly\\\": [\\n      \\\"assembly-language\\\",\\n      \\\"assembler\\\",\\n      \\\"asm\\\",\\n      \\\"assembly\\\"\\n   ],\\n   \\\"lorem\\\": \\\"lorem\\\",\\n   \\\"ruby-gem\\\": \\\"ruby-gem\\\",\\n   \\\"cdf\\\": \\\"cdf\\\",\\n   \\\"magento-extension\\\": \\\"magento-extension\\\",\\n   \\\"https-agents\\\": \\\"https-agents\\\",\\n   \\\"notification-service\\\": \\\"notification-service\\\",\\n   \\\"hl7-builder\\\": \\\"hl7-builder\\\",\\n   \\\"bundle\\\": \\\"bundle\\\",\\n   \\\"plaintext-accounting\\\": \\\"plaintext-accounting\\\",\\n   \\\"Web Ontology Language\\\": \\\"web ontology language\\\",\\n   \\\"minimalistic\\\": \\\"minimalistic\\\",\\n   \\\"donations\\\": \\\"donations\\\",\\n   \\\"tunnel\\\": \\\"tunnel\\\",\\n   \\\"books\\\": \\\"books\\\",\\n   \\\"Groovy\\\": \\\"groovy\\\",\\n   \\\"i18n\\\": \\\"i18n\\\",\\n   \\\"telekom\\\": \\\"telekom\\\",\\n   \\\"environment\\\": \\\"environment\\\",\\n   \\\"petition\\\": \\\"petition\\\",\\n   \\\"binary\\\": [\\n      \\\"binary-system\\\",\\n      \\\"binary-number\\\",\\n      \\\"binary\\\"\\n   ],\\n   \\\"http\\\": \\\"http\\\",\\n   \\\"power\\\": \\\"power\\\",\\n   \\\"computational-linguistics\\\": \\\"computational-linguistics\\\",\\n   \\\"windows\\\": [\\n      \\\"windows-application\\\",\\n      \\\"windows-programming\\\",\\n      \\\"windows\\\"\\n   ],\\n   \\\"drone-ci\\\": \\\"drone-ci\\\",\\n   \\\"NSIS\\\": \\\"nsis\\\",\\n   \\\"toolbox\\\": \\\"toolbox\\\",\\n   \\\"framer-prototype\\\": \\\"framer-prototype\\\",\\n   \\\"dhamma\\\": \\\"dhamma\\\",\\n   \\\"SourcePawn\\\": \\\"sourcepawn\\\",\\n   \\\"laravel\\\": \\\"laravel\\\",\\n   \\\"dask\\\": \\\"dask\\\",\\n   \\\"jni\\\": [\\n      \\\"java-native-interface\\\",\\n      \\\"jni\\\"\\n   ],\\n   \\\"penetration-testing\\\": [\\n      \\\"pen-testing\\\",\\n      \\\"penetration-testing\\\"\\n   ],\\n   \\\"umbrella\\\": \\\"umbrella\\\",\\n   \\\"icons\\\": [\\n      \\\"icon\\\",\\n      \\\"icons\\\"\\n   ],\\n   \\\"portfolio\\\": \\\"portfolio\\\",\\n   \\\"icinga\\\": \\\"icinga\\\",\\n   \\\"filesystem-api\\\": \\\"filesystem-api\\\",\\n   \\\"threejs\\\": \\\"threejs\\\",\\n   \\\"cd\\\": \\\"cd\\\",\\n   \\\"pentaho\\\": \\\"pentaho\\\",\\n   \\\"darkage\\\": \\\"darkage\\\",\\n   \\\"emoji-searcher\\\": \\\"emoji-searcher\\\",\\n   \\\"aviaryan\\\": \\\"aviaryan\\\",\\n   \\\"speedport\\\": \\\"speedport\\\",\\n   \\\"hash\\\": [\\n      \\\"hashes\\\",\\n      \\\"hashing\\\",\\n      \\\"hash\\\"\\n   ],\\n   \\\"deep-web\\\": \\\"deep-web\\\",\\n   \\\"development-workflow\\\": \\\"development-workflow\\\",\\n   \\\"sublime\\\": \\\"sublime\\\",\\n   \\\"typo3\\\": \\\"typo3\\\",\\n   \\\"SQLPL\\\": \\\"sqlpl\\\",\\n   \\\"Go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\",\\n      \\\"go\\\"\\n   ],\\n   \\\"chromium\\\": \\\"chromium\\\",\\n   \\\"smarttv\\\": \\\"smarttv\\\",\\n   \\\"no-login\\\": \\\"no-login\\\",\\n   \\\"bot\\\": \\\"bot\\\",\\n   \\\"sexy-lists\\\": \\\"sexy-lists\\\",\\n   \\\"ubuntu\\\": [\\n      \\\"lubuntu\\\",\\n      \\\"kubuntu\\\",\\n      \\\"xubuntu\\\",\\n      \\\"ubuntu\\\"\\n   ],\\n   \\\"passive-income\\\": \\\"passive-income\\\",\\n   \\\"listener\\\": \\\"listener\\\",\\n   \\\"es2015\\\": \\\"es2015\\\",\\n   \\\"heartbeat\\\": \\\"heartbeat\\\",\\n   \\\"algorithmen\\\": \\\"algorithmen\\\",\\n   \\\"ant\\\": [\\n      \\\"apache-ant\\\",\\n      \\\"ant\\\"\\n   ],\\n   \\\"mocha\\\": \\\"mocha\\\",\\n   \\\"GDB\\\": \\\"gdb\\\",\\n   \\\"utilities\\\": \\\"utilities\\\",\\n   \\\"hslu\\\": \\\"hslu\\\",\\n   \\\"gnu\\\": \\\"gnu\\\",\\n   \\\"gpgpu\\\": \\\"gpgpu\\\",\\n   \\\"clipjump\\\": \\\"clipjump\\\",\\n   \\\"open-content\\\": \\\"open-content\\\",\\n   \\\"web-extension\\\": \\\"web-extension\\\",\\n   \\\"web\\\": [\\n      \\\"www\\\",\\n      \\\"web\\\"\\n   ],\\n   \\\"magento2\\\": \\\"magento2\\\",\\n   \\\"Logtalk\\\": \\\"logtalk\\\",\\n   \\\"queue\\\": \\\"queue\\\",\\n   \\\"yeoman-generator\\\": \\\"yeoman-generator\\\",\\n   \\\"bots\\\": [\\n      \\\"bot\\\",\\n      \\\"bots\\\"\\n   ],\\n   \\\"npm-package\\\": \\\"npm-package\\\",\\n   \\\"sideproject\\\": \\\"sideproject\\\",\\n   \\\"Groff\\\": \\\"groff\\\",\\n   \\\"filter\\\": [\\n      \\\"filters\\\",\\n      \\\"filter\\\"\\n   ],\\n   \\\"graphics-engine\\\": \\\"graphics-engine\\\",\\n   \\\"magento-2\\\": \\\"magento-2\\\",\\n   \\\"kanban\\\": \\\"kanban\\\",\\n   \\\"Elixir\\\": [\\n      \\\"elixir-lang\\\",\\n      \\\"elixir\\\"\\n   ],\\n   \\\"bittorrent\\\": \\\"bittorrent\\\",\\n   \\\"HCL\\\": \\\"hcl\\\",\\n   \\\"prometheus\\\": \\\"prometheus\\\",\\n   \\\"api-client\\\": \\\"api-client\\\",\\n   \\\"swipe-gestures\\\": \\\"swipe-gestures\\\",\\n   \\\"number\\\": \\\"number\\\",\\n   \\\"javafx\\\": \\\"javafx\\\",\\n   \\\"cdn\\\": \\\"cdn\\\",\\n   \\\"webgl\\\": \\\"webgl\\\",\\n   \\\"commonmark\\\": \\\"commonmark\\\",\\n   \\\"atom-package\\\": \\\"atom-package\\\",\\n   \\\"apollo\\\": \\\"apollo\\\",\\n   \\\"Yacc\\\": \\\"yacc\\\",\\n   \\\"cryptocurrency\\\": \\\"cryptocurrency\\\",\\n   \\\"latex\\\": \\\"latex\\\",\\n   \\\"matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\",\\n      \\\"matlab\\\"\\n   ],\\n   \\\"apollo-server\\\": \\\"apollo-server\\\",\\n   \\\"fonsole\\\": \\\"fonsole\\\",\\n   \\\"programming-erlang\\\": \\\"programming-erlang\\\",\\n   \\\"parser\\\": \\\"parser\\\",\\n   \\\"pure-css\\\": \\\"pure-css\\\",\\n   \\\"datenstrukturen\\\": \\\"datenstrukturen\\\",\\n   \\\"swift-framework\\\": \\\"swift-framework\\\",\\n   \\\"tilt-sensor\\\": \\\"tilt-sensor\\\",\\n   \\\"faenza\\\": \\\"faenza\\\",\\n   \\\"ansible-demo\\\": \\\"ansible-demo\\\",\\n   \\\"css\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"cascading-style-sheet\\\",\\n      \\\"css\\\"\\n   ],\\n   \\\"zappa\\\": \\\"zappa\\\",\\n   \\\"math\\\": [\\n      \\\"arithmetic\\\",\\n      \\\"mathematical\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"mathematics\\\",\\n      \\\"math\\\"\\n   ],\\n   \\\"faas\\\": \\\"faas\\\",\\n   \\\"chrome-extension\\\": \\\"chrome-extension\\\",\\n   \\\"xkcd\\\": \\\"xkcd\\\",\\n   \\\"gpl\\\": \\\"gpl\\\",\\n   \\\"stream\\\": [\\n      \\\"streams\\\",\\n      \\\"stream\\\"\\n   ],\\n   \\\"arpa\\\": \\\"arpa\\\",\\n   \\\"bot-editor\\\": \\\"bot-editor\\\",\\n   \\\"learning-java\\\": \\\"learning-java\\\",\\n   \\\"webpack2\\\": \\\"webpack2\\\",\\n   \\\"culture-libre\\\": \\\"culture-libre\\\",\\n   \\\"rails\\\": \\\"rails\\\",\\n   \\\"ios-ui\\\": \\\"ios-ui\\\",\\n   \\\"otp\\\": \\\"otp\\\",\\n   \\\"giphy\\\": \\\"giphy\\\",\\n   \\\"homegear\\\": \\\"homegear\\\",\\n   \\\"answers\\\": \\\"answers\\\",\\n   \\\"eth\\\": \\\"eth\\\",\\n   \\\"cli\\\": \\\"cli\\\",\\n   \\\"html5\\\": [\\n      \\\"time-tag\\\",\\n      \\\"xhtml5\\\",\\n      \\\"html5\\\"\\n   ],\\n   \\\"sublime-text-package\\\": \\\"sublime-text-package\\\",\\n   \\\"bash\\\": [\\n      \\\"bash-function\\\",\\n      \\\".bash-profile\\\",\\n      \\\"bash-variables\\\",\\n      \\\"bash-alias\\\",\\n      \\\".bashrc\\\",\\n      \\\"bashrc\\\",\\n      \\\"bash-script\\\",\\n      \\\"bash\\\"\\n   ],\\n   \\\"XSLT\\\": [\\n      \\\"xml-transform\\\",\\n      \\\"xslt-2.0-processors\\\",\\n      \\\"xsltprocessor\\\",\\n      \\\"xsltproc\\\",\\n      \\\"xsltransform\\\",\\n      \\\"xsl\\\",\\n      \\\"xslt\\\"\\n   ],\\n   \\\"tex\\\": \\\"tex\\\",\\n   \\\"Elm\\\": \\\"elm\\\",\\n   \\\"Scilab\\\": \\\"scilab\\\",\\n   \\\"travis-torrent\\\": \\\"travis-torrent\\\",\\n   \\\"Lua\\\": \\\"lua\\\",\\n   \\\"plaintext\\\": \\\"plaintext\\\",\\n   \\\"questions\\\": [\\n      \\\"question\\\",\\n      \\\"questions\\\"\\n   ],\\n   \\\"craft\\\": \\\"craft\\\",\\n   \\\"beancount\\\": \\\"beancount\\\",\\n   \\\"minetest-subgame\\\": \\\"minetest-subgame\\\",\\n   \\\"golang\\\": \\\"golang\\\",\\n   \\\"load-testing\\\": [\\n      \\\"loadtest\\\",\\n      \\\"load-testing\\\"\\n   ],\\n   \\\"bitcoin\\\": \\\"bitcoin\\\",\\n   \\\"demo\\\": \\\"demo\\\",\\n   \\\"mirror\\\": \\\"mirror\\\",\\n   \\\"coin\\\": \\\"coin\\\",\\n   \\\"workflow-management\\\": \\\"workflow-management\\\",\\n   \\\"npm\\\": \\\"npm\\\",\\n   \\\"rubocop\\\": \\\"rubocop\\\",\\n   \\\"theme\\\": \\\"theme\\\",\\n   \\\"c-language\\\": \\\"c-language\\\",\\n   \\\"HTML\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\",\\n      \\\"html\\\"\\n   ],\\n   \\\"pyrocms-extenstions\\\": \\\"pyrocms-extenstions\\\",\\n   \\\"svelte\\\": \\\"svelte\\\",\\n   \\\"golang-library\\\": \\\"golang-library\\\",\\n   \\\"culfw\\\": \\\"culfw\\\",\\n   \\\"Ruby\\\": \\\"ruby\\\",\\n   \\\"rpc\\\": \\\"rpc\\\",\\n   \\\"Augeas\\\": \\\"augeas\\\",\\n   \\\"Agda\\\": \\\"agda\\\",\\n   \\\"hl7-parsing\\\": \\\"hl7-parsing\\\",\\n   \\\"Roff\\\": \\\"roff\\\",\\n   \\\"Makefile\\\": [\\n      \\\"make\\\",\\n      \\\"makefiles\\\",\\n      \\\"makefile\\\"\\n   ],\\n   \\\"cards\\\": \\\"cards\\\",\\n   \\\"css-minifier\\\": \\\"css-minifier\\\",\\n   \\\"networking\\\": [\\n      \\\"networks\\\",\\n      \\\"network\\\",\\n      \\\"networking\\\"\\n   ],\\n   \\\"ask\\\": \\\"ask\\\",\\n   \\\"Nim\\\": \\\"nim\\\",\\n   \\\"apcupsd\\\": \\\"apcupsd\\\",\\n   \\\"collection\\\": \\\"collection\\\",\\n   \\\"game-engine\\\": \\\"game-engine\\\",\\n   \\\"text-metric\\\": \\\"text-metric\\\",\\n   \\\"background\\\": \\\"background\\\",\\n   \\\"git\\\": \\\"git\\\",\\n   \\\"tool\\\": \\\"tool\\\",\\n   \\\"indie\\\": \\\"indie\\\",\\n   \\\"package\\\": \\\"package\\\",\\n   \\\"ios\\\": [\\n      \\\"ios-sdk\\\",\\n      \\\"apple-ios\\\",\\n      \\\"iphone-os\\\",\\n      \\\"ios\\\"\\n   ],\\n   \\\"ontouml\\\": \\\"ontouml\\\",\\n   \\\"competitive\\\": \\\"competitive\\\",\\n   \\\"m17n\\\": \\\"m17n\\\",\\n   \\\"ibus\\\": \\\"ibus\\\",\\n   \\\"light\\\": \\\"light\\\",\\n   \\\"static-site-generator\\\": \\\"static-site-generator\\\",\\n   \\\"rubynlp\\\": \\\"rubynlp\\\",\\n   \\\"emr\\\": \\\"emr\\\",\\n   \\\"ui-components\\\": \\\"ui-components\\\",\\n   \\\"simple\\\": \\\"simple\\\",\\n   \\\"keyboard\\\": [\\n      \\\"keyboards\\\",\\n      \\\"keyboard\\\"\\n   ],\\n   \\\"TeX\\\": \\\"tex\\\",\\n   \\\"css-selector\\\": \\\"css-selector\\\",\\n   \\\"Julia\\\": \\\"julia\\\",\\n   \\\"minetest-mod\\\": \\\"minetest-mod\\\",\\n   \\\"h2oai\\\": \\\"h2oai\\\",\\n   \\\"zesty\\\": \\\"zesty\\\",\\n   \\\"minetest\\\": \\\"minetest\\\",\\n   \\\"algo\\\": \\\"algo\\\",\\n   \\\"webdesign\\\": \\\"webdesign\\\",\\n   \\\"deep-neural-networks\\\": \\\"deep-neural-networks\\\",\\n   \\\"coach-sheet\\\": \\\"coach-sheet\\\",\\n   \\\"check\\\": \\\"check\\\",\\n   \\\"clipboard-manager\\\": \\\"clipboard-manager\\\",\\n   \\\"getting-started\\\": \\\"getting-started\\\",\\n   \\\"farsi\\\": \\\"farsi\\\",\\n   \\\"esoteric\\\": \\\"esoteric\\\",\\n   \\\"esoteric-language\\\": \\\"esoteric-language\\\",\\n   \\\"text-manipulation\\\": \\\"text-manipulation\\\",\\n   \\\"usb\\\": [\\n      \\\"usbdevice\\\",\\n      \\\"usb\\\"\\n   ],\\n   \\\"separator\\\": \\\"separator\\\",\\n   \\\"codepen\\\": \\\"codepen\\\",\\n   \\\"website-template\\\": \\\"website-template\\\",\\n   \\\"engineering-management\\\": \\\"engineering-management\\\",\\n   \\\"delimiter\\\": \\\"delimiter\\\",\\n   \\\"placeholder\\\": \\\"placeholder\\\",\\n   \\\"Isabelle\\\": \\\"isabelle\\\",\\n   \\\"fun\\\": [\\n      \\\"humour\\\",\\n      \\\"humor\\\",\\n      \\\"fun\\\"\\n   ],\\n   \\\"xBase\\\": \\\"xbase\\\",\\n   \\\"rubydatascience\\\": \\\"rubydatascience\\\",\\n   \\\"Rust\\\": \\\"rust\\\",\\n   \\\"Eagle\\\": \\\"eagle\\\",\\n   \\\"calculator\\\": \\\"calculator\\\",\\n   \\\"electron\\\": \\\"electron\\\",\\n   \\\"PowerShell\\\": [\\n      \\\"windows-powershell\\\",\\n      \\\"powershell\\\"\\n   ],\\n   \\\"tikz\\\": \\\"tikz\\\",\\n   \\\"reddit\\\": [\\n      \\\"reddit-api\\\",\\n      \\\"reddit\\\"\\n   ],\\n   \\\"artisan-command\\\": \\\"artisan-command\\\",\\n   \\\"hl7-message\\\": \\\"hl7-message\\\",\\n   \\\"pwa-boilerplate\\\": \\\"pwa-boilerplate\\\",\\n   \\\"template\\\": \\\"template\\\",\\n   \\\"archi\\\": \\\"archi\\\",\\n   \\\"django\\\": \\\"django\\\",\\n   \\\"markdown\\\": \\\"markdown\\\",\\n   \\\"competitive-programming-contests\\\": \\\"competitive-programming-contests\\\",\\n   \\\"hacking\\\": \\\"hacking\\\",\\n   \\\"dropbox\\\": \\\"dropbox\\\",\\n   \\\"lorem-ipsum-generator\\\": \\\"lorem-ipsum-generator\\\",\\n   \\\"engine\\\": \\\"engine\\\",\\n   \\\"couchdb-wiki\\\": \\\"couchdb-wiki\\\",\\n   \\\"codejam\\\": \\\"codejam\\\",\\n   \\\"nextjs\\\": \\\"nextjs\\\",\\n   \\\"video-course\\\": \\\"video-course\\\",\\n   \\\"Emacs Lisp\\\": \\\"emacs lisp\\\",\\n   \\\"config\\\": \\\"config\\\",\\n   \\\"AutoHotkey\\\": \\\"autohotkey\\\",\\n   \\\"jmeter-plugin\\\": \\\"jmeter-plugin\\\",\\n   \\\"ooc\\\": \\\"ooc\\\",\\n   \\\"graphql\\\": \\\"graphql\\\",\\n   \\\"Vue\\\": \\\"vue\\\",\\n   \\\"scim\\\": \\\"scim\\\",\\n   \\\"postgresql\\\": [\\n      \\\"sql-postgres\\\",\\n      \\\"pgsql\\\",\\n      \\\"postgres\\\",\\n      \\\"postgresql\\\"\\n   ],\\n   \\\"ASP\\\": \\\"asp\\\",\\n   \\\"java-scripts\\\": \\\"java-scripts\\\",\\n   \\\"Kotlin\\\": \\\"kotlin\\\",\\n   \\\"ctf\\\": \\\"ctf\\\",\\n   \\\"mysql-ha\\\": \\\"mysql-ha\\\",\\n   \\\"couchdb\\\": \\\"couchdb\\\",\\n   \\\"react\\\": \\\"react\\\",\\n   \\\"irc\\\": \\\"irc\\\",\\n   \\\"potato\\\": \\\"potato\\\",\\n   \\\"colors\\\": [\\n      \\\"colours\\\",\\n      \\\"colour\\\",\\n      \\\"color\\\",\\n      \\\"colors\\\"\\n   ],\\n   \\\"aws-lambda\\\": [\\n      \\\"amazon-lambda\\\",\\n      \\\"aws-lambda\\\"\\n   ],\\n   \\\"programming-style\\\": \\\"programming-style\\\",\\n   \\\"C\\\": \\\"c\\\",\\n   \\\"mobile-game\\\": \\\"mobile-game\\\",\\n   \\\"freedom\\\": \\\"freedom\\\",\\n   \\\"PHP\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\",\\n      \\\"php\\\"\\n   ],\\n   \\\"Inno Setup\\\": \\\"inno setup\\\",\\n   \\\"anime\\\": \\\"anime\\\",\\n   \\\"deprecated\\\": [\\n      \\\"deprecation\\\",\\n      \\\"deprecated\\\"\\n   ],\\n   \\\"public-domain\\\": \\\"public-domain\\\",\\n   \\\"apns\\\": \\\"apns\\\",\\n   \\\"terminal\\\": [\\n      \\\"terminals\\\",\\n      \\\"terminal\\\"\\n   ],\\n   \\\"wikimedia\\\": \\\"wikimedia\\\",\\n   \\\"Arduino\\\": \\\"arduino\\\",\\n   \\\"formatter\\\": \\\"formatter\\\",\\n   \\\"Perl6\\\": \\\"perl6\\\",\\n   \\\"lisp\\\": \\\"lisp\\\",\\n   \\\"exercise\\\": \\\"exercise\\\",\\n   \\\"naughty-strings\\\": \\\"naughty-strings\\\",\\n   \\\"glsl\\\": \\\"glsl\\\",\\n   \\\"coreml-framework\\\": \\\"coreml-framework\\\",\\n   \\\"linter\\\": \\\"linter\\\",\\n   \\\"vape\\\": \\\"vape\\\",\\n   \\\"mathematics\\\": \\\"mathematics\\\",\\n   \\\"npm-scripts\\\": \\\"npm-scripts\\\",\\n   \\\"Processing\\\": [\\n      \\\"processing.org\\\",\\n      \\\"processing\\\"\\n   ],\\n   \\\"framer-studio\\\": \\\"framer-studio\\\",\\n   \\\"best-practices\\\": \\\"best-practices\\\",\\n   \\\"design\\\": \\\"design\\\",\\n   \\\"puppeteer\\\": \\\"puppeteer\\\",\\n   \\\"applications\\\": \\\"applications\\\",\\n   \\\"community\\\": \\\"community\\\",\\n   \\\"ios-swift\\\": \\\"ios-swift\\\",\\n   \\\"x-window-manager\\\": \\\"x-window-manager\\\",\\n   \\\"dictionary-based-attacks\\\": \\\"dictionary-based-attacks\\\",\\n   \\\"Swift\\\": [\\n      \\\"swift1.2\\\",\\n      \\\"swift-ios\\\",\\n      \\\"swift-language\\\",\\n      \\\"swift\\\"\\n   ],\\n   \\\"internet-of-things\\\": \\\"internet-of-things\\\",\\n   \\\"Objective-C++\\\": \\\"objective-c++\\\",\\n   \\\"lock\\\": \\\"lock\\\",\\n   \\\"Shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\",\\n      \\\"shell\\\"\\n   ],\\n   \\\"bearss\\\": \\\"bearss\\\",\\n   \\\"synonym\\\": \\\"synonym\\\",\\n   \\\"activity\\\": \\\"activity\\\",\\n   \\\"websites\\\": \\\"websites\\\",\\n   \\\"lorem-ipsum\\\": \\\"lorem-ipsum\\\",\\n   \\\"qt-applications\\\": \\\"qt-applications\\\",\\n   \\\"minetest-engine\\\": \\\"minetest-engine\\\",\\n   \\\"ad\\\": \\\"ad\\\",\\n   \\\"KiCad\\\": \\\"kicad\\\",\\n   \\\"ipsum\\\": \\\"ipsum\\\",\\n   \\\"games-showcase\\\": \\\"games-showcase\\\",\\n   \\\"tinkerpop\\\": \\\"tinkerpop\\\",\\n   \\\"editor\\\": \\\"editor\\\",\\n   \\\"practice\\\": \\\"practice\\\",\\n   \\\"iot\\\": \\\"iot\\\",\\n   \\\"treasure\\\": \\\"treasure\\\",\\n   \\\"http2\\\": \\\"http2\\\",\\n   \\\"numbertools\\\": \\\"numbertools\\\",\\n   \\\"coreml-model\\\": \\\"coreml-model\\\",\\n   \\\"Hack\\\": \\\"hack\\\",\\n   \\\"indiedev\\\": \\\"indiedev\\\",\\n   \\\"creative-coding\\\": \\\"creative-coding\\\",\\n   \\\"Common Lisp\\\": \\\"common lisp\\\",\\n   \\\"api\\\": [\\n      \\\"apis\\\",\\n      \\\"api\\\"\\n   ],\\n   \\\"postcss\\\": \\\"postcss\\\",\\n   \\\"tokenizer\\\": \\\"tokenizer\\\",\\n   \\\"temperature-control\\\": \\\"temperature-control\\\",\\n   \\\"workflow\\\": \\\"workflow\\\",\\n   \\\"nodejs\\\": \\\"nodejs\\\",\\n   \\\"chat\\\": \\\"chat\\\",\\n   \\\"game-development\\\": \\\"game-development\\\",\\n   \\\"calc\\\": \\\"calc\\\",\\n   \\\"io\\\": [\\n      \\\"input-output\\\",\\n      \\\"io\\\"\\n   ],\\n   \\\"craig-minetest-server\\\": \\\"craig-minetest-server\\\",\\n   \\\"Tcl\\\": \\\"tcl\\\",\\n   \\\"random-text\\\": \\\"random-text\\\",\\n   \\\"shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\",\\n      \\\"shell\\\"\\n   ],\\n   \\\"Brainfuck\\\": \\\"brainfuck\\\",\\n   \\\"competitive-programming\\\": \\\"competitive-programming\\\",\\n   \\\"enzyme\\\": \\\"enzyme\\\",\\n   \\\"guitar\\\": \\\"guitar\\\",\\n   \\\"HLSL\\\": \\\"hlsl\\\",\\n   \\\"heart\\\": \\\"heart\\\",\\n   \\\"dojo\\\": [\\n      \\\"dojo-store\\\",\\n      \\\"dojo-layer\\\",\\n      \\\"dojo.stateful\\\",\\n      \\\"dojo-require\\\",\\n      \\\"dojo.data\\\",\\n      \\\"dijit\\\",\\n      \\\"dojox\\\",\\n      \\\"dojo\\\"\\n   ],\\n   \\\"Gherkin\\\": \\\"gherkin\\\",\\n   \\\"quotes\\\": \\\"quotes\\\",\\n   \\\"nagios-plugin\\\": \\\"nagios-plugin\\\",\\n   \\\"badges\\\": \\\"badges\\\",\\n   \\\"hit\\\": \\\"hit\\\",\\n   \\\"brightness\\\": \\\"brightness\\\",\\n   \\\"CMake\\\": \\\"cmake\\\",\\n   \\\"vim-configuration\\\": \\\"vim-configuration\\\",\\n   \\\"craig\\\": \\\"craig\\\",\\n   \\\"language-support\\\": \\\"language-support\\\",\\n   \\\"database\\\": [\\n      \\\"dbms\\\",\\n      \\\"database-structure\\\",\\n      \\\"db\\\",\\n      \\\"databases\\\",\\n      \\\"database\\\"\\n   ],\\n   \\\"hackerearth\\\": \\\"hackerearth\\\",\\n   \\\"cloudant\\\": \\\"cloudant\\\",\\n   \\\"alfred-workflow\\\": \\\"alfred-workflow\\\",\\n   \\\"accounting\\\": \\\"accounting\\\",\\n   \\\"ansible-role\\\": \\\"ansible-role\\\",\\n   \\\"tor\\\": \\\"tor\\\",\\n   \\\"github-pages\\\": [\\n      \\\"gh-pages\\\",\\n      \\\"github-pages\\\"\\n   ],\\n   \\\"subscription\\\": \\\"subscription\\\",\\n   \\\"graphics\\\": [\\n      \\\"computer-graphics\\\",\\n      \\\"graphics\\\"\\n   ],\\n   \\\"qt\\\": \\\"qt\\\",\\n   \\\"opensource\\\": \\\"opensource\\\",\\n   \\\"preact\\\": \\\"preact\\\",\\n   \\\"hapi\\\": \\\"hapi\\\",\\n   \\\"cpp\\\": \\\"cpp\\\",\\n   \\\"tizen\\\": \\\"tizen\\\",\\n   \\\"cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\",\\n      \\\"cuda\\\"\\n   ],\\n   \\\"go-programming\\\": \\\"go-programming\\\",\\n   \\\"Scala\\\": \\\"scala\\\",\\n   \\\"ansible-roles\\\": \\\"ansible-roles\\\",\\n   \\\"ios-lib\\\": \\\"ios-lib\\\",\\n   \\\"ANTLR\\\": \\\"antlr\\\",\\n   \\\"jsx\\\": \\\"jsx\\\",\\n   \\\"R\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\",\\n      \\\"r\\\"\\n   ],\\n   \\\"Coq\\\": \\\"coq\\\",\\n   \\\"beta\\\": \\\"beta\\\",\\n   \\\"locksport\\\": \\\"locksport\\\",\\n   \\\"Idris\\\": \\\"idris\\\",\\n   \\\"gnome-shell-extension\\\": \\\"gnome-shell-extension\\\",\\n   \\\"castra\\\": \\\"castra\\\",\\n   \\\"dmx\\\": \\\"dmx\\\",\\n   \\\"logiciels\\\": \\\"logiciels\\\",\\n   \\\"textures\\\": [\\n      \\\"texture\\\",\\n      \\\"textures\\\"\\n   ],\\n   \\\"pixel-layout\\\": \\\"pixel-layout\\\",\\n   \\\"bacon-mod\\\": \\\"bacon-mod\\\",\\n   \\\"webgl-programming\\\": \\\"webgl-programming\\\",\\n   \\\"programming-language\\\": \\\"programming-language\\\",\\n   \\\"Cap'n Proto\\\": \\\"cap'n proto\\\",\\n   \\\"tunneling-proxies\\\": \\\"tunneling-proxies\\\",\\n   \\\"type-checking\\\": \\\"type-checking\\\",\\n   \\\"text-analysis\\\": \\\"text-analysis\\\",\\n   \\\"build\\\": [\\n      \\\"builds\\\",\\n      \\\"build\\\"\\n   ],\\n   \\\"mqtt\\\": \\\"mqtt\\\",\\n   \\\"nextcloud\\\": \\\"nextcloud\\\",\\n   \\\"C++\\\": [\\n      \\\"cpp\\\",\\n      \\\"c++\\\"\\n   ],\\n   \\\"instagram\\\": \\\"instagram\\\",\\n   \\\"interoperability\\\": \\\"interoperability\\\",\\n   \\\"fhem\\\": \\\"fhem\\\",\\n   \\\"pixel\\\": \\\"pixel\\\",\\n   \\\"react-toolbox\\\": \\\"react-toolbox\\\",\\n   \\\"svg\\\": [\\n      \\\"svg-path\\\",\\n      \\\"svgz\\\",\\n      \\\"svg\\\"\\n   ],\\n   \\\"java-8\\\": [\\n      \\\"jdk1.8\\\",\\n      \\\"jdk8\\\",\\n      \\\"java-8\\\"\\n   ],\\n   \\\"gideros\\\": \\\"gideros\\\",\\n   \\\"portfolio-website\\\": \\\"portfolio-website\\\",\\n   \\\"data-analysis\\\": \\\"data-analysis\\\",\\n   \\\"data-analytics\\\": \\\"data-analytics\\\",\\n   \\\"macos\\\": \\\"macos\\\",\\n   \\\"sublime-text-3\\\": \\\"sublime-text-3\\\",\\n   \\\"wordpress-plugin\\\": \\\"wordpress-plugin\\\",\\n   \\\"Mathematica\\\": \\\"mathematica\\\",\\n   \\\"prototype\\\": [\\n      \\\"prototypes\\\",\\n      \\\"prototype\\\"\\n   ],\\n   \\\"encode\\\": \\\"encode\\\",\\n   \\\"pm2\\\": \\\"pm2\\\",\\n   \\\"headless-chrome\\\": \\\"headless-chrome\\\",\\n   \\\"ux-design\\\": \\\"ux-design\\\",\\n   \\\"intelligence\\\": \\\"intelligence\\\",\\n   \\\"audio-player\\\": [\\n      \\\"audio-playing\\\",\\n      \\\"audio-player\\\"\\n   ],\\n   \\\"web-crawler\\\": [\\n      \\\"spider\\\",\\n      \\\"crawl\\\",\\n      \\\"crawling\\\",\\n      \\\"crawler\\\",\\n      \\\"webcrawling\\\",\\n      \\\"web-spider\\\",\\n      \\\"webspiders\\\",\\n      \\\"web-crawler\\\"\\n   ],\\n   \\\"serial\\\": \\\"serial\\\",\\n   \\\"performance-measurement\\\": \\\"performance-measurement\\\",\\n   \\\"canvas\\\": \\\"canvas\\\",\\n   \\\"elixir-books\\\": \\\"elixir-books\\\",\\n   \\\"buddypress-plugin\\\": \\\"buddypress-plugin\\\",\\n   \\\"websecurity\\\": \\\"websecurity\\\",\\n   \\\"python-asyncio\\\": \\\"python-asyncio\\\",\\n   \\\"bookmarks\\\": [\\n      \\\"bookmark\\\",\\n      \\\"bookmarks\\\"\\n   ],\\n   \\\"resources\\\": [\\n      \\\"resource\\\",\\n      \\\"resources\\\"\\n   ],\\n   \\\"litecoin\\\": \\\"litecoin\\\",\\n   \\\"codechef\\\": \\\"codechef\\\",\\n   \\\"text-measuring\\\": \\\"text-measuring\\\",\\n   \\\"configuration\\\": \\\"configuration\\\",\\n   \\\"language-model\\\": \\\"language-model\\\",\\n   \\\"reveal-js\\\": \\\"reveal-js\\\",\\n   \\\"ledger\\\": \\\"ledger\\\",\\n   \\\"construct\\\": \\\"construct\\\",\\n   \\\"brightness-level\\\": \\\"brightness-level\\\",\\n   \\\"E\\\": \\\"e\\\",\\n   \\\"sublime-text-plugin\\\": \\\"sublime-text-plugin\\\",\\n   \\\"docker-image\\\": \\\"docker-image\\\",\\n   \\\"bears\\\": \\\"bears\\\",\\n   \\\"framer\\\": \\\"framer\\\",\\n   \\\"security\\\": [\\n      \\\"web-security\\\",\\n      \\\"vulnerabilities\\\",\\n      \\\"vulnerability\\\",\\n      \\\"secure\\\",\\n      \\\"security\\\"\\n   ],\\n   \\\"softball\\\": \\\"softball\\\",\\n   \\\"task-runner\\\": \\\"task-runner\\\",\\n   \\\"ama\\\": \\\"ama\\\",\\n   \\\"java-library\\\": \\\"java-library\\\",\\n   \\\"type-hints\\\": \\\"type-hints\\\",\\n   \\\"no-login-web-apps\\\": \\\"no-login-web-apps\\\",\\n   \\\"art-net\\\": \\\"art-net\\\",\\n   \\\"typo3-cms\\\": \\\"typo3-cms\\\",\\n   \\\"game\\\": \\\"game\\\",\\n   \\\"android-tv\\\": \\\"android-tv\\\",\\n   \\\"rollup\\\": \\\"rollup\\\",\\n   \\\"sensor\\\": \\\"sensor\\\",\\n   \\\"LiveScript\\\": \\\"livescript\\\",\\n   \\\"leightweight\\\": \\\"leightweight\\\",\\n   \\\"transparency\\\": \\\"transparency\\\",\\n   \\\"pyrocms3\\\": \\\"pyrocms3\\\",\\n   \\\"standard\\\": \\\"standard\\\",\\n   \\\"tmux\\\": \\\"tmux\\\",\\n   \\\"nicehash\\\": \\\"nicehash\\\",\\n   \\\"hackerrank\\\": \\\"hackerrank\\\",\\n   \\\"chuck-norris\\\": \\\"chuck-norris\\\",\\n   \\\"input-method\\\": \\\"input-method\\\",\\n   \\\"vuejs\\\": \\\"vuejs\\\",\\n   \\\"erlang\\\": \\\"erlang\\\",\\n   \\\"cve\\\": \\\"cve\\\",\\n   \\\"Cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\",\\n      \\\"cuda\\\"\\n   ],\\n   \\\"craftcms\\\": \\\"craftcms\\\",\\n   \\\"fs20\\\": \\\"fs20\\\",\\n   \\\"glsl-editors\\\": \\\"glsl-editors\\\",\\n   \\\"asynctask\\\": \\\"asynctask\\\",\\n   \\\"archimate\\\": \\\"archimate\\\",\\n   \\\"dmx512\\\": \\\"dmx512\\\",\\n   \\\"logger\\\": \\\"logger\\\",\\n   \\\"jobs\\\": [\\n      \\\"job\\\",\\n      \\\"jobs\\\"\\n   ],\\n   \\\"monitoring\\\": \\\"monitoring\\\",\\n   \\\"style-guide\\\": \\\"style-guide\\\",\\n   \\\"COBOL\\\": \\\"cobol\\\",\\n   \\\"wargame\\\": \\\"wargame\\\",\\n   \\\"eslint\\\": \\\"eslint\\\",\\n   \\\"pixels\\\": \\\"pixels\\\",\\n   \\\"elixir-lang\\\": \\\"elixir-lang\\\",\\n   \\\"uim\\\": \\\"uim\\\",\\n   \\\"M\\\": \\\"m\\\",\\n   \\\"runtime-code-analysis\\\": \\\"runtime-code-analysis\\\",\\n   \\\"hl7\\\": \\\"hl7\\\",\\n   \\\"plugin\\\": \\\"plugin\\\",\\n   \\\"competitive-learning\\\": \\\"competitive-learning\\\",\\n   \\\"lighting\\\": \\\"lighting\\\",\\n   \\\"mp3\\\": \\\"mp3\\\",\\n   \\\"ipython-notebook\\\": \\\"ipython-notebook\\\",\\n   \\\"owl\\\": \\\"owl\\\",\\n   \\\"gamedev\\\": \\\"gamedev\\\",\\n   \\\"shader\\\": [\\n      \\\"shaders\\\",\\n      \\\"shader\\\"\\n   ],\\n   \\\"ressources-educatives\\\": \\\"ressources-educatives\\\",\\n   \\\"alfred3-workflow\\\": \\\"alfred3-workflow\\\",\\n   \\\"mobile-development\\\": \\\"mobile-development\\\",\\n   \\\"vuejs2\\\": \\\"vuejs2\\\",\\n   \\\"test\\\": \\\"test\\\",\\n   \\\"openthesaurus\\\": \\\"openthesaurus\\\",\\n   \\\"locksmithing\\\": \\\"locksmithing\\\",\\n   \\\"java-sample\\\": \\\"java-sample\\\",\\n   \\\"samsung-smart-tv\\\": \\\"samsung-smart-tv\\\",\\n   \\\"string\\\": [\\n      \\\"empty-string\\\",\\n      \\\"str\\\",\\n      \\\"string-manipulation\\\",\\n      \\\"strings\\\",\\n      \\\"string\\\"\\n   ],\\n   \\\"webgl-articles\\\": \\\"webgl-articles\\\",\\n   \\\"Alloy\\\": \\\"alloy\\\",\\n   \\\"backup-script\\\": \\\"backup-script\\\",\\n   \\\"chrome\\\": \\\"chrome\\\",\\n   \\\"jvm\\\": \\\"jvm\\\",\\n   \\\"lockpicking\\\": \\\"lockpicking\\\",\\n   \\\"AppleScript\\\": \\\"applescript\\\",\\n   \\\"ethereum\\\": \\\"ethereum\\\",\\n   \\\"percent\\\": \\\"percent\\\",\\n   \\\"boilerplate\\\": \\\"boilerplate\\\",\\n   \\\"list\\\": [\\n      \\\"ilist\\\",\\n      \\\"lists\\\",\\n      \\\"list\\\"\\n   ],\\n   \\\"Nginx\\\": \\\"nginx\\\",\\n   \\\"erlang-vm\\\": \\\"erlang-vm\\\",\\n   \\\"pitches\\\": \\\"pitches\\\",\\n   \\\"import\\\": [\\n      \\\"imports\\\",\\n      \\\"importing\\\",\\n      \\\"import\\\"\\n   ],\\n   \\\"personal\\\": \\\"personal\\\",\\n   \\\"shell-extension\\\": \\\"shell-extension\\\",\\n   \\\"video-game\\\": \\\"video-game\\\",\\n   \\\"beanstalkd\\\": \\\"beanstalkd\\\",\\n   \\\"jmeter\\\": [\\n      \\\"apache-jmeter\\\",\\n      \\\"jmeter\\\"\\n   ],\\n   \\\"ansi\\\": \\\"ansi\\\",\\n   \\\"CSS\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"css-background-image\\\",\\n      \\\"css-layout\\\",\\n      \\\"cascading-style-sheet\\\",\\n      \\\"css\\\"\\n   ],\\n   \\\"artnet\\\": \\\"artnet\\\",\\n   \\\"python-3\\\": \\\"python-3\\\",\\n   \\\"nginx\\\": \\\"nginx\\\",\\n   \\\"launcher\\\": \\\"launcher\\\",\\n   \\\"awesome-list\\\": \\\"awesome-list\\\",\\n   \\\"wtfpl\\\": \\\"wtfpl\\\",\\n   \\\"blog\\\": \\\"blog\\\",\\n   \\\"couchdb-chat\\\": \\\"couchdb-chat\\\",\\n   \\\"language\\\": \\\"language\\\",\\n   \\\"template-engine\\\": \\\"template-engine\\\",\\n   \\\"vue\\\": \\\"vue\\\",\\n   \\\"devops\\\": \\\"devops\\\",\\n   \\\"algorithms\\\": \\\"algorithms\\\",\\n   \\\"Erlang\\\": \\\"erlang\\\",\\n   \\\"swift-library\\\": \\\"swift-library\\\",\\n   \\\"infosec\\\": \\\"infosec\\\",\\n   \\\"dotfiles\\\": \\\"dotfiles\\\",\\n   \\\"persian\\\": \\\"persian\\\",\\n   \\\"bootstrap3\\\": \\\"bootstrap3\\\",\\n   \\\"retrospectives\\\": \\\"retrospectives\\\",\\n   \\\"management\\\": \\\"management\\\",\\n   \\\"mod\\\": \\\"mod\\\",\\n   \\\"cdnjs\\\": \\\"cdnjs\\\",\\n   \\\"ffi\\\": \\\"ffi\\\",\\n   \\\"battery\\\": \\\"battery\\\",\\n   \\\"lesscss\\\": \\\"lesscss\\\",\\n   \\\"Gnuplot\\\": \\\"gnuplot\\\",\\n   \\\"marklink\\\": \\\"marklink\\\",\\n   \\\"java8\\\": \\\"java8\\\",\\n   \\\"pydata\\\": \\\"pydata\\\",\\n   \\\"baseball\\\": \\\"baseball\\\",\\n   \\\"airbnb-javascript\\\": \\\"airbnb-javascript\\\",\\n   \\\"firmware\\\": \\\"firmware\\\",\\n   \\\"ml\\\": \\\"ml\\\",\\n   \\\"ruby\\\": \\\"ruby\\\",\\n   \\\"bbatsov\\\": \\\"bbatsov\\\",\\n   \\\"tech-culture\\\": \\\"tech-culture\\\",\\n   \\\"protocol\\\": \\\"protocol\\\",\\n   \\\"go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\",\\n      \\\"go\\\"\\n   ],\\n   \\\"armaldio\\\": \\\"armaldio\\\",\\n   \\\"css3\\\": [\\n      \\\"css-text-shadow\\\",\\n      \\\"css-text-overflow\\\",\\n      \\\"css-box-shadow\\\",\\n      \\\"css-border-radius\\\",\\n      \\\"css-border-image\\\",\\n      \\\"css3\\\"\\n   ],\\n   \\\"java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\\n      \\\"jdk\\\",\\n      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\",\\n      \\\"java\\\"\\n   ],\\n   \\\"shell-scripts\\\": \\\"shell-scripts\\\",\\n   \\\"question-answering\\\": \\\"question-answering\\\",\\n   \\\"challenge\\\": [\\n      \\\"code-challenge\\\",\\n      \\\"challenge\\\"\\n   ],\\n   \\\"gif\\\": \\\"gif\\\",\\n   \\\"ad-free\\\": \\\"ad-free\\\",\\n   \\\"hstore\\\": \\\"hstore\\\",\\n   \\\"locksmith\\\": \\\"locksmith\\\",\\n   \\\"callbacks\\\": \\\"callbacks\\\",\\n   \\\"bootstrap\\\": \\\"bootstrap\\\",\\n   \\\"webos-tv\\\": \\\"webos-tv\\\",\\n   \\\"ansible\\\": [\\n      \\\"ansible-playbook\\\",\\n      \\\"ansible\\\"\\n   ],\\n   \\\"Brightscript\\\": \\\"brightscript\\\",\\n   \\\"voltage\\\": \\\"voltage\\\",\\n   \\\"airplay\\\": \\\"airplay\\\",\\n   \\\"console\\\": \\\"console\\\",\\n   \\\"itch\\\": \\\"itch\\\",\\n   \\\"Stata\\\": \\\"stata\\\",\\n   \\\"style\\\": \\\"style\\\",\\n   \\\"c-plus-plus\\\": \\\"c-plus-plus\\\",\\n   \\\"babel-plugin\\\": \\\"babel-plugin\\\",\\n   \\\"ripple\\\": \\\"ripple\\\",\\n   \\\"mqtt-broker\\\": \\\"mqtt-broker\\\",\\n   \\\"deployer\\\": \\\"deployer\\\",\\n   \\\"elixir-programming-language\\\": \\\"elixir-programming-language\\\",\\n   \\\"CoffeeScript\\\": [\\n      \\\"coffee\\\",\\n      \\\"coffeescript\\\"\\n   ],\\n   \\\"text\\\": \\\"text\\\",\\n   \\\"r\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\",\\n      \\\"r\\\"\\n   ],\\n   \\\"math-toolbox\\\": \\\"math-toolbox\\\",\\n   \\\"record\\\": \\\"record\\\",\\n   \\\"numpy\\\": \\\"numpy\\\",\\n   \\\"neuroscience\\\": \\\"neuroscience\\\",\\n   \\\"dark-ages\\\": \\\"dark-ages\\\",\\n   \\\"gui\\\": \\\"gui\\\",\\n   \\\"linux-kernel-module\\\": \\\"linux-kernel-module\\\",\\n   \\\"eventbus\\\": \\\"eventbus\\\",\\n   \\\"images\\\": \\\"images\\\",\\n   \\\"pipe\\\": [\\n      \\\"pipes\\\",\\n      \\\"pipe\\\"\\n   ],\\n   \\\"data-science\\\": \\\"data-science\\\",\\n   \\\"nagios\\\": \\\"nagios\\\",\\n   \\\"debian-jessie\\\": \\\"debian-jessie\\\",\\n   \\\"ttr\\\": \\\"ttr\\\",\\n   \\\"visualization\\\": [\\n      \\\"visualisation\\\",\\n      \\\"visualization\\\"\\n   ],\\n   \\\"levenshtein-distance\\\": [\\n      \\\"levenstein\\\",\\n      \\\"levenshtein\\\",\\n      \\\"levenshtein-distance\\\"\\n   ],\\n   \\\"stories\\\": \\\"stories\\\",\\n   \\\"frege\\\": \\\"frege\\\",\\n   \\\"service-worker\\\": \\\"service-worker\\\",\\n   \\\"arp-spoofing\\\": \\\"arp-spoofing\\\",\\n   \\\"Python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\",\\n      \\\"python\\\"\\n   ],\\n   \\\"geometry\\\": \\\"geometry\\\",\\n   \\\"apollo-graphql-ecosystem\\\": \\\"apollo-graphql-ecosystem\\\",\\n   \\\"php-api\\\": \\\"php-api\\\",\\n   \\\"website\\\": [\\n      \\\"websites\\\",\\n      \\\"website\\\"\\n   ],\\n   \\\"antonym\\\": \\\"antonym\\\",\\n   \\\"box2d\\\": \\\"box2d\\\",\\n   \\\"Logos\\\": \\\"logos\\\",\\n   \\\"ask-me-anything\\\": \\\"ask-me-anything\\\",\\n   \\\"device\\\": \\\"device\\\",\\n   \\\"imagemagick\\\": \\\"imagemagick\\\",\\n   \\\"mysql\\\": [\\n      \\\"mysqldump\\\",\\n      \\\"mysqlclient\\\",\\n      \\\"mysqld\\\",\\n      \\\"mysql-table\\\",\\n      \\\"mysql-server\\\",\\n      \\\"mysql-query\\\",\\n      \\\"my-sql\\\",\\n      \\\"mysql\\\"\\n   ],\\n   \\\"mit-license\\\": \\\"mit-license\\\",\\n   \\\"ontologia\\\": \\\"ontologia\\\",\\n   \\\"unlicense\\\": \\\"unlicense\\\",\\n   \\\"spa\\\": \\\"spa\\\",\\n   \\\"healthcare\\\": \\\"healthcare\\\",\\n   \\\"texttools\\\": \\\"texttools\\\",\\n   \\\"web-app\\\": \\\"web-app\\\",\\n   \\\"angular\\\": [\\n      \\\"angular4.x\\\",\\n      \\\"angular4\\\",\\n      \\\"angular2\\\",\\n      \\\"angular\\\"\\n   ],\\n   \\\"learning\\\": [\\n      \\\"learn\\\",\\n      \\\"learning\\\"\\n   ],\\n   \\\"jquery\\\": [\\n      \\\"jquery-css\\\",\\n      \\\"jquery-find\\\",\\n      \\\"jquery-post\\\",\\n      \\\"jquery-get\\\",\\n      \\\"jquery-hasclass\\\",\\n      \\\"jquery-after\\\",\\n      \\\"jquery-callback\\\",\\n      \\\"removeclass\\\",\\n      \\\"toggleclass\\\",\\n      \\\"addclass\\\",\\n      \\\"jquery-live\\\",\\n      \\\"jquery-core\\\",\\n      \\\"jquery\\\"\\n   ],\\n   \\\"atom\\\": \\\"atom\\\",\\n   \\\"paper\\\": \\\"paper\\\",\\n   \\\"babel\\\": \\\"babel\\\",\\n   \\\"postgres\\\": \\\"postgres\\\",\\n   \\\"styleguide\\\": \\\"styleguide\\\",\\n   \\\"translation\\\": [\\n      \\\"t9n\\\",\\n      \\\"translation\\\"\\n   ],\\n   \\\"Haskell\\\": \\\"haskell\\\",\\n   \\\"bad-code\\\": \\\"bad-code\\\",\\n   \\\"packages\\\": \\\"packages\\\",\\n   \\\"saltstack\\\": \\\"saltstack\\\",\\n   \\\"js\\\": \\\"js\\\",\\n   \\\"pos-tag\\\": \\\"pos-tag\\\",\\n   \\\"simplepixels-texture-pack\\\": \\\"simplepixels-texture-pack\\\",\\n   \\\"stage-lighting\\\": \\\"stage-lighting\\\",\\n   \\\"QMake\\\": \\\"qmake\\\",\\n   \\\"Lex\\\": \\\"lex\\\",\\n   \\\"vimrc\\\": \\\"vimrc\\\",\\n   \\\"russian\\\": \\\"russian\\\",\\n   \\\"hypernym\\\": \\\"hypernym\\\",\\n   \\\"apollo-client\\\": \\\"apollo-client\\\",\\n   \\\"full-text-search\\\": [\\n      \\\"fulltext\\\",\\n      \\\"fts\\\",\\n      \\\"fulltext-searching\\\",\\n      \\\"full-text-search\\\"\\n   ],\\n   \\\"movies\\\": \\\"movies\\\",\\n   \\\"Matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\",\\n      \\\"matlab\\\"\\n   ],\\n   \\\"spring\\\": [\\n      \\\"spring-framework\\\",\\n      \\\"spring\\\"\\n   ],\\n   \\\"android\\\": [\\n      \\\"android-framework\\\",\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"android-mobile\\\",\\n      \\\"android\\\"\\n   ],\\n   \\\"gaming\\\": \\\"gaming\\\",\\n   \\\"libre\\\": \\\"libre\\\",\\n   \\\"hyponym\\\": \\\"hyponym\\\",\\n   \\\"autohotkey\\\": \\\"autohotkey\\\",\\n   \\\"theravada\\\": \\\"theravada\\\",\\n   \\\"cuda-by-example\\\": \\\"cuda-by-example\\\",\\n   \\\"redirect\\\": [\\n      \\\"redirecting\\\",\\n      \\\"redirection\\\",\\n      \\\"redirects\\\",\\n      \\\"redirect\\\"\\n   ],\\n   \\\"for-humans\\\": \\\"for-humans\\\",\\n   \\\"awesome\\\": \\\"awesome\\\",\\n   \\\"Puppet\\\": \\\"puppet\\\",\\n   \\\"airtunes\\\": \\\"airtunes\\\",\\n   \\\"data-visualization\\\": \\\"data-visualization\\\",\\n   \\\"multiple-clipboards\\\": \\\"multiple-clipboards\\\",\\n   \\\"leadership\\\": \\\"leadership\\\",\\n   \\\"information-visualization\\\": \\\"information-visualization\\\",\\n   \\\"python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\",\\n      \\\"python\\\"\\n   ],\\n   \\\"executable\\\": \\\"executable\\\",\\n   \\\"gaming-cms\\\": \\\"gaming-cms\\\",\\n   \\\"automation\\\": \\\"automation\\\",\\n   \\\"webgl-references\\\": \\\"webgl-references\\\",\\n   \\\"examples\\\": \\\"examples\\\",\\n   \\\"airbnb\\\": \\\"airbnb\\\",\\n   \\\"Clean\\\": \\\"clean\\\",\\n   \\\"Visual Basic\\\": \\\"visual basic\\\",\\n   \\\"curated-list\\\": \\\"curated-list\\\",\\n   \\\"library\\\": \\\"library\\\",\\n   \\\"Racket\\\": [\\n      \\\"drracket\\\",\\n      \\\"plt-scheme\\\",\\n      \\\"drscheme\\\",\\n      \\\"racket\\\"\\n   ],\\n   \\\"coloured-stone-bricks\\\": \\\"coloured-stone-bricks\\\",\\n   \\\"keypicking\\\": \\\"keypicking\\\",\\n   \\\"started\\\": \\\"started\\\",\\n   \\\"hiring\\\": \\\"hiring\\\",\\n   \\\"module\\\": [\\n      \\\"modules\\\",\\n      \\\"module\\\"\\n   ],\\n   \\\"string-metrics\\\": \\\"string-metrics\\\",\\n   \\\"Smalltalk\\\": \\\"smalltalk\\\",\\n   \\\"graphics-programming\\\": \\\"graphics-programming\\\",\\n   \\\"redux\\\": \\\"redux\\\",\\n   \\\"Objective-C\\\": [\\n      \\\"objc\\\",\\n      \\\"objective-c\\\"\\n   ],\\n   \\\"starter-kit\\\": \\\"starter-kit\\\",\\n   \\\"javascript\\\": [\\n      \\\"javascript-module\\\",\\n      \\\"vanilla-javascript\\\",\\n      \\\"javascript-runtime\\\",\\n      \\\"javascript-library\\\",\\n      \\\"javascript-disabled\\\",\\n      \\\"javascript-dom\\\",\\n      \\\"javascript-alert\\\",\\n      \\\"classic-javascript\\\",\\n      \\\"javascript-execution\\\",\\n      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\",\\n      \\\"javascript\\\"\\n   ],\\n   \\\"generative-art\\\": \\\"generative-art\\\",\\n   \\\"settings\\\": \\\"settings\\\",\\n   \\\"IDL\\\": \\\"idl\\\",\\n   \\\"minetest-mods\\\": \\\"minetest-mods\\\",\\n   \\\"VimL\\\": \\\"viml\\\",\\n   \\\"ups\\\": \\\"ups\\\",\\n   \\\"ai\\\": \\\"ai\\\",\\n   \\\"documentation-tool\\\": \\\"documentation-tool\\\",\\n   \\\"mode\\\": \\\"mode\\\",\\n   \\\"poetry\\\": \\\"poetry\\\",\\n   \\\"3d-graphics\\\": \\\"3d-graphics\\\",\\n   \\\"general-tutorials\\\": \\\"general-tutorials\\\",\\n   \\\"atom-plugin\\\": \\\"atom-plugin\\\",\\n   \\\"string-distance\\\": \\\"string-distance\\\",\\n   \\\"diversity\\\": \\\"diversity\\\",\\n   \\\"Fortran\\\": \\\"fortran\\\",\\n   \\\"csv\\\": [\\n      \\\"tsv\\\",\\n      \\\"comma-separated\\\",\\n      \\\".csv\\\",\\n      \\\"csv\\\"\\n   ],\\n   \\\"proxy\\\": \\\"proxy\\\",\\n   \\\"access\\\": \\\"access\\\",\\n   \\\"german\\\": \\\"german\\\",\\n   \\\"wallet\\\": \\\"wallet\\\",\\n   \\\"bounty\\\": \\\"bounty\\\",\\n   \\\"jupyter-notebook\\\": \\\"jupyter-notebook\\\",\\n   \\\"velocity\\\": \\\"velocity\\\",\\n   \\\"Dart\\\": \\\"dart\\\",\\n   \\\"smart-tv\\\": \\\"smart-tv\\\",\\n   \\\"router\\\": \\\"router\\\",\\n   \\\"bacon\\\": \\\"bacon\\\",\\n   \\\"hamming-distance\\\": \\\"hamming-distance\\\",\\n   \\\"npms\\\": \\\"npms\\\",\\n   \\\"emoji-picker\\\": \\\"emoji-picker\\\",\\n   \\\"FreeMarker\\\": \\\"freemarker\\\",\\n   \\\"favorite\\\": \\\"favorite\\\",\\n   \\\"SystemVerilog\\\": \\\"systemverilog\\\",\\n   \\\"government\\\": \\\"government\\\",\\n   \\\"entrepreneurs\\\": \\\"entrepreneurs\\\",\\n   \\\"elixir\\\": [\\n      \\\"elixir-lang\\\",\\n      \\\"elixir\\\"\\n   ],\\n   \\\"physec\\\": \\\"physec\\\",\\n   \\\"social-network\\\": \\\"social-network\\\",\\n   \\\"inter-process-communication\\\": \\\"inter-process-communication\\\",\\n   \\\"prompt\\\": \\\"prompt\\\",\\n   \\\"sentiment-analysis\\\": \\\"sentiment-analysis\\\",\\n   \\\"serverless\\\": \\\"serverless\\\",\\n   \\\"asyncio\\\": \\\"asyncio\\\",\\n   \\\"autocode\\\": \\\"autocode\\\",\\n   \\\"ansible-tutorial\\\": \\\"ansible-tutorial\\\",\\n   \\\"tsv\\\": \\\"tsv\\\",\\n   \\\"texture-pack\\\": \\\"texture-pack\\\",\\n   \\\"bootstrapper\\\": \\\"bootstrapper\\\"\\n}\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"def request_url(url,pagesize):\\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\\\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\\n    cTime = time.time()\\n    res = requests.get(url+app)\\n    res.encoding = 'utf-8'\\n    info = res.json()\\n    print(\\\"Requesting...:{}\\\".format(time.time() - cTime))\\n    return info\\n\\ndef extract_dict(res):\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"                 \\\"email\\\":res[\\\"email\\\"],\\\"stackoverflow_login\\\":\\\"null\\\"}\\n    return dict_info\\n\\ndef get_langtopics(user):\\n    language = []\\n    topics = []\\n    print(\\\"Finding languages and topics used by github user: {}\\\".format(user[\\\"github_login\\\"]))\\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\\\"github_login\\\"])\\n    repos = request_url(repo_api,30)\\n\\n    for item in repos:\\n        #can be  parallel topics & language\\n        repo_name = item[\\\"name\\\"]\\n        cTime = time.time()\\n        repo_topics = requests.get('https://api.github.com/repos/{}/{}/topics?'\\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'\\n                                 '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\\n                                 .format(user[\\\"github_login\\\"],repo_name),\\n                                 headers = {\\\"Accept\\\":\\\"application/vnd.github.mercy-preview+json\\\"})\\n        repo_topics = repo_topics.json()[\\\"names\\\"]\\n        print(\\\"Requesting...:{}\\\".format(time.time() - cTime))\\n        topics.extend(repo_topics)\\n\\n        if not item[\\\"languages_url\\\"] == None:\\n            language_api = item[\\\"languages_url\\\"]\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"            language_dict = None\\n        language.extend(language_dict)\\n\\n    topics = delete_duplicate(topics)\\n    language = delete_duplicate(language)\\n\\n    print(\\\"Github user {} languages: {}\\\".format(user[\\\"github_login\\\"],language))\\n    print(\\\"Github user {} topics: {}\\\\n\\\".format(user[\\\"github_login\\\"], topics))\\n    user[\\\"github_language\\\"] = language\\n    user[\\\"github_topics\\\"] = (topics if not topics == [] else \\\"null\\\")\\n    return user\\n\\n\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    print(\\\"Getting info of users in the commit history...\\\")\\n    for item in developer_info:\\n        ### For a list of developers, find their url\\n        if not item[\\\"author\\\"][\\\"login\\\"] in Info:\\n            author_api = (item[\\\"author\\\"][\\\"url\\\"] if not item[\\\"author\\\"] == None else \\\"null\\\")\\n        else:\\n            author_api = \\\"null\\\"\\n\\n        if not item[\\\"committer\\\"][\\\"login\\\"] in Info:\\n            committer_api = (item[\\\"committer\\\"][\\\"url\\\"] if not item[\\\"committer\\\"] == None else \\\"null\\\")\\n        else:\\n            committer_api = \\\"null\\\"\\n\\n        if not author_api == \\\"null\\\":\\n            author_info = request_url(author_api,100)\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    git_info = []\\n    cTime = time.time()\\n    for git_developer in Info:\\n        git_developer = get_langtopics(git_developer)\\n        git_info.append(git_developer)\\n    print(time.time() - cTime)\\n    return git_info\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    git_info = []\\n    cTime = time.time()\\n    for git_developer in Info:\\n        git_developer = get_langtopics(git_developer)\\n        git_info.append(git_developer)\\n    print(time.time() - cTime)\\n    return git_info\\n\\n\\nif __name__ == '__main__':\\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n    git_info = get_info(git_api)\\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_match_5.json'\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(info_file, 'w') as ctfile:\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import re\\nimport requests\\nimport urllib\\nimport urllib.error\\nimport time\\n\\n\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    user_info = user_info.json()\\n    return user_info\\n\\n\\ndef request_source(source_url):\\n    request2 = urllib.request.Request(source_url)\\n    request2.add_header('user-agent', 'Chrome/51.0.2704.63 Safari/537.36')\\n    try:\\n        response2 = urllib.request.urlopen(request2)\\n        html2 = response2.read()\\n        user_source = html2.decode(\\\"utf8\\\")\\n        response2.close()\\n    except urllib.error.HTTPError:\\n        print(\\\"Internal Server Error when requesting {}\\\".format(source_url))\\n        return \\\"null\\\"\\n    return user_source\\n\\n\\ndef InfoByName(name):\\n    Info = []\\n    default_info = {\\\"display_name\\\":\\\"\\\",\\\"location\\\":\\\"\\\",\\\"user_id\\\":0}\\n    #THe API returns info of all possible Stack Overflow usernames which contain the input name\\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\\\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\\\\n               '&site=stackoverflow'.format(name,name)\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    else:\\n        return default_info\\n\\n\\ndef GetGitAccount(user_id):\\n    \\\"\\\"\\\"\\\"Get the associated github account from Stack Overflow users' profile\\\"\\\"\\\"\\n    default = \\\"null\\\"\\n    if not user_id == None:\\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\\n        user_source = request_source(stk_url)\\n        if not user_source == \\\"null\\\":\\n            user_href = re.findall(r\\\"<a.*?href=.*?<\\\\/a>\\\", user_source, re.I | re.S | re.M)\\n            # find it directly\\n            git_account = None\\n            for href in user_href:\\n                if 'https://github.com/' in href:\\n                    git_account = re.findall('href\\\\=\\\\\\\"https\\\\:\\\\/\\\\/github\\\\.com\\\\/(.*?)\\\\\\\"', href, re.S)\\n                    git_account = git_account[0]\\n            if not git_account == None:\\n                return git_account\\n            else:\\n                return default\\n        else:\\n            return default\\n    else:\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n\\ndef get_tags(stk_developer):\\n    \\\"\\\"\\\"\\\"Get the tags of Stack Overflow developer through API\\\"\\\"\\\"\\n    tags = []\\n    tags_api = 'https://api.stackexchange.com/2.2/users/{}/tags' \\\\\\n               '?pagesize=100&order=desc&sort=popular' \\\\\\n               '&site=stackoverflow'.format(stk_developer['user_id'])\\n    tags_info = request_api(tags_api)\\n    tags_info = tags_info[\\\"items\\\"]\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    return tags\\n\\n\\ndef merge_langtopics(git_developer):\\n    topics_git = git_developer[\\\"github_topics\\\"]\\n    language_git = git_developer[\\\"github_language\\\"]\\n    if not topics_git == \\\"null\\\" and not language_git == \\\"null\\\":\\n        topics_git.extend(language_git)\\n        tags_git = topics_git\\n    elif topics_git == \\\"null\\\" and not language_git == \\\"null\\\":\\n        tags_git = language_git\\n    else:\\n        tags_git = topics_git\\n    git_developer[\\\"github_tags\\\"] = tags_git\\n    return git_developer\\n\\n\\ndef match_info(git_developer,stk_developer,syn_list,Threshold):\\n    \\\"\\\"\\\"\\\"The location and tags comparison\\\"\\\"\\\"\\n    location_stk = stk_developer[\\\"location\\\"]\\n    location_git = git_developer[\\\"location\\\"]\\n\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"            elif location_stk in location_git:\\n                location_score = 1\\n            else:\\n                # Levenshtein distance between two strings of location\\n                distance = le.lev(location_stk, location_git)\\n                len_git = max(len(location_git),len(location_stk))\\n                location_score = distance / len_git\\n        except TypeError:\\n            location_score = 0\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n    tags_git = git_developer[\\\"github_tags\\\"]\\n    tags_stk = stk_developer[\\\"tags\\\"]\\n    print(\\\"\\\\n{} tags: {}\\\".format(stk_developer[\\\"user_id\\\"],tags_stk))\\n\\n    match_count = github_count = 0\\n    if not tags_stk == [] and not tags_git == \\\"null\\\":\\n        match_tags = []\\n        for tag in tags_git:\\n            github_count = github_count + 1\\n            if tag in syn_list:\\n                stk_syn = syn_list[tag]\\n                if type(stk_syn) == list:\\n                    for syn_tags in stk_syn:\\n                        if syn_tags in tags_stk:\\n                            match_tags.append(syn_tags)\\n                            match_count = match_count + 1\\n                            break\\n                elif type(stk_syn) == str:\\n                    if stk_syn in tags_stk:\\n                        match_count = match_count + 1\\n        print(\\\"Match tag for {}: {}\\\".format(stk_developer[\\\"display_name\\\"],match_tags))\\n    else:\\n        match_count = 0\\n        github_count = 1\\n\\n    tag_score = match_count / github_count * 2\\n    final_score = round(location_score + tag_score, 2)\\n    print(\\\"Final score for {}: {}\\\".format(stk_developer[\\\"display_name\\\"],final_score))\\n\\n    if final_score >= Threshold:\\n        match_name = str(stk_developer[\\\"user_id\\\"]) + \\\"_\\\" + str(final_score)\\n        return match_name\\n    else:\\n        return []\\n\\n\\ndef match_account(git_info,syn_list):\\n    default_info = []\\n    new_info = []\\n\\n    for git_developer in git_info:\\n        # Merge the languages and topics to github_tags\\n        git_developer = merge_langtopics(git_developer)\\n        print(\\\"\\\\n\\\\nFinding Github user {} on Stack Overflow...\\\".format(git_developer[\\\"name\\\"]))\\n        possible_name = nf.possible_names(git_developer[\\\"name\\\"], git_developer[\\\"github_login\\\"])\\n        print(\\\"Possible name:{}\\\".format(possible_name))\\n\\n        for name in possible_name:\\n            #All info of developers whose username contains the input name\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"                # Continue to establish mapping if the possible match has been found?\\n                if git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" or git_developer[\\\"stackoverflow_login\\\"] == []:\\n                    git_developer[\\\"stackoverflow_login\\\"] = []\\n                    print(\\\"\\\\nNo linked account has been found. Mapping the users using tags and location...\\\")\\n                    print(\\\"{} tags: {}\\\".format(git_developer[\\\"github_login\\\"], git_developer[\\\"github_tags\\\"]))\\n\\n                    cTime = time.time()\\n                    for stk_developer in stk_info:\\n                        developer_tags = get_tags(stk_developer)\\n                        stk_developer[\\\"tags\\\"] = developer_tags\\n                        match_name = match_info(git_developer,stk_developer,syn_list,1)\\n                        if not match_name == []:\\n                            git_developer[\\\"stackoverflow_login\\\"].append(match_name)\\n                    print(time.time() - cTime)\\n                else:\\n                    break\\n\\n        if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" and not git_developer[\\\"stackoverflow_login\\\"] == []:\\n            print(\\\"The Stack Overflow display_name for github user {}: {}\\\".format(git_developer[\\\"name\\\"],git_developer['stackoverflow_login']))\\n        else:\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"if not os.path.exists(Info_path):\\n    os.mkdir(Info_path)\\n\\n# name_file = Info_path + '/login_list.json'\\n# name_list = open(name_file,encoding='utf-8')\\n# name_list = json.load(name_list)\\n# git_info = gt.search_info(name_list)\\n\\ninfo_file = Info_path + '/awesome_match_5.json'\\nsyn_file = Info_path + '/syn_list.json'\\n\\n\\ngit_info = open(info_file,encoding='utf-8')\\nsyn_list = open(syn_file,encoding='utf-8')\\ngit_info = json.load(git_info)\\nsyn_list = json.load(syn_list)\\nstk_count = total_count = 0\\n\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\nprint(\\\"Saving the results of matching...\\\")\\ncTime = time.time()\\nfile = Info_path + '/awesome_info_1.json'\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(match_info, ctfile, indent=3)\\nprint(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    tags_list = []\\n    for item in git_info:\\n        language = (item[\\\"github_language\\\"] if not item[\\\"github_language\\\"] == \\\"null\\\" else [])\\n        tags = (item[\\\"github_topics\\\"] if not item[\\\"github_topics\\\"] == \\\"null\\\" else [])\\n        tags_list.extend(language)\\n        tags_list.extend(tags)\\n\\n    tags_list = gt.delete_duplicate(tags_list)\\n    remove_list = []\\n    for item in tags_list:\\n        if \\\"#\\\" in item:\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        if not syn_info == []:\\n            for item in syn_info:\\n                syn_tags.append(item[\\\"from_tag\\\"])\\n            # The query of synonymous tags can't return the input tag\\n            syn_tags.append(tag.lower())\\n            syn_list[tag] = syn_tags\\n            print(\\\"The synonymous tags of tag {} are {}\\\".format(tag,syn_tags))\\n        else:\\n            # The tags of Stack overflow are lowercase\\n            syn_list[tag] = tag.lower()\\n            print(\\\"The synonymous tags of tag {} not found\\\".format(tag))\\n\\n    return syn_list\\n\\n\\nif __name__ == '__main__':\\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_info.json'\\n    f = open(info_file, encoding='utf-8')\\n    git_info = json.load(f)\\n\",\n      \"commit_date\": \"2017-10-11 16:52:47 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"import re\\n\\nRE_AZ = re.compile(r'-(.*?) ')\\nRE_C = re.compile(r'/(.*).c')\\n\\ndef node_graph(code_path, preprocess, same_list):\\n    \\\"\\\"\\\"Show the syntax tree and display the same part of tow trees\\\"\\\"\\\"\",\n      \"commit_date\": \"2017-10-11 14:52:13 +0800\",\n      \"file\": \"ast/AST_Visualization.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"For the comparison of tags, the tag score is used. By finding the number of tags which are related according to the synonymous tags list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\\n* #### Threshold<br>\\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7, 1.0 and 1.5.<br><br>\\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome):<br> \\nFor threshold 0.7, the matching rate is 81.43% (57/70);<br>\\nFor threshold 1.0, the matching rate is 71.43% (50/70); <br>\",\n      \"commit_date\": \"2017-10-10 20:43:28 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"* #### Threshold<br>\\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7 and 1.0.<br><br>\\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome):<br> \\nFor threshold 0.7, the matching rate is 81.43% (57/70);<br>\\nFor threshold 1.0, the matching rate is 71.43% (50/70); <br>\\nFor threshold 1.5, the matching rate is 52.86% (37/70).<br><br>\\nFor the developers selected by the threshold, their user id and score are recorded as \\\"userid_score\\\" in a list for further verification. The reason for not using the form \\\"username_score\\\" is that there are developers with same username but different user ids on Stack Overflow.\\n\\n## Future Work\\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.\",\n      \"commit_date\": \"2017-10-09 21:15:40 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\n`Input`: The name of a github repo or a list of github developers' name.<br>\\n`Output`: A json file including github users\\u2019 name, login, location, language, tags, email and Stack Overflow dispaly name or possible user id.\\n\\n## Usage:<br>\\n1 Find the information of github developers who committed to a certain project.<br>\\n2 Find github developers\\u2019 Stack Overflow account. **(Identity Linkage)**  \\n\\n## Script Description<br>\\n* `get_info_git.py` dumps the Github developers' name, login, company, location, e-mail, language and topics. <br>\\n* `get_info_stackoverflow.py` dumps the Stack Overflow developers' display name, location, tags, github associated account and possible user id for identity linkage.<br>\\n* `name_form.py` lists the possible Stack Overflow display name for a Github developer.<br>\\n* `syn_tags.py` gets the synonymous tags for comparsion of tags between github and Stach Overflow users. <br>\\n* Run the script `main.py` and you can get a json file containing developers' info of github and Stack Overflow display_name.\\n\\n## Get the Information of Github Developers\\nUsing `get_info_git.py` to dump the developers' name, login, company, location, e-mail, languages and topics using github API.\\n\\n![Image](https://github.com/AlvinZSJ/codeTracker/blob/master/get_info.png)\\n\\nThe arrow means getting the info through API.\\n## Mapping between Github and Stack Overflow Account\\n### 1. Get Possible Usernames<br>\\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username, location, language and tags of a developer can be obtained, which means we should list different possible usernames for each github user. <br>\\n![Image](https://github.com/AlvinZSJ/histo/blob/master/name_form.png)\\nThe username Generation splits the input name or login of github user into several parts and recombines them.<br><br>\\nFor name which is 1 word long, like \\\"Kazhnuz\\\", the possible name forms are:<br>\\n`Kaz, Kazhnuz, nuz(the last three letters)` <br>\\nThe reason for this generating method is that the Stack Overflow API for the query of user info returns **all users whose name contains the input username**. That means, for name \\\"nuz\\\", it returns a list: Nuz, nuzar, Nuzair, nuzahat... So for the uername that is 1 word long, we can simply split it into several words.<br><br>\\nFor name which is 2 words long, like \\\"Sindre Sorhus\\\", the possible usernames are: <br>\\n`Sindre Sorhus, sindresorhus, sorhus, sindre` <br>\\nwhich are generated by different combination of the First and Last name.<br><br>\\nFor name which is 3 words long (few cases are like that), like \\\"Victor Laerte Oliveira\\\", the possible usernames are: <br>\\n`laerte, oliveira, victor` <br>\\nSimply split the name into three parts can also get a lot of different possible usernames because the Stack Overflow API returns all users whose name contains the input name. \\n\\n### 2. Find associated account of Github\\nFortunately, the associated github account has been found in the Stack Overflow users' profile, which, however, is not accessible through Stack Overflow API but can be extracted from the source code of the users' profile page, of which the url is something like:<br><br>\\nhttps://stackoverflow.com/users/user_id<br><br>\\nThat is to say, we can get the github account using user_id. For possible usernames of developers on Stack Overflow, the user_id can be obtained through API. And then the github account can be extracted from the source code of the web page using Regular Expression.<br><br>\\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish. (For **71** github developers in the commit history of [awesome](https://github.com/sindresorhus/awesome), **33.8% (24)** developers are found provided github account on their Stack overflow profile)\\n\\n### 3. Find Possible Github Accounts through Tags Comparison<br>\\nFor the github users whose account are not provided on their Stack Overflow profile, their location and behavior features can be used for mapping. And for the location and tags commparsion, the score is used to evaluate the similarity between the github and Stack Overflow users.\\n* #### Location Comparison<br>\\nConsidering the name of a place can be presented as different forms, like `Lagos, Nigeria`, which can be written as `Lagos, lagos, Nigeria, and Federal Republic of Nigeria...` So if the string of github users\\u2019 location is contained in that of a possible Stack Overflow account, or the opposite, location score is 1, otherwise, the normalized [Levenstein distance](https://github.com/AlvinZSJ/python-Levenshtein) is used to evaluate the location similarity.\\n* #### Behavior Features Comparison<br>\\nThe developers behavior features can be exhibited by the languages they use and the topics of their repositories on github, and the tags of questions they asked and answered on Stack Overflow. However, according to paper [_Mining Developer Behavior Across GitHub and StackOverflow_](https://www.researchgate.net/publication/319052899_Mining_Developer_Behavior_Across_GitHub_and_StackOverflow), there are 21300 tags which are marked by users themselves on Stack Overflow, and 57 topics and languages marked by the system automatically on Github. Therefore, it\\u2019s necessary to find the synonymous tags between the two communities.<br><br>\\nThere is a Stack overflow API which returns the synonymous tags of the input tag. To find the linkage of tags on both communities, the languages and topics of a github developer is set as input, then we can get the list of synonymous Stack Overflow tags, like: <br>\\n![Image](https://github.com/AlvinZSJ/histo/blob/master/syn_list.png)\\nAlthough the Stack overflow API can be applied to find the synonymous tags of a certain tag, there are big differences between the name patterns of tags on the two communities, which makes the synonymous tag list incomplete. <br><br>\\nFor the comparison of tags, the tag score is used. By finding the number of tags which are related according to the synonymous tags list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\\n* #### Threshold<br>\\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7 and 1.0.<br><br>\\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome), for threshold 0.7, the matching rate is 81.43% (57/70), and for threshold 1.0, the matching rate is 71.43% (50/70). <br><br>\\nFor the developers selected by the threshold, their user id and score are recorded as \\\"userid_score\\\" in a list for further verification. The reason for not using the form \\\"username_score\\\" is that there are developers with same username but different user ids on Stack Overflow. **(\\uff9f\\u0414\\uff9f*)\\uff89**\\n\\n## Future Work\\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.\\n\\n\\n**Author: AlvinZSJ**\",\n      \"commit_date\": \"2017-10-09 21:07:21 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\\n    $ python main.py --compare c_file_dir1 c_file_dir2\\n\\nThe first AST is shown in pdf format:\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\\n\\nThe second AST is also shown in pdf format as follows:\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\\n\\nThe same part of two trees is labeled in red. \",\n      \"commit_date\": \"2017-10-09 15:41:00 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n\\n__author__  = 'king-jojo'\\n\\nimport json\\nimport re\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"    for x in range(1, len(node_list_cp)):\\n        num = node_list_cp[x]['_nodetype'].find('-')\\n        cp_list.append(num)\\n        cut = re.findall(RE_AZ, node_list_cp[x]['_nodetype'])\\n        if len(cut) > 0:\\n            node_list_cp[x]['_nodetype'] = cut[0]\\n        else:\\n            node_list_cp[x]['_nodetype'] = ''\\n    num_list = cp_list[:]\\n    for y in range(max(num_list) - 2, 0, -2):\\n        for x in range(len(num_list) - 1, -1, -1):\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n\\n__author__  = 'king-jojo'\\n\\nfrom AST2JSON import to_dict\\nfrom AST_Process import Node_extract\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"                    list2.append(index2)\\n    return [set1, set2]\\n\\ndef seq_process(code_path, preprocess):\\n    nodes = Node_extract(code_path, preprocess)\\n    dd = to_dict(nodes)\\n    num_list = dd[1]\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n\\n__author__  = 'king-jojo'\\n\\nimport os\\nimport re\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Process.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"    \\\"\\\"\\\"Print AST based on command line\\\"\\\"\\\"\\n    if preprocess == True:\\n        code_path = AST_preprocess(code_path)\\n        command = 'clang-check -ast-dump ' + code_path + ' --extra-arg=\\\"-fno-color-diagnostics\\\" --'\\n        F = os.popen(command)\\n        # (status, output) = commands.getstatusoutput('clang -Xclang -ast-dump -fsyntax-only ' + code_path)\\n    else:\\n        command = 'clang-check -ast-dump ' + code_path + ' --extra-arg=\\\"-fno-color-diagnostics\\\" --'\\n        F = os.popen(command)\\n        # (status, output) = commands.getstatusoutput('clang -Xclang -ast-dump -fsyntax-only ' + code_path)\\n    return F\\n\\ndef Node_extract(code_path, preprocess):\\n    \\\"\\\"\\\"Extract the nodes\\\"\\\"\\\"\\n    AST = AST_generate(code_path, preprocess)\\n    node_list = []\\n    new_line = ''\\n    for lines in AST:\\n        Node_dict = dict()\\n        if len(re.findall(RE_NODE, lines)) > 0:\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Process.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n\\n__author__  = 'king-jojo'\\n\\nfrom graphviz import Digraph\\nfrom AST_Process import Node_extract\\nimport re\\n\\nRE_AZ = re.compile(r'-(.*?) ')\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Visualization.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"    for x in range(1, len(node_list)):\\n        num = node_list[x]['_nodetype'].find('-')\\n        num_list.append(num)\\n        cut = re.findall(RE_AZ, node_list[x]['_nodetype'])\\n        if len(cut) > 0:\\n            node_list[x]['_nodetype'] = cut[0]\\n        else:\\n            node_list[x]['_nodetype'] = ''\\n    num_list.insert(0,0)\\n    if same_list == None:\\n        num_cp = num_list\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/AST_Visualization.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"    $ sudo pip install graphviz\\n\\n## Write into json\\nThis project can convert syntax tree into json format\\n\\n    $ python main.py --tojson c_file_dir\\n\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2json.png)\\n\\n## Generate AST graph with Graphviz\\n\\n    $ python main.py --view c_file_dir\\n\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast3.png)\\n## Compare two ASTs\\n\\n    $ python main.py --compare c_file_dir1 c_file_dir2\\n\\nThe first AST is shown in the pdf format\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\\n\\nThe second is shown below \\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\\n\\nThe same part of two trees is labeled in red. \",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/example/ast_a.json\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/example/ast_b.json\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"int f(int x){\\n  int y = 0;\\n  if (x > 0)\\n    y = 1;\\n  else \\n    y = x;\\n  return y;\\n}\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/example/test_new.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n\\n__author__ = 'king-jojo'\\n\\nimport AST_Compare\\nfrom AST_Visualization import node_graph\\nfrom AST2JSON import to_json\\nfrom AST_Process import Node_extract\\nimport sys\\nimport os\\nimport re\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\nRE_AZ = re.compile(r'-(.*?) ')\\nRE_C = re.compile(r'/(.*?).c')\\n\\nif __name__ == '__main__':\\n    args = sys.argv[1:]\\n    if len(args)>0:\\n        if args[0] == '--compare':\\n            if len(args[1:]) == 2:\\n                if os.path.exists(args[1]) and os.path.exists(args[2]):\\n                    code_path_a = args[1]\\n                    code_path_b = args[2]\\n                    sel = True\\n                    seq1 = AST_Compare.seq_process(code_path_a, sel)\\n                    seq2 = AST_Compare.seq_process(code_path_b, sel)\\n                    set = AST_Compare.Seqlist_compare(seq1, seq2)\\n                    node_graph(code_path_a, sel, set[0])\\n                    node_graph(code_path_b, sel, set[1])\\n                if not os.path.exists(args[1]) and os.path.exists(args[2]):\\n                    raise SystemExit(\\\"Error: Could not find the first c/c++ file\\\")\\n                if not os.path.exists(args[2]) and os.path.exists(args[1]):\\n                    raise SystemExit(\\\"Error: Could not find the second c/c++ file\\\")\\n                if not os.path.exists(args[1]) and not os.path.exists(args[2]):\\n                    raise SystemExit(\\\"Error: Could not find both two files\\\")\\n            else:\\n                raise SystemExit(\\\"Usage: python main.py --compare c_file_dir1 c_file_dir2\\\")\\n        elif args[0] == '--view':\\n            if len(args[1:]) == 1:\\n                if os.path.exists(args[1]):\\n                    code_path_a = args[1]\\n                    sel = True\\n                    seq1 = AST_Compare.seq_process(code_path_a, sel)\\n                    node_graph(code_path_a, sel, None)\\n                else:\\n                    raise SystemExit(\\\"Error: Could not find c/c++ file\\\")\\n            else:\\n                raise SystemExit(\\\"Usage: python main.py --view c_file_dir\\\")\\n        elif args[0] == '--tojson':\\n            if len(args[1:]) == 1:\\n                if os.path.exists(args[1]):\\n                    code_path_a = args[1]\\n                    sel = True\\n                    node_list = Node_extract(code_path_a, sel)\\n                    json_files_dir = dir_path + '/jsons'\\n                    if not os.path.exists(json_files_dir):\\n                        os.mkdir(json_files_dir)\\n                    json_file = json_files_dir + '/output.json'\\n                    to_json(node_list, json_file)\\n                    print (\\\"The json file path: \\\"+json_files_dir)\\n                else:\\n                    raise SystemExit(\\\"Error: Could not find c/c++ file\\\")\\n            else:\\n                raise SystemExit(\\\"Usage: python main.py --tojson c_file_dir\\\")\\n        else:\\n            raise SystemExit(\\\"Usage: python main.py --compare c_file_dir1 c_file_dir2 \\\\n       python main.py --view c_file_dir \\\\n       python main.py --tojson c_file_dir \\\")\\n    else:\\n        raise SystemExit(\\\"Usage: python main.py --compare c_file_dir1 c_file_dir2 \\\\n       python main.py --view c_file_dir \\\\n       python main.py --tojson c_file_dir \\\")\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/main.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"// ['example/test']\\ndigraph {\\n\\t0 [label=TranslationUnitDecl]\\n\\t1 [label=TypedefDecl]\\n\\t0 -> 1\\n\\t3 [label=TypedefDecl]\\n\\t0 -> 3\\n\\t5 [label=TypedefDecl]\\n\\t0 -> 5\\n\\t8 [label=TypedefDecl]\\n\\t0 -> 8\\n\\t12 [label=FunctionDecl]\\n\\t0 -> 12\\n\\t2 [label=BuiltinType]\\n\\t1 -> 2\\n\\t4 [label=BuiltinType]\\n\\t3 -> 4\\n\\t6 [label=PointerType]\\n\\t5 -> 6\\n\\t9 [label=ConstantArrayType]\\n\\t8 -> 9\\n\\t13 [label=ParmVarDecl]\\n\\t12 -> 13\\n\\t14 [label=CompoundStmt]\\n\\t12 -> 14\\n\\t7 [label=BuiltinType]\\n\\t6 -> 7\\n\\t10 [label=RecordType]\\n\\t9 -> 10\\n\\t15 [label=DeclStmt]\\n\\t14 -> 15\\n\\t18 [label=IfStmt]\\n\\t14 -> 18\\n\\t19 [label=IfStmt]\\n\\t14 -> 19\\n\\t31 [label=ReturnStmt]\\n\\t14 -> 31\\n\\t11 [label=Record]\\n\\t10 -> 11\\n\\t16 [label=VarDecl]\\n\\t15 -> 16\\n\\t20 [label=BinaryOperator]\\n\\t19 -> 20\\n\\t24 [label=BinaryOperator]\\n\\t19 -> 24\\n\\t27 [label=BinaryOperator]\\n\\t19 -> 27\\n\\t32 [label=ImplicitCastExpr]\\n\\t31 -> 32\\n\\t17 [label=IntegerLiteral]\\n\\t16 -> 17\\n\\t21 [label=ImplicitCastExpr]\\n\\t20 -> 21\\n\\t23 [label=IntegerLiteral]\\n\\t20 -> 23\\n\\t25 [label=DeclRefExpr]\\n\\t24 -> 25\\n\\t26 [label=IntegerLiteral]\\n\\t24 -> 26\\n\\t28 [label=DeclRefExpr]\\n\\t27 -> 28\\n\\t29 [label=ImplicitCastExpr]\\n\\t27 -> 29\\n\\t33 [label=DeclRefExpr]\\n\\t32 -> 33\\n\\t22 [label=DeclRefExpr]\\n\\t21 -> 22\\n\\t30 [label=DeclRefExpr]\\n\\t29 -> 30\\n}\",\n      \"commit_date\": \"2017-10-09 15:37:21 +0800\",\n      \"file\": \"ast/output/example/test\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\\n         \\\"dark-mode\\\",\\n         \\\"alfred3-workflow\\\",\\n         \\\"applescript\\\",\\n         \\\"alfy\\\",\\n         \\\"npm-package\\\",\\n         \\\"emoji\\\",\\n         \\\"emoji-picker\\\",\\n         \\\"emoji-searcher\\\",\\n         \\\"nodejs\\\",\\n         \\\"lock\\\",\\n         \\\"c-language\\\",\\n         \\\"npm\\\",\\n         \\\"npms\\\",\\n         \\\"search\\\",\\n         \\\"search-engine\\\",\\n         \\\"alfred-theme\\\",\\n         \\\"theme\\\",\\n         \\\"simple\\\",\\n         \\\"minimalistic\\\",\\n         \\\"light\\\",\\n         \\\"framework\\\",\\n         \\\"javascript\\\",\\n         \\\"workflow\\\",\\n         \\\"ama\\\",\\n         \\\"ask-me-anything\\\",\\n         \\\"question-answering\\\",\\n         \\\"meta\\\",\\n         \\\"personal\\\",\\n         \\\"ask\\\",\\n         \\\"open-content\\\",\\n         \\\"questions\\\",\\n         \\\"answers\\\",\\n         \\\"questions-and-answers\\\",\\n         \\\"list\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"deprecated\\\",\\n         \\\"twitter\\\",\\n         \\\"electron\\\",\\n         \\\"electron-app\\\"\\n      ],\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"C++\\\",\\n         \\\"IDL\\\",\\n         \\\"Java\\\",\\n         \\\"Arduino\\\",\\n         \\\"Processing\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C\\\",\\n         \\\"CMake\\\",\\n         \\\"Scheme\\\",\\n         \\\"GLSL\\\",\\n         \\\"Makefile\\\",\\n         \\\"Prolog\\\",\\n         \\\"XSLT\\\",\\n         \\\"C#\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"Python\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"C++\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"M4\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\\n         \\\"applications\\\",\\n         \\\"gnome-shell-extension\\\",\\n         \\\"gtk-theme\\\",\\n         \\\"css\\\",\\n         \\\"html\\\",\\n         \\\"bootstrap\\\",\\n         \\\"icons\\\",\\n         \\\"faenza\\\",\\n         \\\"linux\\\",\\n         \\\"bootstrap3\\\",\\n         \\\"css3\\\",\\n         \\\"html5\\\",\\n         \\\"education\\\",\\n         \\\"ressources-educatives\\\",\\n         \\\"logiciels\\\",\\n         \\\"libre\\\",\\n         \\\"culture-libre\\\"\\n      ],\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"github_tags\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"c\\\",\\n         \\\"linux\\\",\\n         \\\"linux-distribution\\\",\\n         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\"\\n      ],\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Swift\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"github_tags\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\\n         \\\"machine-learning\\\",\\n         \\\"curated-list\\\",\\n         \\\"coreml-framework\\\",\\n         \\\"coreml-models\\\",\\n         \\\"coremltools\\\",\\n         \\\"awesome-list\\\",\\n         \\\"models\\\",\\n         \\\"swift-framework\\\",\\n         \\\"swift3\\\",\\n         \\\"swift-library\\\",\\n         \\\"ios\\\",\\n         \\\"ios-swift\\\",\\n         \\\"ios-ui\\\",\\n         \\\"ios-animation\\\",\\n         \\\"ios-lib\\\",\\n         \\\"xib\\\",\\n         \\\"animation\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"GitHub Web Flow\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"web-flow\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Smarty\\\"\\n      ],\\n      \\\"location\\\": \\\"Winchester, VA\\\",\\n      \\\"name\\\": \\\"Kenneth Reitz\\\",\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"github_login\\\": \\\"kennethreitz\\\",\\n      \\\"github_tags\\\": [\\n         \\\"environment\\\",\\n         \\\"cd\\\",\\n         \\\"shell-extension\\\",\\n         \\\"shell-scripts\\\",\\n         \\\"bash\\\",\\n         \\\"zsh\\\",\\n         \\\"cdn\\\",\\n         \\\"cdnjs\\\",\\n         \\\"js\\\",\\n         \\\"css\\\",\\n         \\\"html\\\",\\n         \\\"html5\\\",\\n         \\\"cryptocurrency\\\",\\n         \\\"algorithms\\\",\\n         \\\"bitcoin\\\",\\n         \\\"ethereum\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"coin\\\",\\n         \\\"wallet\\\",\\n         \\\"algo\\\",\\n         \\\"nicehash\\\",\\n         \\\"python\\\",\\n         \\\"background-jobs\\\",\\n         \\\"background\\\",\\n         \\\"jobs\\\",\\n         \\\"tasks\\\",\\n         \\\"btc\\\",\\n         \\\"eth\\\",\\n         \\\"ripple\\\",\\n         \\\"litecoin\\\",\\n         \\\"api\\\",\\n         \\\"for-humans\\\",\\n         \\\"kennethreitz\\\"\\n      ],\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"location\\\": \\\"United States\\\",\\n      \\\"name\\\": \\\"John Jago\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"johnjago\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"ad-free\\\",\\n         \\\"websites\\\",\\n         \\\"services\\\",\\n         \\\"applications\\\",\\n         \\\"awesome\\\",\\n         \\\"gnu\\\",\\n         \\\"free-software\\\",\\n         \\\"fsf\\\",\\n         \\\"freedom\\\",\\n         \\\"software-freedom\\\",\\n         \\\"gpl\\\",\\n         \\\"libre\\\",\\n         \\\"theravada\\\",\\n         \\\"buddhism\\\",\\n         \\\"dhamma\\\",\\n         \\\"cc0\\\",\\n         \\\"uncopyright\\\",\\n         \\\"public-domain\\\",\\n         \\\"unlicense\\\",\\n         \\\"baseball\\\",\\n         \\\"coach-sheet\\\",\\n         \\\"pitches\\\",\\n         \\\"softball\\\",\\n         \\\"print\\\",\\n         \\\"cards\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"TeX\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Go\\\",\\n         \\\"Shell\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Awk\\\",\\n         \\\"Lua\\\",\\n         \\\"Haskell\\\",\\n         \\\"Roff\\\",\\n         \\\"Perl\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Smarty\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"name\\\": \\\"Stefanus\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"sfischer13\\\",\\n      \\\"github_tags\\\": [\\n         \\\"atom\\\",\\n         \\\"atom-package\\\",\\n         \\\"bundle\\\",\\n         \\\"beancount\\\",\\n         \\\"language-support\\\",\\n         \\\"formatter\\\",\\n         \\\"linter\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"eta\\\",\\n         \\\"haskell\\\",\\n         \\\"list\\\",\\n         \\\"jvm\\\",\\n         \\\"frege\\\",\\n         \\\"guitar\\\",\\n         \\\"music\\\",\\n         \\\"ledger\\\",\\n         \\\"accounting\\\",\\n         \\\"plaintext\\\",\\n         \\\"plaintext-accounting\\\",\\n         \\\"budget-manager\\\",\\n         \\\"chrome\\\",\\n         \\\"chrome-extension\\\",\\n         \\\"chromium\\\",\\n         \\\"wikipedia\\\",\\n         \\\"wikimedia\\\",\\n         \\\"favorite\\\",\\n         \\\"translation\\\",\\n         \\\"filter\\\",\\n         \\\"settings\\\",\\n         \\\"javascript\\\",\\n         \\\"go\\\",\\n         \\\"cli\\\",\\n         \\\"numbertools\\\",\\n         \\\"numerical-calculations\\\",\\n         \\\"golang\\\",\\n         \\\"console\\\",\\n         \\\"pipe\\\",\\n         \\\"stream\\\",\\n         \\\"number\\\",\\n         \\\"string-manipulation\\\",\\n         \\\"stringtools\\\",\\n         \\\"string\\\",\\n         \\\"text-manipulation\\\",\\n         \\\"texttools\\\",\\n         \\\"text\\\",\\n         \\\"toolbox\\\",\\n         \\\"library\\\",\\n         \\\"golang-library\\\",\\n         \\\"io\\\",\\n         \\\"math\\\",\\n         \\\"os\\\",\\n         \\\"slice\\\",\\n         \\\"m17n\\\",\\n         \\\"persian\\\",\\n         \\\"input-method\\\",\\n         \\\"lisp\\\",\\n         \\\"ibus\\\",\\n         \\\"uim\\\",\\n         \\\"transliteration\\\",\\n         \\\"farsi\\\",\\n         \\\"scim\\\",\\n         \\\"keyboard\\\",\\n         \\\"ppa\\\",\\n         \\\"launchpad\\\",\\n         \\\"ubuntu\\\",\\n         \\\"zesty\\\",\\n         \\\"python\\\",\\n         \\\"python-3\\\",\\n         \\\"arpa\\\",\\n         \\\"nlp\\\",\\n         \\\"language-model\\\",\\n         \\\"lm\\\",\\n         \\\"computational-linguistics\\\",\\n         \\\"lorem\\\",\\n         \\\"ipsum\\\",\\n         \\\"random-text\\\",\\n         \\\"placeholder\\\",\\n         \\\"generator\\\",\\n         \\\"prompt\\\",\\n         \\\"separator\\\",\\n         \\\"delimiter\\\",\\n         \\\"record\\\",\\n         \\\"unit\\\",\\n         \\\"tsv\\\",\\n         \\\"csv\\\",\\n         \\\"string-distance\\\",\\n         \\\"string-metrics\\\",\\n         \\\"levenshtein-distance\\\",\\n         \\\"hamming-distance\\\",\\n         \\\"text-analysis\\\",\\n         \\\"ttr\\\",\\n         \\\"type-token-ratio\\\",\\n         \\\"text-measuring\\\",\\n         \\\"text-metric\\\",\\n         \\\"android\\\",\\n         \\\"openthesaurus\\\",\\n         \\\"german\\\",\\n         \\\"antonym\\\",\\n         \\\"synonym\\\",\\n         \\\"hypernym\\\",\\n         \\\"hyponym\\\",\\n         \\\"synonyms\\\",\\n         \\\"dictionary\\\",\\n         \\\"app\\\",\\n         \\\"template\\\",\\n         \\\"snakemake\\\",\\n         \\\"mit-license\\\",\\n         \\\"workflow-management\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"C++\\\",\\n         \\\"M4\\\",\\n         \\\"NSIS\\\",\\n         \\\"Makefile\\\",\\n         \\\"Go\\\",\\n         \\\"DTrace\\\",\\n         \\\"CMake\\\",\\n         \\\"Objective-C\\\",\\n         \\\"PureBasic\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"PHP\\\",\\n         \\\"Swift\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C#\\\",\\n         \\\"Puppet\\\",\\n         \\\"PLpgSQL\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"location\\\": \\\"Volgograd, Russia\\\",\\n      \\\"name\\\": \\\"Sergey Ukustov\\\",\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"github_login\\\": \\\"ukstv\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Rust\\\",\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Selwyn\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"Siilwyn\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"pixel-art\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Inno Setup\\\",\\n         \\\"Arduino\\\",\\n         \\\"Tcl\\\"\\n      ],\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\",\\n      \\\"name\\\": \\\"Sebastian Raff\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"hobbyquaker\\\",\\n      \\\"github_tags\\\": [\\n         \\\"airtunes\\\",\\n         \\\"airplay\\\",\\n         \\\"mqtt\\\",\\n         \\\"apc\\\",\\n         \\\"ups\\\",\\n         \\\"apcupsd\\\",\\n         \\\"battery\\\",\\n         \\\"voltage\\\",\\n         \\\"power\\\",\\n         \\\"vape\\\",\\n         \\\"mod\\\",\\n         \\\"arcticfox\\\",\\n         \\\"node-module\\\",\\n         \\\"firmware\\\",\\n         \\\"configuration\\\",\\n         \\\"temperature-control\\\",\\n         \\\"config\\\",\\n         \\\"encode\\\",\\n         \\\"decode\\\",\\n         \\\"dmx\\\",\\n         \\\"artnet\\\",\\n         \\\"stage-lighting\\\",\\n         \\\"dmx512\\\",\\n         \\\"art-net\\\",\\n         \\\"lighting\\\",\\n         \\\"homematic\\\",\\n         \\\"smarthome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"internet-of-things\\\",\\n         \\\"rpc\\\",\\n         \\\"homegear\\\",\\n         \\\"github\\\",\\n         \\\"readme\\\",\\n         \\\"badges\\\",\\n         \\\"cache\\\",\\n         \\\"camo\\\",\\n         \\\"purge\\\",\\n         \\\"clear\\\",\\n         \\\"build\\\",\\n         \\\"images\\\",\\n         \\\"nagios\\\",\\n         \\\"icinga\\\",\\n         \\\"nextcloud\\\",\\n         \\\"monitoring\\\",\\n         \\\"security\\\",\\n         \\\"nagios-plugin\\\",\\n         \\\"pm2\\\",\\n         \\\"nodejs\\\",\\n         \\\"process-manager\\\",\\n         \\\"check\\\",\\n         \\\"plugin\\\",\\n         \\\"speedport\\\",\\n         \\\"dsl\\\",\\n         \\\"router\\\",\\n         \\\"telekom\\\",\\n         \\\"culfw\\\",\\n         \\\"usb\\\",\\n         \\\"fs20\\\",\\n         \\\"fhem\\\",\\n         \\\"dna-chipsets\\\",\\n         \\\"api\\\",\\n         \\\"serial\\\"\\n      ],\\n      \\\"email\\\": \\\"hq@ccu.io\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CMake\\\",\\n         \\\"Python\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Roff\\\",\\n         \\\"Java\\\",\\n         \\\"GLSL\\\",\\n         \\\"Lua\\\",\\n         \\\"QMake\\\",\\n         \\\"PHP\\\",\\n         \\\"Batchfile\\\",\\n         \\\"HTML\\\",\\n         \\\"HLSL\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Prolog\\\",\\n         \\\"C++\\\",\\n         \\\"CSS\\\",\\n         \\\"Perl\\\",\\n         \\\"Shell\\\",\\n         \\\"NSIS\\\",\\n         \\\"Makefile\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": null,\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"stetso\\\",\\n      \\\"github_tags\\\": [\\n         \\\"lua\\\",\\n         \\\"gamedev\\\",\\n         \\\"mobile-game\\\",\\n         \\\"mobile-development\\\",\\n         \\\"game-engine\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gideros\\\",\\n         \\\"game-development\\\",\\n         \\\"mobile\\\",\\n         \\\"swipe-gestures\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Vim script\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"name\\\": \\\"Roald Nefs\\\",\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"github_login\\\": \\\"roaldnefs\\\",\\n      \\\"github_tags\\\": [\\n         \\\"prometheus\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"dotfiles\\\"\\n      ],\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Nginx\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"location\\\": \\\"Dallas, TX\\\",\\n      \\\"name\\\": \\\"Chase Giunta\\\",\\n      \\\"company\\\": \\\"@simplygoodwork\\\",\\n      \\\"github_login\\\": \\\"chasegiunta\\\",\\n      \\\"github_tags\\\": [\\n         \\\"craftcms\\\",\\n         \\\"craft\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"craft-plugin\\\",\\n         \\\"list\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Scala\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\",\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"CMake\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"C++\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Rust\\\",\\n         \\\"PLpgSQL\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\",\\n      \\\"name\\\": \\\"Lauri Apple\\\",\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"github_login\\\": \\\"LappleApple\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"leadership\\\",\\n         \\\"management\\\",\\n         \\\"engineering-managers\\\",\\n         \\\"hiring\\\",\\n         \\\"diversity\\\",\\n         \\\"engineering-management\\\",\\n         \\\"awesome\\\",\\n         \\\"tech-culture\\\",\\n         \\\"retrospectives\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\",\\n      \\\"name\\\": \\\"Meitar M.\\\",\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"github_login\\\": \\\"meitar\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"lockpicking\\\",\\n         \\\"locksport\\\",\\n         \\\"physec\\\",\\n         \\\"physical-security\\\",\\n         \\\"picking-locks\\\",\\n         \\\"keypicking\\\",\\n         \\\"locksmith\\\",\\n         \\\"locksmithing\\\",\\n         \\\"awesome\\\",\\n         \\\"buddypress\\\",\\n         \\\"wordpress-plugin\\\",\\n         \\\"buddypress-plugin\\\",\\n         \\\"utilities\\\",\\n         \\\"crabgrass\\\",\\n         \\\"0xacab\\\",\\n         \\\"backup-script\\\",\\n         \\\"ctf\\\",\\n         \\\"data-structures\\\",\\n         \\\"algorithms\\\",\\n         \\\"educational\\\",\\n         \\\"practice\\\",\\n         \\\"programming-style\\\",\\n         \\\"chrome-extension\\\",\\n         \\\"web-extension\\\"\\n      ],\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Python\\\",\\n         \\\"TeX\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"Gnuplot\\\"\\n      ],\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\",\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"angrykoala\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"esoteric\\\",\\n         \\\"awesome-list\\\",\\n         \\\"esoteric-language\\\",\\n         \\\"chuck-norris\\\",\\n         \\\"language\\\",\\n         \\\"javascript\\\",\\n         \\\"npm-package\\\",\\n         \\\"electron\\\",\\n         \\\"vuejs\\\",\\n         \\\"task-runner\\\",\\n         \\\"gui\\\",\\n         \\\"launcher\\\",\\n         \\\"nodejs\\\",\\n         \\\"mp3\\\",\\n         \\\"music\\\",\\n         \\\"tags\\\"\\n      ],\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\",\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"ooade\\\",\\n      \\\"github_tags\\\": [\\n         \\\"challenge\\\",\\n         \\\"code\\\",\\n         \\\"portfolio\\\",\\n         \\\"nextjs\\\",\\n         \\\"react\\\",\\n         \\\"simple\\\",\\n         \\\"apollo\\\",\\n         \\\"apollo-server\\\",\\n         \\\"apollo-client\\\",\\n         \\\"boilerplate\\\",\\n         \\\"anime\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"graphql\\\",\\n         \\\"apollo-graphql-ecosystem\\\",\\n         \\\"article\\\",\\n         \\\"awesomeness\\\",\\n         \\\"preact\\\",\\n         \\\"jsx\\\",\\n         \\\"resources\\\",\\n         \\\"gif\\\",\\n         \\\"nodejs\\\",\\n         \\\"giphy\\\",\\n         \\\"console\\\",\\n         \\\"fonsole\\\",\\n         \\\"log\\\",\\n         \\\"javascript\\\",\\n         \\\"formatter\\\",\\n         \\\"webpack2\\\",\\n         \\\"service-worker\\\",\\n         \\\"pwa\\\",\\n         \\\"css\\\",\\n         \\\"minify\\\",\\n         \\\"test\\\",\\n         \\\"css-minifier\\\",\\n         \\\"react-toolbox\\\",\\n         \\\"ssr\\\",\\n         \\\"development-workflow\\\",\\n         \\\"webpack\\\",\\n         \\\"starter-kit\\\",\\n         \\\"pwa-boilerplate\\\"\\n      ],\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Smarty\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\",\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"mezod\\\",\\n      \\\"github_tags\\\": [\\n         \\\"indie\\\",\\n         \\\"indiedev\\\",\\n         \\\"passive-income\\\",\\n         \\\"financial-independence\\\",\\n         \\\"bootstrapper\\\",\\n         \\\"entrepreneurs\\\",\\n         \\\"sideproject\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"email\\\": \\\"mezood@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"Makefile\\\",\\n         \\\"PHP\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Go\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Sheon Han\\\",\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"github_login\\\": \\\"sheonhan\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"effective-altruism\\\",\\n         \\\"philanthropy\\\"\\n      ],\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Vue\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"location\\\": \\\"Spain\\\",\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\",\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"github_login\\\": \\\"m1guelpf\\\",\\n      \\\"github_tags\\\": [\\n         \\\"php\\\",\\n         \\\"curl\\\",\\n         \\\"php-api\\\",\\n         \\\"mysql\\\",\\n         \\\"python\\\",\\n         \\\"activity\\\",\\n         \\\"logger\\\",\\n         \\\"log\\\",\\n         \\\"api\\\",\\n         \\\"beta\\\",\\n         \\\"laravel\\\",\\n         \\\"package\\\",\\n         \\\"deployment\\\",\\n         \\\"mode\\\"\\n      ],\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Lua\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"location\\\": \\\"Hampshire, UK\\\",\\n      \\\"name\\\": \\\"Craig Davison\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"davisonio\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"gif\\\",\\n         \\\"irc\\\",\\n         \\\"bacon\\\",\\n         \\\"mod\\\",\\n         \\\"bacon-mod\\\",\\n         \\\"video-game\\\",\\n         \\\"lua\\\",\\n         \\\"minetest\\\",\\n         \\\"minetest-mod\\\",\\n         \\\"minetest-mods\\\",\\n         \\\"minetest-engine\\\",\\n         \\\"minetest-subgame\\\",\\n         \\\"coloured-stone-bricks\\\",\\n         \\\"bricks\\\",\\n         \\\"craig\\\",\\n         \\\"game\\\",\\n         \\\"craig-server-game\\\",\\n         \\\"craig-minetest-server\\\",\\n         \\\"mods\\\",\\n         \\\"module\\\",\\n         \\\"modular\\\",\\n         \\\"darkage\\\",\\n         \\\"dark-ages\\\",\\n         \\\"wtfpl\\\",\\n         \\\"darkage-mod\\\",\\n         \\\"gaming\\\",\\n         \\\"gaming-cms\\\",\\n         \\\"css\\\",\\n         \\\"website\\\",\\n         \\\"www\\\",\\n         \\\"jekyll\\\",\\n         \\\"minimalist\\\",\\n         \\\"devops\\\",\\n         \\\"devops-tools\\\",\\n         \\\"devops-services\\\",\\n         \\\"ansible\\\",\\n         \\\"ansible-role\\\",\\n         \\\"ansible-roles\\\",\\n         \\\"ansible-demo\\\",\\n         \\\"ansible-tips\\\",\\n         \\\"ubuntu\\\",\\n         \\\"deployment\\\",\\n         \\\"redirect\\\",\\n         \\\"github\\\",\\n         \\\"davisonio\\\",\\n         \\\"github-io\\\",\\n         \\\"github-api\\\",\\n         \\\"github-pages\\\",\\n         \\\"github-page\\\",\\n         \\\"github-bot\\\",\\n         \\\"http\\\",\\n         \\\"https\\\",\\n         \\\"java\\\",\\n         \\\"java-8\\\",\\n         \\\"java-library\\\",\\n         \\\"java8\\\",\\n         \\\"java-sample\\\",\\n         \\\"java-scripts\\\",\\n         \\\"javafx\\\",\\n         \\\"learning\\\",\\n         \\\"learning-java\\\",\\n         \\\"learn\\\",\\n         \\\"pixels\\\",\\n         \\\"simplepixels-texture-pack\\\",\\n         \\\"texture-pack\\\",\\n         \\\"simple\\\",\\n         \\\"pixel-art\\\",\\n         \\\"pixel\\\",\\n         \\\"pixel-layout\\\",\\n         \\\"text\\\",\\n         \\\"textures\\\"\\n      ],\\n      \\\"email\\\": \\\"craig@davison.io\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"PHP\\\",\\n         \\\"Perl\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"location\\\": \\\"Moscow\\\",\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\",\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"github_login\\\": \\\"vitalets\\\",\\n      \\\"github_tags\\\": [\\n         \\\"smart-tv\\\",\\n         \\\"smarttv\\\",\\n         \\\"tizen\\\",\\n         \\\"webos-tv\\\",\\n         \\\"samsung-smart-tv\\\",\\n         \\\"chromecast\\\",\\n         \\\"android-tv\\\",\\n         \\\"apple-tv\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"type-checking\\\",\\n         \\\"type-safety\\\",\\n         \\\"type-hints\\\",\\n         \\\"runtime-code-analysis\\\",\\n         \\\"babel-plugin\\\",\\n         \\\"babel\\\",\\n         \\\"html5-filesystem-api\\\",\\n         \\\"filesystem-api\\\",\\n         \\\"eventemitter\\\",\\n         \\\"event-emitter\\\",\\n         \\\"subscription\\\",\\n         \\\"pubsub\\\",\\n         \\\"events\\\",\\n         \\\"eventbus\\\",\\n         \\\"listener\\\"\\n      ],\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"Swift\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Python\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"AppleScript\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Pim Snel\\\",\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"github_login\\\": \\\"mipmip\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Pascal\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"Makefile\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"R\\\",\\n         \\\"Java\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"Forth\\\"\\n      ],\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"name\\\": \\\"Andrei Beliankou\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"arbox\\\",\\n      \\\"github_tags\\\": [\\n         \\\"ruby\\\",\\n         \\\"java\\\",\\n         \\\"interoperability\\\",\\n         \\\"data-science\\\",\\n         \\\"data-visualization\\\",\\n         \\\"data-analysis\\\",\\n         \\\"data-mining\\\",\\n         \\\"data-analytics\\\",\\n         \\\"visualization\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\\n         \\\"ml\\\",\\n         \\\"machine-learning\\\",\\n         \\\"ruby-gem\\\",\\n         \\\"rubyml\\\",\\n         \\\"rubynlp\\\",\\n         \\\"natural-language-processing\\\",\\n         \\\"nlp\\\",\\n         \\\"sentiment-analysis\\\",\\n         \\\"pos-tag\\\",\\n         \\\"computational-linguistics\\\",\\n         \\\"rails\\\",\\n         \\\"bbatsov\\\",\\n         \\\"style-guide\\\",\\n         \\\"rubydatascience\\\",\\n         \\\"inter-process-communication\\\",\\n         \\\"r\\\",\\n         \\\"rust\\\",\\n         \\\"c\\\",\\n         \\\"russian\\\",\\n         \\\"rubocop\\\",\\n         \\\"style\\\",\\n         \\\"tokenizer\\\"\\n      ],\\n      \\\"email\\\": \\\"arbox@yandex.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"location\\\": \\\"Athens, Greece\\\",\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"k4m4\\\",\\n      \\\"github_tags\\\": [\\n         \\\"donations\\\",\\n         \\\"template\\\",\\n         \\\"website-template\\\",\\n         \\\"html\\\",\\n         \\\"css\\\",\\n         \\\"bootstrap\\\",\\n         \\\"hacking\\\",\\n         \\\"infosec\\\",\\n         \\\"dictionary-based-attacks\\\",\\n         \\\"brute-force\\\",\\n         \\\"security\\\",\\n         \\\"bounty\\\",\\n         \\\"networking\\\",\\n         \\\"arp-spoofing\\\",\\n         \\\"movies\\\",\\n         \\\"curated-list\\\",\\n         \\\"collection\\\",\\n         \\\"sexy-lists\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\\n         \\\"deep-web\\\",\\n         \\\"tor\\\",\\n         \\\"terminal\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"R\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Shell\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C++\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"name\\\": \\\"Akash Tandon\\\",\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"github_login\\\": \\\"analyticalmonk\\\",\\n      \\\"github_tags\\\": [\\n         \\\"data-science-competition\\\",\\n         \\\"data-science\\\",\\n         \\\"r\\\",\\n         \\\"gbm\\\",\\n         \\\"machine-learning\\\",\\n         \\\"h2oai\\\",\\n         \\\"neuroscience\\\",\\n         \\\"mooc\\\",\\n         \\\"brain\\\",\\n         \\\"awesome-list\\\",\\n         \\\"matlab\\\",\\n         \\\"python\\\",\\n         \\\"intelligence\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"blaze\\\",\\n         \\\"pydata\\\",\\n         \\\"pandas\\\",\\n         \\\"numpy\\\",\\n         \\\"python3\\\",\\n         \\\"jupyter-notebook\\\",\\n         \\\"python-3\\\",\\n         \\\"dask\\\",\\n         \\\"reddit\\\",\\n         \\\"datascience\\\",\\n         \\\"visualization\\\",\\n         \\\"castra\\\",\\n         \\\"ipython-notebook\\\"\\n      ],\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"C++\\\",\\n         \\\"Fortran\\\",\\n         \\\"Swift\\\",\\n         \\\"Makefile\\\",\\n         \\\"TeX\\\",\\n         \\\"Ruby\\\",\\n         \\\"Matlab\\\",\\n         \\\"Julia\\\",\\n         \\\"Vue\\\",\\n         \\\"Jupyter Notebook\\\"\\n      ],\\n      \\\"location\\\": \\\"Europe\\\",\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"faroit\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"python\\\",\\n         \\\"audio\\\",\\n         \\\"audio-player\\\",\\n         \\\"vuejs\\\",\\n         \\\"electron\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\"\\n      ],\\n      \\\"location\\\": \\\"East Earl, PA\\\",\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\",\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"github_login\\\": \\\"RyanZim\\\",\\n      \\\"github_tags\\\": [\\n         \\\"npm\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"task-runner\\\",\\n         \\\"list\\\",\\n         \\\"npm-scripts\\\",\\n         \\\"static-site-generator\\\",\\n         \\\"javascript\\\",\\n         \\\"template-engine\\\",\\n         \\\"markdown\\\",\\n         \\\"html\\\",\\n         \\\"postcss\\\",\\n         \\\"css-selector\\\",\\n         \\\"uncss\\\",\\n         \\\"css\\\",\\n         \\\"promises\\\",\\n         \\\"callbacks\\\",\\n         \\\"nodejs\\\",\\n         \\\"js\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\"\\n      ],\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\",\\n      \\\"name\\\": \\\"Richard Littauer\\\",\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"github_login\\\": \\\"RichardLitt\\\",\\n      \\\"github_tags\\\": [\\n         \\\"bear\\\",\\n         \\\"bears\\\",\\n         \\\"bearss\\\",\\n         \\\"land\\\",\\n         \\\"petition\\\",\\n         \\\"access-land\\\",\\n         \\\"access\\\",\\n         \\\"poetry\\\"\\n      ],\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Cucumber\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Swift\\\",\\n         \\\"Python\\\",\\n         \\\"Gherkin\\\",\\n         \\\"FreeMarker\\\"\\n      ],\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\",\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\",\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"github_login\\\": \\\"victorlaerte\\\",\\n      \\\"github_tags\\\": [\\n         \\\"android\\\",\\n         \\\"android-seed\\\",\\n         \\\"template\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"quotes\\\",\\n         \\\"paper\\\",\\n         \\\"msr\\\",\\n         \\\"travis-torrent\\\",\\n         \\\"java\\\",\\n         \\\"javascript\\\",\\n         \\\"stories\\\",\\n         \\\"bad-code\\\",\\n         \\\"dilmes-ipsum\\\",\\n         \\\"lorem\\\",\\n         \\\"python\\\",\\n         \\\"sublime-text-plugin\\\",\\n         \\\"sublime\\\",\\n         \\\"ipsum\\\",\\n         \\\"trump\\\",\\n         \\\"trump-ipsum\\\",\\n         \\\"lorem-ipsum\\\",\\n         \\\"lorem-ipsum-generator\\\",\\n         \\\"atom-plugin\\\",\\n         \\\"asynctask\\\",\\n         \\\"javafx\\\"\\n      ],\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Common Lisp\\\",\\n         \\\"Lua\\\",\\n         \\\"TeX\\\",\\n         \\\"Haskell\\\",\\n         \\\"Alloy\\\",\\n         \\\"JavaScript\\\",\\n         \\\"LiveScript\\\",\\n         \\\"Java\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Erlang\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"Python\\\",\\n         \\\"Clojure\\\",\\n         \\\"Julia\\\",\\n         \\\"Shell\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"C\\\",\\n         \\\"Scala\\\",\\n         \\\"C++\\\",\\n         \\\"Scheme\\\",\\n         \\\"Stata\\\",\\n         \\\"F#\\\",\\n         \\\"Visual Basic\\\",\\n         \\\"Racket\\\",\\n         \\\"COBOL\\\",\\n         \\\"Pascal\\\",\\n         \\\"PigLatin\\\",\\n         \\\"XSLT\\\",\\n         \\\"E\\\",\\n         \\\"Forth\\\",\\n         \\\"Idris\\\",\\n         \\\"Isabelle\\\",\\n         \\\"C#\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Mathematica\\\",\\n         \\\"Brightscript\\\",\\n         \\\"Vue\\\",\\n         \\\"Nim\\\",\\n         \\\"Puppet\\\",\\n         \\\"R\\\",\\n         \\\"Matlab\\\",\\n         \\\"Logtalk\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Haxe\\\",\\n         \\\"Assembly\\\",\\n         \\\"GLSL\\\",\\n         \\\"Smalltalk\\\",\\n         \\\"xBase\\\",\\n         \\\"XQuery\\\",\\n         \\\"ColdFusion\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Mako\\\",\\n         \\\"ANTLR\\\",\\n         \\\"Fortran\\\",\\n         \\\"Elixir\\\",\\n         \\\"Gherkin\\\",\\n         \\\"PHP\\\",\\n         \\\"SystemVerilog\\\",\\n         \\\"Perl\\\",\\n         \\\"GAP\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Tcl\\\",\\n         \\\"Swift\\\",\\n         \\\"FreeMarker\\\",\\n         \\\"Clean\\\",\\n         \\\"Brainfuck\\\",\\n         \\\"Groff\\\",\\n         \\\"Cucumber\\\",\\n         \\\"Agda\\\",\\n         \\\"OCaml\\\",\\n         \\\"VimL\\\",\\n         \\\"CMake\\\"\\n      ],\\n      \\\"location\\\": \\\"Singapore\\\",\\n      \\\"name\\\": \\\"Xiao Hanyu\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"xiaohanyu\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"tikz\\\",\\n         \\\"latex\\\",\\n         \\\"tex\\\",\\n         \\\"shell\\\",\\n         \\\"fun\\\",\\n         \\\"imagemagick\\\"\\n      ],\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"JavaScript\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"Shell\\\",\\n         \\\"Logos\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Nginx\\\",\\n         \\\"XSLT\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"name\\\": \\\"DavidLamabuer\\\",\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"github_login\\\": \\\"DavidLambauer\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"magento2\\\",\\n         \\\"collection\\\",\\n         \\\"magento-2\\\",\\n         \\\"magento-extension\\\",\\n         \\\"php\\\",\\n         \\\"packages\\\",\\n         \\\"awesome-list\\\",\\n         \\\"documentation\\\",\\n         \\\"documentation-tool\\\"\\n      ],\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\"\\n      ],\\n      \\\"location\\\": \\\"Sweden\\\",\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\",\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"github_login\\\": \\\"kevva\\\",\\n      \\\"github_tags\\\": [\\n         \\\"binary\\\",\\n         \\\"check\\\",\\n         \\\"nodejs\\\",\\n         \\\"executable\\\",\\n         \\\"brightness\\\",\\n         \\\"brightness-level\\\",\\n         \\\"screen-brightness\\\",\\n         \\\"cli\\\",\\n         \\\"calc\\\",\\n         \\\"percent\\\",\\n         \\\"proxy\\\",\\n         \\\"tunneling-proxies\\\",\\n         \\\"https-agents\\\",\\n         \\\"protocol\\\",\\n         \\\"http\\\",\\n         \\\"https\\\",\\n         \\\"tunnel\\\"\\n      ],\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Roff\\\",\\n         \\\"SQLPL\\\",\\n         \\\"Perl\\\",\\n         \\\"XSLT\\\",\\n         \\\"ASP\\\",\\n         \\\"Batchfile\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Makefile\\\",\\n         \\\"Smarty\\\",\\n         \\\"VimL\\\"\\n      ],\\n      \\\"location\\\": \\\"Los Angeles, US\\\",\\n      \\\"name\\\": \\\"Matthew Vita\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"MatthewVita\\\",\\n      \\\"github_tags\\\": [\\n         \\\"hl7-parsing\\\",\\n         \\\"hl7-message\\\",\\n         \\\"hit\\\",\\n         \\\"healthcare\\\",\\n         \\\"hl7\\\",\\n         \\\"hl7-builder\\\",\\n         \\\"hapi\\\",\\n         \\\"emr\\\"\\n      ],\\n      \\\"email\\\": \\\"matthewvita@live.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Vim script\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"ANTLR\\\",\\n         \\\"Rust\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"location\\\": \\\"Germany, pretty central\\\",\\n      \\\"name\\\": null,\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"kud1ing\\\",\\n      \\\"github_tags\\\": [\\n         \\\"rust\\\",\\n         \\\"jni\\\",\\n         \\\"java\\\",\\n         \\\"ffi\\\",\\n         \\\"tinkerpop\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\",\\n         \\\"Python\\\",\\n         \\\"PHP\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Java\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Jasper Moelker\\\",\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"github_login\\\": \\\"jbmoelker\\\",\\n      \\\"github_tags\\\": [\\n         \\\"svelte\\\",\\n         \\\"demo\\\",\\n         \\\"examples\\\",\\n         \\\"rollup\\\",\\n         \\\"postcss\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"C\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Swift\\\",\\n         \\\"Shell\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"name\\\": \\\"David van Leeuwen\\\",\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"github_login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"github_tags\\\": [\\n         \\\"life\\\",\\n         \\\"personal\\\"\\n      ],\\n      \\\"email\\\": \\\"david@madeawkward.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Swift\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"Python\\\",\\n         \\\"Haskell\\\",\\n         \\\"Shell\\\",\\n         \\\"Racket\\\",\\n         \\\"Coq\\\",\\n         \\\"Makefile\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"Go\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C++\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Hack\\\",\\n         \\\"Nginx\\\"\\n      ],\\n      \\\"location\\\": \\\"Taiwan\\\",\\n      \\\"name\\\": \\\"Boik\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"qazbnm456\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"cve\\\",\\n         \\\"poc\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\\n         \\\"security\\\",\\n         \\\"trivia\\\",\\n         \\\"treasure\\\",\\n         \\\"web\\\",\\n         \\\"websecurity\\\",\\n         \\\"penetration-testing\\\",\\n         \\\"vuejs2\\\",\\n         \\\"electron\\\",\\n         \\\"prototype\\\",\\n         \\\"docker\\\",\\n         \\\"wargame\\\",\\n         \\\"ctf\\\",\\n         \\\"rails\\\"\\n      ],\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"location\\\": \\\"France\\\",\\n      \\\"name\\\": \\\"Quentin Goinaud\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"armaldio\\\",\\n      \\\"github_tags\\\": [\\n         \\\"website\\\",\\n         \\\"armaldio\\\",\\n         \\\"blog\\\",\\n         \\\"game-development\\\",\\n         \\\"tutorial\\\",\\n         \\\"construct\\\",\\n         \\\"general-tutorials\\\",\\n         \\\"platform-game\\\",\\n         \\\"making-games\\\",\\n         \\\"games-showcase\\\",\\n         \\\"itch\\\",\\n         \\\"engine\\\",\\n         \\\"construct2\\\",\\n         \\\"plugin\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"F#\\\",\\n         \\\"PHP\\\",\\n         \\\"Java\\\",\\n         \\\"Groovy\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Swift\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Scala\\\",\\n         \\\"C#\\\"\\n      ],\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\",\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"mislavcimpersak\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"jokes\\\",\\n         \\\"fun\\\",\\n         \\\"django\\\",\\n         \\\"lorem-ipsum\\\",\\n         \\\"docker\\\",\\n         \\\"docker-image\\\",\\n         \\\"postgresql\\\",\\n         \\\"hstore\\\",\\n         \\\"presentation\\\",\\n         \\\"reveal-js\\\",\\n         \\\"aws-lambda\\\",\\n         \\\"serverless\\\",\\n         \\\"twitter-bot\\\",\\n         \\\"zappa\\\",\\n         \\\"faas\\\",\\n         \\\"joke\\\",\\n         \\\"talk\\\",\\n         \\\"xkcd\\\",\\n         \\\"excuses\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"CMake\\\",\\n         \\\"GLSL\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"Java\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"Ruby\\\",\\n         \\\"Go\\\",\\n         \\\"C#\\\",\\n         \\\"Cuda\\\",\\n         \\\"Objective-C\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Spencer\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"sjfricke\\\",\\n      \\\"github_tags\\\": [\\n         \\\"webgl-programming\\\",\\n         \\\"webgl-articles\\\",\\n         \\\"glsl-editors\\\",\\n         \\\"webgl-tutorials\\\",\\n         \\\"webgl\\\",\\n         \\\"learning-webgl\\\",\\n         \\\"webgl-references\\\",\\n         \\\"webgl-spec-sheet\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Perl\\\",\\n         \\\"VimL\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"location\\\": \\\"Central Mass.\\\",\\n      \\\"name\\\": \\\"Quang Van\\\",\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"github_login\\\": \\\"quangv\\\",\\n      \\\"github_tags\\\": [\\n         \\\"couchdb\\\",\\n         \\\"cloudant\\\",\\n         \\\"couchdb-wiki\\\",\\n         \\\"best-practices\\\",\\n         \\\"couchdb-chat\\\"\\n      ],\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Perl\\\",\\n         \\\"Puppet\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Grzesiek W\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"kminek\\\",\\n      \\\"github_tags\\\": [\\n         \\\"markdown\\\",\\n         \\\"parser\\\",\\n         \\\"standard\\\",\\n         \\\"marklink\\\",\\n         \\\"sublime-text\\\",\\n         \\\"php\\\"\\n      ],\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"Go\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Roff\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"location\\\": \\\"Columbia, MD\\\",\\n      \\\"name\\\": \\\"Peter Matseykanets\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"pmatseykanets\\\",\\n      \\\"github_tags\\\": [\\n         \\\"laravel\\\",\\n         \\\"laravel-package\\\",\\n         \\\"beanstalkd\\\",\\n         \\\"artisan-command\\\",\\n         \\\"import\\\",\\n         \\\"database\\\",\\n         \\\"eloquent\\\",\\n         \\\"queue\\\",\\n         \\\"laravel-scout\\\",\\n         \\\"postgresql\\\",\\n         \\\"postgres\\\",\\n         \\\"full-text-search\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Python\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"Shell\\\",\\n         \\\"Dart\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\",\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"github_login\\\": \\\"gdi2290\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"github@gdi2290.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\",\\n      \\\"name\\\": \\\"Adrian Baran\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"bouzlibop\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Perl\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"BubuAnabelas\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"list\\\",\\n         \\\"markdown\\\",\\n         \\\"commonmark\\\",\\n         \\\"resources\\\",\\n         \\\"webtorrent\\\",\\n         \\\"bittorrent\\\",\\n         \\\"webrtc\\\",\\n         \\\"torrent\\\",\\n         \\\"p2p\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\"\\n      ],\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\",\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"podo\\\",\\n      \\\"github_tags\\\": [\\n         \\\"framer-prototype\\\",\\n         \\\"framer-studio\\\",\\n         \\\"framerjs\\\",\\n         \\\"prototype\\\",\\n         \\\"framer\\\",\\n         \\\"framer-resources\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"autocode\\\",\\n         \\\"video-course\\\"\\n      ],\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Matlab\\\",\\n         \\\"Python\\\",\\n         \\\"TeX\\\",\\n         \\\"Jupyter Notebook\\\"\\n      ],\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\",\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\",\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"github_login\\\": \\\"terryum\\\",\\n      \\\"github_tags\\\": [\\n         \\\"deep-learning\\\",\\n         \\\"deep-neural-networks\\\",\\n         \\\"machine-learning\\\"\\n      ],\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Web Ontology Language\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Cap'n Proto\\\"\\n      ],\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\",\\n      \\\"name\\\": \\\"Lucas Bassetti\\\",\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"github_login\\\": \\\"LucasBassetti\\\",\\n      \\\"github_tags\\\": [\\n         \\\"archimate\\\",\\n         \\\"java\\\",\\n         \\\"plugin\\\",\\n         \\\"owl\\\",\\n         \\\"archi\\\",\\n         \\\"lesscss\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"less\\\",\\n         \\\"css\\\",\\n         \\\"transparency\\\",\\n         \\\"government\\\",\\n         \\\"web-crawler\\\",\\n         \\\"ontologia\\\",\\n         \\\"ontouml\\\",\\n         \\\"cli\\\",\\n         \\\"i18n\\\",\\n         \\\"csv2json\\\",\\n         \\\"kanban\\\",\\n         \\\"react\\\",\\n         \\\"redux\\\",\\n         \\\"javascript\\\",\\n         \\\"svg\\\",\\n         \\\"ibge\\\",\\n         \\\"mocha\\\",\\n         \\\"chai\\\",\\n         \\\"enzyme\\\",\\n         \\\"movies\\\",\\n         \\\"tool\\\",\\n         \\\"pentaho\\\",\\n         \\\"cdf\\\",\\n         \\\"angular\\\",\\n         \\\"boilerplate\\\",\\n         \\\"started\\\",\\n         \\\"webpack\\\",\\n         \\\"airbnb\\\",\\n         \\\"eslint\\\",\\n         \\\"airbnb-javascript\\\",\\n         \\\"loaders\\\",\\n         \\\"pure-css\\\",\\n         \\\"react-native\\\",\\n         \\\"chat\\\",\\n         \\\"chatbot\\\",\\n         \\\"conversational-ui\\\",\\n         \\\"opensource\\\",\\n         \\\"spa\\\",\\n         \\\"documentation\\\"\\n      ],\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"CMake\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"Perl6\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"Perl\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\",\\n      \\\"name\\\": \\\"James Osborn\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"TheJambo\\\",\\n      \\\"github_tags\\\": [\\n         \\\"testing\\\",\\n         \\\"tester\\\",\\n         \\\"naughty-strings\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\"\\n      ],\\n      \\\"email\\\": \\\"james@james.am\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"NSIS\\\",\\n         \\\"Java\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Shell\\\",\\n         \\\"Rust\\\",\\n         \\\"F#\\\",\\n         \\\"TeX\\\",\\n         \\\"Haxe\\\",\\n         \\\"LLVM\\\",\\n         \\\"Yacc\\\",\\n         \\\"COBOL\\\",\\n         \\\"M4\\\",\\n         \\\"PigLatin\\\",\\n         \\\"XSLT\\\",\\n         \\\"Python\\\",\\n         \\\"ASP\\\",\\n         \\\"Forth\\\",\\n         \\\"xBase\\\",\\n         \\\"Matlab\\\",\\n         \\\"Fortran\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"Cuda\\\",\\n         \\\"Prolog\\\",\\n         \\\"SystemVerilog\\\",\\n         \\\"C++\\\",\\n         \\\"GDB\\\",\\n         \\\"Perl\\\",\\n         \\\"GAP\\\",\\n         \\\"Go\\\",\\n         \\\"Meson\\\",\\n         \\\"Scilab\\\",\\n         \\\"Makefile\\\",\\n         \\\"ooc\\\",\\n         \\\"OCaml\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Gherkin\\\"\\n      ],\\n      \\\"location\\\": \\\"Pune, India\\\",\\n      \\\"name\\\": \\\"Darshak Parikh\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"dar5hak\\\",\\n      \\\"github_tags\\\": [\\n         \\\"beautify\\\",\\n         \\\"typography\\\",\\n         \\\"yeoman-generator\\\",\\n         \\\"awesome-list\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Batchfile\\\",\\n         \\\"AutoHotkey\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"Go\\\",\\n         \\\"C\\\",\\n         \\\"C#\\\",\\n         \\\"Perl\\\",\\n         \\\"SourcePawn\\\"\\n      ],\\n      \\\"location\\\": \\\"Gandhinagar, India\\\",\\n      \\\"name\\\": \\\"Avi Aryan\\\",\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"github_login\\\": \\\"aviaryan\\\",\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"alfred3-workflow\\\",\\n         \\\"alfred-3\\\",\\n         \\\"calculator\\\",\\n         \\\"workflow\\\",\\n         \\\"imgur\\\",\\n         \\\"imgur-uploader\\\",\\n         \\\"jekyll\\\",\\n         \\\"blog\\\",\\n         \\\"website\\\",\\n         \\\"aviaryan\\\",\\n         \\\"github-pages\\\",\\n         \\\"awesome\\\",\\n         \\\"awesomeness\\\",\\n         \\\"list\\\",\\n         \\\"web-app\\\",\\n         \\\"awesome-list\\\",\\n         \\\"application\\\",\\n         \\\"applications\\\",\\n         \\\"portableapps\\\",\\n         \\\"no-login\\\",\\n         \\\"no-login-web-apps\\\",\\n         \\\"autohotkey\\\",\\n         \\\"clipboard\\\",\\n         \\\"clipboard-manager\\\",\\n         \\\"multiple-clipboards\\\",\\n         \\\"clipjump\\\",\\n         \\\"sublime-text\\\",\\n         \\\"sublime-text-3\\\",\\n         \\\"plugin\\\",\\n         \\\"sublime-text-plugin\\\",\\n         \\\"sublime-text-package\\\",\\n         \\\"potato\\\",\\n         \\\"competitive-programming\\\",\\n         \\\"competitive\\\",\\n         \\\"competitive-programming-contests\\\",\\n         \\\"competitive-learning\\\",\\n         \\\"contest\\\",\\n         \\\"codechef\\\",\\n         \\\"codeforces\\\",\\n         \\\"hackerrank\\\",\\n         \\\"codejam\\\",\\n         \\\"hackerearth\\\",\\n         \\\"counter-strike\\\",\\n         \\\"bots\\\",\\n         \\\"editor\\\",\\n         \\\"bot-editor\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"XSLT\\\",\\n         \\\"PHP\\\",\\n         \\\"Augeas\\\",\\n         \\\"C\\\",\\n         \\\"Roff\\\",\\n         \\\"HCL\\\",\\n         \\\"Nginx\\\",\\n         \\\"Perl\\\",\\n         \\\"Lua\\\",\\n         \\\"Python\\\",\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Vue\\\"\\n      ],\\n      \\\"location\\\": \\\"Area 51\\\",\\n      \\\"name\\\": \\\"Peter Kokot\\\",\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"github_login\\\": \\\"petk\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"community\\\",\\n         \\\"groups\\\",\\n         \\\"dojo\\\",\\n         \\\"javascript\\\",\\n         \\\"awesome-list\\\",\\n         \\\"jquery\\\",\\n         \\\"php\\\",\\n         \\\"benchmark\\\"\\n      ],\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"TypeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Dart\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"AppleScript\\\",\\n         \\\"Python\\\",\\n         \\\"Smarty\\\"\\n      ],\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\",\\n      \\\"name\\\": \\\"Joshua Wiens\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"d3viant0ne\\\",\\n      \\\"github_tags\\\": [\\n         \\\"docker\\\",\\n         \\\"nodejs\\\",\\n         \\\"circleci\\\",\\n         \\\"debian-jessie\\\"\\n      ],\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"Lua\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vim script\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"GLSL\\\",\\n         \\\"Vue\\\"\\n      ],\\n      \\\"location\\\": \\\"Los Angeles, CA\\\",\\n      \\\"name\\\": \\\"Terkel\\\",\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"github_login\\\": \\\"terkelg\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"creative-coding\\\",\\n         \\\"interaction-design\\\",\\n         \\\"information-visualization\\\",\\n         \\\"list\\\",\\n         \\\"graphics-programming\\\",\\n         \\\"awesome-list\\\",\\n         \\\"generative-art\\\",\\n         \\\"data-visualization\\\",\\n         \\\"3d-graphics\\\",\\n         \\\"iot\\\",\\n         \\\"mqtt-broker\\\",\\n         \\\"sensor\\\",\\n         \\\"umbrella\\\",\\n         \\\"mqtt\\\",\\n         \\\"game\\\",\\n         \\\"canvas\\\",\\n         \\\"nodemcu\\\",\\n         \\\"tilt-sensor\\\",\\n         \\\"dotfiles\\\",\\n         \\\"vim\\\",\\n         \\\"git\\\",\\n         \\\"zsh\\\",\\n         \\\"macos\\\",\\n         \\\"tmux\\\",\\n         \\\"awesomeness\\\",\\n         \\\"bookmarks\\\",\\n         \\\"bot\\\",\\n         \\\"twitter-bot\\\",\\n         \\\"twitter\\\",\\n         \\\"machine-learning\\\",\\n         \\\"ai\\\",\\n         \\\"math\\\",\\n         \\\"spring\\\",\\n         \\\"math-snippets\\\",\\n         \\\"velocity\\\",\\n         \\\"mathematics\\\",\\n         \\\"math-toolbox\\\",\\n         \\\"es2015\\\",\\n         \\\"leightweight\\\",\\n         \\\"geometry\\\",\\n         \\\"math-library\\\",\\n         \\\"social-network\\\",\\n         \\\"electron\\\",\\n         \\\"windows\\\",\\n         \\\"linux\\\",\\n         \\\"instagram\\\",\\n         \\\"ramme\\\",\\n         \\\"vue\\\",\\n         \\\"portfolio-website\\\",\\n         \\\"threejs\\\",\\n         \\\"webpack2\\\",\\n         \\\"babel\\\",\\n         \\\"boilerplate\\\",\\n         \\\"starter-kit\\\"\\n      ],\\n      \\\"email\\\": \\\"terkel@terkel.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Shell\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"location\\\": \\\"Kassel, Germany\\\",\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\",\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"github_login\\\": \\\"mischah\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"Nginx\\\",\\n         \\\"CSS\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C++\\\",\\n         \\\"Prolog\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"HTML\\\",\\n         \\\"TeX\\\",\\n         \\\"Perl\\\",\\n         \\\"Eagle\\\",\\n         \\\"Batchfile\\\",\\n         \\\"QMake\\\",\\n         \\\"C#\\\",\\n         \\\"Groff\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Java\\\",\\n         \\\"Haskell\\\",\\n         \\\"CMake\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Lua\\\",\\n         \\\"Awk\\\",\\n         \\\"Visual Basic\\\",\\n         \\\"Racket\\\",\\n         \\\"VimL\\\",\\n         \\\"Elm\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Standard ML\\\",\\n         \\\"Hack\\\",\\n         \\\"OCaml\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"KiCad\\\",\\n         \\\"Arduino\\\",\\n         \\\"OpenSCAD\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"kasbah\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"FreeMarker\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"M4\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"GLSL\\\",\\n         \\\"CMake\\\",\\n         \\\"Lua\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Mathematica\\\",\\n         \\\"C#\\\",\\n         \\\"Haxe\\\",\\n         \\\"TeX\\\",\\n         \\\"Cuda\\\",\\n         \\\"Processing\\\",\\n         \\\"Ruby\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"location\\\": \\\"New York, NY\\\",\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"JesseTG\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"qt-framework\\\",\\n         \\\"qt-applications\\\",\\n         \\\"qt\\\",\\n         \\\"list\\\",\\n         \\\"c-plus-plus\\\",\\n         \\\"opengl\\\",\\n         \\\"glsl\\\",\\n         \\\"shader\\\",\\n         \\\"cpp\\\",\\n         \\\"graphics\\\",\\n         \\\"graphics-programming\\\",\\n         \\\"graphics-engine\\\",\\n         \\\"box2d\\\",\\n         \\\"documentation\\\",\\n         \\\"mirror\\\",\\n         \\\"buzzer\\\",\\n         \\\"web-app\\\",\\n         \\\"dumb\\\",\\n         \\\"tutorial\\\",\\n         \\\"lecture\\\",\\n         \\\"latex\\\",\\n         \\\"slides\\\",\\n         \\\"presentation\\\",\\n         \\\"cuda\\\",\\n         \\\"cuda-by-example\\\",\\n         \\\"c\\\",\\n         \\\"gpgpu\\\"\\n      ],\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Elixir\\\",\\n         \\\"Swift\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\",\\n         \\\"Brainfuck\\\",\\n         \\\"C\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"VimL\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Makefile\\\",\\n         \\\"Erlang\\\",\\n         \\\"CSS\\\"\\n      ],\\n      \\\"location\\\": \\\"Athens\\\",\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\",\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"github_login\\\": \\\"sger\\\",\\n      \\\"github_tags\\\": [\\n         \\\"programming-elixir\\\",\\n         \\\"elixir\\\",\\n         \\\"programming-erlang\\\",\\n         \\\"erlang\\\",\\n         \\\"programming-language\\\",\\n         \\\"books\\\",\\n         \\\"elixir-books\\\",\\n         \\\"otp\\\",\\n         \\\"erlang-vm\\\",\\n         \\\"elixir-school\\\",\\n         \\\"elixir-lang\\\",\\n         \\\"elixir-dropbox\\\",\\n         \\\"elixir-programming-language\\\",\\n         \\\"api\\\",\\n         \\\"api-client\\\",\\n         \\\"dropbox\\\",\\n         \\\"dropbox-v2\\\",\\n         \\\"fault-tolerance\\\",\\n         \\\"apns\\\",\\n         \\\"notification-service\\\",\\n         \\\"apple\\\",\\n         \\\"ios\\\",\\n         \\\"golang\\\",\\n         \\\"go\\\",\\n         \\\"http2\\\",\\n         \\\"apns2\\\",\\n         \\\"channels\\\",\\n         \\\"hash\\\",\\n         \\\"go-programming\\\"\\n      ],\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Tcl\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"C++\\\"\\n      ],\\n      \\\"location\\\": \\\"__switzerland__\\\",\\n      \\\"name\\\": \\\"Timo Furrer\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"timofurrer\\\",\\n      \\\"github_tags\\\": [\\n         \\\"vimrc\\\",\\n         \\\"vim-configuration\\\",\\n         \\\"personal\\\",\\n         \\\"hslu\\\",\\n         \\\"ad\\\",\\n         \\\"algorithmen\\\",\\n         \\\"datenstrukturen\\\",\\n         \\\"exercise\\\",\\n         \\\"python-asyncio\\\",\\n         \\\"coroutines\\\",\\n         \\\"python\\\",\\n         \\\"asyncio\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"python3\\\",\\n         \\\"terminal\\\",\\n         \\\"string\\\",\\n         \\\"colors\\\",\\n         \\\"linux\\\",\\n         \\\"windows\\\",\\n         \\\"macosx\\\",\\n         \\\"console\\\",\\n         \\\"ansi\\\",\\n         \\\"linux-kernel\\\",\\n         \\\"linux-kernel-module\\\",\\n         \\\"fun\\\",\\n         \\\"cpu\\\",\\n         \\\"heart\\\",\\n         \\\"heartbeat\\\",\\n         \\\"device\\\"\\n      ],\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CMake\\\",\\n         \\\"C++\\\",\\n         \\\"Cuda\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"M\\\",\\n         \\\"Lua\\\",\\n         \\\"Python\\\",\\n         \\\"OpenEdge ABL\\\",\\n         \\\"Shell\\\",\\n         \\\"Matlab\\\",\\n         \\\"Makefile\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Scala\\\",\\n         \\\"C\\\",\\n         \\\"TeX\\\",\\n         \\\"Mercury\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Stata\\\",\\n         \\\"Lex\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Prolog\\\",\\n         \\\"CSS\\\",\\n         \\\"M4\\\",\\n         \\\"Clean\\\",\\n         \\\"Groff\\\",\\n         \\\"Fortran\\\",\\n         \\\"Tcl\\\",\\n         \\\"Perl6\\\",\\n         \\\"Groovy\\\",\\n         \\\"Perl\\\",\\n         \\\"XSLT\\\",\\n         \\\"Scheme\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"location\\\": \\\"Austin, TX\\\",\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\",\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"github_login\\\": \\\"harpribot\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"XSLT\\\",\\n         \\\"Groovy\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Java\\\",\\n         \\\"Batchfile\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"PHP\\\",\\n         \\\"Smarty\\\",\\n         \\\"Makefile\\\",\\n         \\\"Erlang\\\",\\n         \\\"M4\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"location\\\": \\\"Belarus\\\",\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"aliesbelik\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome-jmeter\\\",\\n         \\\"awesome\\\",\\n         \\\"jmeter\\\",\\n         \\\"jmeter-plugin\\\",\\n         \\\"load-testing\\\",\\n         \\\"performance-measurement\\\"\\n      ],\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Standard ML\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Nginx\\\",\\n         \\\"VimL\\\",\\n         \\\"PHP\\\",\\n         \\\"Arduino\\\",\\n         \\\"SaltStack\\\"\\n      ],\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\",\\n      \\\"name\\\": \\\"Henk\\\",\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"github_login\\\": \\\"hbokh\\\",\\n      \\\"github_tags\\\": [\\n         \\\"saltstack\\\",\\n         \\\"configuration-management\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"drone-ci\\\",\\n         \\\"docker\\\",\\n         \\\"getting-started\\\",\\n         \\\"typo3\\\",\\n         \\\"typo3-cms\\\",\\n         \\\"nginx\\\",\\n         \\\"vagrant\\\",\\n         \\\"ansible-tutorial\\\",\\n         \\\"mysql-ha\\\"\\n      ],\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"PowerShell\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"location\\\": \\\"Toronto, Canada\\\",\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\",\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"github_login\\\": \\\"websemantics\\\",\\n      \\\"github_tags\\\": [\\n         \\\"atom\\\",\\n         \\\"styleguide\\\",\\n         \\\"ui\\\",\\n         \\\"ui-components\\\",\\n         \\\"webpack2\\\",\\n         \\\"pyrocms\\\",\\n         \\\"pyrocms3\\\",\\n         \\\"ant\\\",\\n         \\\"deployer\\\",\\n         \\\"pyrocms-extenstions\\\",\\n         \\\"puppeteer\\\",\\n         \\\"codepen\\\",\\n         \\\"web-scraping\\\",\\n         \\\"headless-chrome\\\"\\n      ],\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Arduino\\\",\\n         \\\"AutoHotkey\\\",\\n         \\\"PowerShell\\\",\\n         \\\"CMake\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Go\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"Objective-C\\\",\\n         \\\"AppleScript\\\",\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"PHP\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"location\\\": \\\"Seattle, WA\\\",\\n      \\\"name\\\": \\\"Sergei Vorobev\\\",\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"github_login\\\": \\\"vors\\\",\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"email\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"VimL\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"location\\\": null,\\n      \\\"name\\\": \\\"Nicole Saidy\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"nicolesaidy\\\",\\n      \\\"github_tags\\\": [\\n         \\\"design\\\",\\n         \\\"webdesign\\\",\\n         \\\"ui-design\\\",\\n         \\\"ux-design\\\"\\n      ],\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_info.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"C++\\\",\\n         \\\"IDL\\\",\\n         \\\"Java\\\",\\n         \\\"Arduino\\\",\\n         \\\"Processing\\\",\\n         \\\"C\\\",\\n         \\\"Batchfile\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"C#\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"C++\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": [\\n         \\\"355274_1.0\\\"\\n      ]\\n   },\\n   {\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"M4\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"github_tags\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": [\\n         \\\"8766_0.74\\\",\\n         \\\"120206_0.78\\\",\\n         \\\"3666431_0.93\\\"\\n      ]\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"location\\\": null,\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Swift\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"github_tags\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match_5.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_awesome.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\\"sindresorhus\\\",\\\"t27\\\",\\\"lmichelbacher\\\",\\\"Kazhnuz\\\",\\\"aleksandar-todorovic\\\",\\\"likedan\\\"]\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/login_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"{\\n   \\\"dojo\\\": [\\n      \\\"dojo-store\\\",\\n      \\\"dojo-layer\\\",\\n      \\\"dojo.stateful\\\",\\n      \\\"dojo-require\\\",\\n      \\\"dojo.data\\\",\\n      \\\"dijit\\\",\\n      \\\"dojox\\\",\\n      \\\"dojo\\\"\\n   ],\\n   \\\"security\\\": [\\n      \\\"web-security\\\",\\n      \\\"vulnerabilities\\\",\\n      \\\"vulnerability\\\",\\n      \\\"secure\\\",\\n      \\\"security\\\"\\n   ],\\n   \\\"shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\",\\n      \\\"shell\\\"\\n   ],\\n   \\\"module\\\": [\\n      \\\"modules\\\",\\n      \\\"module\\\"\\n   ],\\n   \\\"C#\\\": [\\n      \\\".cs-file\\\",\\n      \\\"csharp\\\",\\n      \\\"visual-c#\\\",\\n      \\\"c#-language\\\",\\n      \\\"c#.net\\\",\\n      \\\"c-sharp\\\",\\n      \\\"C#\\\"\\n   ],\\n   \\\"aws-lambda\\\": [\\n      \\\"amazon-lambda\\\",\\n      \\\"aws-lambda\\\"\\n   ],\\n   \\\"XSLT\\\": [\\n      \\\"xml-transform\\\",\\n      \\\"xslt-2.0-processors\\\",\\n      \\\"xsltprocessor\\\",\\n      \\\"xsltproc\\\",\\n      \\\"xsltransform\\\",\\n      \\\"xsl\\\",\\n      \\\"XSLT\\\"\\n   ],\\n   \\\"translation\\\": [\\n      \\\"t9n\\\",\\n      \\\"translation\\\"\\n   ],\\n   \\\"java-8\\\": [\\n      \\\"jdk1.8\\\",\\n      \\\"jdk8\\\",\\n      \\\"java-8\\\"\\n   ],\\n   \\\"Matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\",\\n      \\\"Matlab\\\"\\n   ],\\n   \\\"r\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\",\\n      \\\"r\\\"\\n   ],\\n   \\\"JavaScript\\\": [\\n      \\\"javascript-module\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"javascript-execution\\\",\\n      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\",\\n      \\\"JavaScript\\\"\\n   ],\\n   \\\"csv\\\": [\\n      \\\"tsv\\\",\\n      \\\"comma-separated\\\",\\n      \\\".csv\\\",\\n      \\\"csv\\\"\\n   ],\\n   \\\"filter\\\": [\\n      \\\"filters\\\",\\n      \\\"filter\\\"\\n   ],\\n   \\\"nlp\\\": [\\n      \\\"language-processing\\\",\\n      \\\"computational-linguistics\\\",\\n      \\\"natural-language\\\",\\n      \\\"natural-language-process\\\",\\n      \\\"nlp\\\"\\n   ],\\n   \\\"tags\\\": [\\n      \\\"tag\\\",\\n      \\\"tags\\\"\\n   ],\\n   \\\"Python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\",\\n      \\\"Python\\\"\\n   ],\\n   \\\"api\\\": [\\n      \\\"apis\\\",\\n      \\\"api\\\"\\n   ],\\n   \\\"resources\\\": [\\n      \\\"resource\\\",\\n      \\\"resources\\\"\\n   ],\\n   \\\"reddit\\\": [\\n      \\\"reddit-api\\\",\\n      \\\"reddit\\\"\\n   ],\\n   \\\"textures\\\": [\\n      \\\"texture\\\",\\n      \\\"textures\\\"\\n   ],\\n   \\\"bots\\\": [\\n      \\\"bot\\\",\\n      \\\"bots\\\"\\n   ],\\n   \\\"cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\",\\n      \\\"cuda\\\"\\n   ],\\n   \\\"jmeter\\\": [\\n      \\\"apache-jmeter\\\",\\n      \\\"jmeter\\\"\\n   ],\\n   \\\"css3\\\": [\\n      \\\"css-text-shadow\\\",\\n      \\\"css-text-overflow\\\",\\n      \\\"css-box-shadow\\\",\\n      \\\"css-border-radius\\\",\\n      \\\"css-border-image\\\",\\n      \\\"css3\\\"\\n   ],\\n   \\\"go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\",\\n      \\\"go\\\"\\n   ],\\n   \\\"build\\\": [\\n      \\\"builds\\\",\\n      \\\"build\\\"\\n   ],\\n   \\\"learning\\\": [\\n      \\\"learn\\\",\\n      \\\"learning\\\"\\n   ],\\n   \\\"Processing\\\": [\\n      \\\"processing.org\\\",\\n      \\\"Processing\\\"\\n   ],\\n   \\\"Shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\",\\n      \\\"Shell\\\"\\n   ],\\n   \\\"penetration-testing\\\": [\\n      \\\"pen-testing\\\",\\n      \\\"penetration-testing\\\"\\n   ],\\n   \\\"audio\\\": [\\n      \\\"sounds\\\",\\n      \\\"sound-api\\\",\\n      \\\"sound\\\",\\n      \\\"audio\\\"\\n   ],\\n   \\\"questions\\\": [\\n      \\\"question\\\",\\n      \\\"questions\\\"\\n   ],\\n   \\\"matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\",\\n      \\\"matlab\\\"\\n   ],\\n   \\\"generator\\\": [\\n      \\\"generators\\\",\\n      \\\"generator\\\"\\n   ],\\n   \\\"bookmarks\\\": [\\n      \\\"bookmark\\\",\\n      \\\"bookmarks\\\"\\n   ],\\n   \\\"testing\\\": [\\n      \\\"test\\\",\\n      \\\"tests\\\",\\n      \\\"software-testing\\\",\\n      \\\"testing\\\"\\n   ],\\n   \\\"database\\\": [\\n      \\\"dbms\\\",\\n      \\\"database-structure\\\",\\n      \\\"db\\\",\\n      \\\"databases\\\",\\n      \\\"database\\\"\\n   ],\\n   \\\"Cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\",\\n      \\\"Cuda\\\"\\n   ],\\n   \\\"audio-player\\\": [\\n      \\\"audio-playing\\\",\\n      \\\"audio-player\\\"\\n   ],\\n   \\\"css\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\\n      \\\"css-borders\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"css-attributes\\\",\\n      \\\"css-background-image\\\",\\n      \\\"css-layout\\\",\\n      \\\"cascading-style-sheet\\\",\\n      \\\"css\\\"\\n   ],\\n   \\\"deployment\\\": [\\n      \\\"deploy\\\",\\n      \\\"deployment\\\"\\n   ],\\n   \\\"web-scraping\\\": [\\n      \\\"webpagescraping\\\",\\n      \\\"web-scraping\\\"\\n   ],\\n   \\\"slice\\\": [\\n      \\\"string-slice\\\",\\n      \\\"array-slice\\\",\\n      \\\"slices\\\",\\n      \\\"slicing\\\",\\n      \\\"slice\\\"\\n   ],\\n   \\\"vim\\\": [\\n      \\\"viml\\\",\\n      \\\"vimscript\\\",\\n      \\\"gvim\\\",\\n      \\\"gvimrc\\\",\\n      \\\"vimrc\\\",\\n      \\\"vim\\\"\\n   ],\\n   \\\"string\\\": [\\n      \\\"empty-string\\\",\\n      \\\"str\\\",\\n      \\\"string-manipulation\\\",\\n      \\\"strings\\\",\\n      \\\"string\\\"\\n   ],\\n   \\\"HTML\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\",\\n      \\\"HTML\\\"\\n   ],\\n   \\\"minify\\\": [\\n      \\\"minification\\\",\\n      \\\"minifier\\\",\\n      \\\"minify\\\"\\n   ],\\n   \\\"python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\",\\n      \\\"python\\\"\\n   ],\\n   \\\"Racket\\\": [\\n      \\\"drracket\\\",\\n      \\\"plt-scheme\\\",\\n      \\\"drscheme\\\",\\n      \\\"Racket\\\"\\n   ],\\n   \\\"jquery\\\": [\\n      \\\"jquery-css\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"toggleclass\\\",\\n      \\\"addclass\\\",\\n      \\\"jquery-live\\\",\\n      \\\"jquery-core\\\",\\n      \\\"jquery\\\"\\n   ],\\n   \\\"website\\\": [\\n      \\\"websites\\\",\\n      \\\"website\\\"\\n   ],\\n   \\\"dsl\\\": [\\n      \\\"domain-specific-languages\\\",\\n      \\\"dsl\\\"\\n   ],\\n   \\\"documentation\\\": [\\n      \\\"docs\\\",\\n      \\\"documentation\\\"\\n   ],\\n   \\\"prototype\\\": [\\n      \\\"prototypes\\\",\\n      \\\"prototype\\\"\\n   ],\\n   \\\"ansible\\\": [\\n      \\\"ansible-playbook\\\",\\n      \\\"ansible\\\"\\n   ],\\n   \\\"io\\\": [\\n      \\\"input-output\\\",\\n      \\\"io\\\"\\n   ],\\n   \\\"challenge\\\": [\\n      \\\"code-challenge\\\",\\n      \\\"challenge\\\"\\n   ],\\n   \\\"jobs\\\": [\\n      \\\"job\\\",\\n      \\\"jobs\\\"\\n   ],\\n   \\\"usb\\\": [\\n      \\\"usbdevice\\\",\\n      \\\"usb\\\"\\n   ],\\n   \\\"windows\\\": [\\n      \\\"windows-application\\\",\\n      \\\"windows-programming\\\",\\n      \\\"windows\\\"\\n   ],\\n   \\\"math\\\": [\\n      \\\"arithmetic\\\",\\n      \\\"mathematical\\\",\\n      \\\"maths\\\",\\n      \\\"mathematics\\\",\\n      \\\"math\\\"\\n   ],\\n   \\\"ubuntu\\\": [\\n      \\\"lubuntu\\\",\\n      \\\"kubuntu\\\",\\n      \\\"xubuntu\\\",\\n      \\\"ubuntu\\\"\\n   ],\\n   \\\"C++\\\": [\\n      \\\"cpp\\\",\\n      \\\"C++\\\"\\n   ],\\n   \\\"graphics\\\": [\\n      \\\"computer-graphics\\\",\\n      \\\"graphics\\\"\\n   ],\\n   \\\"angular\\\": [\\n      \\\"angular4.x\\\",\\n      \\\"angular4\\\",\\n      \\\"angular2\\\",\\n      \\\"angular\\\"\\n   ],\\n   \\\"html5\\\": [\\n      \\\"time-tag\\\",\\n      \\\"xhtml5\\\",\\n      \\\"html5\\\"\\n   ],\\n   \\\"fun\\\": [\\n      \\\"humour\\\",\\n      \\\"humor\\\",\\n      \\\"fun\\\"\\n   ],\\n   \\\"keyboard\\\": [\\n      \\\"keyboards\\\",\\n      \\\"keyboard\\\"\\n   ],\\n   \\\"load-testing\\\": [\\n      \\\"loadtest\\\",\\n      \\\"load-testing\\\"\\n   ],\\n   \\\"list\\\": [\\n      \\\"ilist\\\",\\n      \\\"lists\\\",\\n      \\\"list\\\"\\n   ],\\n   \\\"dictionary\\\": [\\n      \\\"map\\\",\\n      \\\"dictionaries\\\",\\n      \\\"dict\\\",\\n      \\\"dictionary\\\"\\n   ],\\n   \\\"PowerShell\\\": [\\n      \\\"windows-powershell\\\",\\n      \\\"PowerShell\\\"\\n   ],\\n   \\\"Java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\\n      \\\"jdk\\\",\\n      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\",\\n      \\\"Java\\\"\\n   ],\\n   \\\"terminal\\\": [\\n      \\\"terminals\\\",\\n      \\\"terminal\\\"\\n   ],\\n   \\\"data-structures\\\": [\\n      \\\"data-structure\\\",\\n      \\\"data-structures\\\"\\n   ],\\n   \\\"binary\\\": [\\n      \\\"binary-system\\\",\\n      \\\"binary-number\\\",\\n      \\\"binary\\\"\\n   ],\\n   \\\"html\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\",\\n      \\\"html\\\"\\n   ],\\n   \\\"import\\\": [\\n      \\\"imports\\\",\\n      \\\"importing\\\",\\n      \\\"import\\\"\\n   ],\\n   \\\"icons\\\": [\\n      \\\"icon\\\",\\n      \\\"icons\\\"\\n   ],\\n   \\\"spring\\\": [\\n      \\\"spring-framework\\\",\\n      \\\"spring\\\"\\n   ],\\n   \\\"hash\\\": [\\n      \\\"hashes\\\",\\n      \\\"hashing\\\",\\n      \\\"hash\\\"\\n   ],\\n   \\\"javascript\\\": [\\n      \\\"javascript-module\\\",\\n      \\\"vanilla-javascript\\\",\\n      \\\"javascript-runtime\\\",\\n      \\\"javascript-library\\\",\\n      \\\"javascript-disabled\\\",\\n      \\\"javascript-dom\\\",\\n      \\\"javascript-alert\\\",\\n      \\\"classic-javascript\\\",\\n      \\\"javascript-execution\\\",\\n      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\",\\n      \\\"javascript\\\"\\n   ],\\n   \\\"ios\\\": [\\n      \\\"ios-sdk\\\",\\n      \\\"apple-ios\\\",\\n      \\\"iphone-os\\\",\\n      \\\"ios\\\"\\n   ],\\n   \\\"mysql\\\": [\\n      \\\"mysqldump\\\",\\n      \\\"mysqlclient\\\",\\n      \\\"mysqld\\\",\\n      \\\"mysql-table\\\",\\n      \\\"mysql-server\\\",\\n      \\\"mysql-query\\\",\\n      \\\"my-sql\\\",\\n      \\\"mysql\\\"\\n   ],\\n   \\\"svg\\\": [\\n      \\\"svg-path\\\",\\n      \\\"svgz\\\",\\n      \\\"svg\\\"\\n   ],\\n   \\\"PHP\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\\n      \\\"php-fpm\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"php-frameworks\\\",\\n      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\",\\n      \\\"PHP\\\"\\n   ],\\n   \\\"full-text-search\\\": [\\n      \\\"fulltext\\\",\\n      \\\"fts\\\",\\n      \\\"fulltext-searching\\\",\\n      \\\"full-text-search\\\"\\n   ],\\n   \\\"postgresql\\\": [\\n      \\\"sql-postgres\\\",\\n      \\\"pgsql\\\",\\n      \\\"postgres\\\",\\n      \\\"postgresql\\\"\\n   ],\\n   \\\"stream\\\": [\\n      \\\"streams\\\",\\n      \\\"stream\\\"\\n   ],\\n   \\\"events\\\": [\\n      \\\"event\\\",\\n      \\\"events\\\"\\n   ],\\n   \\\"web\\\": [\\n      \\\"www\\\",\\n      \\\"web\\\"\\n   ],\\n   \\\"less\\\": [\\n      \\\"lesscss\\\",\\n      \\\"less\\\"\\n   ],\\n   \\\"colors\\\": [\\n      \\\"colours\\\",\\n      \\\"colour\\\",\\n      \\\"color\\\",\\n      \\\"colors\\\"\\n   ],\\n   \\\"Clojure\\\": [\\n      \\\"cljx\\\",\\n      \\\"cljc\\\",\\n      \\\"clj\\\",\\n      \\\"Clojure\\\"\\n   ],\\n   \\\"search\\\": [\\n      \\\"searching\\\",\\n      \\\"search\\\"\\n   ],\\n   \\\"Go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\",\\n      \\\"Go\\\"\\n   ],\\n   \\\"Swift\\\": [\\n      \\\"swift1.2\\\",\\n      \\\"swift-ios\\\",\\n      \\\"swift-language\\\",\\n      \\\"Swift\\\"\\n   ],\\n   \\\"p2p\\\": [\\n      \\\"peer-to-peer\\\",\\n      \\\"p2p\\\"\\n   ],\\n   \\\"jni\\\": [\\n      \\\"java-native-interface\\\",\\n      \\\"jni\\\"\\n   ],\\n   \\\"elixir\\\": [\\n      \\\"elixir-lang\\\",\\n      \\\"elixir\\\"\\n   ],\\n   \\\"Makefile\\\": [\\n      \\\"make\\\",\\n      \\\"makefiles\\\",\\n      \\\"Makefile\\\"\\n   ],\\n   \\\"swift3\\\": [\\n      \\\"swift3.1\\\",\\n      \\\"swift3.0.2\\\",\\n      \\\"swift3.0.1\\\",\\n      \\\"swift3.0\\\",\\n      \\\"swift3\\\"\\n   ],\\n   \\\"shader\\\": [\\n      \\\"shaders\\\",\\n      \\\"shader\\\"\\n   ],\\n   \\\"CoffeeScript\\\": [\\n      \\\"coffee\\\",\\n      \\\"CoffeeScript\\\"\\n   ],\\n   \\\"animation\\\": [\\n      \\\"scaleanimation\\\",\\n      \\\"rotateanimation\\\",\\n      \\\"animated\\\",\\n      \\\"animations\\\",\\n      \\\"animation\\\"\\n   ],\\n   \\\"redirect\\\": [\\n      \\\"redirecting\\\",\\n      \\\"redirection\\\",\\n      \\\"redirects\\\",\\n      \\\"redirect\\\"\\n   ],\\n   \\\"F#\\\": [\\n      \\\"fsharp\\\",\\n      \\\"F#\\\"\\n   ],\\n   \\\"bash\\\": [\\n      \\\"bash-function\\\",\\n      \\\".bash-profile\\\",\\n      \\\"bash-variables\\\",\\n      \\\"bash-alias\\\",\\n      \\\".bashrc\\\",\\n      \\\"bashrc\\\",\\n      \\\"bash-script\\\",\\n      \\\"bash\\\"\\n   ],\\n   \\\"networking\\\": [\\n      \\\"networks\\\",\\n      \\\"network\\\",\\n      \\\"networking\\\"\\n   ],\\n   \\\"twitter\\\": [\\n      \\\"twitter-api\\\",\\n      \\\"twitter\\\"\\n   ],\\n   \\\"java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\",\\n      \\\"java\\\"\\n   ],\\n   \\\"pipe\\\": [\\n      \\\"pipes\\\",\\n      \\\"pipe\\\"\\n   ],\\n   \\\"levenshtein-distance\\\": [\\n      \\\"levenstein\\\",\\n      \\\"levenshtein\\\",\\n      \\\"levenshtein-distance\\\"\\n   ],\\n   \\\"Assembly\\\": [\\n      \\\"assembly-language\\\",\\n      \\\"assembler\\\",\\n      \\\"asm\\\",\\n      \\\"Assembly\\\"\\n   ],\\n   \\\"Elixir\\\": [\\n      \\\"elixir-lang\\\",\\n      \\\"Elixir\\\"\\n   ],\\n   \\\"CSS\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\\n      \\\"css-borders\\\",\\n      \\\"css-reset\\\",\\n      \\\"css-menu\\\",\\n      \\\"font-weight\\\",\\n      \\\"css-box-model\\\",\\n      \\\"inline-block\\\",\\n      \\\"alternate-stylesheets\\\",\\n      \\\"css-overflow\\\",\\n      \\\"css-line-height\\\",\\n      \\\"css-display\\\",\\n      \\\"css-validation\\\",\\n      \\\"style.css-template-file\\\",\\n      \\\"box-model\\\",\\n      \\\"max-width\\\",\\n      \\\"max-height\\\",\\n      \\\"min-width\\\",\\n      \\\"min-height\\\",\\n      \\\"css-centering\\\",\\n      \\\"css-inheritance\\\",\\n      \\\"css-columns\\\",\\n      \\\"css2\\\",\\n      \\\"css-height\\\",\\n      \\\"css-classes\\\",\\n      \\\"css-attributes\\\",\\n      \\\"css-background-image\\\",\\n      \\\"css-layout\\\",\\n      \\\"cascading-style-sheet\\\",\\n      \\\"CSS\\\"\\n   ],\\n   \\\"deprecated\\\": [\\n      \\\"deprecation\\\",\\n      \\\"deprecated\\\"\\n   ],\\n   \\\"visualization\\\": [\\n      \\\"visualisation\\\",\\n      \\\"visualization\\\"\\n   ],\\n   \\\"github-pages\\\": [\\n      \\\"gh-pages\\\",\\n      \\\"github-pages\\\"\\n   ],\\n   \\\"php\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\\n      \\\"php-fpm\\\",\\n      \\\"php-session\\\",\\n      \\\"php-readfile\\\",\\n      \\\"php-functions\\\",\\n      \\\"php-cgi\\\",\\n      \\\"php-mail\\\",\\n      \\\"php-errors\\\",\\n      \\\"php-cli\\\",\\n      \\\"php.ini\\\",\\n      \\\"hypertext-preprocessor\\\",\\n      \\\"php-frameworks\\\",\\n      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\",\\n      \\\"php\\\"\\n   ],\\n   \\\"web-crawler\\\": [\\n      \\\"spider\\\",\\n      \\\"crawl\\\",\\n      \\\"crawling\\\",\\n      \\\"crawler\\\",\\n      \\\"webcrawling\\\",\\n      \\\"web-spider\\\",\\n      \\\"webspiders\\\",\\n      \\\"web-crawler\\\"\\n   ],\\n   \\\"Objective-C\\\": [\\n      \\\"objc\\\",\\n      \\\"Objective-C\\\"\\n   ],\\n   \\\"ant\\\": [\\n      \\\"apache-ant\\\",\\n      \\\"ant\\\"\\n   ],\\n   \\\"android\\\": [\\n      \\\"android-framework\\\",\\n      \\\"android-ui\\\",\\n      \\\"android-application\\\",\\n      \\\"android-device\\\",\\n      \\\"android-api\\\",\\n      \\\"android-sdk\\\",\\n      \\\"android-mobile\\\",\\n      \\\"android\\\"\\n   ],\\n   \\\"R\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\",\\n      \\\"R\\\"\\n   ]\\n}\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"def get_langtags(user):\\n    language = []\\n    tags = []\\n    print(\\\"Finding languages and tags used of github user: {}\\\".format(user[\\\"github_login\\\"]))\\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\\\"github_login\\\"])\\n    repos = request_url(repo_api,30)\\n\\n    for item in repos:\\n        #can be  parallel tags & language\\n        repo_name = item[\\\"name\\\"]\\n        repo_tags = requests.get('https://api.github.com/repos/{}/{}/topics?'\\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    cTime = time.time()\\n    print(\\\"Getting info of users in the commit history...\\\")\\n    for item in developer_info:\\n        ### For a list of developers, find their url\\n        author_api = (item[\\\"author\\\"][\\\"url\\\"] if not item[\\\"author\\\"] == None else \\\"null\\\")\\n        committer_api = (item[\\\"committer\\\"][\\\"url\\\"] if not item[\\\"committer\\\"] == None else \\\"null\\\")\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\ndef search_info(developer_login):\\n    Info = []\\n    print(\\\"Getting info of users in the name list...\\\")\\n    cTime = time.time()\\n    for login in developer_login:\\n        api = 'https://api.github.com/users/{}'.format(login)\\n        developer_info = request_url(api,100)\\n        developer_info = extract_dict(developer_info)\\n        Info.append(developer_info)\\n    print(time.time() - cTime)\\n\\n    git_info = []\\n    cTime = time.time()\\n    for git_developer in Info:\\n        git_developer = get_langtags(git_developer)\\n        git_info.append(git_developer)\\n    print(time.time() - cTime)\\n    return git_info\\n\\n\\n\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"               '&site=stackoverflow'.format(name,name)\\n    info = request_api(user_api)\\n\\n    user_info = info[\\\"items\\\"]\\n    if not user_info == None:\\n        for item in user_info:\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"            if 'https://github.com/' in href:\\n                git_account = re.findall('href\\\\=\\\\\\\"https\\\\:\\\\/\\\\/github\\\\.com\\\\/(.*?)\\\\\\\"', href, re.S)\\n                git_account = git_account[0]\\n        if not git_account == None:\\n            return git_account\\n        else:\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n    tags_git = git_developer[\\\"github_tags\\\"]\\n    tags_stk = stk_developer[\\\"tags\\\"]\\n\\n    match_count = git_count = 0\\n    if not tags_stk == [] and not tags_git == \\\"null\\\":\\n        for tag in tags_git:\\n            git_count = git_count + 1\\n            if tag in syn_list:\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"                    if stk_tags in tags_stk:\\n                        match_count = match_count + 1\\n                        break\\n\\n            elif tag in tags_stk:\\n                match_count = match_count + 1\\n    else:\\n        match_count = 0\\n        git_count = 1\\n\\n    tag_score = match_count / git_count * 2\\n    final_score = round(location_score + tag_score, 2)\\n\\n    if final_score >= 0.7:\\n        match_name = str(stk_developer[\\\"user_id\\\"]) + \\\"_\\\" + str(final_score)\\n        return match_name\\n    else:\\n        return []\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n            if not stk_info == default_info:\\n                print(\\\"The possible info of Stack Overflow user {} is {}\\\".format(name, stk_info))\\n                cTime = time.time()\\n\\n                for stk_developer in stk_info:\\n                    user_id = stk_developer['user_id']\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n                    if git_account == git_developer[\\\"github_login\\\"]:\\n                        git_developer[\\\"stackoverflow_login\\\"] = stk_developer[\\\"display_name\\\"]\\n                        print(time.time() - cTime)\\n                        break\\n\\n                # Continue to establish mapping if the possible match has been found?\\n                if git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" or git_developer[\\\"stackoverflow_login\\\"] == []:\\n                    git_developer[\\\"stackoverflow_login\\\"] = []\\n                    print(\\\"Mapping the users with tags and location...\\\")\\n\\n                    cTime = time.time()\\n                    for stk_developer in stk_info:\\n                        developer_tags = get_tags(stk_developer)\\n                        stk_developer[\\\"tags\\\"] = developer_tags\\n                        match_name = match_info(git_developer,stk_developer,syn_list)\\n                        if not match_name == []:\\n                            git_developer[\\\"stackoverflow_login\\\"].append(match_name)\\n                    print(time.time() - cTime)\\n                else:\\n                    break\\n\\n            # else:\\n            #     print(\\\"The Stack Overflow info of possible username {} for github user {} can not be found\\\".format(name,git_developer[\\\"name\\\"]))\\n\\n\\n\\n        if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\" and not git_developer[\\\"stackoverflow_login\\\"] == []:\\n            print(\\\"The Stack Overflow display_name for github user {}: {}\\\".format(git_developer[\\\"name\\\"],git_developer['stackoverflow_login']))\\n        else:\\n            git_developer[\\\"stackoverflow_login\\\"] = \\\"null\\\"\\n            print(\\\"The Stack Overflow display_name for github user {} not found\\\".format(git_developer[\\\"name\\\"]))\\n\\n        new_info.append(git_developer)\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import time\\nimport json\\nimport types\\nimport sys\\nimport os\\n\\nInfo_path = sys.path[0] + \\\"/Info\\\"\\nif not os.path.exists(Info_path):\\n    os.mkdir(Info_path)\\n\\nname_file = Info_path + '/login_list.json'\\nname_list = open(name_file,encoding='utf-8')\\nname_list = json.load(name_list)\\ngit_info = gt.search_info(name_list)\\n\\ngit_api = 'https://api.github.com/repos/{}/commits'.format('sindresorhus/awesome')\\n# git_info = gt.get_info(git_api)\\n\\ninfo_file = Info_path + '/awesome_match_5.json'\\nsyn_file = Info_path + '/syn_list.json'\\ncTime = time.time()\\nprint(\\\"Dumping the info...\\\")\\nwith open(info_file, 'w') as ctfile:\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"match_info = st.match_account(git_info,syn_list)\\nprint(time.time() - cTime)\\n\\nfor item in match_info:\\n    if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n        stk_count = stk_count + 1\\n    total_count = total_count +1\\n\\nprint(\\\"\\\\n The number of developers with Stack Overflow account is {}\\\".format(stk_count))\\nprint(\\\"The number of developers is {}\\\".format(total_count))\\nprint(\\\"Ratio:{}\\\".format(round(stk_count/total_count,4)))\\n\\nprint(\\\"Saving the results of matching...\\\")\\ncTime = time.time()\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(match_info, ctfile, indent=3)\\nprint(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-09 13:48:03 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir <--fsearch|--search|--mapping>\\n\\\"\\\"\\\"\\n\\nimport json\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    # check and process input arguments\\n    if len(sys.argv) != 4:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\")\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\n    if not os.path.exists(output_dir):\\n        try:\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Wrong argument!\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\")\\n\\n\\n\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        # elif len(snippet_minus):\\n            # snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        else:\\n            snippet = str()\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    return snippet_list\\n\\n\\ndef get_date(line):\\n    regex = re.compile(\\\"date:\\\\s([0-9\\\\-:+\\\\s]*)\\\\sauthor:\\\")\\n    date = regex.findall(line)\\n    return date\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    else:\\n        return 0\\n\\n\\ndef get_line_index(inp):\\n    a_start_line_list = list()\\n    a_total_line_list = list()\\n    b_start_line_list = list()\\n    b_total_line_list = list()\\n    lines = inp.split(\\\"\\\\n\\\")\\n    regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n    regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n    regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n    regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n    for line in lines:\\n        a_start_line = regex_a_start.findall(line)\\n        a_total_line = regex_a_total.findall(line)\\n        b_start_line = regex_b_start.findall(line)\\n        b_total_line = regex_b_total.findall(line)\\n        a_start_line_list.extend(a_start_line)\\n        a_total_line_list.extend(a_total_line)\\n        b_start_line_list.extend(b_start_line)\\n        b_total_line_list.extend(b_total_line)\\n    return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"            email = get_info.get_email(line)\\n            if len(email):\\n                commit_author = author[0]\\n                commit_email = email[0]\\n                commit_date = get_info.get_date(line)\\n                if len(commit_date):\\n                    commit_date = commit_date[0]\\n        elif get_info.get_change_file(line):\\n            commit_file = get_info.get_change_file(line)\\n            # code_dict['file'] = commit_file[0]\\n        elif get_info.get_change_section(line):\\n            code_dict['file'] = commit_file[0]\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            code_dict['commit_date'] = commit_date\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Commit Date: {}\\\".format(code['commit_date']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(code[\\\"code_snippet\\\"])\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\\n\\ndef print_match_result(data_list):\\n    print('\\\\033[1;34m')\\n    print(\\\"Found {} match result\\\".format(len(data_list)))\\n    for data in data_list:\\n        print('\\\\033[1;31m')\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Commit Date: {}\\\".format(data['commit_date']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(data[\\\"code_snippet\\\"])\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\nInput: The name of a github repo or a list of github developers' name.\\nOutput: A json file which includes the name, login, location, language, tags, email and Stack Overflow dispaly name. \\n\\nThe script get_info_git.py is used for dumping the developers' name, login, company, location and e-mail.\\nThe script get_info_stackoverflow.py is used for dumping the developers' display_name, location and github account.\\nThe script name_form.py lists the possible Stack Overflow display_name for a developer found in the github commit history.\\nThe script syn_tags.py gets the synonymous tags which can be used in the comparsion of tags between github and Stach Overflow users. \\nRun the script main.py and you can get a json file containing developers' info of github and Stack Overflow display_name.\\n\\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username and location of a developer can be obtained, which means we should list different possible usernames for each user in the commit history. Possible name forms need to be found, and the range of related users can only be narrowed by info of location now, which is insufficient.\",\n      \"commit_date\": \"2017-10-09 00:15:43 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"And then, possible usernames have been replenished. The possible forms of usernames are generated like:\\n\\nFor name which is 1 word long, like \\\"Kazhnuz\\\", the possible name forms are:\\nKaz, Kazhnuz, nuz(the last three letters)\\nThe reason for this generating method is that the Stack Overflow API for the query of user info can find all users whose name contains the input username, so for the uername that is 1 word long, we can simply split it into several words.\\n\\nFor name which is 2 words long, like \\\"Sindre Sorhus\\\", the possible usernames are:\\nSindre Sorhus, sindresorhus, sorhus, sindre\\nwhich are generated by different combination of the First and Last name.\\n\\nFor name which is 3 words long (few cases are like that), like \\\"Victor Laerte Oliveira\\\", the possible usernames are:\\nlaerte, oliveira, victor\\nSimply split the name into three parts can also get a lot of different possible name because the Stack Overflow API returns all users whose name contains the input username.After using the possible names, the matching rate is 31%(22/71).\\n\\nFor the location and tags commparsion, the score is used to evaluate the similarity between the github and Stack Overflow users. For those whose locations are 100% matched, the location_score is 1; And for those whose locations are partly matched, the levenstein distance, which is recognized as the minimum edit distance, is used to evaluate the similarity between the two locations, and the distance has been normalized for the evaluation. \\n\\nFor the comparison of tags, the synonymous tags list is used. By finding the number of tags which are related according to the list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\\n\\nThe final score is the sum of the location_score and tags_score, and an appropriate threshold should be set to improve the matching rate.\\n\\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.\\n\\nAuthor: AlvinZSJ\",\n      \"commit_date\": \"2017-10-09 00:15:43 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"github_language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\"\\n      ],\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"github_login\\\": \\\"sindresorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"github_tags\\\": [\\n         \\\"alfred\\\",\\n         \\\"alfred-workflow\\\",\\n         \\\"macos\\\",\\n         \\\"dark-mode\\\",\\n         \\\"alfred3-workflow\\\",\\n         \\\"applescript\\\",\\n         \\\"alfy\\\",\\n         \\\"npm-package\\\",\\n         \\\"emoji\\\",\\n         \\\"emoji-picker\\\",\\n         \\\"emoji-searcher\\\",\\n         \\\"nodejs\\\",\\n         \\\"lock\\\",\\n         \\\"c-language\\\",\\n         \\\"npm\\\",\\n         \\\"npms\\\",\\n         \\\"search\\\",\\n         \\\"search-engine\\\",\\n         \\\"alfred-theme\\\",\\n         \\\"theme\\\",\\n         \\\"simple\\\",\\n         \\\"minimalistic\\\",\\n         \\\"light\\\",\\n         \\\"framework\\\",\\n         \\\"javascript\\\",\\n         \\\"workflow\\\",\\n         \\\"ama\\\",\\n         \\\"ask-me-anything\\\",\\n         \\\"question-answering\\\",\\n         \\\"meta\\\",\\n         \\\"personal\\\",\\n         \\\"ask\\\",\\n         \\\"open-content\\\",\\n         \\\"questions\\\",\\n         \\\"answers\\\",\\n         \\\"questions-and-answers\\\",\\n         \\\"list\\\",\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"deprecated\\\",\\n         \\\"twitter\\\",\\n         \\\"electron\\\",\\n         \\\"electron-app\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"C++\\\",\\n         \\\"IDL\\\",\\n         \\\"Arduino\\\",\\n         \\\"Java\\\",\\n         \\\"Processing\\\",\\n         \\\"C\\\",\\n         \\\"Batchfile\\\",\\n         \\\"CMake\\\",\\n         \\\"GLSL\\\",\\n         \\\"Scheme\\\",\\n         \\\"Makefile\\\",\\n         \\\"Prolog\\\",\\n         \\\"XSLT\\\",\\n         \\\"C#\\\",\\n         \\\"QMake\\\"\\n      ],\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"github_login\\\": \\\"t27\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Python\\\",\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\"\\n      ],\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"lmichelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": \\\"null\\\",\\n      \\\"stackoverflow_login\\\": \\\"lmichelbacher_1.0\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"M4\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null,\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"github_tags\\\": [\\n         \\\"awesome\\\",\\n         \\\"awesome-list\\\",\\n         \\\"gnome\\\",\\n         \\\"applications\\\",\\n         \\\"gnome-shell-extension\\\",\\n         \\\"gtk-theme\\\",\\n         \\\"css\\\",\\n         \\\"html\\\",\\n         \\\"bootstrap\\\",\\n         \\\"icons\\\",\\n         \\\"faenza\\\",\\n         \\\"linux\\\",\\n         \\\"bootstrap3\\\",\\n         \\\"css3\\\",\\n         \\\"html5\\\",\\n         \\\"education\\\",\\n         \\\"ressources-educatives\\\",\\n         \\\"logiciels\\\",\\n         \\\"libre\\\",\\n         \\\"culture-libre\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"github_tags\\\": [\\n         \\\"automation\\\",\\n         \\\"home-automation\\\",\\n         \\\"web-scraping\\\",\\n         \\\"awesome-list\\\",\\n         \\\"awesome\\\",\\n         \\\"list\\\",\\n         \\\"c\\\",\\n         \\\"linux\\\",\\n         \\\"linux-distribution\\\",\\n         \\\"desktop-environment\\\",\\n         \\\"x-window-manager\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"github_language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"Makefile\\\",\\n         \\\"Ruby\\\",\\n         \\\"Swift\\\",\\n         \\\"JavaScript\\\",\\n         \\\"C\\\",\\n         \\\"CSS\\\",\\n         \\\"C++\\\",\\n         \\\"Erlang\\\"\\n      ],\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"company\\\": null,\\n      \\\"github_login\\\": \\\"likedan\\\",\\n      \\\"location\\\": null,\\n      \\\"email\\\": null,\\n      \\\"github_tags\\\": [\\n         \\\"coreml\\\",\\n         \\\"coreml-model\\\",\\n         \\\"apple\\\",\\n         \\\"machine-learning\\\",\\n         \\\"curated-list\\\",\\n         \\\"coreml-framework\\\",\\n         \\\"coreml-models\\\",\\n         \\\"coremltools\\\",\\n         \\\"awesome-list\\\",\\n         \\\"models\\\",\\n         \\\"swift-framework\\\",\\n         \\\"swift3\\\",\\n         \\\"swift-library\\\",\\n         \\\"ios\\\",\\n         \\\"ios-swift\\\",\\n         \\\"ios-ui\\\",\\n         \\\"ios-animation\\\",\\n         \\\"ios-lib\\\",\\n         \\\"xib\\\",\\n         \\\"animation\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/Info/awesome_match.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"login\\\": \\\"t27\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"stackoverflow_login\\\": \\\"Tarang Shah\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"sindresorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"stackoverflow_login\\\": \\\"Sindre Sorhus\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"lmichelbacher\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"language\\\": [\\n         \\\"Emacs Lisp\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"PowerShell\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"Kazhnuz\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"Makefile\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"M4\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"language\\\": [\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Ruby\\\",\\n         \\\"Visual Basic\\\",\\n         \\\"Vala\\\",\\n         \\\"PHP\\\",\\n         \\\"C++\\\",\\n         \\\"Makefile\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Groff\\\",\\n         \\\"NSIS\\\",\\n         \\\"Nginx\\\",\\n         \\\"C\\\",\\n         \\\"LiveScript\\\",\\n         \\\"M4\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Assembly\\\",\\n         \\\"eC\\\",\\n         \\\"Matlab\\\",\\n         \\\"Perl\\\",\\n         \\\"XS\\\",\\n         \\\"Java\\\",\\n         \\\"Prolog\\\",\\n         \\\"IDL\\\",\\n         \\\"Perl6\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"likedan\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Swift\\\",\\n         \\\"Ruby\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"Erlang\\\",\\n         \\\"C++\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"web-flow\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"GitHub Web Flow\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"kennethreitz\\\",\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"name\\\": \\\"Kenneth Reitz\\\",\\n      \\\"location\\\": \\\"Winchester, VA\\\",\\n      \\\"language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Smarty\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"Perl\\\",\\n         \\\"Go\\\",\\n         \\\"Roff\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C\\\",\\n         \\\"Vim script\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"johnjago\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"John Jago\\\",\\n      \\\"location\\\": \\\"United States\\\",\\n      \\\"stackoverflow_login\\\": \\\"John Jago\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"sfischer13\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Stefanus\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"Stefanus\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"ukstv\\\",\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"name\\\": \\\"Sergey Ukustov\\\",\\n      \\\"location\\\": \\\"Volgograd, Russia\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"Java\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Python\\\",\\n         \\\"Go\\\",\\n         \\\"Assembly\\\",\\n         \\\"M4\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"C++\\\",\\n         \\\"NSIS\\\",\\n         \\\"PureBasic\\\",\\n         \\\"Batchfile\\\",\\n         \\\"DTrace\\\",\\n         \\\"Swift\\\",\\n         \\\"C#\\\",\\n         \\\"CMake\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"PHP\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Puppet\\\",\\n         \\\"PLpgSQL\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Scala\\\",\\n         \\\"Nginx\\\",\\n         \\\"XSLT\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"Siilwyn\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Selwyn\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Rust\\\",\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"hobbyquaker\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Sebastian Raff\\\",\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Arduino\\\",\\n         \\\"Inno Setup\\\",\\n         \\\"Tcl\\\",\\n         \\\"Makefile\\\",\\n         \\\"Java\\\",\\n         \\\"Python\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"hq@ccu.io\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"stetso\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": null,\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"Objective-C++\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"QMake\\\",\\n         \\\"Prolog\\\",\\n         \\\"Makefile\\\",\\n         \\\"C++\\\",\\n         \\\"GLSL\\\",\\n         \\\"NSIS\\\",\\n         \\\"Lua\\\",\\n         \\\"CMake\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"HLSL\\\",\\n         \\\"Perl\\\",\\n         \\\"CSS\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Java\\\",\\n         \\\"PHP\\\",\\n         \\\"Roff\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"roaldnefs\\\",\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"name\\\": \\\"Roald Nefs\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"stackoverflow_login\\\": \\\"Roald Nefs\\\",\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"chasegiunta\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Chase Giunta\\\",\\n      \\\"location\\\": \\\"Dallas, TX\\\",\\n      \\\"language\\\": [\\n         \\\"HTML\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Nginx\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"LappleApple\\\",\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"name\\\": \\\"Lauri Apple\\\",\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Scala\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"CMake\\\",\\n         \\\"Shell\\\",\\n         \\\"C\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Rust\\\",\\n         \\\"PLpgSQL\\\",\\n         \\\"Erlang\\\",\\n         \\\"Go\\\",\\n         \\\"Java\\\",\\n         \\\"M4\\\",\\n         \\\"Perl\\\",\\n         \\\"Protocol Buffer\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"meitar\\\",\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"name\\\": \\\"Meitar M.\\\",\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\",\\n      \\\"language\\\": [\\n         \\\"PHP\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Perl\\\",\\n         \\\"R\\\",\\n         \\\"Assembly\\\",\\n         \\\"C++\\\",\\n         \\\"Groovy\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Java\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Clojure\\\",\\n         \\\"Scala\\\",\\n         \\\"Swift\\\",\\n         \\\"Scilab\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"angrykoala\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\",\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\",\\n      \\\"stackoverflow_login\\\": \\\"angrykoala\\\",\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"ooade\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\",\\n      \\\"stackoverflow_login\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"mezod\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\",\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\",\\n      \\\"language\\\": [\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Java\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Smarty\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"mezood@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"sheonhan\\\",\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"name\\\": \\\"Sheon Han\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"Sheon Han\\\",\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"m1guelpf\\\",\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\",\\n      \\\"location\\\": \\\"Spain\\\",\\n      \\\"language\\\": [\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"Java\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Vue\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"Assembly\\\",\\n         \\\"AutoIt\\\",\\n         \\\"Gherkin\\\",\\n         \\\"Python\\\",\\n         \\\"C#\\\",\\n         \\\"C\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"davisonio\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Craig Davison\\\",\\n      \\\"location\\\": \\\"Hampshire, UK\\\",\\n      \\\"language\\\": [\\n         \\\"Lua\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"craig@davison.io\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"vitalets\\\",\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\",\\n      \\\"location\\\": \\\"Moscow\\\",\\n      \\\"stackoverflow_login\\\": \\\"vitalets\\\",\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"mipmip\\\",\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"name\\\": \\\"Pim Snel\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"Shell\\\",\\n         \\\"Swift\\\",\\n         \\\"C\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Python\\\",\\n         \\\"CSS\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"HTML\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"AppleScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"C++\\\",\\n         \\\"Groff\\\",\\n         \\\"D\\\",\\n         \\\"Vue\\\",\\n         \\\"Makefile\\\",\\n         \\\"VimL\\\",\\n         \\\"C#\\\",\\n         \\\"ASP\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"arbox\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Andrei Beliankou\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"Andrei Beliankou\\\",\\n      \\\"email\\\": \\\"arbox@yandex.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"k4m4\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\",\\n      \\\"location\\\": \\\"Athens, Greece\\\",\\n      \\\"stackoverflow_login\\\": \\\"k4m4\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"analyticalmonk\\\",\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"name\\\": \\\"Akash Tandon\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"stackoverflow_login\\\": \\\"Analytical Monk\\\",\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"faroit\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\",\\n      \\\"location\\\": \\\"Europe\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Fortran\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Swift\\\",\\n         \\\"Makefile\\\",\\n         \\\"TeX\\\",\\n         \\\"Ruby\\\",\\n         \\\"Matlab\\\",\\n         \\\"Julia\\\",\\n         \\\"Vue\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Batchfile\\\",\\n         \\\"QMake\\\",\\n         \\\"OpenEdge ABL\\\",\\n         \\\"Rebol\\\",\\n         \\\"Module Management System\\\",\\n         \\\"Groff\\\",\\n         \\\"Java\\\",\\n         \\\"Pascal\\\",\\n         \\\"Alloy\\\",\\n         \\\"Clojure\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Nginx\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"RyanZim\\\",\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\",\\n      \\\"location\\\": \\\"East Earl, PA\\\",\\n      \\\"stackoverflow_login\\\": \\\"RyanZim\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"RichardLitt\\\",\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"name\\\": \\\"Richard Littauer\\\",\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Go\\\",\\n         \\\"Groff\\\",\\n         \\\"Python\\\",\\n         \\\"Java\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Perl\\\",\\n         \\\"Clojure\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"TeX\\\",\\n         \\\"R\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"victorlaerte\\\",\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\",\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\",\\n      \\\"language\\\": [\\n         \\\"Java\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"Cucumber\\\",\\n         \\\"Makefile\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"C++\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Swift\\\",\\n         \\\"Python\\\",\\n         \\\"Gherkin\\\",\\n         \\\"FreeMarker\\\",\\n         \\\"Inno Setup\\\",\\n         \\\"Roff\\\",\\n         \\\"C#\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"xiaohanyu\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Xiao Hanyu\\\",\\n      \\\"location\\\": \\\"Singapore\\\",\\n      \\\"stackoverflow_login\\\": \\\"Xiao Hanyu\\\",\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"DavidLambauer\\\",\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"name\\\": \\\"DavidLamabuer\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"language\\\": [\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"Shell\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Nginx\\\",\\n         \\\"Logos\\\",\\n         \\\"Perl\\\",\\n         \\\"XSLT\\\",\\n         \\\"Python\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"Roff\\\",\\n         \\\"TeX\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"kevva\\\",\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\",\\n      \\\"location\\\": \\\"Sweden\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"MatthewVita\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Matthew Vita\\\",\\n      \\\"location\\\": \\\"Los Angeles, US\\\",\\n      \\\"stackoverflow_login\\\": \\\"Matthew Vita\\\",\\n      \\\"email\\\": \\\"matthewvita@live.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"kud1ing\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": null,\\n      \\\"location\\\": \\\"Germany, pretty central\\\",\\n      \\\"language\\\": [\\n         \\\"Vim script\\\",\\n         \\\"Shell\\\",\\n         \\\"ANTLR\\\",\\n         \\\"Python\\\",\\n         \\\"Rust\\\",\\n         \\\"Java\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"jbmoelker\\\",\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"name\\\": \\\"Jasper Moelker\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Python\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Java\\\",\\n         \\\"Makefile\\\",\\n         \\\"Go\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"name\\\": \\\"David van Leeuwen\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"C\\\",\\n         \\\"Python\\\",\\n         \\\"HTML\\\",\\n         \\\"Swift\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Shell\\\",\\n         \\\"TypeScript\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"david@madeawkward.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"qazbnm456\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Boik\\\",\\n      \\\"location\\\": \\\"Taiwan\\\",\\n      \\\"language\\\": [\\n         \\\"Swift\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"Makefile\\\",\\n         \\\"Racket\\\",\\n         \\\"Python\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"Coq\\\",\\n         \\\"Haskell\\\",\\n         \\\"Shell\\\",\\n         \\\"Assembly\\\",\\n         \\\"Ruby\\\",\\n         \\\"C\\\",\\n         \\\"PHP\\\",\\n         \\\"Go\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"C++\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Hack\\\",\\n         \\\"Nginx\\\",\\n         \\\"Lex\\\",\\n         \\\"Yacc\\\",\\n         \\\"CMake\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"OpenEdge ABL\\\",\\n         \\\"Perl\\\",\\n         \\\"C#\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"armaldio\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Quentin Goinaud\\\",\\n      \\\"location\\\": \\\"France\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Batchfile\\\",\\n         \\\"PHP\\\",\\n         \\\"C++\\\",\\n         \\\"Python\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Java\\\",\\n         \\\"Objective-C\\\",\\n         \\\"CMake\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"mislavcimpersak\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\",\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\",\\n      \\\"stackoverflow_login\\\": \\\"mislav\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"sjfricke\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Spencer\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Makefile\\\",\\n         \\\"Java\\\",\\n         \\\"Batchfile\\\",\\n         \\\"GLSL\\\",\\n         \\\"C++\\\",\\n         \\\"CMake\\\",\\n         \\\"Shell\\\",\\n         \\\"C\\\",\\n         \\\"Ruby\\\",\\n         \\\"Go\\\",\\n         \\\"C#\\\",\\n         \\\"Cuda\\\",\\n         \\\"Objective-C\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Python\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"PHP\\\",\\n         \\\"Assembly\\\",\\n         \\\"QMake\\\",\\n         \\\"Lua\\\",\\n         \\\"MAXScript\\\",\\n         \\\"Roff\\\",\\n         \\\"M4\\\",\\n         \\\"NSIS\\\",\\n         \\\"Perl\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"quangv\\\",\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"name\\\": \\\"Quang Van\\\",\\n      \\\"location\\\": \\\"Central Mass.\\\",\\n      \\\"stackoverflow_login\\\": \\\"Quang Van\\\",\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"kminek\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Grzesiek W\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Perl\\\",\\n         \\\"Puppet\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"pmatseykanets\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Peter Matseykanets\\\",\\n      \\\"location\\\": \\\"Columbia, MD\\\",\\n      \\\"language\\\": [\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"Go\\\",\\n         \\\"Shell\\\",\\n         \\\"HTML\\\",\\n         \\\"Vue\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"Common Lisp\\\",\\n         \\\"Roff\\\",\\n         \\\"Batchfile\\\",\\n         \\\"ApacheConf\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"gdi2290\\\",\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\",\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"stackoverflow_login\\\": \\\"gdi2290\\\",\\n      \\\"email\\\": \\\"github@gdi2290.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"bouzlibop\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Adrian Baran\\\",\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\",\\n      \\\"language\\\": [\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Ruby\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"BubuAnabelas\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Python\\\",\\n         \\\"Perl\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"podo\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\",\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\",\\n      \\\"language\\\": [\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"terryum\\\",\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\",\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\",\\n      \\\"language\\\": [\\n         \\\"Matlab\\\",\\n         \\\"TeX\\\",\\n         \\\"Python\\\",\\n         \\\"Jupyter Notebook\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"LucasBassetti\\\",\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"name\\\": \\\"Lucas Bassetti\\\",\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Java\\\",\\n         \\\"Ruby\\\",\\n         \\\"PHP\\\",\\n         \\\"Makefile\\\",\\n         \\\"Shell\\\",\\n         \\\"Web Ontology Language\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Cap'n Proto\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"TheJambo\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"James Osborn\\\",\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\",\\n      \\\"language\\\": [\\n         \\\"Makefile\\\",\\n         \\\"Python\\\",\\n         \\\"Assembly\\\",\\n         \\\"Perl\\\",\\n         \\\"C++\\\",\\n         \\\"Perl6\\\",\\n         \\\"CMake\\\",\\n         \\\"C\\\",\\n         \\\"JavaScript\\\",\\n         \\\"CSS\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"HTML\\\",\\n         \\\"PHP\\\",\\n         \\\"Shell\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"james@james.am\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"dar5hak\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Darshak Parikh\\\",\\n      \\\"location\\\": \\\"Pune, India\\\",\\n      \\\"language\\\": [\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"JavaScript\\\",\\n         \\\"NSIS\\\",\\n         \\\"Kotlin\\\",\\n         \\\"Java\\\",\\n         \\\"Shell\\\",\\n         \\\"SystemVerilog\\\",\\n         \\\"M4\\\",\\n         \\\"xBase\\\",\\n         \\\"Python\\\",\\n         \\\"Fortran\\\",\\n         \\\"Forth\\\",\\n         \\\"LLVM\\\",\\n         \\\"Meson\\\",\\n         \\\"Prolog\\\",\\n         \\\"Makefile\\\",\\n         \\\"Haxe\\\",\\n         \\\"Scilab\\\",\\n         \\\"OCaml\\\",\\n         \\\"C++\\\",\\n         \\\"Rust\\\",\\n         \\\"Yacc\\\",\\n         \\\"ASP\\\",\\n         \\\"COBOL\\\",\\n         \\\"GAP\\\",\\n         \\\"ooc\\\",\\n         \\\"PigLatin\\\",\\n         \\\"TeX\\\",\\n         \\\"C\\\",\\n         \\\"Go\\\",\\n         \\\"Matlab\\\",\\n         \\\"F#\\\",\\n         \\\"GDB\\\",\\n         \\\"Cuda\\\",\\n         \\\"Perl\\\",\\n         \\\"XSLT\\\",\\n         \\\"Objective-C\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Gherkin\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"aviaryan\\\",\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"name\\\": \\\"Avi Aryan\\\",\\n      \\\"location\\\": \\\"Gandhinagar, India\\\",\\n      \\\"language\\\": [\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"PHP\\\",\\n         \\\"JavaScript\\\",\\n         \\\"AutoHotkey\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Shell\\\",\\n         \\\"Python\\\",\\n         \\\"C++\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"Go\\\",\\n         \\\"C#\\\",\\n         \\\"C\\\",\\n         \\\"Perl\\\",\\n         \\\"SourcePawn\\\",\\n         \\\"Mako\\\",\\n         \\\"Makefile\\\",\\n         \\\"DIGITAL Command Language\\\",\\n         \\\"Assembly\\\",\\n         \\\"TeX\\\",\\n         \\\"Smarty\\\",\\n         \\\"Lua\\\",\\n         \\\"M4\\\",\\n         \\\"Ragel\\\",\\n         \\\"Inno Setup\\\",\\n         \\\"Awk\\\",\\n         \\\"Protocol Buffer\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Ada\\\",\\n         \\\"CMake\\\",\\n         \\\"Yacc\\\",\\n         \\\"1C Enterprise\\\",\\n         \\\"PostScript\\\",\\n         \\\"AppleScript\\\",\\n         \\\"Matlab\\\",\\n         \\\"Visual Basic\\\",\\n         \\\"GAP\\\",\\n         \\\"Smalltalk\\\",\\n         \\\"Vim script\\\",\\n         \\\"Scala\\\",\\n         \\\"Objective-C\\\",\\n         \\\"XSLT\\\",\\n         \\\"Roff\\\",\\n         \\\"Lex\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"petk\\\",\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"name\\\": \\\"Peter Kokot\\\",\\n      \\\"location\\\": \\\"Area 51\\\",\\n      \\\"language\\\": [\\n         \\\"Lua\\\",\\n         \\\"Augeas\\\",\\n         \\\"Python\\\",\\n         \\\"HCL\\\",\\n         \\\"Vim script\\\",\\n         \\\"C\\\",\\n         \\\"Shell\\\",\\n         \\\"Nginx\\\",\\n         \\\"Makefile\\\",\\n         \\\"Ruby\\\",\\n         \\\"Roff\\\",\\n         \\\"Perl\\\",\\n         \\\"XSLT\\\",\\n         \\\"PHP\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Vue\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Go\\\",\\n         \\\"TypeScript\\\",\\n         \\\"XQuery\\\",\\n         \\\"ActionScript\\\",\\n         \\\"Java\\\",\\n         \\\"C++\\\",\\n         \\\"Assembly\\\",\\n         \\\"TeX\\\",\\n         \\\"M4\\\",\\n         \\\"Fortran\\\",\\n         \\\"CMake\\\",\\n         \\\"Objective-C\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Yacc\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"d3viant0ne\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joshua Wiens\\\",\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\",\\n      \\\"stackoverflow_login\\\": \\\"d3viant0ne\\\",\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"terkelg\\\",\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"name\\\": \\\"Terkel\\\",\\n      \\\"location\\\": \\\"Los Angeles, CA\\\",\\n      \\\"stackoverflow_login\\\": \\\"Terkel Gjervig\\\",\\n      \\\"email\\\": \\\"terkel@terkel.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"mischah\\\",\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\",\\n      \\\"location\\\": \\\"Kassel, Germany\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Shell\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Ruby\\\",\\n         \\\"Makefile\\\",\\n         \\\"VimL\\\",\\n         \\\"Vue\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Scala\\\",\\n         \\\"Harbour\\\",\\n         \\\"Handlebars\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"kasbah\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"CSS\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Nginx\\\",\\n         \\\"PHP\\\",\\n         \\\"C++\\\",\\n         \\\"Assembly\\\",\\n         \\\"C\\\",\\n         \\\"Prolog\\\",\\n         \\\"Objective-C\\\",\\n         \\\"HTML\\\",\\n         \\\"Batchfile\\\",\\n         \\\"Eagle\\\",\\n         \\\"TeX\\\",\\n         \\\"Perl\\\",\\n         \\\"QMake\\\",\\n         \\\"C#\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Java\\\",\\n         \\\"Groff\\\",\\n         \\\"Haskell\\\",\\n         \\\"CMake\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Lua\\\",\\n         \\\"Racket\\\",\\n         \\\"Visual Basic\\\",\\n         \\\"Awk\\\",\\n         \\\"VimL\\\",\\n         \\\"Elm\\\",\\n         \\\"Standard ML\\\",\\n         \\\"PowerShell\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"OCaml\\\",\\n         \\\"Ruby\\\",\\n         \\\"Hack\\\",\\n         \\\"KiCad\\\",\\n         \\\"Arduino\\\",\\n         \\\"OpenSCAD\\\",\\n         \\\"GAP\\\",\\n         \\\"Rust\\\",\\n         \\\"D\\\",\\n         \\\"Game Maker Language\\\",\\n         \\\"Rebol\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Fortran\\\",\\n         \\\"Clojure\\\",\\n         \\\"PureScript\\\",\\n         \\\"AGS Script\\\",\\n         \\\"M4\\\",\\n         \\\"R\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"JesseTG\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\",\\n      \\\"location\\\": \\\"New York, NY\\\",\\n      \\\"stackoverflow_login\\\": \\\"JesseTG\\\",\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"sger\\\",\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\",\\n      \\\"location\\\": \\\"Athens\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Elixir\\\",\\n         \\\"Swift\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\",\\n         \\\"Brainfuck\\\",\\n         \\\"C\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\",\\n         \\\"VimL\\\",\\n         \\\"Makefile\\\",\\n         \\\"Erlang\\\",\\n         \\\"Batchfile\\\",\\n         \\\"PowerShell\\\",\\n         \\\"CSS\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C++\\\",\\n         \\\"Ruby\\\",\\n         \\\"TeX\\\",\\n         \\\"Objective-C++\\\",\\n         \\\"Python\\\",\\n         \\\"DTrace\\\",\\n         \\\"LLVM\\\",\\n         \\\"Vim script\\\",\\n         \\\"Assembly\\\",\\n         \\\"Emacs Lisp\\\",\\n         \\\"Perl\\\",\\n         \\\"CMake\\\",\\n         \\\"D\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"timofurrer\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Timo Furrer\\\",\\n      \\\"location\\\": \\\"__switzerland__\\\",\\n      \\\"language\\\": [\\n         \\\"Shell\\\",\\n         \\\"Vim script\\\",\\n         \\\"Python\\\",\\n         \\\"Makefile\\\",\\n         \\\"Java\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Tcl\\\",\\n         \\\"Batchfile\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C\\\",\\n         \\\"Assembly\\\",\\n         \\\"C++\\\",\\n         \\\"TeX\\\",\\n         \\\"Ruby\\\",\\n         \\\"ASP\\\",\\n         \\\"C#\\\",\\n         \\\"Perl\\\",\\n         \\\"Groff\\\",\\n         \\\"PHP\\\",\\n         \\\"PostScript\\\",\\n         \\\"RAML\\\",\\n         \\\"PLSQL\\\",\\n         \\\"XS\\\",\\n         \\\"XSLT\\\",\\n         \\\"VimL\\\",\\n         \\\"GAP\\\",\\n         \\\"Mako\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"harpribot\\\",\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\",\\n      \\\"location\\\": \\\"Austin, TX\\\",\\n      \\\"stackoverflow_login\\\": \\\"harpribot\\\",\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"aliesbelik\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"location\\\": \\\"Belarus\\\",\\n      \\\"stackoverflow_login\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"hbokh\\\",\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"name\\\": \\\"Henk\\\",\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\",\\n      \\\"language\\\": [\\n         \\\"Python\\\",\\n         \\\"Shell\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Ruby\\\",\\n         \\\"CoffeeScript\\\",\\n         \\\"Standard ML\\\",\\n         \\\"Makefile\\\",\\n         \\\"Nginx\\\",\\n         \\\"VimL\\\",\\n         \\\"PHP\\\",\\n         \\\"Arduino\\\",\\n         \\\"SaltStack\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"websemantics\\\",\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\",\\n      \\\"location\\\": \\\"Toronto, Canada\\\",\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"Shell\\\",\\n         \\\"Ruby\\\",\\n         \\\"CSS\\\",\\n         \\\"PHP\\\",\\n         \\\"PowerShell\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"Go\\\",\\n         \\\"TypeScript\\\",\\n         \\\"Makefile\\\",\\n         \\\"TeX\\\",\\n         \\\"Python\\\",\\n         \\\"Jupyter Notebook\\\",\\n         \\\"Nginx\\\",\\n         \\\"Vue\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"vors\\\",\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"name\\\": \\\"Sergei Vorobev\\\",\\n      \\\"location\\\": \\\"Seattle, WA\\\",\\n      \\\"language\\\": [\\n         \\\"Arduino\\\",\\n         \\\"AutoHotkey\\\",\\n         \\\"PowerShell\\\",\\n         \\\"C++\\\",\\n         \\\"CMake\\\",\\n         \\\"C\\\",\\n         \\\"Makefile\\\",\\n         \\\"Python\\\",\\n         \\\"Batchfile\\\",\\n         \\\"JavaScript\\\",\\n         \\\"HTML\\\",\\n         \\\"CSS\\\",\\n         \\\"Shell\\\",\\n         \\\"Go\\\",\\n         \\\"Ruby\\\",\\n         \\\"Java\\\",\\n         \\\"AppleScript\\\",\\n         \\\"Objective-C\\\",\\n         \\\"C#\\\",\\n         \\\"XSLT\\\",\\n         \\\"GCC Machine Description\\\",\\n         \\\"Perl\\\",\\n         \\\"PHP\\\",\\n         \\\"ASP\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": null\\n   },\\n   {\\n      \\\"login\\\": \\\"nicolesaidy\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Nicole Saidy\\\",\\n      \\\"location\\\": null,\\n      \\\"language\\\": [\\n         \\\"JavaScript\\\",\\n         \\\"Shell\\\",\\n         \\\"VimL\\\",\\n         \\\"CSS\\\",\\n         \\\"HTML\\\",\\n         \\\"ApacheConf\\\",\\n         \\\"PHP\\\"\\n      ],\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\"\\n   },\\n   {\\n      \\\"login\\\": \\\"tandavas\\\",\\n      \\\"company\\\": \\\"@Famolus \\\",\\n      \\\"name\\\": \\\"Thanakron Tandavas\\\",\\n      \\\"location\\\": \\\"Bangkok, Thailand\\\",\\n      \\\"stackoverflow_login\\\": \\\"Thanakron Tandavas\\\",\\n      \\\"email\\\": \\\"tandavas@famolus.com\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_awesome.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"{\\n   \\\"R\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\"\\n   ],\\n   \\\"filter\\\": [\\n      \\\"filters\\\"\\n   ],\\n   \\\"hash\\\": [\\n      \\\"hashes\\\",\\n      \\\"hashing\\\"\\n   ],\\n   \\\"penetration-testing\\\": [\\n      \\\"pen-testing\\\"\\n   ],\\n   \\\"Racket\\\": [\\n      \\\"drracket\\\",\\n      \\\"plt-scheme\\\",\\n      \\\"drscheme\\\"\\n   ],\\n   \\\"JavaScript\\\": [\\n      \\\"javascript-module\\\",\\n      \\\"vanilla-javascript\\\",\\n      \\\"javascript-runtime\\\",\\n      \\\"javascript-library\\\",\\n      \\\"javascript-disabled\\\",\\n      \\\"javascript-dom\\\",\\n      \\\"javascript-alert\\\",\\n      \\\"classic-javascript\\\",\\n      \\\"javascript-execution\\\",\\n      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\"\\n   ],\\n   \\\"Matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\"\\n   ],\\n   \\\"svg\\\": [\\n      \\\"svg-path\\\",\\n      \\\"svgz\\\"\\n   ],\\n   \\\"XSLT\\\": [\\n      \\\"xml-transform\\\",\\n      \\\"xslt-2.0-processors\\\",\\n      \\\"xsltprocessor\\\",\\n      \\\"xsltproc\\\",\\n      \\\"xsltransform\\\",\\n      \\\"xsl\\\"\\n   ],\\n   \\\"HTML\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\"\\n   ],\\n   \\\"bookmarks\\\": [\\n      \\\"bookmark\\\"\\n   ],\\n   \\\"html\\\": [\\n      \\\"span\\\",\\n      \\\"html-comments\\\",\\n      \\\"div-layouts\\\",\\n      \\\"nested-divs\\\",\\n      \\\"divs\\\",\\n      \\\"div\\\",\\n      \\\"html-attributes\\\",\\n      \\\"html-tag\\\"\\n   ],\\n   \\\"prototype\\\": [\\n      \\\"prototypes\\\"\\n   ],\\n   \\\"jobs\\\": [\\n      \\\"job\\\"\\n   ],\\n   \\\"Go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\"\\n   ],\\n   \\\"stream\\\": [\\n      \\\"streams\\\"\\n   ],\\n   \\\"PHP\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\\n      \\\"php-fpm\\\",\\n      \\\"php-session\\\",\\n      \\\"php-readfile\\\",\\n      \\\"php-functions\\\",\\n      \\\"php-cgi\\\",\\n      \\\"php-mail\\\",\\n      \\\"php-errors\\\",\\n      \\\"php-cli\\\",\\n      \\\"php.ini\\\",\\n      \\\"hypertext-preprocessor\\\",\\n      \\\"php-frameworks\\\",\\n      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\"\\n   ],\\n   \\\"database\\\": [\\n      \\\"dbms\\\",\\n      \\\"database-structure\\\",\\n      \\\"db\\\",\\n      \\\"databases\\\"\\n   ],\\n   \\\"textures\\\": [\\n      \\\"texture\\\"\\n   ],\\n   \\\"Elixir\\\": [\\n      \\\"elixir-lang\\\"\\n   ],\\n   \\\"ansible\\\": [\\n      \\\"ansible-playbook\\\"\\n   ],\\n   \\\"challenge\\\": [\\n      \\\"code-challenge\\\"\\n   ],\\n   \\\"aws-lambda\\\": [\\n      \\\"amazon-lambda\\\"\\n   ],\\n   \\\"go\\\": [\\n      \\\"golang\\\",\\n      \\\"go-language\\\"\\n   ],\\n   \\\"javascript\\\": [\\n      \\\"javascript-module\\\",\\n      \\\"vanilla-javascript\\\",\\n      \\\"javascript-runtime\\\",\\n      \\\"javascript-library\\\",\\n      \\\"javascript-disabled\\\",\\n      \\\"javascript-dom\\\",\\n      \\\"javascript-alert\\\",\\n      \\\"classic-javascript\\\",\\n      \\\"javascript-execution\\\",\\n      \\\".js\\\",\\n      \\\"ecmascript\\\",\\n      \\\"js\\\"\\n   ],\\n   \\\"build\\\": [\\n      \\\"builds\\\"\\n   ],\\n   \\\"Processing\\\": [\\n      \\\"processing.org\\\"\\n   ],\\n   \\\"python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\"\\n   ],\\n   \\\"Clojure\\\": [\\n      \\\"cljx\\\",\\n      \\\"cljc\\\",\\n      \\\"clj\\\"\\n   ],\\n   \\\"java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\\n      \\\"jdk\\\",\\n      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\"\\n   ],\\n   \\\"events\\\": [\\n      \\\"event\\\"\\n   ],\\n   \\\"keyboard\\\": [\\n      \\\"keyboards\\\"\\n   ],\\n   \\\"api\\\": [\\n      \\\"apis\\\"\\n   ],\\n   \\\"ios\\\": [\\n      \\\"ios-sdk\\\",\\n      \\\"apple-ios\\\",\\n      \\\"iphone-os\\\"\\n   ],\\n   \\\"shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\"\\n   ],\\n   \\\"visualization\\\": [\\n      \\\"visualisation\\\"\\n   ],\\n   \\\"C++\\\": [\\n      \\\"cpp\\\"\\n   ],\\n   \\\"cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\"\\n   ],\\n   \\\"vim\\\": [\\n      \\\"viml\\\",\\n      \\\"vimscript\\\",\\n      \\\"gvim\\\",\\n      \\\"gvimrc\\\",\\n      \\\"vimrc\\\"\\n   ],\\n   \\\"io\\\": [\\n      \\\"input-output\\\"\\n   ],\\n   \\\"CSS\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\\n      \\\"css-borders\\\",\\n      \\\"css-reset\\\",\\n      \\\"css-menu\\\",\\n      \\\"font-weight\\\",\\n      \\\"css-box-model\\\",\\n      \\\"inline-block\\\",\\n      \\\"alternate-stylesheets\\\",\\n      \\\"css-overflow\\\",\\n      \\\"css-line-height\\\",\\n      \\\"css-display\\\",\\n      \\\"css-validation\\\",\\n      \\\"style.css-template-file\\\",\\n      \\\"box-model\\\",\\n      \\\"max-width\\\",\\n      \\\"max-height\\\",\\n      \\\"min-width\\\",\\n      \\\"min-height\\\",\\n      \\\"css-centering\\\",\\n      \\\"css-inheritance\\\",\\n      \\\"css-columns\\\",\\n      \\\"css2\\\",\\n      \\\"css-height\\\",\\n      \\\"css-classes\\\",\\n      \\\"css-attributes\\\",\\n      \\\"css-background-image\\\",\\n      \\\"css-layout\\\",\\n      \\\"cascading-style-sheet\\\"\\n   ],\\n   \\\"import\\\": [\\n      \\\"imports\\\",\\n      \\\"importing\\\"\\n   ],\\n   \\\"redirect\\\": [\\n      \\\"redirecting\\\",\\n      \\\"redirection\\\",\\n      \\\"redirects\\\"\\n   ],\\n   \\\"java-8\\\": [\\n      \\\"jdk1.8\\\",\\n      \\\"jdk8\\\"\\n   ],\\n   \\\"bash\\\": [\\n      \\\"bash-function\\\",\\n      \\\".bash-profile\\\",\\n      \\\"bash-variables\\\",\\n      \\\"bash-alias\\\",\\n      \\\".bashrc\\\",\\n      \\\"bashrc\\\",\\n      \\\"bash-script\\\"\\n   ],\\n   \\\"r\\\": [\\n      \\\"r-language\\\",\\n      \\\"rstats\\\"\\n   ],\\n   \\\"resources\\\": [\\n      \\\"resource\\\"\\n   ],\\n   \\\"ant\\\": [\\n      \\\"apache-ant\\\"\\n   ],\\n   \\\"html5\\\": [\\n      \\\"time-tag\\\",\\n      \\\"xhtml5\\\"\\n   ],\\n   \\\"csv\\\": [\\n      \\\"tsv\\\",\\n      \\\"comma-separated\\\",\\n      \\\".csv\\\"\\n   ],\\n   \\\"usb\\\": [\\n      \\\"usbdevice\\\"\\n   ],\\n   \\\"css\\\": [\\n      \\\"css-font-weight\\\",\\n      \\\"dynamic-css\\\",\\n      \\\"css-borders\\\",\\n      \\\"css-reset\\\",\\n      \\\"css-menu\\\",\\n      \\\"font-weight\\\",\\n      \\\"css-box-model\\\",\\n      \\\"inline-block\\\",\\n      \\\"alternate-stylesheets\\\",\\n      \\\"css-overflow\\\",\\n      \\\"css-line-height\\\",\\n      \\\"css-display\\\",\\n      \\\"css-validation\\\",\\n      \\\"style.css-template-file\\\",\\n      \\\"box-model\\\",\\n      \\\"max-width\\\",\\n      \\\"max-height\\\",\\n      \\\"min-width\\\",\\n      \\\"min-height\\\",\\n      \\\"css-centering\\\",\\n      \\\"css-inheritance\\\",\\n      \\\"css-columns\\\",\\n      \\\"css2\\\",\\n      \\\"css-height\\\",\\n      \\\"css-classes\\\",\\n      \\\"css-attributes\\\",\\n      \\\"css-background-image\\\",\\n      \\\"css-layout\\\",\\n      \\\"cascading-style-sheet\\\"\\n   ],\\n   \\\"math\\\": [\\n      \\\"arithmetic\\\",\\n      \\\"mathematical\\\",\\n      \\\"maths\\\",\\n      \\\"mathematics\\\"\\n   ],\\n   \\\"jquery\\\": [\\n      \\\"jquery-css\\\",\\n      \\\"jquery-find\\\",\\n      \\\"jquery-post\\\",\\n      \\\"jquery-get\\\",\\n      \\\"jquery-hasclass\\\",\\n      \\\"jquery-after\\\",\\n      \\\"jquery-callback\\\",\\n      \\\"removeclass\\\",\\n      \\\"toggleclass\\\",\\n      \\\"addclass\\\",\\n      \\\"jquery-live\\\",\\n      \\\"jquery-core\\\"\\n   ],\\n   \\\"full-text-search\\\": [\\n      \\\"fulltext\\\",\\n      \\\"fts\\\",\\n      \\\"fulltext-searching\\\"\\n   ],\\n   \\\"tags\\\": [\\n      \\\"tag\\\"\\n   ],\\n   \\\"deprecated\\\": [\\n      \\\"deprecation\\\"\\n   ],\\n   \\\"list\\\": [\\n      \\\"ilist\\\",\\n      \\\"lists\\\"\\n   ],\\n   \\\"spring\\\": [\\n      \\\"spring-framework\\\"\\n   ],\\n   \\\"load-testing\\\": [\\n      \\\"loadtest\\\"\\n   ],\\n   \\\"bots\\\": [\\n      \\\"bot\\\"\\n   ],\\n   \\\"jni\\\": [\\n      \\\"java-native-interface\\\"\\n   ],\\n   \\\"website\\\": [\\n      \\\"websites\\\"\\n   ],\\n   \\\"string\\\": [\\n      \\\"empty-string\\\",\\n      \\\"str\\\",\\n      \\\"string-manipulation\\\",\\n      \\\"strings\\\"\\n   ],\\n   \\\"ubuntu\\\": [\\n      \\\"lubuntu\\\",\\n      \\\"kubuntu\\\",\\n      \\\"xubuntu\\\"\\n   ],\\n   \\\"mysql\\\": [\\n      \\\"mysqldump\\\",\\n      \\\"mysqlclient\\\",\\n      \\\"mysqld\\\",\\n      \\\"mysql-table\\\",\\n      \\\"mysql-server\\\",\\n      \\\"mysql-query\\\",\\n      \\\"my-sql\\\"\\n   ],\\n   \\\"angular\\\": [\\n      \\\"angular4.x\\\",\\n      \\\"angular4\\\",\\n      \\\"angular2\\\"\\n   ],\\n   \\\"learning\\\": [\\n      \\\"learn\\\"\\n   ],\\n   \\\"nlp\\\": [\\n      \\\"language-processing\\\",\\n      \\\"computational-linguistics\\\",\\n      \\\"natural-language\\\",\\n      \\\"natural-language-process\\\"\\n   ],\\n   \\\"colors\\\": [\\n      \\\"colours\\\",\\n      \\\"colour\\\",\\n      \\\"color\\\"\\n   ],\\n   \\\"Python\\\": [\\n      \\\"python-shell\\\",\\n      \\\"python-interpreter\\\",\\n      \\\"pythonic\\\"\\n   ],\\n   \\\"web-crawler\\\": [\\n      \\\"spider\\\",\\n      \\\"crawl\\\",\\n      \\\"crawling\\\",\\n      \\\"crawler\\\",\\n      \\\"webcrawling\\\",\\n      \\\"web-spider\\\",\\n      \\\"webspiders\\\"\\n   ],\\n   \\\"questions\\\": [\\n      \\\"question\\\"\\n   ],\\n   \\\"swift3\\\": [\\n      \\\"swift3.1\\\",\\n      \\\"swift3.0.2\\\",\\n      \\\"swift3.0.1\\\",\\n      \\\"swift3.0\\\"\\n   ],\\n   \\\"documentation\\\": [\\n      \\\"docs\\\"\\n   ],\\n   \\\"matlab\\\": [\\n      \\\"m-file\\\",\\n      \\\"mlint\\\",\\n      \\\"matlab-toolbox\\\",\\n      \\\"matlab-ide\\\",\\n      \\\"matlab-path\\\"\\n   ],\\n   \\\"fun\\\": [\\n      \\\"humour\\\",\\n      \\\"humor\\\"\\n   ],\\n   \\\"Makefile\\\": [\\n      \\\"make\\\",\\n      \\\"makefiles\\\"\\n   ],\\n   \\\"binary\\\": [\\n      \\\"binary-system\\\",\\n      \\\"binary-number\\\"\\n   ],\\n   \\\"elixir\\\": [\\n      \\\"elixir-lang\\\"\\n   ],\\n   \\\"CoffeeScript\\\": [\\n      \\\"coffee\\\"\\n   ],\\n   \\\"audio\\\": [\\n      \\\"sounds\\\",\\n      \\\"sound-api\\\",\\n      \\\"sound\\\"\\n   ],\\n   \\\"postgresql\\\": [\\n      \\\"sql-postgres\\\",\\n      \\\"pgsql\\\",\\n      \\\"postgres\\\"\\n   ],\\n   \\\"terminal\\\": [\\n      \\\"terminals\\\"\\n   ],\\n   \\\"php\\\": [\\n      \\\"php-include\\\",\\n      \\\"phtml\\\",\\n      \\\"php-fpm\\\",\\n      \\\"php-session\\\",\\n      \\\"php-readfile\\\",\\n      \\\"php-functions\\\",\\n      \\\"php-cgi\\\",\\n      \\\"php-mail\\\",\\n      \\\"php-errors\\\",\\n      \\\"php-cli\\\",\\n      \\\"php.ini\\\",\\n      \\\"hypertext-preprocessor\\\",\\n      \\\"php-frameworks\\\",\\n      \\\"php5\\\",\\n      \\\"php-date\\\",\\n      \\\"php-oop\\\"\\n   ],\\n   \\\"animation\\\": [\\n      \\\"scaleanimation\\\",\\n      \\\"rotateanimation\\\",\\n      \\\"animated\\\",\\n      \\\"animations\\\"\\n   ],\\n   \\\"android\\\": [\\n      \\\"android-framework\\\",\\n      \\\"android-ui\\\",\\n      \\\"android-application\\\",\\n      \\\"android-device\\\",\\n      \\\"android-api\\\",\\n      \\\"android-sdk\\\",\\n      \\\"android-mobile\\\"\\n   ],\\n   \\\"Cuda\\\": [\\n      \\\"cudamalloc\\\",\\n      \\\"cuda-kernel\\\"\\n   ],\\n   \\\"pipe\\\": [\\n      \\\"pipes\\\"\\n   ],\\n   \\\"dsl\\\": [\\n      \\\"domain-specific-languages\\\"\\n   ],\\n   \\\"levenshtein-distance\\\": [\\n      \\\"levenstein\\\",\\n      \\\"levenshtein\\\"\\n   ],\\n   \\\"graphics\\\": [\\n      \\\"computer-graphics\\\"\\n   ],\\n   \\\"icons\\\": [\\n      \\\"icon\\\"\\n   ],\\n   \\\"security\\\": [\\n      \\\"web-security\\\",\\n      \\\"vulnerabilities\\\",\\n      \\\"vulnerability\\\",\\n      \\\"secure\\\"\\n   ],\\n   \\\"reddit\\\": [\\n      \\\"reddit-api\\\"\\n   ],\\n   \\\"Assembly\\\": [\\n      \\\"assembly-language\\\",\\n      \\\"assembler\\\",\\n      \\\"asm\\\"\\n   ],\\n   \\\"generator\\\": [\\n      \\\"generators\\\"\\n   ],\\n   \\\"p2p\\\": [\\n      \\\"peer-to-peer\\\"\\n   ],\\n   \\\"shader\\\": [\\n      \\\"shaders\\\"\\n   ],\\n   \\\"testing\\\": [\\n      \\\"test\\\",\\n      \\\"tests\\\",\\n      \\\"software-testing\\\"\\n   ],\\n   \\\"less\\\": [\\n      \\\"lesscss\\\"\\n   ],\\n   \\\"Swift\\\": [\\n      \\\"swift1.2\\\",\\n      \\\"swift-ios\\\",\\n      \\\"swift-language\\\"\\n   ],\\n   \\\"dictionary\\\": [\\n      \\\"map\\\",\\n      \\\"dictionaries\\\",\\n      \\\"dict\\\"\\n   ],\\n   \\\"networking\\\": [\\n      \\\"networks\\\",\\n      \\\"network\\\"\\n   ],\\n   \\\"Objective-C\\\": [\\n      \\\"objc\\\"\\n   ],\\n   \\\"Java\\\": [\\n      \\\"oraclejdk\\\",\\n      \\\"java-libraries\\\",\\n      \\\"jre\\\",\\n      \\\"jdk\\\",\\n      \\\"core-java\\\",\\n      \\\"j2se\\\",\\n      \\\".java\\\",\\n      \\\"java-se\\\"\\n   ],\\n   \\\"deployment\\\": [\\n      \\\"deploy\\\"\\n   ],\\n   \\\"slice\\\": [\\n      \\\"string-slice\\\",\\n      \\\"array-slice\\\",\\n      \\\"slices\\\",\\n      \\\"slicing\\\"\\n   ],\\n   \\\"module\\\": [\\n      \\\"modules\\\"\\n   ],\\n   \\\"github-pages\\\": [\\n      \\\"gh-pages\\\"\\n   ],\\n   \\\"Shell\\\": [\\n      \\\"shellscript\\\",\\n      \\\"shell-commands\\\",\\n      \\\"shell-command\\\",\\n      \\\"shell-scripting\\\",\\n      \\\"shell-script\\\"\\n   ],\\n   \\\"twitter\\\": [\\n      \\\"twitter-api\\\"\\n   ],\\n   \\\"audio-player\\\": [\\n      \\\"audio-playing\\\"\\n   ],\\n   \\\"css3\\\": [\\n      \\\"css-text-shadow\\\",\\n      \\\"css-text-overflow\\\",\\n      \\\"css-box-shadow\\\",\\n      \\\"css-border-radius\\\",\\n      \\\"css-border-image\\\"\\n   ],\\n   \\\"web-scraping\\\": [\\n      \\\"webpagescraping\\\"\\n   ],\\n   \\\"jmeter\\\": [\\n      \\\"apache-jmeter\\\"\\n   ],\\n   \\\"search\\\": [\\n      \\\"searching\\\"\\n   ],\\n   \\\"translation\\\": [\\n      \\\"t9n\\\"\\n   ],\\n   \\\"PowerShell\\\": [\\n      \\\"windows-powershell\\\"\\n   ],\\n   \\\"data-structures\\\": [\\n      \\\"data-structure\\\"\\n   ],\\n   \\\"minify\\\": [\\n      \\\"minification\\\",\\n      \\\"minifier\\\"\\n   ],\\n   \\\"web\\\": [\\n      \\\"www\\\"\\n   ],\\n   \\\"windows\\\": [\\n      \\\"windows-application\\\",\\n      \\\"windows-programming\\\"\\n   ],\\n   \\\"dojo\\\": [\\n      \\\"dojo-store\\\",\\n      \\\"dojo-layer\\\",\\n      \\\"dojo.stateful\\\",\\n      \\\"dojo-require\\\",\\n      \\\"dojo.data\\\",\\n      \\\"dijit\\\",\\n      \\\"dojox\\\"\\n   ],\\n   \\\"C#\\\":[\\n      \\\".cs-file\\\",\\n      \\\"csharp\\\",\\n      \\\"visual-c#\\\",\\n      \\\"c#-language\\\",\\n      \\\"c#.net\\\",\\n      \\\"c-sharp\\\"\\n   ],\\n   \\\"F#\\\":[\\n      \\\"fsharp\\\"\\n   ]\\n}\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/Info/syn_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import requests\\nimport time\\nimport json\\n\\n\\ndef delete_duplicate(dict):\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"            Info.append(item)\\n    return Info\\n\\ndef request_url(url,pagesize):\\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\\\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\\n    res = requests.get(url+app)\\n    res.encoding = 'utf-8'\\n    info = res.json()\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\ndef extract_dict(res):\\n    # The info for comparsion with that in other open source community\\n    dict_info = {\\\"name\\\":res[\\\"name\\\"],\\\"github_login\\\":res[\\\"login\\\"],\\n                 \\\"company\\\":res[\\\"company\\\"],\\\"location\\\":res[\\\"location\\\"],\\n                 \\\"email\\\":res[\\\"email\\\"],\\\"stackoverflow_login\\\":\\\"null\\\"}\\n    return dict_info\\n\\ndef get_langtags(user):\\n    language = []\\n    tags = []\\n    print(\\\"Finding languages used of github user: {}\\\".format(user[\\\"github_login\\\"]))\\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\\\"github_login\\\"])\\n    repos = request_url(repo_api,30)\\n    print(\\\"The repo API is {}\\\".format(repo_api))\\n\\n    for item in repos:\\n        print(item)\\n        #can be  parallel tags&language\\n        repo_name = item[\\\"name\\\"]\\n        repo_tags = requests.get('https://api.github.com/repos/{}/{}/topics?'\\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'\\n                                 '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\\n                                 .format(user[\\\"github_login\\\"],repo_name),\\n                                 headers = {\\\"Accept\\\":\\\"application/vnd.github.mercy-preview+json\\\"})\\n        repo_tags = repo_tags.json()[\\\"names\\\"]\\n        tags.extend(repo_tags)\\n\\n        if not item[\\\"languages_url\\\"] == None:\\n            language_api = item[\\\"languages_url\\\"]\\n            language_dict = request_url(language_api,100)\\n        else:\\n            language_dict = None\\n        language.extend(language_dict)\\n\\n    tags = delete_duplicate(tags)\\n    language = delete_duplicate(language)\\n\\n    print(\\\"Github user {} languages: {}\\\".format(user[\\\"github_login\\\"],language))\\n    print(\\\"Github user {} tags: {}\\\".format(user[\\\"github_login\\\"], tags))\\n    user[\\\"github_language\\\"] = language\\n    user[\\\"github_tags\\\"] = (tags if not tags == [] else \\\"null\\\")\\n    return user\\n\\n\\ndef get_info(commit_api):\\n    developer_info = request_url(commit_api,5)\\n    Info = []\\n    cTime = time.time()\\n    print(\\\"Getting info of users in the commit history...\\\")\\n    for item in developer_info:\\n        print(item)\\n        ### For a list of developers, find their url\\n        author_api = (item[\\\"author\\\"][\\\"url\\\"] if not item[\\\"author\\\"] == None else \\\"null\\\")\\n        committer_api = (item[\\\"committer\\\"][\\\"url\\\"] if not item[\\\"committer\\\"] == None else \\\"null\\\")\\n\\n        if not author_api == \\\"null\\\":\\n            author_info = request_url(author_api,100)\\n            author_info = extract_dict(author_info)\\n            Info.append(author_info)\\n\\n        if not committer_api == \\\"null\\\":\\n            committer_info = request_url(committer_api,100)\\n            committer_info = extract_dict(committer_info)\\n            Info.append(committer_info)\\n\\n    print(time.time() - cTime)\\n    Info = delete_duplicate(Info)\\n\\n    git_info = []\\n    cTime = time.time()\\n    for git_developer in Info:\\n        git_developer = get_langtags(git_developer)\\n        git_info.append(git_developer)\\n    print(time.time() - cTime)\\n    return git_info\\n\\ndef search_info(developer_login):\\n    Info = []\\n    for login in developer_login:\\n        api = 'https://api.github.com/users/{}'.format(login)\\n        developer_info = request_url(api,100)\\n        developer_info = extract_dict(developer_info)\\n\\n\\n\\n\\n\\n\\n\\nif __name__ == '__main__':\\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n    git_info = get_info(git_api)\\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_language.json'\\n    cTime = time.time()\\n    print(\\\"Dumping the info...\\\")\\n    with open(info_file, 'w') as ctfile:\\n        json.dump(git_info, ctfile, indent=3)\\n    print(time.time() - cTime)\\n\\n\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import Get_Info.get_info_git as gt\\nimport Get_Info.name_form as nf\\nimport Get_Info.levenshtein as le\\nimport re\\nimport requests\\nimport urllib\\nimport time\\n\\n\\ndef request_api(api):\\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\\n    user_info = requests.get(api + app_key)\\n    user_info = user_info.json()\\n    return user_info\\n\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"def InfoByName(name):\\n    Info = []\\n    default_info = {\\\"display_name\\\":\\\"\\\",\\\"location\\\":\\\"\\\",\\\"user_id\\\":0}\\n    #THe API returns info of all possible Stack Overflow usernames which contain the input name\\n\\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\\\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\\\\n               '&site=stackoverflow'.format(name,name)\\n    info = request_api(user_api)\\n\\n    print(\\\"Getting possible Stack Overflow user info from api: {}\\\".format(user_api))\\n    user_info = info[\\\"items\\\"]\\n    if not user_info == None:\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    if not user_id == None:\\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\\n        user_source = request_source(stk_url)\\n        user_href = re.findall(r\\\"<a.*?href=.*?<\\\\/a>\\\", user_source, re.I | re.S | re.M)\\n        # find it directly\\n        git_account = None\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"            if 'https://github.com/' in href:\\n                git_account = re.findall('href\\\\=\\\\\\\"https\\\\:\\\\/\\\\/github\\\\.com\\\\/(.*?)\\\\\\\"', href, re.S)\\n                git_account = git_account[0]\\n                print(\\\"The linked github account: {}\\\".format(git_account))\\n        if not git_account == None:\\n            return git_account\\n        else:\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    else:\\n        return default\\n\\n\\ndef get_tags(stk_developer):\\n    tags = []\\n    tags_api = 'https://api.stackexchange.com/2.2/users/{}/tags' \\\\\\n               '?pagesize=40&order=desc&sort=popular' \\\\\\n               '&site=stackoverflow'.format(stk_developer['user_id'])\\n    tags_info = request_api(tags_api)\\n    tags_info = tags_info[\\\"items\\\"]\\n    for tag in tags_info:\\n        tag_name = tag[\\\"name\\\"]\\n        tags.append(tag_name)\\n    return tags\\n\\n\\ndef match_info(git_developer,stk_developer,syn_list):\\n    location_stk = stk_developer[\\\"location\\\"]\\n    location_git = git_developer[\\\"location\\\"]\\n\\n    if not location_git == \\\"null\\\" and not location_stk == \\\"null\\\":\\n        try:\\n            if location_git in location_stk:\\n                location_score = 1\\n            elif location_stk in location_git:\\n                location_score = 1\\n            else:\\n                # Levenshtein distance between two places\\n                distance = le.lev(location_stk, location_git)\\n                len_git = len(location_git)\\n                location_score = distance / len_git\\n        except TypeError:\\n            location_score = 0\\n    else:\\n        location_score = 0\\n\\n    tags_git = git_developer[\\\"github_tags\\\"]\\n    tags_stk = stk_developer[\\\"tags\\\"]\\n    print(syn_list)\\n    match_count = git_count = 0\\n    if not tags_stk == \\\"null\\\":\\n        print(\\\"Tags: {}\\\".format(tags_stk))\\n        for tag in tags_git:\\n            git_count = git_count + 1\\n            if tag in syn_list:\\n                stk_syn = syn_list[tag]\\n                for stk_tags in stk_syn:\\n                    if stk_tags in tags_stk:\\n                        match_count = match_count + 1\\n                        break\\n    else:\\n        match_count = 0\\n\\n    tag_score = match_count / git_count * 2\\n    final_score = location_score + tag_score\\n    print(\\\"Tag score for {} is {}\\\".format(stk_developer[\\\"display_name\\\"],tag_score))\\n    print(\\\"Final score for {} is {}\\\".format(stk_developer[\\\"display_name\\\"],final_score))\\n\\n    if final_score >= 0.7:\\n        match_name = stk_developer[\\\"display_name\\\"] + \\\"_\\\" + str(final_score)\\n        return match_name\\n    else:\\n        return []\\n\\ndef match_account(git_info,syn_list):\\n    default_info = []\\n    new_info = []\\n\\n    for git_developer in git_info:\\n        print(\\\"\\\\n\\\")\\n        print(\\\"finding Github user {} on Stack Overflow...\\\".format(git_developer[\\\"name\\\"]))\\n        possible_name = nf.possible_names(git_developer[\\\"name\\\"], git_developer[\\\"github_login\\\"])\\n        print(\\\"possible name:{}\\\".format(possible_name))\\n\\n        for name in possible_name:\\n            #All info of developers whose username contains the input name\\n            stk_info = InfoByName(name)\\n            stk_info = gt.delete_duplicate(stk_info)\\n\\n            if not stk_info == default_info:\\n                print(\\\"The possible info of Stack Overflow user {} is {}\\\".format(name, stk_info))\\n\\n                for stk_developer in stk_info:\\n                    user_id = stk_developer['user_id']\\n                    git_account = GetGitAccount(user_id)\\n\\n                    if git_account == git_developer[\\\"github_login\\\"]:\\n                        git_developer[\\\"stackoverflow_login\\\"] = stk_developer[\\\"display_name\\\"]\\n                        break\\n\\n                if git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n                    print(\\\"Mapping the users with tags and location...\\\")\\n                    cTime = time.time()\\n                    possible_match = []\\n\\n                    print(\\\"STK_INFO :{}\\\".format(stk_info))\\n                    for stk_developer in stk_info:\\n                        developer_tags = get_tags(stk_developer)\\n                        print(\\\"the tags of Stack Overflow user {} are {}\\\".format(stk_developer[\\\"display_name\\\"],developer_tags))\\n                        stk_developer[\\\"tags\\\"] = developer_tags\\n                        match_name = match_info(git_developer,stk_developer,syn_list)\\n                        possible_match.extend(match_name)\\n                    git_developer[\\\"stackoverflow_login\\\"] = (match_name if not match_name == [] else \\\"null\\\")\\n                    print(time.time() - cTime)\\n                else:\\n                    break\\n\\n            else:\\n                print(\\\"The Stack Overflow info of possible username {} for github user {} can not be found\\\".format(name,git_developer[\\\"name\\\"]))\\n\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"#!/usr/bin/env python\\n# coding: utf-8\\n\\n'''\\nCreated: 2014-9-17\\nAuthor: niR@github (https://github.com/hentaiPanda)\\nVersion: 0.0.1\\nLicense: MIT\\n\\n\\nThis is a straightforward implementation of Levenshitein\\nDistance and Damerau-Levenshtein Distance.\\n\\nThe code is based on the examples on the Wikipedia\\nYou can get more infomation from\\nhttp://en.wikipedia.org/wiki/Levenshtein_distance\\nhttp://en.wikipedia.org/wiki/Damerau-Levenshtein_distance\\n'''\\n\\n\\n# Levenshtein Distance\\ndef lev(str1, str2):\\n    \\\"\\\"\\\"Make a Levenshtein Distances Matrix\\\"\\\"\\\"\\n    n1, n2 = len(str1), len(str2)\\n    lev_matrix = [ [ 0 for i1 in range(n1 + 1) ] for i2 in range(n2 + 1) ]\\n    for i1 in range(1, n1 + 1):\\n        lev_matrix[0][i1] = i1\\n    for i2 in range(1, n2 + 1):\\n        lev_matrix[i2][0] = i2\\n    for i2 in range(1, n2 + 1):\\n        for i1 in range(1, n1 + 1):\\n            cost = 0 if str1[i1-1] == str2[i2-1] else 1\\n            elem = min( lev_matrix[i2-1][i1] + 1,\\n                        lev_matrix[i2][i1-1] + 1,\\n                        lev_matrix[i2-1][i1-1] + cost )\\n            lev_matrix[i2][i1] = elem\\n    return lev_matrix[-1][-1]\\n\\n\\n# Optimal string alignment distance\\ndef osa(str1, str2):\\n    n1, n2 = len(str1), len(str2)\\n    matrix = [ [ 0 for i1 in range(n1 + 1) ] for i2 in range(n2 + 1) ]\\n    for i1 in range(1, n1 + 1):\\n        matrix[0][i1] = i1\\n    for i2 in range(1, n2 + 1):\\n        matrix[i2][0] = i2\\n    for i2 in range(1, n2 + 1):\\n        for i1 in range(1, n1 + 1):\\n            cost = 0 if str1[i1-1] == str2[i2-1] else 1\\n            elem = min( matrix[i2-1][i1] + 1,\\n                        matrix[i2][i1-1] + 1,\\n                        matrix[i2-1][i1-1] + cost )\\n            if (i1 > 1 and i2 > 1 and\\n                str1[i1-2] == str2[i2-1] and\\n                str1[i1-1] == str2[i2-2]):\\n                elem = min( elem,\\n                            matrix[i2-3][i1-3] + cost )\\n            matrix[i2][i1] = elem\\n    return matrix[-1][-1]\\n\\n\\n# Damerau-Levenshtein Distance\\ndef dalev(str1, str2):\\n    # Suppose we have two strings 'ac' and 'cba'\\n    # This is the initialized matrix:\\n    #\\n    #                    str1\\n    #                    a c\\n    #              * * * * * *\\n    #              * 5 5 5 5 *\\n    #              * 5 0 1 2 *\\n    #            c * 5 1 5 5 *\\n    #      str2  b * 5 2 5 5 *\\n    #            a * 5 3 5 5 *\\n    #              * * * * * *\\n    #\\n    # If we wanna transpose 'ac' to 'ca', the starting point is (2, 2),\\n    # And we need to compute the distance, so we must start at the point\\n    # (1, 1), that's where the number 0 is, and it's the initial position\\n    # of (p2-1, p1-1).\\n    # The reason we use p2=ORIGIN, p1=ORIGIN (here ORIGIN is 1) as the\\n    # initial value is that we must ensure if we don't have the proper\\n    # pair of strings ('abc' and 'ga' etc.), the distance with adjacent\\n    # transposition is always bigger than the number of other edit operations\\n    # ( because no matter which variable (p2 or p1) is 0, matrix[p2-1][p1-1]\\n    # is always the biggest number, here it is 5).\\n    # (i1-p1-1) / (i2-p2-1) is the edit distance of the substrings.\\n    n1, n2 = len(str1), len(str2)\\n    max_dis = n1 + n2\\n    letters = {} # pointer of the last row where a[i] == b[j]\\n    INIT_POS = 2 # initial position of two str ('some'[0] etc.) in the matrix\\n    ORIGIN = INIT_POS - 1 # the position of '0' in the matrix\\n    matrix = [ [ max_dis for i1 in range(n1 + INIT_POS) ]\\n               for i2 in range(n2 + INIT_POS) ]\\n    for i1 in range(ORIGIN, n1 + INIT_POS):\\n        matrix[1][i1] = i1 -ORIGIN\\n    for i2 in range(ORIGIN, n2 + INIT_POS):\\n        matrix[i2][1] = i2 -ORIGIN\\n    for i2 in range(INIT_POS, n2 + INIT_POS):\\n        temp = ORIGIN # pointer of the last column where b[j] == a[i]\\n        for i1 in range(INIT_POS, n1 + INIT_POS):\\n            p2 = letters.get(str1[i1-INIT_POS], ORIGIN)\\n            p1 = temp\\n            cost = 0 if str1[i1-INIT_POS] == str2[i2-INIT_POS] else 1\\n            if not cost:\\n                temp = i1\\n            elem = min( matrix[i2-1][i1] + 1,\\n                        matrix[i2][i1-1] + 1,\\n                        matrix[i2-1][i1-1] + cost,\\n                        matrix[p2-1][p1-1] + 1 + (i1-p1-1) + (i2-p2-1) )\\n            matrix[i2][i1] = elem\\n        letters[str2[i2-INIT_POS]] = i2\\n    return matrix[-1][-1]\\n\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/levenshtein.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n# git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\ngit_info = gt.get_info(git_api)\\ninfo_file = '/home/ace/zsj/Get_Info/Info/awesome_test.json'\\nsyn_file = '/home/ace/zsj/Get_Info/Info/syn_list.json'\\ncTime = time.time()\\nprint(\\\"Dumping the info...\\\")\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(git_info, ctfile, indent=3)\\nprint(time.time() - cTime)\\n\\n# git_info = open(info_file,encoding='utf-8')\\nsyn_list = open(syn_file,encoding='utf-8')\\n# git_info = json.load(git_info)\\nsyn_list = json.load(syn_list)\\nstk_count = total_count = 0\\n\\ncTime = time.time()\\nprint(\\\"Matching developers between Github and Stack Overflow...\\\")\\nmatch_info = st.match_account(git_info,syn_list)\\nprint(time.time() - cTime)\\n\\ncTime = time.time()\\n# new_info = []\\nfor item in match_info:\\n    if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n        stk_count = stk_count + 1\\n    # new_info.append(item)\\n    total_count = total_count +1\\nprint(time.time() - cTime)\\n\\nprint(\\\"The number of developers with Stack Overflow account is {}\\\".format(stk_count))\\nprint(\\\"The number of developers is {}\\\".format(total_count))\\nprint(\\\"Ratio:{}\\\".format(float(stk_count/total_count)))\\n\\nprint(\\\"Saving the results of matching...\\\")\\ncTime = time.time()\\nfile = '/home/ace/zsj/Get_Info/Info/awesome_match.json'\\nwith open(file, 'w') as ctfile:\\n    json.dump(match_info, ctfile, indent=3)\\nprint(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        single_name = name_split[0]\\n        len_single = len(single_name)\\n        if len_single >= 3:\\n            form.append(single_name[0:3])\\n            form.append(single_name[len_single-3:len_single])\\n        else:\\n            form = single_name\\n\\n    elif len(name_split) == 2:\\n        form.append(name_split[0].lower())\\n        form.append(name_split[1].lower())\\n\\n    elif len(name_split) == 3:\\n        form.append(name_split[1].lower())\\n        form.append(name_split[0].lower())\\n        form.append(name_split[2].lower())\\n\\n    else:\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import requests\\nimport json\\nimport Get_Info.get_info_git as gt\\nimport time\\n\\ndef request_api(api):\\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\\n    info = requests.get(api + app_key)\\n    info = info.json()\\n    return info\\n\\ndef get_syn(git_info):\\n    tags_list = []\\n    for item in git_info:\\n        language = (item[\\\"github_language\\\"] if not item[\\\"github_language\\\"] == \\\"null\\\" else [])\\n        tags = (item[\\\"github_tags\\\"] if not item[\\\"github_tags\\\"] == \\\"null\\\" else [])\\n        print(language)\\n        print(tags)\\n        tags_list.extend(language)\\n        tags_list.extend(tags)\\n\\n    print(\\\"Tags before: {}\\\".format(tags_list))\\n    tags_list = gt.delete_duplicate(tags_list)\\n    # The tags containing \\\"#\\\" should be removed or the query of api will be failed\\n    remove_list = []\\n    for item in tags_list:\\n        if \\\"#\\\" in item:\\n            remove_list.append(item)\\n            tags_list.remove(item)\\n    print(\\\"Remove list: {}\\\".format(remove_list))\\n    print(\\\"Tags: {}\\\".format(tags_list))\\n\\n    syn_list = {}\\n    for tag in tags_list:\\n        syn_tags = []\\n        api = 'https://api.stackexchange.com/2.2/tags/{}/synonyms' \\\\\\n              '?pagesize=100&order=desc&sort=creation&site=stackoverflow'.format(tag)\\n        syn_info = request_api(api)\\n        print(\\\"Finding tag {}: {}\\\".format(tag,syn_info))\\n        syn_info = syn_info[\\\"items\\\"]\\n        if not syn_info == []:\\n            for item in syn_info:\\n                syn_tags.append(item[\\\"from_tag\\\"])\\n            syn_list[tag] = syn_tags\\n            print(\\\"The synonymous tags of tag {} are {}\\\".format(tag,syn_tags))\\n        else:\\n            print(\\\"The synonymous tags of tag {} not found\\\".format(tag))\\n\\n    return syn_list\\n\\n\\nif __name__ == '__main__':\\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_test.json'\\n    f = open(info_file, encoding='utf-8')\\n    git_info = json.load(f)\\n\\n    print(\\\"Getting the Stack Overflow synonymous tags of github tags...\\\")\\n    cTime = time.time()\\n    syn_list = get_syn(git_info)\\n    print(time.time() - cTime)\\n\\n    print(\\\"Dumping the syn_list...\\\")\\n    cTime = time.time()\\n    file = '/home/ace/zsj/Get_Info/Info/syn_list.json'\\n    with open(file, 'w') as ctfile:\\n        json.dump(syn_list, ctfile, indent=3)\\n    print(time.time() - cTime)\",\n      \"commit_date\": \"2017-10-08 22:05:59 +0800\",\n      \"file\": \"git/user/Get_Info/syn_tags.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"The first AST is shown in the pdf format\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\\n\\nThe second AST is also shown in the pdf format as follows\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\\n\\nThe same part of two trees is labeled in red. \",\n      \"commit_date\": \"2017-10-08 20:25:33 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\\ndef to_dict(node_list):\\n    \\\"\\\"\\\"Transform the node list into nested dictionary\\\"\\\"\\\"\\n    node_list_cp = node_list[:]\\n    cp_list = []\\n    AST_dict = dict()\\n    AST_dict['_nodetype'] = node_list_cp[0]['_nodetype']\\n    AST_dict['coord'] = node_list_cp[0]['coord']\\n    first_sublist = []\\n    for x in range(1, len(node_list_cp)):\\n        num = node_list_cp[x]['_nodetype'].find('-')\\n        cp_list.append(num)\\n        node_list_cp[x]['_nodetype'] = re.findall(RE_AZ, node_list_cp[x]['_nodetype'])[0]\\n    num_list = cp_list[:]\\n    for y in range(max(num_list) - 2, 0, -2):\\n        for x in range(len(num_list) - 1, -1, -1):\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"                subnode_list = []\\n                for z in range(len(num_list) - 1, x - 1, -1):\\n                    if num_list[z] == y + 2:\\n                        subnode_list.append(node_list_cp[z + 1])\\n                        num_list[z] = 0\\n                node_list_cp[x + 1]['_subnode'] = subnode_list\\n\\n    for x in range(0, len(num_list)):\\n        if num_list[x] == 1:\\n            first_sublist.append(node_list_cp[x + 1])\\n\\n    AST_dict['_subnode'] = first_sublist\\n    return [AST_dict, cp_list, node_list]\\n\\ndef to_json(node_list, json_name):\\n    \\\"\\\"\\\"Write into json format\\\"\\\"\\\"\\n    node_list_new = node_list[:]\\n    AST_dict = to_dict(node_list_new)\\n    with open(json_name, 'w+') as f:\\n        json.dump(AST_dict[0], f, ensure_ascii=False, indent=4)\\n    f.close()\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\nfrom AST2JSON import to_dict\\nfrom AST_Process import Node_extract\\n\\ndef list_all_node(dict_a, num_list):\\n    \\\"\\\"\\\"Using recursive function to traverse the nodes and dump them into list\\\"\\\"\\\"\\n    node_list = []\\n    if isinstance(dict_a,dict):\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"    return node_list\\n\\ndef Sequence_generate(node_list, num_list):\\n    \\\"\\\"\\\"From the root to the leaves, we traverse the tree to get all the sequences\\\"\\\"\\\"\\n    seque_list = []\\n    index_list = []\\n    for y in range(max(num_list), 1, -2):\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"                            sequence.append(node_list[i + 1]['_nodetype'])\\n                            index.append(i+1)\\n                            break\\n                index.append(0)\\n                sequence.append(node_list[0]['_nodetype'])\\n                seque_list.append(sequence)\\n                index_list.append(index)\\n    return [seque_list, index_list]\\n\\ndef Sequence_compare(seq1, seq2):\\n    \\\"\\\"\\\"Compare the sequence and return the same part they share\\\"\\\"\\\"\\n    seq1_cp = seq1[0][:]\\n    seq2_cp = seq2[0][:]\\n    num1_cp = seq1[1][:]\\n    num2_cp = seq2[1][:]\\n    len_seq1 = len(seq1_cp)\\n    len_seq2 = len(seq2_cp)\\n    same_list = []\\n    same_num1 = []\\n    same_num2 = []\\n    same_num = []\\n    for i in range(min(len_seq1,len_seq2)):\\n        if seq1_cp[i] == seq2_cp[i]:\\n            same_list.insert(0, seq1_cp[i])\\n            same_num1.insert(0, num1_cp[i])\\n            same_num2.insert(0, num2_cp[i])\\n        else:\\n            break\\n    if len(same_num1) > 1:\\n        same_num = [same_num1, same_num2]\\n    return same_num\\n\\ndef Seqlist_compare(seq_list1, seq_list2):\\n    \\\"\\\"\\\"Compare the sequence lists and merge the same nodes they share\\\"\\\"\\\"\\n    seq_list1_cp = seq_list1[0][:]\\n    seq_list2_cp = seq_list2[0][:]\\n    num_list1_cp = seq_list1[1][:]\\n    num_list2_cp = seq_list2[1][:]\\n    set1 = []\\n    set2 = []\\n    list1 = []\\n    list2 = []\\n    for index1,seq1 in enumerate(seq_list1_cp):\\n        for index2,seq2 in enumerate(seq_list2_cp):\\n            if index1 not in list1 and index2 not in list2:\\n                seq_collect1 = [seq1, num_list1_cp[index1]]\\n                seq_collect2 = [seq2, num_list2_cp[index2]]\\n                same_num = Sequence_compare(seq_collect1, seq_collect2)\\n                if len(same_num) > 0:\\n                    set1 = list(set(set1).union(set(same_num[0])))\\n                    set2 = list(set(set2).union(set(same_num[1])))\\n                    list1.append(index1)\\n                    list2.append(index2)\\n    return [set1, set2]\\n\\ndef seq_process(code_path, json_path, preprocess):\\n    nodes = Node_extract(code_path, preprocess)\\n    dd = to_dict(nodes)\\n    num_list = dd[1]\\n    node_list = dd[2]\\n    seq = Sequence_generate(node_list, num_list)\\n    return seq\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\\n\\ndef AST_preprocess(code_path):\\n    \\\"\\\"\\\"Preprocess of the code. Remove the head files and standard libraries\\\"\\\"\\\"\\n    path_new = './example/test_new.c'\\n    with open(code_path , 'r') as f:\\n        lines = f.readlines()\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Process.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"        F = os.popen(command)\\n    return F\\n\\ndef Node_extract(code_path, preprocess):\\n    \\\"\\\"\\\"Extract the nodes\\\"\\\"\\\"\\n    AST = AST_generate(code_path, preprocess)\\n    node_list = []\\n    for lines in AST:\\n        Node_dict = dict()\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Process.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\nfrom graphviz import Digraph\\nfrom AST_Process import Node_extract\\nfrom AST_Compare import Seqlist_compare\\nimport re\\n\\nRE_AZ = re.compile(r'-(.*?) ')\\nRE_C = re.compile(r'/(.*?).c')\\n\\ndef node_graph(code_path, preprocess, same_list):\\n    \\\"\\\"\\\"Show the syntax tree and display the same part of tow trees\\\"\\\"\\\"\\n    node_list = Node_extract(code_path, preprocess)\\n    num_list = []\\n    name = re.findall(RE_C, code_path)\\n    for x in range(1, len(node_list)):\\n        num = node_list[x]['_nodetype'].find('-')\\n        num_list.append(num)\\n        node_list[x]['_nodetype'] = re.findall(RE_AZ, node_list[x]['_nodetype'])[0]\\n    num_list.insert(0,0)\\n    if same_list == None:\\n        num_cp = num_list\\n        dot = Digraph(comment = name, format=\\\"pdf\\\")\\n        dot.node('0', 'TranslationUnitDecl')\\n        for y in range(1, max(num_cp)+1, 2):\\n            if y == 1:\\n                for x in range(len(node_list)):\\n                    if num_list[x] == y:\\n                        dot.node(str(x), node_list[x]['_nodetype'])\\n                        dot.edge('0', str(x))\\n            if y > 1:\\n                for x in range(len(num_cp)):\\n                    if num_list[x] == y:\\n                        dot.node(str(x), node_list[x]['_nodetype'])\\n                        for z in range(x, 0, -1):\\n                            if num_list[z] == y-2:\\n                                dot.edge(str(z), str(x))\\n                                break\\n    else:\\n        num_cp = num_list\\n        same_cp = same_list\\n        dot = Digraph(comment = name, format=\\\"pdf\\\")\\n        if 0 in same_cp:\\n            dot.node('0', 'TranslationUnitDecl', _attributes={\\\"color\\\":\\\"red\\\"})\\n        else:\\n            dot.node('0', 'TranslationUnitDecl')\\n        for y in range(1, max(num_cp) + 1, 2):\\n            if y == 1:\\n                for x in range(len(node_list)):\\n                    if num_list[x] == y:\\n                        if x in same_cp:\\n                            dot.node(str(x), node_list[x]['_nodetype'], _attributes={\\\"color\\\":\\\"red\\\"})\\n                            dot.edge('0', str(x))\\n                        else:\\n                            dot.node(str(x), node_list[x]['_nodetype'])\\n                            dot.edge('0', str(x))\\n            if y > 1:\\n                for x in range(len(num_cp)):\\n                    if num_list[x] == y:\\n                        if x in same_cp:\\n                            dot.node(str(x), node_list[x]['_nodetype'], _attributes={\\\"color\\\":\\\"red\\\"})\\n                            for z in range(x, 0, -1):\\n                                if num_list[z] == y - 2:\\n                                    dot.edge(str(z), str(x))\\n                                    break\\n                        else:\\n                            dot.node(str(x), node_list[x]['_nodetype'])\\n                            for z in range(x, 0, -1):\\n                                if num_list[z] == y - 2:\\n                                    dot.edge(str(z), str(x))\\n                                    break\\n    save_name = './output/'+str(name[0])\\n    dot.view(save_name)\\n\\n\\n\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/AST_Visualization.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"# Use abstract syntax tree for code plagiarism detection\\nAuthor: king-jojo\\ne-mail: kimwhu@outlook.com\\n\\nClang is a useful tool to show complete information of the syntax tree of a program. This project intends to apply Clang to generating syntax tree of programs. By comparing different syntax trees, we can find the same nodes and parts of two programs so that we can detect which program is suspected of plagiarising. The same parts two syntax trees share will be distinguished by red nodes shown in graph. However, this project has just started for a short time and some functions haven't realized yet. \\n\\n## Usage\\nFirst install Clang and Graphviz with: \\n\\n    $ sudo apt-get install clang\\n    $ sudo pip install graphviz\\n\\n## Write into json\\nThis project can convert syntax tree into json format, like this: \\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2json.png)\\n\\n## Generate AST with Graphviz\\nThe first AST is shown in the pdf format\\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\\n\\nThe second is shown below \\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\\n\\nThe same part of two trees is labeled in red. \\n\\n## In future \\nThere are so many things to do to complete this project in a perfect version. \\n### Extract the subtrees two programs share\\nThis function can help programmer understand some program fast. By extracting the same subtree, we can know the same function of two programs. \\n### Establish a code dictionary\\nWe will establish a dictionary, which contains the syntax tree of many classical programs. Just compare the syntax tree of the program and the dictionary, we can find some classical algorithm used in the program so that it is easy to understand it. Further more, we can let the computer to program just by importing the function you want and the computer will combine the syntax trees of classical algorithm to generate the final code of the program with the help of AI or other things. \\n### Plagiarism detection\\nThere are several strategies for us to detect plagiarism by comparing syntax trees\\n#### Syntax tree transform\\nWe will apply some code plagiarism strategies to transform the syntax tree into standard shape. For example, normalize all the syntax trees of if...else... into switch... and all the while circulation into for circulation. \\n#### Map into Hash table\\nWe transform syntax tree into arraylist and assign value to the specific node and finally mapping into the Hash table\\n#### Top Down Unordered Maximum Common Subtree Isomorphism(TDUMCSI)\\nLigaarden(2007) process an AST based approach to detect plagiarism in JAVA source code. AST is generated for each of the source code files and a preorder traversal is done through the ASTs to be compared as done to generate node sequences. TDUMCSI algorithm along with sequence matching algorithms - NW algorithm and LCS algorithm, are then used to compare the node sequences and find matches. \",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\nimport AST_Compare\\nfrom AST_Visualization import node_graph\\nimport os\\nimport sys\\n\\nsel = True\\ncode_path_a = './example/test.c'\\njson_name_a = './example/ast_a.json'\\n\\ncode_path_b = './example/test2.c'\\njson_name_b = './example/ast_b.json'\\n\\nseq1 = AST_Compare.seq_process(code_path_a, json_name_a, sel)\\nseq2 = AST_Compare.seq_process(code_path_b, json_name_b, sel)\\nset = AST_Compare.Seqlist_compare(seq1,seq2)\\nnode_graph(code_path_a, sel, set[0])\\nnode_graph(code_path_b, sel, set[1])\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/main.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"// ['example/test']\\ndigraph {\\n\\t0 [label=TranslationUnitDecl color=red]\\n\\t1 [label=TypedefDecl color=red]\\n\\t0 -> 1\\n\\t3 [label=TypedefDecl color=red]\\n\\t0 -> 3\\n\\t5 [label=TypedefDecl color=red]\\n\\t0 -> 5\\n\\t8 [label=TypedefDecl color=red]\\n\\t0 -> 8\\n\\t12 [label=FunctionDecl color=red]\\n\\t0 -> 12\\n\\t2 [label=BuiltinType color=red]\\n\\t1 -> 2\\n\\t4 [label=BuiltinType color=red]\\n\\t3 -> 4\\n\\t6 [label=PointerType color=red]\\n\\t5 -> 6\\n\\t9 [label=ConstantArrayType color=red]\\n\\t8 -> 9\\n\\t13 [label=ParmVarDecl color=red]\\n\\t12 -> 13\\n\\t14 [label=CompoundStmt color=red]\\n\\t12 -> 14\\n\\t7 [label=BuiltinType color=red]\\n\\t6 -> 7\\n\\t10 [label=RecordType color=red]\\n\\t9 -> 10\\n\\t15 [label=DeclStmt color=red]\\n\\t14 -> 15\\n\\t18 [label=IfStmt]\\n\\t14 -> 18\\n\\t19 [label=IfStmt]\\n\\t14 -> 19\\n\\t31 [label=ReturnStmt color=red]\\n\\t14 -> 31\\n\\t11 [label=Record color=red]\\n\\t10 -> 11\\n\\t16 [label=VarDecl color=red]\\n\\t15 -> 16\\n\\t20 [label=BinaryOperator color=red]\\n\\t19 -> 20\\n\\t24 [label=BinaryOperator color=red]\\n\\t19 -> 24\\n\\t27 [label=BinaryOperator color=red]\\n\\t19 -> 27\\n\\t32 [label=ImplicitCastExpr color=red]\\n\\t31 -> 32\\n\\t17 [label=IntegerLiteral]\\n\\t16 -> 17\\n\\t21 [label=ImplicitCastExpr color=red]\\n\\t20 -> 21\\n\\t23 [label=IntegerLiteral color=red]\\n\\t20 -> 23\\n\\t25 [label=DeclRefExpr]\\n\\t24 -> 25\\n\\t26 [label=IntegerLiteral color=red]\\n\\t24 -> 26\\n\\t28 [label=DeclRefExpr]\\n\\t27 -> 28\\n\\t29 [label=ImplicitCastExpr color=red]\\n\\t27 -> 29\\n\\t33 [label=DeclRefExpr]\\n\\t32 -> 33\\n\\t22 [label=DeclRefExpr color=red]\\n\\t21 -> 22\\n\\t30 [label=DeclRefExpr color=red]\\n\\t29 -> 30\\n}\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/output/example/test\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"// ['example/test2']\\ndigraph {\\n\\t0 [label=TranslationUnitDecl color=red]\\n\\t1 [label=TypedefDecl color=red]\\n\\t0 -> 1\\n\\t3 [label=TypedefDecl color=red]\\n\\t0 -> 3\\n\\t5 [label=TypedefDecl color=red]\\n\\t0 -> 5\\n\\t8 [label=TypedefDecl color=red]\\n\\t0 -> 8\\n\\t12 [label=FunctionDecl color=red]\\n\\t0 -> 12\\n\\t2 [label=BuiltinType color=red]\\n\\t1 -> 2\\n\\t4 [label=BuiltinType color=red]\\n\\t3 -> 4\\n\\t6 [label=PointerType color=red]\\n\\t5 -> 6\\n\\t9 [label=ConstantArrayType color=red]\\n\\t8 -> 9\\n\\t13 [label=ParmVarDecl color=red]\\n\\t12 -> 13\\n\\t14 [label=CompoundStmt color=red]\\n\\t12 -> 14\\n\\t7 [label=BuiltinType color=red]\\n\\t6 -> 7\\n\\t10 [label=RecordType color=red]\\n\\t9 -> 10\\n\\t15 [label=DeclStmt color=red]\\n\\t14 -> 15\\n\\t25 [label=ReturnStmt color=red]\\n\\t14 -> 25\\n\\t11 [label=Record color=red]\\n\\t10 -> 11\\n\\t16 [label=VarDecl color=red]\\n\\t15 -> 16\\n\\t26 [label=ImplicitCastExpr color=red]\\n\\t25 -> 26\\n\\t17 [label=ParenExpr]\\n\\t16 -> 17\\n\\t27 [label=DeclRefExpr color=red]\\n\\t26 -> 27\\n\\t18 [label=BinaryOperator color=red]\\n\\t17 -> 18\\n\\t19 [label=ParenExpr]\\n\\t18 -> 19\\n\\t24 [label=IntegerLiteral color=red]\\n\\t18 -> 24\\n\\t20 [label=BinaryOperator color=red]\\n\\t19 -> 20\\n\\t21 [label=ImplicitCastExpr color=red]\\n\\t20 -> 21\\n\\t23 [label=IntegerLiteral color=red]\\n\\t20 -> 23\\n\\t22 [label=DeclRefExpr color=red]\\n\\t21 -> 22\\n}\",\n      \"commit_date\": \"2017-10-08 20:23:22 +0800\",\n      \"file\": \"ast/output/example/test2\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\nimport json\\nimport re\\n\\nRE_AZ = re.compile(r'-(.*?) ')\\n\\ndef to_dict(node_list):\\n    \\\"\\\"\\\"Transform the node list into nested dictionary\\\"\\\"\\\"\\n    cp_list = []\\n    AST_dict = dict()\\n    AST_dict['_nodetype'] = node_list[0]['_nodetype']\\n    AST_dict['coord'] = node_list[0]['coord']\\n    first_sublist = []\\n    for x in range(1, len(node_list)):\\n        num = node_list[x]['_nodetype'].find('-')\\n        cp_list.append(num)\\n        node_list[x]['_nodetype'] = re.findall(RE_AZ, node_list[x]['_nodetype'])[0]\\n    num_list = cp_list[:]\\n    for y in range(max(num_list) - 2, 0, -2):\\n        for x in range(len(num_list) - 1, -1, -1):\\n            if num_list[x] == y:\\n                subnode_list = []\\n                for z in range(len(num_list) - 1, x - 1, -1):\\n                    if num_list[z] == y + 2:\\n                        subnode_list.append(node_list[z + 1])\\n                        num_list[z] = 0\\n                node_list[x + 1]['_subnode'] = subnode_list\\n\\n    for x in range(0, len(num_list)):\\n        if num_list[x] == 1:\\n            first_sublist.append(node_list[x + 1])\\n\\n    AST_dict['_subnode'] = first_sublist\\n    return [AST_dict, cp_list, len(node_list)]\\n\\ndef to_json(node_list, json_name):\\n    \\\"\\\"\\\"Write into json format\\\"\\\"\\\"\\n    AST_dict = to_dict(node_list)\\n    with open(json_name, 'w+') as f:\\n        json.dump(AST_dict[0], f, ensure_ascii=False, indent=4)\\n    f.close()\\n    return [AST_dict[1],AST_dict[2]]\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\ndef list_all_node(dict_a):\\n    \\\"\\\"\\\"Using recursive function to traverse the nodes and dump them into list\\\"\\\"\\\"\\n    node_list = []\\n    if isinstance(dict_a,dict):\\n        for x in range(len(dict_a)):\\n            temp_key = dict_a.keys()[x]\\n            temp_value = dict_a[temp_key]\\n            if isinstance(temp_value, list):\\n                for y in temp_value:\\n                    node_list.append(list_all_node(y))\\n            else:\\n                if temp_key == '_nodetype':\\n                    node_list.append(temp_value)\\n    return node_list\\n\\ndef Sequence_generate(node_list, num_list):\\n\\n    seque_list = []\\n    index_list = []\\n    for y in range(max(num_list), 1, -2):\\n        for x in range(len(num_list)-1, -1, -1):\\n            if num_list[x] == y:\\n                sequence = []\\n                index = []\\n                sequence.append(node_list[x + 1]['_nodetype'])\\n                index.append(x+1)\\n                for z in range(y-2, 0, -2):\\n                    for i in range(x-1, -1, -1):\\n                        if num_list[i] == z:\\n                            sequence.append(node_list[i + 1]['_nodetype'])\\n                            index.append(i+1)\\n                            break\\n                sequence.append(node_list[0]['_nodetype'])\\n                seque_list.append(sequence)\\n                index_list.append(index)\\n    return [seque_list, index_list]\\n\\ndef Sequence_compare(seq1, seq2):\\n    list1 = []\\n    list2 = []\\n    for index1,str1 in enumerate(seq1):\\n        for index2,str2 in enumerate(seq2):\\n            if str1 == str2:\\n                list1.append(index1)\\n                list2.append(index2)\\n    return [is_arith_progression(list1,list2), list1, list2]\\n\\ndef is_arith_progression(index1, index2):\\n    s = False\\n    length = len(index1)\\n    if length > 1:\\n        for i in range(0, length-1):\\n            if index1[i+1] - index1[i] != 1:\\n                s = False\\n                break\\n            elif index2[i+1] - index2[i] != 1:\\n                s = False\\n                break\\n            else:\\n                s = True\\n    else:\\n        s = False\\n    return s\\n\\ndef Seqlist_compare(seq_list1, seq_list2):\\n    set1 = []\\n    set2 = []\\n    exit = []\\n    for index1,seq1 in enumerate(seq_list1[0]):\\n        for index2,seq2 in enumerate(seq_list2[0]):\\n            if Sequence_compare(seq1, seq2):\\n                if index2 not in exit:\\n                    set1 = list(set(set1).union(set(seq_list1[1][index1])))\\n                    set2 = list(set(set2).union(set(seq_list2[1][index2])))\\n                    exit.append(index2)\\n                    break\\n    return [set1, set2]\\n\\n\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/AST_Compare.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\n#__author__ :king-jojo\\n\\nimport os\\nimport re\\n\\nRE_NODE = re.compile(r'(.*?)0x')\\nRE_LINE = re.compile(r'<(\\\\w.*?)>')\\n\\n\\ndef AST_preprocess(code_path):\\n    \\\"\\\"\\\"Preprocess of the code. Remove the header files and standard libraries\\\"\\\"\\\"\\n    path_new = './example/test_new.c'\\n    with open(code_path , 'r') as f:\\n        lines = f.readlines()\\n    f.close()\\n\\n    with open(path_new , 'w') as f_new:\\n        for line in lines:\\n            if '#include' in line:\\n                line = '\\\\n'\\n            f_new.write(line)\\n    f_new.close()\\n    return path_new\\n\\ndef AST_generate(code_path, preprocess):\\n    \\\"\\\"\\\"Print AST based on command line\\\"\\\"\\\"\\n    if preprocess == True:\\n        code_path = AST_preprocess(code_path)\\n        command = 'clang -Xclang -ast-dump -fsyntax-only ' + code_path\\n        F = os.popen(command)\\n    else:\\n        command = 'clang -Xclang -ast-dump -fsyntax-only ' + code_path\\n        F = os.popen(command)\\n    return F\\n\\ndef Node_extract(AST):\\n    \\\"\\\"\\\"Extract the nodes\\\"\\\"\\\"\\n    node_list = []\\n    for lines in AST:\\n        Node_dict = dict()\\n        if len(re.findall(RE_NODE, lines)) > 0:\\n            new_line = re.findall(RE_NODE, lines)[0]\\n        Node_dict['_nodetype'] = new_line\\n        line_info = re.findall(RE_LINE, lines)\\n        if len(line_info) > 0:\\n            Node_dict['coord'] = line_info[0]\\n        else:\\n            Node_dict['coord'] = 'null'\\n        node_list.append(Node_dict)\\n    return node_list\\n\\n\\n\\n\\n\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/AST_Process.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/GenerateHash.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/PrintAST.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"{\\n    \\\"coord\\\": \\\"invalid sloc\\\", \\n    \\\"_nodetype\\\": \\\"TranslationUnitDecl \\\", \\n    \\\"_subnode\\\": [\\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"PointerType\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"null\\\", \\n                            \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                            \\\"_subnode\\\": []\\n                        }\\n                    ]\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"ConstantArrayType\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"null\\\", \\n                            \\\"_nodetype\\\": \\\"RecordType\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"null\\\", \\n                                    \\\"_nodetype\\\": \\\"Record\\\", \\n                                    \\\"_subnode\\\": []\\n                                }\\n                            ]\\n                        }\\n                    ]\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"null\\\", \\n            \\\"_nodetype\\\": \\\"FunctionDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"col:13, line:8:1\\\", \\n                    \\\"_nodetype\\\": \\\"CompoundStmt\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"line:7:3, col:10\\\", \\n                            \\\"_nodetype\\\": \\\"ReturnStmt\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"col:10\\\", \\n                                    \\\"_nodetype\\\": \\\"ImplicitCastExpr\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:10\\\", \\n                                            \\\"_nodetype\\\": \\\"DeclRefExpr\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }\\n                                    ]\\n                                }\\n                            ]\\n                        }, \\n                        {\\n                            \\\"coord\\\": \\\"NULL\\\", \\n                            \\\"_nodetype\\\": \\\"IfStmt\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"line:6:5, col:9\\\", \\n                                    \\\"_nodetype\\\": \\\"BinaryOperator\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:9\\\", \\n                                            \\\"_nodetype\\\": \\\"ImplicitCastExpr\\\", \\n                                            \\\"_subnode\\\": [\\n                                                {\\n                                                    \\\"coord\\\": \\\"col:9\\\", \\n                                                    \\\"_nodetype\\\": \\\"DeclRefExpr\\\"\\n                                                }\\n                                            ]\\n                                        }, \\n                                        {\\n                                            \\\"coord\\\": \\\"col:5\\\", \\n                                            \\\"_nodetype\\\": \\\"DeclRefExpr\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }\\n                                    ]\\n                                }, \\n                                {\\n                                    \\\"coord\\\": \\\"line:4:5, col:9\\\", \\n                                    \\\"_nodetype\\\": \\\"BinaryOperator\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:9\\\", \\n                                            \\\"_nodetype\\\": \\\"IntegerLiteral\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }, \\n                                        {\\n                                            \\\"coord\\\": \\\"col:5\\\", \\n                                            \\\"_nodetype\\\": \\\"DeclRefExpr\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }\\n                                    ]\\n                                }, \\n                                {\\n                                    \\\"coord\\\": \\\"line:3:7, col:11\\\", \\n                                    \\\"_nodetype\\\": \\\"BinaryOperator\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:11\\\", \\n                                            \\\"_nodetype\\\": \\\"IntegerLiteral\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }, \\n                                        {\\n                                            \\\"coord\\\": \\\"col:7\\\", \\n                                            \\\"_nodetype\\\": \\\"ImplicitCastExpr\\\", \\n                                            \\\"_subnode\\\": [\\n                                                {\\n                                                    \\\"coord\\\": \\\"col:7\\\", \\n                                                    \\\"_nodetype\\\": \\\"DeclRefExpr\\\"\\n                                                }\\n                                            ]\\n                                        }\\n                                    ]\\n                                }\\n                            ]\\n                        }, \\n                        {\\n                            \\\"coord\\\": \\\"line:3:3, line:6:9\\\", \\n                            \\\"_nodetype\\\": \\\"IfStmt\\\", \\n                            \\\"_subnode\\\": []\\n                        }, \\n                        {\\n                            \\\"coord\\\": \\\"line:2:3, col:12\\\", \\n                            \\\"_nodetype\\\": \\\"DeclStmt\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"col:3, col:11\\\", \\n                                    \\\"_nodetype\\\": \\\"VarDecl\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:11\\\", \\n                                            \\\"_nodetype\\\": \\\"IntegerLiteral\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }\\n                                    ]\\n                                }\\n                            ]\\n                        }\\n                    ]\\n                }, \\n                {\\n                    \\\"coord\\\": \\\"col:7, col:11\\\", \\n                    \\\"_nodetype\\\": \\\"ParmVarDecl\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }\\n    ]\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/ast_a.json\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"{\\n    \\\"coord\\\": \\\"invalid sloc\\\", \\n    \\\"_nodetype\\\": \\\"TranslationUnitDecl \\\", \\n    \\\"_subnode\\\": [\\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"PointerType\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"null\\\", \\n                            \\\"_nodetype\\\": \\\"BuiltinType\\\", \\n                            \\\"_subnode\\\": []\\n                        }\\n                    ]\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"invalid sloc\\\", \\n            \\\"_nodetype\\\": \\\"TypedefDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"null\\\", \\n                    \\\"_nodetype\\\": \\\"ConstantArrayType\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"null\\\", \\n                            \\\"_nodetype\\\": \\\"RecordType\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"null\\\", \\n                                    \\\"_nodetype\\\": \\\"Record\\\", \\n                                    \\\"_subnode\\\": []\\n                                }\\n                            ]\\n                        }\\n                    ]\\n                }\\n            ]\\n        }, \\n        {\\n            \\\"coord\\\": \\\"null\\\", \\n            \\\"_nodetype\\\": \\\"FunctionDecl\\\", \\n            \\\"_subnode\\\": [\\n                {\\n                    \\\"coord\\\": \\\"col:13, line:4:1\\\", \\n                    \\\"_nodetype\\\": \\\"CompoundStmt\\\", \\n                    \\\"_subnode\\\": [\\n                        {\\n                            \\\"coord\\\": \\\"line:3:3, col:10\\\", \\n                            \\\"_nodetype\\\": \\\"ReturnStmt\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"col:10\\\", \\n                                    \\\"_nodetype\\\": \\\"ImplicitCastExpr\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:10\\\", \\n                                            \\\"_nodetype\\\": \\\"DeclRefExpr\\\", \\n                                            \\\"_subnode\\\": []\\n                                        }\\n                                    ]\\n                                }\\n                            ]\\n                        }, \\n                        {\\n                            \\\"coord\\\": \\\"line:2:3, col:30\\\", \\n                            \\\"_nodetype\\\": \\\"DeclStmt\\\", \\n                            \\\"_subnode\\\": [\\n                                {\\n                                    \\\"coord\\\": \\\"col:3, col:29\\\", \\n                                    \\\"_nodetype\\\": \\\"VarDecl\\\", \\n                                    \\\"_subnode\\\": [\\n                                        {\\n                                            \\\"coord\\\": \\\"col:16, col:29\\\", \\n                                            \\\"_nodetype\\\": \\\"ParenExpr\\\", \\n                                            \\\"_subnode\\\": [\\n                                                {\\n                                                    \\\"coord\\\": \\\"col:17, col:27\\\", \\n                                                    \\\"_nodetype\\\": \\\"BinaryOperator\\\", \\n                                                    \\\"_subnode\\\": [\\n                                                        {\\n                                                            \\\"coord\\\": \\\"col:27\\\", \\n                                                            \\\"_nodetype\\\": \\\"IntegerLiteral\\\", \\n                                                            \\\"_subnode\\\": []\\n                                                        }, \\n                                                        {\\n                                                            \\\"coord\\\": \\\"col:17, col:23\\\", \\n                                                            \\\"_nodetype\\\": \\\"ParenExpr\\\", \\n                                                            \\\"_subnode\\\": [\\n                                                                {\\n                                                                    \\\"coord\\\": \\\"col:18, col:22\\\", \\n                                                                    \\\"_nodetype\\\": \\\"BinaryOperator\\\", \\n                                                                    \\\"_subnode\\\": [\\n                                                                        {\\n                                                                            \\\"coord\\\": \\\"col:22\\\", \\n                                                                            \\\"_nodetype\\\": \\\"IntegerLiteral\\\", \\n                                                                            \\\"_subnode\\\": []\\n                                                                        }, \\n                                                                        {\\n                                                                            \\\"coord\\\": \\\"col:18\\\", \\n                                                                            \\\"_nodetype\\\": \\\"ImplicitCastExpr\\\", \\n                                                                            \\\"_subnode\\\": [\\n                                                                                {\\n                                                                                    \\\"coord\\\": \\\"col:18\\\", \\n                                                                                    \\\"_nodetype\\\": \\\"DeclRefExpr\\\"\\n                                                                                }\\n                                                                            ]\\n                                                                        }\\n                                                                    ]\\n                                                                }\\n                                                            ]\\n                                                        }\\n                                                    ]\\n                                                }\\n                                            ]\\n                                        }\\n                                    ]\\n                                }\\n                            ]\\n                        }\\n                    ]\\n                }, \\n                {\\n                    \\\"coord\\\": \\\"col:7, col:11\\\", \\n                    \\\"_nodetype\\\": \\\"ParmVarDecl\\\", \\n                    \\\"_subnode\\\": []\\n                }\\n            ]\\n        }\\n    ]\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/ast_b.json\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"/* bcon.c */\\n\\n/*    Copyright 2009-2012 10gen Inc.\\n *\\n *    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n *    you may not use this file except in compliance with the License.\\n *    You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n *    Unless required by applicable law or agreed to in writing, software\\n *    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n *    See the License for the specific language governing permissions and\\n *    limitations under the License.\\n */\\n\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <limits.h>\\n#include <assert.h>\\n#include \\\"bcon.h\\\"\\n\\n#ifndef NOT_REACHED\\n#define NOT_REACHED 0\\n#endif\\n\\n#define ARRAY_INDEX_BUFFER_SIZE 9\\n\\nconst char *bcon_errstr[] = {\\n    \\\"OK\\\",\\n    \\\"ERROR\\\",\\n    \\\"bcon document or nesting incomplete\\\",\\n    \\\"bson finish error\\\"\\n};\\n\\nbcon_error_t bson_append_bcon_array(bson *b, const bcon *bc);\\n\\n/* should be static, but it used by test files */\\nbcon_token_t bcon_token(char *s);\\n\\nbcon_token_t bcon_token(char *s) {\\n    if (s == 0) return Token_EOD;\\n    switch (s[0]) {\\n    case ':': if (s[1] != '\\\\0' && s[2] != '\\\\0' && s[3] != '\\\\0' && s[4] == '\\\\0' &&\\n                      s[3] == ':' && (s[1] == '_' || s[1] == 'P' || s[1] == 'R'))\\n            return Token_Typespec; break;\\n    case '{': if (s[1] == '\\\\0') return Token_OpenBrace; break;\\n    case '}': if (s[1] == '\\\\0') return Token_CloseBrace; break;\\n    case '[': if (s[1] == '\\\\0') return Token_OpenBracket; break;\\n    case ']': if (s[1] == '\\\\0') return Token_CloseBracket; break;\\n    case '.': if (s[1] == '\\\\0') return Token_End; break;\\n    }\\n    return Token_Default;\\n}\\n\\nstatic bcon_error_t bson_bcon_key_value(bson *b, const char *key, const char *typespec, const bcon bci) {\\n    bcon_error_t ret = BCON_OK;\\n    bson_oid_t oid;\\n    char ptype = typespec ? typespec[1] : '_';\\n    char utype = typespec ? typespec[2] : '_';\\n    switch (ptype) {\\n    case '_': /* kv(b, key, utype, bci) */\\n        switch (utype) {\\n        case '_': /* fall through */\\n        case 's': bson_append_string( b, key, bci.s ); break; /* common case */\\n        case 'f': bson_append_double( b, key, bci.f ); break;\\n        case 'D':\\n            bson_append_start_object( b, key );\\n            ret = bson_append_bcon( b, bci.D );\\n            bson_append_finish_object( b );\\n            break;\\n        case 'A':\\n            bson_append_start_array( b, key );\\n            ret = bson_append_bcon_array( b, bci.A );\\n            bson_append_finish_array( b );\\n            break;\\n        case 'o': if (*bci.o == '\\\\0') bson_oid_gen( &oid ); else bson_oid_from_string( &oid, bci.o ); bson_append_oid( b, key, &oid ); break;\\n        case 'b': bson_append_bool( b, key, bci.b ); break;\\n        case 't': bson_append_time_t( b, key, bci.t ); break;\\n        case 'v': bson_append_null( b, key ); break; /* void */\\n        case 'x': bson_append_symbol( b, key, bci.x ); break;\\n        case 'i': bson_append_int( b, key, bci.i ); break;\\n        case 'l': bson_append_long( b, key, bci.l ); break;\\n        default: printf(\\\"\\\\nptype:'%c' utype:'%c'\\\\n\\\", ptype, utype); assert(NOT_REACHED); break;\\n        }\\n        break;\\n    case 'R': /* krv(b, key, utype, bci) */\\n        switch (utype) {\\n        case 'f': bson_append_double( b, key, *bci.Rf ); break;\\n        case 's': bson_append_string( b, key, bci.Rs ); break;\\n        case 'D':\\n            bson_append_start_object( b, key );\\n            ret = bson_append_bcon( b, bci.RD );\\n            bson_append_finish_object( b );\\n            break;\\n        case 'A':\\n            bson_append_start_array( b, key );\\n            ret = bson_append_bcon_array( b, bci.RA );\\n            bson_append_finish_array( b );\\n            break;\\n        case 'o': if (*bci.o == '\\\\0') bson_oid_gen( &oid ); else bson_oid_from_string( &oid, bci.o ); bson_append_oid( b, key, &oid ); break;\\n        case 'b': bson_append_bool( b, key, *bci.Rb ); break;\\n        case 't': bson_append_time_t( b, key, *bci.Rt ); break;\\n        case 'x': bson_append_symbol( b, key, bci.Rx ); break;\\n        case 'i': bson_append_int( b, key, *bci.Ri ); break;\\n        case 'l': bson_append_long( b, key, *bci.Rl ); break;\\n        default: printf(\\\"\\\\nptype:'%c' utype:'%c'\\\\n\\\", ptype, utype); assert(NOT_REACHED); break;\\n        }\\n        break;\\n    case 'P': /* kpv(b, key, utype, bci) */\\n        if (*bci.Pv != 0) {\\n            switch (utype) {\\n            case 'f': bson_append_double( b, key, **bci.Pf ); break;\\n            case 's': bson_append_string( b, key, *bci.Ps ); break;\\n            case 'D':\\n                bson_append_start_object( b, key );\\n                ret = bson_append_bcon( b, *bci.PD );\\n                bson_append_finish_object( b );\\n                break;\\n            case 'A':\\n                bson_append_start_array( b, key );\\n                ret = bson_append_bcon_array( b, *bci.PA );\\n                bson_append_finish_array( b );\\n                break;\\n            case 'o': if (**bci.Po == '\\\\0') bson_oid_gen( &oid );\\n                else bson_oid_from_string( &oid, *bci.Po );\\n                bson_append_oid( b, key, &oid );\\n                break;\\n            case 'b': bson_append_bool( b, key, **bci.Pb ); break;\\n            case 't': bson_append_time_t( b, key, **bci.Pt ); break;\\n            case 'x': if (*bci.Px != 0) bson_append_symbol( b, key, *bci.Px ); break;\\n            case 'i': bson_append_int( b, key, **bci.Pi ); break;\\n            case 'l': bson_append_long( b, key, **bci.Pl ); break;\\n            default: printf(\\\"\\\\nptype:'%c' utype:'%c'\\\\n\\\", ptype, utype); assert(NOT_REACHED); break;\\n            }\\n        }\\n        break;\\n    default:\\n        printf(\\\"\\\\nptype:'%c' utype:'%c'\\\\n\\\", ptype, utype); assert(NOT_REACHED);\\n        break;\\n    }\\n    return ret;\\n}\\n\\ntypedef enum bcon_state_t {\\n    State_Element, State_DocSpecValue, State_DocValue,\\n    State_ArraySpecValue, State_ArrayValue\\n} bcon_state_t;\\n\\n#define DOC_STACK_SIZE 1024\\n#define ARRAY_INDEX_STACK_SIZE 1024\\n\\n#define DOC_PUSH_STATE(return_state) ( doc_stack[doc_stack_pointer++] = (return_state) )\\n#define DOC_POP_STATE ( state = doc_stack[--doc_stack_pointer] )\\n#define ARRAY_PUSH_RESET_INDEX_STATE(return_state) ( array_index_stack[array_index_stack_pointer++] = array_index, array_index = 0, DOC_PUSH_STATE(return_state) )\\n#define ARRAY_POP_INDEX_STATE ( array_index = array_index_stack[--array_index_stack_pointer], DOC_POP_STATE )\\n\\n#define ARRAY_KEY_STRING(l) (bson_numstr(array_index_buffer, (int)(l)), array_index_buffer)\\n\\n/*\\n * simplified FSM to parse BCON structure, uses stacks for sub-documents and sub-arrays\\n */\\nstatic bcon_error_t bson_append_bcon_with_state(bson *b, const bcon *bc, bcon_state_t start_state) {\\n    bcon_error_t ret = BCON_OK;\\n    bcon_state_t state = start_state;\\n    char *key = 0;\\n    char *typespec = 0;\\n    unsigned char doc_stack[DOC_STACK_SIZE];\\n    size_t doc_stack_pointer = 0;\\n    size_t array_index = 0;\\n    size_t array_index_stack[ARRAY_INDEX_STACK_SIZE];\\n    size_t array_index_stack_pointer = 0;\\n    char array_index_buffer[ARRAY_INDEX_BUFFER_SIZE]; /* max BSON size */\\n    int end_of_data;\\n    const bcon *bcp;\\n    for (end_of_data = 0, bcp = bc; ret == BCON_OK && !end_of_data; bcp++) {\\n        bcon bci = *bcp;\\n        char *s = bci.s;\\n        switch (state) {\\n        case State_Element:\\n            switch (bcon_token(s)) {\\n            case Token_CloseBrace:\\n                bson_append_finish_object( b );\\n                DOC_POP_STATE; /* state = ...; */\\n                break;\\n            case Token_End:\\n                end_of_data = 1;\\n                break;\\n            default:\\n                key = s;\\n                state = State_DocSpecValue;\\n                break;\\n            }\\n            break;\\n        case State_DocSpecValue:\\n            switch (bcon_token(s)) {\\n            case Token_Typespec:\\n                typespec = s;\\n                state = State_DocValue;\\n                break;\\n            case Token_OpenBrace:\\n                bson_append_start_object( b, key );\\n                DOC_PUSH_STATE(State_Element);\\n                state = State_Element;\\n                break;\\n            case Token_OpenBracket:\\n                bson_append_start_array( b, key );\\n                ARRAY_PUSH_RESET_INDEX_STATE(State_Element);\\n                state = State_ArraySpecValue;\\n                break;\\n            case Token_End:\\n                end_of_data = 1;\\n                break;\\n            default:\\n                ret = bson_bcon_key_value(b, key, typespec, bci);\\n                state = State_Element;\\n                break;\\n            }\\n            break;\\n        case State_DocValue:\\n            ret = bson_bcon_key_value(b, key, typespec, bci);\\n            state = State_Element;\\n            typespec = 0;\\n            break;\\n        case State_ArraySpecValue:\\n            switch (bcon_token(s)) {\\n            case Token_Typespec:\\n                typespec = s;\\n                state = State_ArrayValue;\\n                break;\\n            case Token_OpenBrace:\\n                key = ARRAY_KEY_STRING(array_index++);\\n                bson_append_start_object( b, key );\\n                DOC_PUSH_STATE(State_ArraySpecValue);\\n                state = State_Element;\\n                break;\\n            case Token_OpenBracket:\\n                key = ARRAY_KEY_STRING(array_index++);\\n                bson_append_start_array( b, key );\\n                ARRAY_PUSH_RESET_INDEX_STATE(State_ArraySpecValue);\\n                /* state = State_ArraySpecValue; */\\n                break;\\n            case Token_CloseBracket:\\n                bson_append_finish_array( b );\\n                ARRAY_POP_INDEX_STATE; /* state = ...; */\\n                break;\\n            case Token_End:\\n                end_of_data = 1;\\n                break;\\n            default:\\n                key = ARRAY_KEY_STRING(array_index++);\\n                ret = bson_bcon_key_value(b, key, typespec, bci);\\n                /* state = State_ArraySpecValue; */\\n                break;\\n            }\\n            break;\\n        case State_ArrayValue:\\n            key = ARRAY_KEY_STRING(array_index++);\\n            ret = bson_bcon_key_value(b, key, typespec, bci);\\n            state = State_ArraySpecValue;\\n            typespec = 0;\\n            break;\\n        default: assert(NOT_REACHED); break;\\n        }\\n    }\\n    return state == start_state ? BCON_OK : BCON_DOCUMENT_INCOMPLETE;\\n}\\n\\nbcon_error_t bson_append_bcon(bson *b, const bcon *bc) {\\n    return bson_append_bcon_with_state(b, bc, State_Element);\\n}\\n\\nbcon_error_t bson_append_bcon_array(bson *b, const bcon *bc) {\\n    return bson_append_bcon_with_state(b, bc, State_ArraySpecValue);\\n}\\n\\n/**\\n * Generate BSON from BCON\\n * @param b a BSON object\\n * @param bc a BCON object\\n * match with bson_destroy\\n */\\nbcon_error_t bson_from_bcon(bson *b, const bcon *bc) {\\n    bcon_error_t ret = BSON_OK;\\n    bson_init( b );\\n    ret = bson_append_bcon_with_state( b, bc, State_Element );\\n    if (ret != BCON_OK) return ret;\\n    ret = bson_finish( b );\\n    return ( ret == BSON_OK ? BCON_OK : BCON_BSON_ERROR );\\n}\\n\\nvoid bcon_print(const bcon *bc) { /* prints internal representation, not JSON */\\n    char *typespec = 0;\\n    const char *delim = \\\"\\\";\\n    int end_of_data;\\n    bcon *bcp;\\n    putchar('{');\\n    for (end_of_data = 0, bcp = (bcon*)bc; !end_of_data; bcp++) {\\n        bcon bci = *bcp;\\n        char *typespec_next = 0;\\n        if (typespec) {\\n            switch (typespec[1]) {\\n            case '_':\\n                switch (typespec[2]) {\\n                case 'f': printf(\\\"%s%f\\\", delim, bci.f); break;\\n                case 's': printf(\\\"%s\\\\\\\"%s\\\\\\\"\\\", delim, bci.s); break;\\n                case 'D': printf(\\\"%sPD(0x%lx,..)\\\", delim, (unsigned long)bci.D); break;\\n                case 'A': printf(\\\"%sPA(0x%lx,....)\\\", delim, (unsigned long)bci.A); break;\\n                case 'o': printf(\\\"%s\\\\\\\"%s\\\\\\\"\\\", delim, bci.o); break;\\n                case 'b': printf(\\\"%s%d\\\", delim, bci.b); break;\\n                case 't': printf(\\\"%s%ld\\\", delim, (long)bci.t); break;\\n                case 'v': printf(\\\"%s\\\\\\\"%s\\\\\\\"\\\", delim, bci.v); break;\\n                case 'x': printf(\\\"%s\\\\\\\"%s\\\\\\\"\\\", delim, bci.x); break;\\n                case 'i': printf(\\\"%s%d\\\", delim, bci.i); break;\\n                case 'l': printf(\\\"%s%ld\\\", delim, bci.l); break;\\n                default: printf(\\\"\\\\ntypespec:\\\\\\\"%s\\\\\\\"\\\\n\\\", typespec); assert(NOT_REACHED); break;\\n                }\\n                break;\\n            case 'R':\\n                switch (typespec[2]) {\\n                case 'f': printf(\\\"%sRf(0x%lx,%f)\\\", delim, (unsigned long)bci.Rf, *bci.Rf); break;\\n                case 's': printf(\\\"%sRs(0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Rs, bci.Rs); break;\\n                case 'D': printf(\\\"%sRD(0x%lx,..)\\\", delim, (unsigned long)bci.RD); break;\\n                case 'A': printf(\\\"%sRA(0x%lx,....)\\\", delim, (unsigned long)bci.RA); break;\\n                case 'o': printf(\\\"%sRo(0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Ro, bci.Ro); break;\\n                case 'b': printf(\\\"%sRb(0x%lx,%d)\\\", delim, (unsigned long)bci.Rb, *bci.Rb); break;\\n                case 't': printf(\\\"%sRt(0x%lx,%ld)\\\", delim, (unsigned long)bci.Rt, (long)*bci.Rt); break;\\n                case 'x': printf(\\\"%sRx(0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Rx, bci.Rx); break;\\n                case 'i': printf(\\\"%sRi(0x%lx,%d)\\\", delim, (unsigned long)bci.Ri, *bci.Ri); break;\\n                case 'l': printf(\\\"%sRl(0x%lx,%ld)\\\", delim, (unsigned long)bci.Rl, *bci.Rl); break;\\n                default: printf(\\\"\\\\ntypespec:\\\\\\\"%s\\\\\\\"\\\\n\\\", typespec); assert(NOT_REACHED); break;\\n                }\\n                break;\\n            case 'P':\\n                switch (typespec[2]) {\\n                case 'f': printf(\\\"%sPf(0x%lx,0x%lx,%f)\\\", delim, (unsigned long)bci.Pf, (unsigned long)(bci.Pf ? *bci.Pf : 0), bci.Pf && *bci.Pf ? **bci.Pf : 0.0); break;\\n                case 's': printf(\\\"%sPs(0x%lx,0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Ps, (unsigned long)(bci.Ps ? *bci.Ps : 0), bci.Ps && *bci.Ps ? *bci.Ps : \\\"\\\"); break;\\n                case 'D': printf(\\\"%sPD(0x%lx,0x%lx,..)\\\", delim, (unsigned long)bci.PD, (unsigned long)(bci.PD ? *bci.PD : 0)); break;\\n                case 'A': printf(\\\"%sPA(0x%lx,0x%lx,....)\\\", delim, (unsigned long)bci.PA, (unsigned long)(bci.PA ? *bci.PA : 0)); break;\\n                case 'o': printf(\\\"%sPo(0x%lx,0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Po, (unsigned long)(bci.Po ? *bci.Po : 0), bci.Po && *bci.Po ? *bci.Po : \\\"\\\"); break;\\n                case 'b': printf(\\\"%sPb(0x%lx,0x%lx,%d)\\\", delim, (unsigned long)bci.Pb, (unsigned long)(bci.Pb ? *bci.Pb : 0), bci.Pb && *bci.Pb ? **bci.Pb : 0); break;\\n                case 't': printf(\\\"%sPt(0x%lx,0x%lx,%ld)\\\", delim, (unsigned long)bci.Pt, (unsigned long)(bci.Pt ? *bci.Pt : 0), bci.Pt && *bci.Pt ? (long)**bci.Pt : 0); break;\\n                case 'x': printf(\\\"%sPx(0x%lx,0x%lx,\\\\\\\"%s\\\\\\\")\\\", delim, (unsigned long)bci.Px, (unsigned long)(bci.Px ? *bci.Px : 0), bci.Px && *bci.Px ? *bci.Px : \\\"\\\"); break;\\n                case 'i': printf(\\\"%sPi(0x%lx,0x%lx,%d)\\\", delim, (unsigned long)bci.Pi, (unsigned long)(bci.Pi ? *bci.Pi : 0), bci.Pi && *bci.Pi ? **bci.Pi : 0); break;\\n                case 'l': printf(\\\"%sPl(0x%lx,0x%lx,%ld)\\\", delim, (unsigned long)bci.Pl, (unsigned long)(bci.Pl ? *bci.Pl : 0), bci.Pl && *bci.Pl ? **bci.Pl : 0); break;\\n\\n                default: printf(\\\"\\\\ntypespec:\\\\\\\"%s\\\\\\\"\\\\n\\\", typespec); assert(NOT_REACHED); break;\\n                }\\n                break;\\n            default:\\n                printf(\\\"\\\\ntypespec:\\\\\\\"%s\\\\\\\"\\\\n\\\", typespec); assert(NOT_REACHED);\\n                break;\\n            }\\n        }\\n        else {\\n            char *s = bci.s;\\n            switch (s[0]) {\\n            case '.':\\n                end_of_data = (s[1] == '\\\\0');\\n                break;\\n            case ':':\\n                typespec_next = bcon_token(s) == Token_Typespec ? s : 0;\\n                break;\\n            }\\n            printf(\\\"%s\\\\\\\"%s\\\\\\\"\\\", delim, s);\\n        }\\n        typespec = typespec_next;\\n        delim = \\\",\\\";\\n    }\\n    putchar('}');\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/bcon.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\\n\\n#include <stdio.h>\\n\\nvoid thePrintf(int array[], int size)\\n{\\n    int i;\\n\\n    for (i = 0;i < size;i++)\\n    {\\n        printf (\\\"%d \\\", array[i]);\\n    }\\n    printf (\\\"\\\\r\\\\n\\\\r\\\\n\\\");\\n}\\n\\nvoid maxHeapFilterDown (int array[], int index, int size)\\n{\\n    int dad, son, temp;\\n\\n    dad = index;\\n    temp = array[dad];\\n    son = dad * 2 +1;\\n    while(son < size)\\n    {\\n        if (son + 1 < size && array[son + 1] > array[son])  //\\u5de6\\u53f3\\u5b50\\u8282\\u70b9\\u4e2d\\u5bfb\\u627e\\u8f83\\u5927\\u952e\\u503c\\n        {\\n            son++;\\n        }\\n\\n        if (array[son] <= temp) //\\u65b0\\u7684\\u7236\\u8282\\u70b9\\u503c\\n        {\\n            break;\\n        }\\n        array[dad] = array[son];\\n        dad = son;\\n        son = dad * 2 + 1;\\n    }\\n    array[dad] = temp;\\n}\\n\\nvoid buildMaxHeap (int array[], int size)\\n{\\n    int index;\\n\\n    for (index = size / 2 - 1;index >= 0;index--)\\n    {\\n        maxHeapFilterDown (array, index, size);\\n    }\\n}\\n\\nvoid heapSortInc (int array[], int size)\\n{\\n    int temp;\\n    int n;\\n    buildMaxHeap (array, size);\\n    for (n = size - 1;n >0;n--)\\n    {\\n    \\ttemp = array[n];\\n        array[n] = array[0];\\n        array[0] = temp;\\n        maxHeapFilterDown (array, 0, n);\\n        \\n    }\\n}\\n\\nint main (void)\\n{\\n    FILE *thisArray;\\n    int *array, size, i, value;\\n    char thisString[128];\\n    \\n    thisArray = fopen(\\\"randNums.txt\\\", \\\"rb\\\");\\n    if (NULL == thisArray)\\n    {\\n        fprintf (stderr, \\\"File Open Error.\\\\r\\\\n\\\");\\n        return -1;\\n    }\\n\\n    fscanf(thisArray, \\\"%d\\\", &size);\\n    array = (int *)malloc(size * sizeof(int));\\n    if (NULL == array)\\n    {\\n        fprintf (stderr, \\\"Malloc Array Error.\\\\r\\\\n\\\");\\n        return -1;\\n    }\\n    for (i = 0;i < size;i++)\\n    {\\n        fscanf (thisArray, \\\"%d\\\", &value);\\n        array[i] = value;\\n    }\\n\\n    thePrintf(array, size);\\n    heapSortInc(array, size);\\n    thePrintf(array, size);\\n    free(array);\\n    getchar();\\n    return 0;\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/heapSort.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"int f(int x){\\n  int y = 0;\\n  if (x > 0)\\n    y = 1;\\n  else \\n    y = x;\\n  return y;\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/test.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/test.cc\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"int f(int x){\\n  int result = ((x * 2) / 42);\\n  return result;\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/test2.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"int f(int x){\\n  int result = ((x * 2) / 42);\\n  return result;\\n}\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/example/test_new.c\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"import AST_Process\\nimport AST2JSON\\nimport AST_Compare\\n\\ncode_path_a = './example/test.c'\\njson_name_a = './example/ast_a.json'\\nfile_a = AST_Process.AST_generate(code_path_a,True)\\nsource1 = AST_Process.Node_extract(file_a)\\nnode_list_a = source1\\ndd_a = AST2JSON.to_json(node_list_a, json_name_a)\\nnum_list_a = dd_a[0]\\nnode_num_a = dd_a[1]\\n\\ncode_path_b = './example/test2.c'\\njson_name_b = './example/ast_b.json'\\nfile_b = AST_Process.AST_generate(code_path_b,True)\\nsource2 = AST_Process.Node_extract(file_b)\\nnode_list_b = source2\\ndd_b = AST2JSON.to_json(node_list_b, json_name_b)\\nnum_list_b = dd_b[0]\\nnode_num_b = dd_b[1]\\n\\nseq1 = AST_Compare.Sequence_generate(node_list_a, num_list_a)\\nseq2 = AST_Compare.Sequence_generate(node_list_b, num_list_b)\\nset = AST_Compare.Seqlist_compare(seq1,seq2)\\n\\n\\\"\\\"\\\"show the same nodes that two programs share\\\"\\\"\\\"\\nprint (set[0])\\nprint (set[1])\\nprint (node_num_a)\\nprint (node_num_b)\\n\\n#\\n#\\n# print (num_list_a)\\n# print (num_list_b)\\n# list = AST_Compare.Sequence_compare(seq1[0],seq2[0])\\n# list1 = list[1]\\n# list2 = list[2]\\n# print (list1)\\n# print (list2)\\n# print (list[0])\\n# print (seq1)\\n# print (seq2)\\n# print (source1)\",\n      \"commit_date\": \"2017-10-07 22:09:00 +0800\",\n      \"file\": \"ast/main.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\n\\nAuthor: ch-chiu\\n\\n## Usage\",\n      \"commit_date\": \"2017-10-07 21:49:49 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"Zimeng Qiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\n$ python your_dir_of_main.py input output_dir <--mapping|--fsearch|--search>\\n```\\n\\n## Mapping Mode\\n\\nThis mode use command like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file/folder output_dir --mapping\\n```\\n\\nThe script will generate a JSON file in output directory including author, file name and committed code snippets of every commit.\\n\\nYou can explore all time commit history by either scrolling screen or looking up generated JSON file.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.32.12%20PM.png)\\n\\n## Code File Search Mode\\n\\nRun like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file output_dir --fsearch\\n```\\n\\nThis mode enable you to search a code snippet in git commit history of a file or whole directory and find who created this code snippet and which file is this snippet in.\\n\\nAttention: The input code file of this mode is not a complete file from git repository, it actually stores a copy of code snippet that you might come across from somewhere of web but you are not sure which project or file it belongs to. At this time, you can copy this code snippet and save it as a .txt file as input code file of this mode. Then the script will automatically find the information you want.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.14%20PM.png)\\n\\n## Code Search Mode\\n\\nRun like this:\\n\\n```\\n$ python your_dir_of_main.py \\\"your code snippet\\\" output_dir --search\\n```\\n\\nThis mode generally has the same function with ```--fsearch``` mode. However, unlike that mode, this one enables you avoid save code snippet as a .txt file, instead, you can copy them in terminal and run command directly.\\n\\nAttention: Remember to add \\\"\\\" to declare your code snippet as a string.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.32%20PM.png)\",\n      \"commit_date\": \"2017-10-07 21:49:49 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"Zimeng Qiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\\n            code_list.append(code_dict)\\n    return code_list\\n\\n\\ndef print_code_list(code_list):\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        # snippet = code[\\\"code_snippet\\\"]\\n        # for line in snippet:\\n        #     print(line)\\n        print(code[\\\"code_snippet\\\"])\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        if input_code in code['code_snippet']:\\n            match_data = code\\n            match_data_list.append(match_data)\\n    return match_data_list\\n\\n\\ndef print_match_result(data_list):\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    if func_argv == \\\"--mapping\\\":\\n        if not os.path.exists(input_file):\\n            print(\\\"{}: No such file or directory\\\".format(input_file))\\n        else:\\n            commit_history = mapping.get_code(input_file)\\n            mapping.print_code_list(commit_history)\\n            history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n            with open(history_file, 'w') as f:\\n                json.dump(commit_history, f, indent=3)\\n    elif func_argv == \\\"--fsearch\\\":\\n        commit_history = mapping.get_code(dir_path)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n        input_code = search_commit_history.get_input_code(input_file)\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    elif func_argv == \\\"--search\\\":\\n        commit_history = mapping.get_code(dir_path)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n        input_code = input_file\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Wrong argument!\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n\\n\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"from commit_history import mapping\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\",\n      \"file\": \"git/history/test.txt\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    return email\\n\\n\\ndef get_file_name(line):\\n    regex = re.compile(\\\"\\\\+{3}\\\\sb/(.*)$\\\")\\n    file_name = regex.findall(line)\\n    return file_name\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = str()\\n            # snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    else:\\n        return 0\\n\\n\\ndef get_change_file(line):\\n    regex = re.compile(\\\"diff\\\\s--git\\\\sa/.*\\\\sb/(.*)$\\\")\\n    file_name = regex.findall(line)\\n    if file_name:\\n        return file_name\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        author = get_info.get_author(line)\\n        if len(author):\\n            email = get_info.get_email(line)\\n            if len(email):\\n                commit_author = author[0]\\n                # code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = email[0]\\n                # code_dict['email'] = commit_email\\n                # print(commit_email)\\n                # code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n                # code_dict['code_snippet'] = code_snippet\\n        elif get_info.get_change_file(line):\\n            commit_file = get_info.get_change_file(line)\\n            code_dict['file'] = commit_file[0]\\n        elif get_info.get_change_section(line):\\n            code_dict['file'] = commit_file[0]\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\\n            code_list.append(code_dict)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"File Name: {}\\\".format(code['file']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        # snippet = code[\\\"code_snippet\\\"]\\n        # for line in snippet:\\n        #     print(line)\\n        print(code[\\\"code_snippet\\\"])\\n    return code_list\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtility for searching code snippet in git commit history\\n\\\"\\\"\\\"\\n\\nimport os\\nimport json\\n\\n\\ndef get_input_code(input_file):\\n    input_code = open(input_file).read()\\n    return input_code\\n\\n\\ndef search_in_history(input_code, output_dir):\\n    history_file = os.path.join(output_dir, 'commit_history.json')\\n    with open(history_file) as f:\\n        history = json.load(f)\\n    match_data_list = list()\\n    for code in history:\\n        if input_code in code['code_snippet']:\\n            match_data = code\\n            match_data_list.append(match_data)\\n    if len(match_data_list):\\n        return match_data_list\\n    else:\\n        return \\\"Error! No data in this git repository match with input code.\\\"\\n\\n\\ndef print_match_result(data_list):\\n    print(\\\"Found {} match result\\\".format(len(data_list)))\\n    for data in data_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(data['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(data['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"File Name: {}\\\".format(data['file']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(data[\\\"code_snippet\\\"])\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir <--search|--mapping>\\n\\\"\\\"\\\"\\n\\nimport json\\nimport logging\\nimport os\\nimport sys\\n\\nfrom commit_history import mapping\\nfrom git_search import search_commit_history\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    logger.info(\\\"running %s \\\" % ' '.join(sys.argv))\\n\\n    # check and process input arguments\\n    if len(sys.argv) != 4:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\n    if not os.path.exists(output_dir):\\n        try:\\n            os.makedirs(output_dir)\\n        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    if func_argv == \\\"--mapping\\\":\\n        commit_history = mapping.get_code(input_file)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n    elif func_argv == \\\"--search\\\":\\n        if not os.path.exists(os.path.join(output_dir, 'commit_history.json')):\\n            try:\\n                commit_history = mapping.get_code(input_file)\\n                history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n                with open(history_file, 'w') as f:\\n                    json.dump(commit_history, f, indent=3)\\n            except OSError as exception:\\n                raise SystemExit(\\\"Error: Search failed\\\")\\n        input_code = search_commit_history.get_input_code(input_file)\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Lack of argument\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n\\n\\n\\n\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"laerteoliveira, laerte-oliveira, oliveira, vloliveira\\nwhich are mainly generated by the middle and last name.\\n\\nNow the matching rate is 31%(22/71).\\n\\nThe next step is to establish the identity linkage between Github and Stack Overflow users who can not be matched by the linked account. And the link can be found by the users' behavior features and writing style features.\\n\",\n      \"commit_date\": \"2017-10-05 21:22:45 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"login\\\": \\\"t27\\\",\\n      \\\"stackoverflow_login\\\": \\\"t27\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"name\\\": \\\"Tarang Shah\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"login\\\": \\\"sindresorhus\\\",\\n      \\\"stackoverflow_login\\\": \\\"sindresorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"login\\\": \\\"lmichelbacher\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"Kazhnuz\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kazhnuz\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"likedan\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kedan Li\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"web-flow\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"GitHub Web Flow\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\",\\n      \\\"location\\\": \\\"Winchester, VA\\\",\\n      \\\"login\\\": \\\"kennethreitz\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"name\\\": \\\"Kenneth Reitz\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"United States\\\",\\n      \\\"login\\\": \\\"johnjago\\\",\\n      \\\"stackoverflow_login\\\": \\\"johnjago\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"John Jago\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"login\\\": \\\"sfischer13\\\",\\n      \\\"stackoverflow_login\\\": \\\"sfischer13\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Stefanus\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\",\\n      \\\"location\\\": \\\"Volgograd, Russia\\\",\\n      \\\"login\\\": \\\"ukstv\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"name\\\": \\\"Sergey Ukustov\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"Siilwyn\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Selwyn\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"hq@ccu.io\\\",\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\",\\n      \\\"login\\\": \\\"hobbyquaker\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Sebastian Raff\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"stetso\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"login\\\": \\\"roaldnefs\\\",\\n      \\\"stackoverflow_login\\\": \\\"roaldnefs\\\",\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"name\\\": \\\"Roald Nefs\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Dallas, TX\\\",\\n      \\\"login\\\": \\\"chasegiunta\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Chase Giunta\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\",\\n      \\\"login\\\": \\\"LappleApple\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"name\\\": \\\"Lauri Apple\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\",\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\",\\n      \\\"login\\\": \\\"meitar\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"name\\\": \\\"Meitar M.\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\",\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\",\\n      \\\"login\\\": \\\"angrykoala\\\",\\n      \\\"stackoverflow_login\\\": \\\"angrykoala\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\",\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\",\\n      \\\"login\\\": \\\"ooade\\\",\\n      \\\"stackoverflow_login\\\": \\\"ooade\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mezood@gmail.com\\\",\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\",\\n      \\\"login\\\": \\\"mezod\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"sheonhan\\\",\\n      \\\"stackoverflow_login\\\": \\\"sheonhan\\\",\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"name\\\": \\\"Sheon Han\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\",\\n      \\\"location\\\": \\\"Spain\\\",\\n      \\\"login\\\": \\\"m1guelpf\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"craig@davison.io\\\",\\n      \\\"location\\\": \\\"Hampshire, UK\\\",\\n      \\\"login\\\": \\\"davisonio\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Craig Davison\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\",\\n      \\\"location\\\": \\\"Moscow\\\",\\n      \\\"login\\\": \\\"vitalets\\\",\\n      \\\"stackoverflow_login\\\": \\\"vitalets\\\",\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"mipmip\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"name\\\": \\\"Pim Snel\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"arbox@yandex.com\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"login\\\": \\\"arbox\\\",\\n      \\\"stackoverflow_login\\\": \\\"arbox\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Andrei Beliankou\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Athens, Greece\\\",\\n      \\\"login\\\": \\\"k4m4\\\",\\n      \\\"stackoverflow_login\\\": \\\"k4m4\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"login\\\": \\\"analyticalmonk\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"name\\\": \\\"Akash Tandon\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Europe\\\",\\n      \\\"login\\\": \\\"faroit\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"East Earl, PA\\\",\\n      \\\"login\\\": \\\"RyanZim\\\",\\n      \\\"stackoverflow_login\\\": \\\"RyanZim\\\",\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\",\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\",\\n      \\\"login\\\": \\\"RichardLitt\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"name\\\": \\\"Richard Littauer\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\",\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\",\\n      \\\"login\\\": \\\"victorlaerte\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\",\\n      \\\"location\\\": \\\"Singapore\\\",\\n      \\\"login\\\": \\\"xiaohanyu\\\",\\n      \\\"stackoverflow_login\\\": \\\"xiaohanyu\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Xiao Hanyu\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"login\\\": \\\"DavidLambauer\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"name\\\": \\\"DavidLamabuer\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\",\\n      \\\"location\\\": \\\"Sweden\\\",\\n      \\\"login\\\": \\\"kevva\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"matthewvita@live.com\\\",\\n      \\\"location\\\": \\\"Los Angeles, US\\\",\\n      \\\"login\\\": \\\"MatthewVita\\\",\\n      \\\"stackoverflow_login\\\": \\\"MatthewVita\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Matthew Vita\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Germany, pretty central\\\",\\n      \\\"login\\\": \\\"kud1ing\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"jbmoelker\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"name\\\": \\\"Jasper Moelker\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"david@madeawkward.com\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"name\\\": \\\"David van Leeuwen\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\",\\n      \\\"location\\\": \\\"Taiwan\\\",\\n      \\\"login\\\": \\\"qazbnm456\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Boik\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"France\\\",\\n      \\\"login\\\": \\\"armaldio\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Quentin Goinaud\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\",\\n      \\\"login\\\": \\\"mislavcimpersak\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"sjfricke\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Spencer\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\",\\n      \\\"location\\\": \\\"Central Mass.\\\",\\n      \\\"login\\\": \\\"quangv\\\",\\n      \\\"stackoverflow_login\\\": \\\"quangv\\\",\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"name\\\": \\\"Quang Van\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"kminek\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Grzesiek W\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Columbia, MD\\\",\\n      \\\"login\\\": \\\"pmatseykanets\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Peter Matseykanets\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"github@gdi2290.com\\\",\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"login\\\": \\\"gdi2290\\\",\\n      \\\"stackoverflow_login\\\": \\\"gdi2290\\\",\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\",\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\",\\n      \\\"login\\\": \\\"bouzlibop\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Adrian Baran\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"BubuAnabelas\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\",\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\",\\n      \\\"login\\\": \\\"podo\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\",\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\",\\n      \\\"login\\\": \\\"terryum\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\",\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\",\\n      \\\"login\\\": \\\"LucasBassetti\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"name\\\": \\\"Lucas Bassetti\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"james@james.am\\\",\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\",\\n      \\\"login\\\": \\\"TheJambo\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"James Osborn\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Pune, India\\\",\\n      \\\"login\\\": \\\"dar5hak\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Darshak Parikh\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Gandhinagar, India\\\",\\n      \\\"login\\\": \\\"aviaryan\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"name\\\": \\\"Avi Aryan\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\",\\n      \\\"location\\\": \\\"Area 51\\\",\\n      \\\"login\\\": \\\"petk\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"name\\\": \\\"Peter Kokot\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\",\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\",\\n      \\\"login\\\": \\\"d3viant0ne\\\",\\n      \\\"stackoverflow_login\\\": \\\"d3viant0ne\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Joshua Wiens\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"terkel@terkel.com\\\",\\n      \\\"location\\\": \\\"Los Angeles, CA\\\",\\n      \\\"login\\\": \\\"terkelg\\\",\\n      \\\"stackoverflow_login\\\": \\\"terkelg\\\",\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"name\\\": \\\"Terkel\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\",\\n      \\\"location\\\": \\\"Kassel, Germany\\\",\\n      \\\"login\\\": \\\"mischah\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"kasbah\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\",\\n      \\\"location\\\": \\\"New York, NY\\\",\\n      \\\"login\\\": \\\"JesseTG\\\",\\n      \\\"stackoverflow_login\\\": \\\"JesseTG\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\",\\n      \\\"location\\\": \\\"Athens\\\",\\n      \\\"login\\\": \\\"sger\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\",\\n      \\\"location\\\": \\\"__switzerland__\\\",\\n      \\\"login\\\": \\\"timofurrer\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Timo Furrer\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\",\\n      \\\"location\\\": \\\"Austin, TX\\\",\\n      \\\"login\\\": \\\"harpribot\\\",\\n      \\\"stackoverflow_login\\\": \\\"harpribot\\\",\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Belarus\\\",\\n      \\\"login\\\": \\\"aliesbelik\\\",\\n      \\\"stackoverflow_login\\\": \\\"aliesbelik\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\",\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\",\\n      \\\"login\\\": \\\"hbokh\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"name\\\": \\\"Henk\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\",\\n      \\\"location\\\": \\\"Toronto, Canada\\\",\\n      \\\"login\\\": \\\"websemantics\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Seattle, WA\\\",\\n      \\\"login\\\": \\\"vors\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"name\\\": \\\"Sergei Vorobev\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\",\\n      \\\"location\\\": null,\\n      \\\"login\\\": \\\"nicolesaidy\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"company\\\": null,\\n      \\\"name\\\": \\\"Nicole Saidy\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"tandavas@famolus.com\\\",\\n      \\\"location\\\": \\\"Bangkok, Thailand\\\",\\n      \\\"login\\\": \\\"tandavas\\\",\\n      \\\"stackoverflow_login\\\": \\\"tandavas\\\",\\n      \\\"company\\\": \\\"@Famolus \\\",\\n      \\\"name\\\": \\\"Thanakron Tandavas\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-05 21:20:04 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_awesome.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Tarang Shah\\\",\\n      \\\"company\\\": \\\"BITS Pilani\\\",\\n      \\\"login\\\": \\\"t27\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"login\\\": \\\"sindresorhus\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"lmichelbacher\\\",\\n      \\\"location\\\": \\\"Edinburgh\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"Kazhnuz\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"likedan\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"GitHub Web Flow\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"web-flow\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\",\\n      \\\"name\\\": \\\"Kenneth Reitz\\\",\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"login\\\": \\\"kennethreitz\\\",\\n      \\\"location\\\": \\\"Winchester, VA\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"John Jago\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"johnjago\\\",\\n      \\\"location\\\": \\\"United States\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Stefanus\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"sfischer13\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\",\\n      \\\"name\\\": \\\"Sergey Ukustov\\\",\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"login\\\": \\\"ukstv\\\",\\n      \\\"location\\\": \\\"Volgograd, Russia\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Selwyn\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"Siilwyn\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"hq@ccu.io\\\",\\n      \\\"name\\\": \\\"Sebastian Raff\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"hobbyquaker\\\",\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": null,\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"stetso\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\",\\n      \\\"name\\\": \\\"Roald Nefs\\\",\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"login\\\": \\\"roaldnefs\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Chase Giunta\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"chasegiunta\\\",\\n      \\\"location\\\": \\\"Dallas, TX\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Lauri Apple\\\",\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"login\\\": \\\"LappleApple\\\",\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\",\\n      \\\"name\\\": \\\"Meitar M.\\\",\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"login\\\": \\\"meitar\\\",\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\",\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"angrykoala\\\",\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\",\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"ooade\\\",\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mezood@gmail.com\\\",\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"mezod\\\",\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\",\\n      \\\"name\\\": \\\"Sheon Han\\\",\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"login\\\": \\\"sheonhan\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\",\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\",\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"login\\\": \\\"m1guelpf\\\",\\n      \\\"location\\\": \\\"Spain\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"craig@davison.io\\\",\\n      \\\"name\\\": \\\"Craig Davison\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"davisonio\\\",\\n      \\\"location\\\": \\\"Hampshire, UK\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\",\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\",\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"login\\\": \\\"vitalets\\\",\\n      \\\"location\\\": \\\"Moscow\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Pim Snel\\\",\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"login\\\": \\\"mipmip\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"arbox@yandex.com\\\",\\n      \\\"name\\\": \\\"Andrei Beliankou\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"arbox\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"k4m4\\\",\\n      \\\"location\\\": \\\"Athens, Greece\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\",\\n      \\\"name\\\": \\\"Akash Tandon\\\",\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"login\\\": \\\"analyticalmonk\\\",\\n      \\\"location\\\": \\\"India\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"faroit\\\",\\n      \\\"location\\\": \\\"Europe\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\",\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"login\\\": \\\"RyanZim\\\",\\n      \\\"location\\\": \\\"East Earl, PA\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\",\\n      \\\"name\\\": \\\"Richard Littauer\\\",\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"login\\\": \\\"RichardLitt\\\",\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\",\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\",\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"login\\\": \\\"victorlaerte\\\",\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\",\\n      \\\"name\\\": \\\"Xiao Hanyu\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"xiaohanyu\\\",\\n      \\\"location\\\": \\\"Singapore\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\",\\n      \\\"name\\\": \\\"DavidLamabuer\\\",\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"login\\\": \\\"DavidLambauer\\\",\\n      \\\"location\\\": \\\"Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\",\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\",\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"login\\\": \\\"kevva\\\",\\n      \\\"location\\\": \\\"Sweden\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"matthewvita@live.com\\\",\\n      \\\"name\\\": \\\"Matthew Vita\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"MatthewVita\\\",\\n      \\\"location\\\": \\\"Los Angeles, US\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": null,\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"kud1ing\\\",\\n      \\\"location\\\": \\\"Germany, pretty central\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Jasper Moelker\\\",\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"login\\\": \\\"jbmoelker\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"david@madeawkward.com\\\",\\n      \\\"name\\\": \\\"David van Leeuwen\\\",\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\",\\n      \\\"name\\\": \\\"Boik\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"qazbnm456\\\",\\n      \\\"location\\\": \\\"Taiwan\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Quentin Goinaud\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"armaldio\\\",\\n      \\\"location\\\": \\\"France\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"mislavcimpersak\\\",\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\",\\n      \\\"name\\\": \\\"Spencer\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"sjfricke\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\",\\n      \\\"name\\\": \\\"Quang Van\\\",\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"login\\\": \\\"quangv\\\",\\n      \\\"location\\\": \\\"Central Mass.\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\",\\n      \\\"name\\\": \\\"Grzesiek W\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"kminek\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Peter Matseykanets\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"pmatseykanets\\\",\\n      \\\"location\\\": \\\"Columbia, MD\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"github@gdi2290.com\\\",\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\",\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"login\\\": \\\"gdi2290\\\",\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\",\\n      \\\"name\\\": \\\"Adrian Baran\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"bouzlibop\\\",\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"BubuAnabelas\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\",\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"podo\\\",\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\",\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\",\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"login\\\": \\\"terryum\\\",\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\",\\n      \\\"name\\\": \\\"Lucas Bassetti\\\",\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"login\\\": \\\"LucasBassetti\\\",\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"james@james.am\\\",\\n      \\\"name\\\": \\\"James Osborn\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"TheJambo\\\",\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Darshak Parikh\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"dar5hak\\\",\\n      \\\"location\\\": \\\"Pune, India\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Avi Aryan\\\",\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"login\\\": \\\"aviaryan\\\",\\n      \\\"location\\\": \\\"Gandhinagar, India\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\",\\n      \\\"name\\\": \\\"Peter Kokot\\\",\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"login\\\": \\\"petk\\\",\\n      \\\"location\\\": \\\"Area 51\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\",\\n      \\\"name\\\": \\\"Joshua Wiens\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"d3viant0ne\\\",\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"terkel@terkel.com\\\",\\n      \\\"name\\\": \\\"Terkel\\\",\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"login\\\": \\\"terkelg\\\",\\n      \\\"location\\\": \\\"Los Angeles, CA\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\",\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\",\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"login\\\": \\\"mischah\\\",\\n      \\\"location\\\": \\\"Kassel, Germany\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\",\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"kasbah\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\",\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"JesseTG\\\",\\n      \\\"location\\\": \\\"New York, NY\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\",\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\",\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"login\\\": \\\"sger\\\",\\n      \\\"location\\\": \\\"Athens\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\",\\n      \\\"name\\\": \\\"Timo Furrer\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"timofurrer\\\",\\n      \\\"location\\\": \\\"__switzerland__\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\",\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\",\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"login\\\": \\\"harpribot\\\",\\n      \\\"location\\\": \\\"Austin, TX\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"aliesbelik\\\",\\n      \\\"location\\\": \\\"Belarus\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\",\\n      \\\"name\\\": \\\"Henk\\\",\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"login\\\": \\\"hbokh\\\",\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\",\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\",\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"login\\\": \\\"websemantics\\\",\\n      \\\"location\\\": \\\"Toronto, Canada\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": null,\\n      \\\"name\\\": \\\"Sergei Vorobev\\\",\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"login\\\": \\\"vors\\\",\\n      \\\"location\\\": \\\"Seattle, WA\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\",\\n      \\\"name\\\": \\\"Nicole Saidy\\\",\\n      \\\"company\\\": null,\\n      \\\"login\\\": \\\"nicolesaidy\\\",\\n      \\\"location\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   },\\n   {\\n      \\\"email\\\": \\\"tandavas@famolus.com\\\",\\n      \\\"name\\\": \\\"Thanakron Tandavas\\\",\\n      \\\"company\\\": \\\"@Famolus \\\",\\n      \\\"login\\\": \\\"tandavas\\\",\\n      \\\"location\\\": \\\"Bangkok, Thailand\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_awesome.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    default_info = {\\\"display_name\\\":\\\"\\\",\\\"location\\\":\\\"\\\",\\\"user_id\\\":0}\\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\\\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\\\\n               '&site=stackoverflow'.format(name,name)\\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\\n    #try:\\n    info = request_api(user_api + app_key)\\n    print(\\\"Getting possible Stack Overflow user info from api: {}\\\".format(user_api))\\n    user_info = info[\\\"items\\\"]\\n    if not user_info == None:\\n        for item in user_info:\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"        user_source = request_source(stk_url)\\n        # user_source = request_url(stk_url)\\n        user_href = re.findall(r\\\"<a.*?href=.*?<\\\\/a>\\\", user_source, re.I | re.S | re.M)\\n        # find it directly\\n        git_account = None\\n        for href in user_href:\\n            if 'https://github.com/' in href:\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    default_info = []\\n    new_info = []\\n    for git_developer in git_info:\\n        print(\\\"finding Github user {} on Stack Overflow...\\\".format(git_developer[\\\"name\\\"]))\\n        possible_name = nf.possible_names(git_developer[\\\"name\\\"], git_developer[\\\"login\\\"])\\n        print(\\\"possible name:{}\\\".format(possible_name))\\n        for name in possible_name:\\n            # the info of developers with the same name but different info\\n            stk_info = InfoByName(name)\\n            if not stk_info == default_info:\\n                print(\\\"The possible info of Stack Overflow user {} is {}\\\".format(name, stk_info))\\n                for stk_developer in stk_info:\\n                    user_id = stk_developer['user_id']\\n                    git_account = GetGitAccount(user_id)\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"                if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n                    break\\n            else:\\n                print(\\\"The Stack Overflow info of possible username {} for github user {} can not be found\\\".format(name,git_developer[\\\"name\\\"]))\\n\\n        if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n            print(\\\"The Stack Overflow display_name for github user {} is {}\\\".format(git_developer[\\\"name\\\"],git_developer['stackoverflow_login']))\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import json\\nimport types\\n\\ngit_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n# git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\ngit_info = gt.get_info(git_api)\\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_awesome.json'\\ncTime = time.time()\\nprint(\\\"Dumping the info...\\\")\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(git_info, ctfile, indent=3)\\nprint(time.time() - cTime)\\n\\nf = open(info_file,encoding='utf-8')\\ngit_info = json.load(f)\\nstk_count = total_count = 0\\n\\ncTime = time.time()\\nprint(\\\"Matching developers between Github and Stack Overflow...\\\")\\nnew_info = st.match_info(git_info)\\nprint(time.time() - cTime)\\n\\nprint(\\\"Saving the results of matching...\\\")\\ncTime = time.time()\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(new_info, ctfile, indent=3)\\nprint(time.time() - cTime)\\n\\nfor item in new_info:\\n    if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import Get_Info.get_info_git as gt\\n\\n\\ndef name_form(name):\\n    name_split = name.split()\\n    form = []\\n\\n    if len(name_split) == 1:\\n        single_name = name_split[0]\\n        len_single = len(single_name)\\n        if len_single >= 3:\\n            for i in range(1,len_single -1):\\n                form.append(single_name[0:i+2])\\n            form.append(single_name[len_single-4:len_single-1])\\n        else:\\n            form = single_name\\n\\n    elif len(name_split) == 2:\\n        form.append(name_split[0][0].upper() + name_split[1].lower())\\n        form.append(name_split[0][0].lower() + name_split[1].lower())\\n        form.append(name_split[1].lower() + name_split[0][0].lower())\\n        form.append(name_split[1].lower() + name_split[0][0].upper())\\n        form.append(name_split[0].lower() + name_split[1].lower())\\n        form.append(name_split[0].lower() + '_' + name_split[1].lower())\\n\\n    elif len(name_split) == 3:\\n        form.append(name_split[1].lower() + name_split[2].lower())\\n        form.append(name_split[1].lower() + '-' + name_split[2].lower())\\n        form.append(name_split[0][0].lower() + name_split[1][0].lower() + name_split[2].lower())\\n        form.append(name_split[2].lower())\\n\\n    else:\\n        form = name\\n\\n    possible_name = [name]\\n    for username in form:\\n        possible_name.append(username)\\n\\n    return possible_name\\n\\ndef possible_names(name,login):\\n    possible_name = [name,login]\\n    if not name == None:\\n        possible_name.extend(name_form(name))\\n    else:\\n        possible_name.extend(name_form(login))\\n    possible_name = gt.delete_duplicate(possible_name)\\n    return possible_name\\n\",\n      \"commit_date\": \"2017-10-05 19:05:48 +0800\",\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish.\\n\\nWhen the input of possible usernames are only name and login, the matching rate is 15.49%(11/71), and the 11 matched developers are 100% matched because their github account and Stack Overflow account are linked.\\n\\nAnd then, possible usernames have been replenished. The possible forms of usernames are generated like:\\n\\nFor name which is 1 word long, like \\\"Kazhnuz\\\", the possible name forms are:\\nKaz, Kazh, Kazhn, Kazhnu, Kazhnuz, nuz(the last three letters)\\nThe reason for this generating method is that the Stack Overflow API for the query of user info can find all users whose name contains the input username, so for the uername that is 1 word long, we can simply split it into several words.\\n\\nFor name which is 2 words long, like \\\"Sindre Sorhus\\\", the possible usernames are:\\n'Sindre Sorhus', 'sindresorhus', 'Ssorhus', 'ssorhus', 'sorhuss', 'sorhusS', 'sindre_sorhus'\\nwhich are generated by different combination of the First and Last name.\\n\\nFor name which is 3 words long (few cases are like that), like \\\"Victor Laerte Oliveira\\\", the possible usernames are:\\nlaerteoliveira, laerte-oliveira, oliveira, vloliveira\\nwhich are mainly generated by the middle and last name.\\n\\nNow the matching rate is 29.58%(21/71).\\n\\nThe next step is to establish the identity linkage between Github and Stack Overflow users who can not be matched by the linked account. And the link can be found by the users' behavior features and writing style features.\\n\\nAuthor: AlvinZSJ\",\n      \"commit_date\": \"2017-10-05 19:03:46 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Lukas Michelbacher\\\",\\n      \\\"login\\\": \\\"lmichelbacher\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Edinburgh\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@avajs @chalk @yeoman\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sindre Sorhus\\\",\\n      \\\"login\\\": \\\"sindresorhus\\\",\\n      \\\"email\\\": \\\"sindresorhus@gmail.com\\\",\\n      \\\"location\\\": \\\"\\\\u00b0 \\\\u263e \\\\u2606 \\\\u00b8. \\\\u00b8\\\\u3000\\\\u2605  :.\\\\u3000 . \\\\u2022 \\\\u25cb \\\\u00b0 \\\\u2605\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Kazhnuz\\\",\\n      \\\"login\\\": \\\"Kazhnuz\\\",\\n      \\\"email\\\": \\\"kazhnuz@openmailbox.org\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Aleksandar Todorovi\\\\u0107 (r3bl)\\\",\\n      \\\"login\\\": \\\"aleksandar-todorovic\\\",\\n      \\\"email\\\": \\\"aleksandar@r3bl.me\\\",\\n      \\\"location\\\": \\\"Br\\\\u010dko, Bosnia & Herzegovina\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Kedan Li\\\",\\n      \\\"login\\\": \\\"likedan\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"GitHub Web Flow\\\",\\n      \\\"login\\\": \\\"web-flow\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"Heroku\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Kenneth Reitz\\\",\\n      \\\"login\\\": \\\"kennethreitz\\\",\\n      \\\"email\\\": \\\"me@kennethreitz.org\\\",\\n      \\\"location\\\": \\\"Winchester, VA\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"John Jago\\\",\\n      \\\"login\\\": \\\"johnjago\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"United States\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Stefanus\\\",\\n      \\\"login\\\": \\\"sfischer13\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@machinomy \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sergey Ukustov\\\",\\n      \\\"login\\\": \\\"ukstv\\\",\\n      \\\"email\\\": \\\"sergey@ukstv.me\\\",\\n      \\\"location\\\": \\\"Volgograd, Russia\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Selwyn\\\",\\n      \\\"login\\\": \\\"Siilwyn\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sebastian Raff\\\",\\n      \\\"login\\\": \\\"hobbyquaker\\\",\\n      \\\"email\\\": \\\"hq@ccu.io\\\",\\n      \\\"location\\\": \\\"Stuttgart, Germany\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null,\\n      \\\"login\\\": \\\"stetso\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"@Warpnet\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Roald Nefs\\\",\\n      \\\"login\\\": \\\"roaldnefs\\\",\\n      \\\"email\\\": \\\"info@roaldnefs.com\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Chase Giunta\\\",\\n      \\\"login\\\": \\\"chasegiunta\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Dallas, TX\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Zalando\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Lauri Apple\\\",\\n      \\\"login\\\": \\\"LappleApple\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Berlin; Twitter @lauritaapplez\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Meitar M.\\\",\\n      \\\"login\\\": \\\"meitar\\\",\\n      \\\"email\\\": \\\"meitarm+github@gmail.com\\\",\\n      \\\"location\\\": \\\"https://cyberbusking.org/\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"angrykoala\\\",\\n      \\\"name\\\": \\\"Andr\\\\u00e9s\\\",\\n      \\\"login\\\": \\\"angrykoala\\\",\\n      \\\"email\\\": \\\"angrykoala@outlook.es\\\",\\n      \\\"location\\\": \\\"Madrid & Granada, Spain\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Ademola Adegbuyi\\\",\\n      \\\"login\\\": \\\"ooade\\\",\\n      \\\"email\\\": \\\"ooade96@gmail.com\\\",\\n      \\\"location\\\": \\\"Lagos, Nigeria\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Joan Boixad\\\\u00f3s\\\",\\n      \\\"login\\\": \\\"mezod\\\",\\n      \\\"email\\\": \\\"mezood@gmail.com\\\",\\n      \\\"location\\\": \\\"Barcelona, Catalonia\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@PrincetonUniversity\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sheon Han\\\",\\n      \\\"login\\\": \\\"sheonhan\\\",\\n      \\\"email\\\": \\\"sheon.han@gmail.com\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Miguel Piedrafita\\\",\\n      \\\"login\\\": \\\"m1guelpf\\\",\\n      \\\"email\\\": \\\"github@miguelpiedrafita.com\\\",\\n      \\\"location\\\": \\\"Spain\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Craig Davison\\\",\\n      \\\"login\\\": \\\"davisonio\\\",\\n      \\\"email\\\": \\\"craig@davison.io\\\",\\n      \\\"location\\\": \\\"Hampshire, UK\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Yandex\\\",\\n      \\\"stackoverflow_login\\\": \\\"vitalets\\\",\\n      \\\"name\\\": \\\"Vitaliy Potapov\\\",\\n      \\\"login\\\": \\\"vitalets\\\",\\n      \\\"email\\\": \\\"noginsk@rambler.ru\\\",\\n      \\\"location\\\": \\\"Moscow\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Lingewoud B.V.\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Pim Snel\\\",\\n      \\\"login\\\": \\\"mipmip\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"arbox\\\",\\n      \\\"name\\\": \\\"Andrei Beliankou\\\",\\n      \\\"login\\\": \\\"arbox\\\",\\n      \\\"email\\\": \\\"arbox@yandex.com\\\",\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"k4m4\\\",\\n      \\\"name\\\": \\\"Nikolaos Kamarinakis\\\",\\n      \\\"login\\\": \\\"k4m4\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Athens, Greece\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@socialcopsdev\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Akash Tandon\\\",\\n      \\\"login\\\": \\\"analyticalmonk\\\",\\n      \\\"email\\\": \\\"akashtndn.acm@gmail.com\\\",\\n      \\\"location\\\": \\\"India\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Fabian-Robert St\\\\u00f6ter\\\",\\n      \\\"login\\\": \\\"faroit\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Europe\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@ExodusMovement \\\",\\n      \\\"stackoverflow_login\\\": \\\"RyanZim\\\",\\n      \\\"name\\\": \\\"Ryan Zimmerman\\\",\\n      \\\"login\\\": \\\"RyanZim\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"East Earl, PA\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@mntnr \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Richard Littauer\\\",\\n      \\\"login\\\": \\\"RichardLitt\\\",\\n      \\\"email\\\": \\\"richard.littauer@gmail.com\\\",\\n      \\\"location\\\": \\\"Montr\\\\u00e9al\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@liferay \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Victor Laerte Oliveira\\\",\\n      \\\"login\\\": \\\"victorlaerte\\\",\\n      \\\"email\\\": \\\"victorlaertedoliveira@gmail.com\\\",\\n      \\\"location\\\": \\\"Recife, Pernambuco - Brazil\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Xiao Hanyu\\\",\\n      \\\"login\\\": \\\"xiaohanyu\\\",\\n      \\\"email\\\": \\\"xiaohanyu1988@gmail.com\\\",\\n      \\\"location\\\": \\\"Singapore\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@AOEpeople \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"DavidLamabuer\\\",\\n      \\\"login\\\": \\\"DavidLambauer\\\",\\n      \\\"email\\\": \\\"mail@davidlambauer.de\\\",\\n      \\\"location\\\": \\\"Germany\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@imagemin @yeoman\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Kevin M\\\\u00e5rtensson\\\",\\n      \\\"login\\\": \\\"kevva\\\",\\n      \\\"email\\\": \\\"kevinmartensson@gmail.com\\\",\\n      \\\"location\\\": \\\"Sweden\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Matthew Vita\\\",\\n      \\\"login\\\": \\\"MatthewVita\\\",\\n      \\\"email\\\": \\\"matthewvita@live.com\\\",\\n      \\\"location\\\": \\\"Los Angeles, US\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null,\\n      \\\"login\\\": \\\"kud1ing\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Germany, pretty central\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"De Voorhoede\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Jasper Moelker\\\",\\n      \\\"login\\\": \\\"jbmoelker\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"Awkward\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"David van Leeuwen\\\",\\n      \\\"login\\\": \\\"davidvanleeuwen\\\",\\n      \\\"email\\\": \\\"david@madeawkward.com\\\",\\n      \\\"location\\\": \\\"The Netherlands\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Boik\\\",\\n      \\\"login\\\": \\\"qazbnm456\\\",\\n      \\\"email\\\": \\\"boik@tdohacker.org\\\",\\n      \\\"location\\\": \\\"Taiwan\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Quentin Goinaud\\\",\\n      \\\"login\\\": \\\"armaldio\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"France\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Mislav Cimper\\\\u0161ak\\\",\\n      \\\"login\\\": \\\"mislavcimpersak\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Zagreb, Croatia\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Spencer\\\",\\n      \\\"login\\\": \\\"sjfricke\\\",\\n      \\\"email\\\": \\\"sjfricke@wisc.edu\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"Absent Software\\\",\\n      \\\"stackoverflow_login\\\": \\\"quangv\\\",\\n      \\\"name\\\": \\\"Quang Van\\\",\\n      \\\"login\\\": \\\"quangv\\\",\\n      \\\"email\\\": \\\"quang@absentsoft.com\\\",\\n      \\\"location\\\": \\\"Central Mass.\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Grzesiek W\\\",\\n      \\\"login\\\": \\\"kminek\\\",\\n      \\\"email\\\": \\\"kontakt@kminek.pl\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Peter Matseykanets\\\",\\n      \\\"login\\\": \\\"pmatseykanets\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Columbia, MD\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@TipeIO\\\",\\n      \\\"stackoverflow_login\\\": \\\"gdi2290\\\",\\n      \\\"name\\\": \\\"PatrickJS [tipe.io]\\\",\\n      \\\"login\\\": \\\"gdi2290\\\",\\n      \\\"email\\\": \\\"github@gdi2290.com\\\",\\n      \\\"location\\\": \\\"San Francisco, CA\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Adrian Baran\\\",\\n      \\\"login\\\": \\\"bouzlibop\\\",\\n      \\\"email\\\": \\\"bouzlibop@gmail.com\\\",\\n      \\\"location\\\": \\\"Krak\\\\u00f3w\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Joaqu\\\\u00edn Serna\\\",\\n      \\\"login\\\": \\\"BubuAnabelas\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Giedrius Jaloveckas\\\",\\n      \\\"login\\\": \\\"podo\\\",\\n      \\\"email\\\": \\\"g.jaloveckas@gmail.com\\\",\\n      \\\"location\\\": \\\"Vilnius, Lithuania\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"University of Waterloo\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Terry Taewoong Um\\\",\\n      \\\"login\\\": \\\"terryum\\\",\\n      \\\"email\\\": \\\"terry.t.um@gmail.com\\\",\\n      \\\"location\\\": \\\"Waterloo, ON, Canada\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@Integration-Alpha\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Lucas Bassetti\\\",\\n      \\\"login\\\": \\\"LucasBassetti\\\",\\n      \\\"email\\\": \\\"lucasbr.dafonseca@gmail.com\\\",\\n      \\\"location\\\": \\\"Vit\\\\u00f3ria - ES\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"James Osborn\\\",\\n      \\\"login\\\": \\\"TheJambo\\\",\\n      \\\"email\\\": \\\"james@james.am\\\",\\n      \\\"location\\\": \\\"Cambridge, United Kingdom\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Darshak Parikh\\\",\\n      \\\"login\\\": \\\"dar5hak\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Pune, India\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@iiitv @fossasia @appbaseio\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Avi Aryan\\\",\\n      \\\"login\\\": \\\"aviaryan\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Gandhinagar, India\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@php-earth \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Peter Kokot\\\",\\n      \\\"login\\\": \\\"petk\\\",\\n      \\\"email\\\": \\\"peterkokot@gmail.com\\\",\\n      \\\"location\\\": \\\"Area 51\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"d3viant0ne\\\",\\n      \\\"name\\\": \\\"Joshua Wiens\\\",\\n      \\\"login\\\": \\\"d3viant0ne\\\",\\n      \\\"email\\\": \\\"wiens.joshua@gmail.com\\\",\\n      \\\"location\\\": \\\"Twitter - @d3viant0ne \\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@activetheory\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Terkel\\\",\\n      \\\"login\\\": \\\"terkelg\\\",\\n      \\\"email\\\": \\\"terkel@terkel.com\\\",\\n      \\\"location\\\": \\\"Los Angeles, CA\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Micromata GmbH\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Michael K\\\\u00fchnel\\\",\\n      \\\"login\\\": \\\"mischah\\\",\\n      \\\"email\\\": \\\"mail@michael-kuehnel.de\\\",\\n      \\\"location\\\": \\\"Kassel, Germany\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Kaspar Emanuel\\\",\\n      \\\"login\\\": \\\"kasbah\\\",\\n      \\\"email\\\": \\\"kaspar.emanuel@gmail.com\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"JesseTG\\\",\\n      \\\"name\\\": \\\"Jesse Talavera-Greenberg\\\",\\n      \\\"login\\\": \\\"JesseTG\\\",\\n      \\\"email\\\": \\\"jessetalavera@aol.com\\\",\\n      \\\"location\\\": \\\"New York, NY\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Binary Level\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Spiros Gerokostas\\\",\\n      \\\"login\\\": \\\"sger\\\",\\n      \\\"email\\\": \\\"spiros.gerokostas@gmail.com\\\",\\n      \\\"location\\\": \\\"Athens\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Timo Furrer\\\",\\n      \\\"login\\\": \\\"timofurrer\\\",\\n      \\\"email\\\": \\\"tuxtimo@gmail.com\\\",\\n      \\\"location\\\": \\\"__switzerland__\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"University of Texas at Austin\\\",\\n      \\\"stackoverflow_login\\\": \\\"harpribot\\\",\\n      \\\"name\\\": \\\"Harshal Priyadarshi\\\",\\n      \\\"login\\\": \\\"harpribot\\\",\\n      \\\"email\\\": \\\"harshal.priyadarshi@utexas.edu\\\",\\n      \\\"location\\\": \\\"Austin, TX\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Aliaksandr Belik\\\",\\n      \\\"login\\\": \\\"aliesbelik\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Belarus\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@wearespindle \\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Henk\\\",\\n      \\\"login\\\": \\\"hbokh\\\",\\n      \\\"email\\\": \\\"hbokhoven@gmail.com\\\",\\n      \\\"location\\\": \\\"Groningen, the Netherlands\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"Web Semantics, Inc.\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Adnan M.Sagar, PhD\\\",\\n      \\\"login\\\": \\\"websemantics\\\",\\n      \\\"email\\\": \\\"adnan@websemantics.ca\\\",\\n      \\\"location\\\": \\\"Toronto, Canada\\\"\\n   },\\n   {\\n      \\\"company\\\": \\\"@Dropbox\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sergei Vorobev\\\",\\n      \\\"login\\\": \\\"vors\\\",\\n      \\\"email\\\": null,\\n      \\\"location\\\": \\\"Seattle, WA\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Nicole Saidy\\\",\\n      \\\"login\\\": \\\"nicolesaidy\\\",\\n      \\\"email\\\": \\\"nicolesaidy@gmail.com\\\",\\n      \\\"location\\\": null\\n   },\\n   {\\n      \\\"company\\\": \\\"@Famolus \\\",\\n      \\\"stackoverflow_login\\\": \\\"tandavas\\\",\\n      \\\"name\\\": \\\"Thanakron Tandavas\\\",\\n      \\\"login\\\": \\\"tandavas\\\",\\n      \\\"email\\\": \\\"tandavas@famolus.com\\\",\\n      \\\"location\\\": \\\"Bangkok, Thailand\\\"\\n   },\\n   {\\n      \\\"company\\\": null,\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Nir Galon\\\",\\n      \\\"login\\\": \\\"nirgn975\\\",\\n      \\\"email\\\": \\\"nir@galon.io\\\",\\n      \\\"location\\\": \\\"Israel\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_awesome.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"[\\n   {\\n      \\\"location\\\": \\\"Pittsburgh, PA\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"flacjacket\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sean Vig\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View, CA\\\",\\n      \\\"company\\\": \\\"@google @tensorflow \\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"frankchn\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Frank Chen\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"web-flow\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"GitHub Web Flow\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"pavelchristof@gmail.com\\\",\\n      \\\"login\\\": \\\"pavelchristof\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Pavel Christof\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"South Korea\\\",\\n      \\\"company\\\": \\\"Seoul National University\\\",\\n      \\\"email\\\": \\\"me@taehoonlee.com\\\",\\n      \\\"login\\\": \\\"taehoonlee\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Taehoon Lee\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"tensorflower-gardener\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"TensorFlower Gardener\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Sunnyvale, CA\\\",\\n      \\\"company\\\": \\\"Azul Systems\\\",\\n      \\\"email\\\": \\\"sanjoy@playingwithpointers.com\\\",\\n      \\\"login\\\": \\\"sanjoy\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sanjoy Das\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"case540\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Michael Case\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"wujingyue\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"derek.murray@gmail.com\\\",\\n      \\\"login\\\": \\\"mrry\\\",\\n      \\\"stackoverflow_login\\\": \\\"mrry\\\",\\n      \\\"name\\\": \\\"Derek Murray\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"New York City\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"langmore\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Ian Langmore\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Laniakea Supercluster\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"caisq\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Shanqing Cai\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"San Francisco\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"martinwicke\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Martin Wicke\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"ispirmustafa\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": \\\"San Francisco\\\",\\n      \\\"company\\\": \\\"@google \\\",\\n      \\\"email\\\": \\\"rohan100jain@gmail.com\\\",\\n      \\\"login\\\": \\\"rohan100jain\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Rohan Jain\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"sb2nov\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sourabh Bajaj\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"New Mexico\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"jimpallomeni\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"John Impallomeni\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"gunan\\\",\\n      \\\"stackoverflow_login\\\": \\\"gunan\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": \\\"Munich, Germany\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"vladmos\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Vladimir Moskva\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"hawkinsp\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Peter Hawkins\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"jpienaar\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"chris@ckennelly.com\\\",\\n      \\\"login\\\": \\\"ckennelly\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Chris Kennelly\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"asimshankar\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Asim Shankar\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"allenlavoie\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Allen Lavoie\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View, CA\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"rryan\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"RJ Skerry-Ryan\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"xiejw0217@gmail.com\\\",\\n      \\\"login\\\": \\\"xiejw\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"xiejw\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"annarev\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": \\\"New York\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"chris1tava@gmail.com\\\",\\n      \\\"login\\\": \\\"ctava\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Chris Tava\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"San Diego, CA\\\",\\n      \\\"company\\\": \\\"UCSD\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"chrisdonahue\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Chris Donahue\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Chicago, IL, US\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"terrytangyuan\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Yuan (Terry) Tang\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"company\\\": \\\"@tensorflow @google\\\",\\n      \\\"email\\\": \\\"vomjom@vomjom.net\\\",\\n      \\\"login\\\": \\\"jhseu\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Jonathan Hseu\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": \\\"@google \\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"ebrevdo\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": null\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"isaprykin\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Igor\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View, CA\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"jlebar\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Justin Lebar\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"United States\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"sguada\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Sergio Guadarrama\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"London, UK\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"anight\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Andrei Nigmatulin\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Ithaca, NY, USA\\\",\\n      \\\"company\\\": \\\"Cornell University\\\",\\n      \\\"email\\\": \\\"andru@cs.cornell.edu\\\",\\n      \\\"login\\\": \\\"andrewcmyers\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Andrew Myers\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"San Francisco, CA\\\",\\n      \\\"company\\\": \\\".\\\",\\n      \\\"email\\\": \\\"yaroslavvb@gmail.com\\\",\\n      \\\"login\\\": \\\"yaroslavvb\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Yaroslav Bulatov\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Beijing, China.\\\",\\n      \\\"company\\\": \\\"weibo, sina.\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"facaiy\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Yan Facai (\\\\u989c\\\\u53d1\\\\u624d)\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": \\\"@tensorflow \\\",\\n      \\\"email\\\": \\\"akshayka@cs.stanford.edu\\\",\\n      \\\"login\\\": \\\"akshayka\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Akshay Agrawal\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"saeta\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Brennan Saeta\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View, CA, USA\\\",\\n      \\\"company\\\": \\\"Google\\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"aselle\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Andrew Selle\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": \\\"@google \\\",\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"learyg\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"Chris Leary\\\"\\n   },\\n   {\\n      \\\"location\\\": \\\"Mountain View, CA\\\",\\n      \\\"company\\\": null,\\n      \\\"email\\\": null,\\n      \\\"login\\\": \\\"yifeif\\\",\\n      \\\"stackoverflow_login\\\": \\\"yifeif\\\",\\n      \\\"name\\\": \\\"Yifei Feng\\\"\\n   },\\n   {\\n      \\\"location\\\": null,\\n      \\\"company\\\": null,\\n      \\\"email\\\": \\\"dev@davidsoergel.com\\\",\\n      \\\"login\\\": \\\"davidsoergel\\\",\\n      \\\"stackoverflow_login\\\": \\\"null\\\",\\n      \\\"name\\\": \\\"David Soergel\\\"\\n   }\\n]\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/Info/git_info_list.json\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    app = '?per_page=100&client_id=8c3d71c8826d42e7cdf6' \\\\\\n          '&client_secret=ae3a7ca2c74dffbf9558fff3b367e32e22140547'\\n    res = requests.get(url+app)\\n    res.encoding = 'utf-8'\\n    info = res.json()\\n    return info\\n\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    cTime = time.time()\\n    print(\\\"Getting info of users in the commit history...\\\")\\n    for item in developer_info:\\n        print(item)\\n        author_api = (item[\\\"author\\\"][\\\"url\\\"] if not item[\\\"author\\\"] == None else \\\"null\\\")\\n        committer_api = (item[\\\"committer\\\"][\\\"url\\\"] if not item[\\\"committer\\\"] == None else \\\"null\\\")\\n\\n        if not author_api == \\\"null\\\":\\n            author_info = request_url(author_api)\\n            author_info = extract_dict(author_info)\\n            Info.append(author_info)\\n\\n        if not committer_api == \\\"null\\\":\\n            committer_info = request_url(committer_api)\\n            committer_info = extract_dict(committer_info)\\n            Info.append(committer_info)\\n\\n    print(time.time() - cTime)\\n    Info = delete_duplicate(Info)\\n    return Info\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import urllib\\nimport Get_Info.name_form as nf\\n\\ndef request_api(api):\\n    user_info = requests.get(api)\\n    user_info = user_info.json()\\n    return user_info\\n\\ndef request_source(source_url):\\n    request2 = urllib.request.Request(source_url)\\n    request2.add_header('user-agent', 'Mozilla/5.0')\\n    response2 = urllib.request.urlopen(request2)\\n    html2 = response2.read()\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"    default_info = {\\\"display_name\\\":\\\"\\\",\\\"location\\\":\\\"\\\",\\\"user_id\\\":0}\\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\\\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\\\\n               '&site=stackoverflow&key=ZEaUTt2btGSROV8q3NeOQg(('.format(name,name)\\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\\n    #try:\\n    info = request_api(user_api + app_key)\\n    print(user_api)\\n    user_info = info[\\\"items\\\"]\\n    if not user_info == None:\\n        for item in user_info:\\n            dict_info = {\\\"display_name\\\": item['display_name'],\\n                         \\\"location\\\": (item[\\\"location\\\"] if \\\"location\\\" in item.keys() else \\\"null\\\"),\\n                         \\\"user_id\\\": item[\\\"user_id\\\"]}\\n            Info.append(dict_info)\\n        Info = gt.delete_duplicate(Info)\\n        return Info\\n    else:\\n        return default_info\\n\\ndef GetGitAccount(user_id):\\n    default = \\\"null\\\"\\n    if not user_id == None:\\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\\n        user_source = request_source(stk_url)\\n        # user_source = request_url(stk_url)\\n        user_href = re.findall(r\\\"<a.*?href=.*?<\\\\/a>\\\", user_source, re.I | re.S | re.M)\\n        # find it directly?\\n        git_account = None\\n        for href in user_href:\\n            if 'https://github.com/' in href:\\n                git_account = re.findall('href\\\\=\\\\\\\"https\\\\:\\\\/\\\\/github\\\\.com\\\\/(.*?)\\\\\\\"', href, re.S)\\n                git_account = git_account[0]\\n                print(git_account)\\n        if not git_account == None:\\n            return git_account\\n        else:\\n            return default\\n    else:\\n        return default\\n\\ndef match_info(git_info):\\n    default_info = []\\n    new_info = []\\n    for git_developer in git_info:\\n        possible_name = nf.name_form(git_developer[\\\"name\\\"], git_developer[\\\"login\\\"])\\n        for name in possible_name:\\n            # the info of developers with the same name but different info\\n            stk_info = InfoByName(name)\\n            print(stk_info)\\n            if not stk_info == default_info:\\n                for stk_developer in stk_info:\\n                    user_id = stk_developer['user_id']\\n                    git_account = GetGitAccount(user_id)\\n                    if git_account == git_developer[\\\"login\\\"]:\\n                        git_developer[\\\"stackoverflow_login\\\"] = git_account\\n                        break\\n                if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n                    break\\n            else:\\n                break\\n\\n        if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n            print(\\\"The Stack Overflow display_name for github user {} is {}\\\".format(git_developer[\\\"name\\\"],git_developer['stackoverflow_login']))\\n        else:\\n            print(\\\"The Stack Overflow display_name for github user {} not found\\\".format(git_developer[\\\"name\\\"]))\\n\\n        new_info.append(git_developer)\\n    return new_info\\n\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import Get_Info.name_form as nf\\nimport time\\nimport json\\nimport types\\n\\n# git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\\n# # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\n# git_info = gt.get_info(git_api)\\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_awesome.json'\\n# cTime = time.time()\\n# print(\\\"Dumping the info...\\\")\\n# with open(info_file, 'w') as ctfile:\\n#     json.dump(git_info, ctfile, indent=3)\\n# print(time.time() - cTime)\\n\\nf = open(info_file,encoding='utf-8')\\ngit_info = json.load(f)\\nstk_count = total_count = 0\\n\\nnew_info = st.match_info(git_info)\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(new_info, ctfile, indent=3)\\n\\nfor item in new_info:\\n    if not item[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n        stk_count = stk_count + 1\\n    total_count = total_count +1\\n\\nprint(\\\"The number of developers with Stack Overflow account is {}\\\".format(stk_count))\\nprint(\\\"The number of developers is {}\\\".format(total_count))\\nprint(\\\"Ratio:{}\\\".format(float(stk_count/total_count)))\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n\\ndef name_form(name,login):\\n    \\n    possible_name = [login,name]\\n    return possible_name\\n\\n\",\n      \"commit_date\": \"2017-10-05 18:27:32 +0800\",\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtilities to get some information from github commit history\\n\\\"\\\"\\\"\\n\\nimport re\\n\\n\\ndef get_author(line):\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\semail\\\")\\n    author = regex.findall(line)\\n    return author\\n\\n\\ndef get_email(line):\\n    # TODO: resolve \\\".com.cn\\\" or \\\".edu.cn\\\" case\\n    regex = re.compile(\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\.[a-zA-Z0-9_-]+)\\\")\\n    email = regex.findall(line)\\n    return email\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s+(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\\n        snippet_minus = regex_minus.findall(line)\\n        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\\n            snippet_list.append(snippet[0])\\n    return snippet_list\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\\n        return 1\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\\n#     b_start_line_list = list()\\n#     b_total_line_list = list()\\n#     lines = inp.split(\\\"\\\\n\\\")\\n#     regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n#     regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n#     regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n#     regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n#     for line in lines:\\n#         a_start_line = regex_a_start.findall(line)\\n#         a_total_line = regex_a_total.findall(line)\\n#         b_start_line = regex_b_start.findall(line)\\n#         b_total_line = regex_b_total.findall(line)\\n#         a_start_line_list.extend(a_start_line)\\n#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtilities mapping code snippets of every commit with author\\n\\\"\\\"\\\"\\n\\nimport os\\nfrom commit_history import get_info\\n\\n\\ndef get_code(inp):\\n    code_list = list()\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\" \\\\\\n              \\\"--abbrev-commit -p \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    # print(data)\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        tmp = get_info.get_author(line)\\n        if len(tmp):\\n            commit_author = tmp[0]\\n            tmp = get_info.get_email(line)\\n            if len(tmp):\\n                code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = tmp[0]\\n                code_dict['email'] = commit_email\\n                # print(commit_email)\\n                code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n                code_dict['code_snippet'] = code_snippet\\n                # code_list.append(code_dict)\\n        elif get_info.get_change_section(line):\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = code_snippet\\n            code_list.append(code_dict)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(code['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(code['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        snippet = code[\\\"code_snippet\\\"]\\n        for line in snippet:\\n            print(line)\\n    return code_list\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"import logging\\nimport os\\nimport sys\\n\\nfrom commit_history import mapping\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = mapping.get_code(input_file)\\n\\n\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"First install Clang and pycparser with: \\n\\n    $ sudo apt-get install clang\\n    $ pip install pycparser\\n\\n    \",\n      \"commit_date\": \"2017-10-05 10:11:44 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\nfrom __future__ import print_function\\nfrom pycparser import parse_file, c_ast\\nfrom pycparser.plyparser import Coord\\nfrom PrintAST import AST_preprocess\\nimport json\\nimport sys\\nimport re\\n\\nsys.path.extend(['.', '..'])\\nRE_CHILD_ARRAY = re.compile(r'(.*)\\\\[(.*)\\\\]')\\nRE_INTERNAL_ATTR = re.compile('__.*__')\\n\\nclass CJsonError(Exception):\\n    pass\\n\\n\\ndef memodict(fn):\\n    \\\"\\\"\\\" Fast memoization decorator for a function taking a single argument \\\"\\\"\\\"\\n    class memodict(dict):\\n        def __missing__(self, key):\\n            ret = self[key] = fn(key)\\n            return ret\\n    return memodict().__getitem__\\n\\n\\n@memodict\\ndef child_attrs_of(klass):\\n    \\\"\\\"\\\"\\n    Given a Node class, get a set of child attrs.\\n    Memoized to avoid highly repetitive string manipulation\\n\\n    \\\"\\\"\\\"\\n    non_child_attrs = set(klass.attr_names)\\n    all_attrs = set([i for i in klass.__slots__ if not RE_INTERNAL_ATTR.match(i)])\\n    return all_attrs - non_child_attrs\\n\\n\\ndef to_dict(node):\\n    \\\"\\\"\\\" Recursively convert an ast into dict representation. \\\"\\\"\\\"\\n    klass = node.__class__\\n\\n    result = {}\\n\\n    # Metadata\\n    result['_nodetype'] = klass.__name__\\n\\n    # Local node attributes\\n    for attr in klass.attr_names:\\n        result[attr] = getattr(node, attr)\\n\\n    # Coord object\\n    if node.coord:\\n        result['coord'] = str(node.coord)\\n    else:\\n        result['coord'] = None\\n\\n    # Child attributes\\n    for child_name, child in node.children():\\n        # Child strings are either simple (e.g. 'value') or arrays (e.g. 'block_items[1]')\\n        match = RE_CHILD_ARRAY.match(child_name)\\n        if match:\\n            array_name, array_index = match.groups()\\n            array_index = int(array_index)\\n            # arrays come in order, so we verify and append.\\n            result[array_name] = result.get(array_name, [])\\n            if array_index != len(result[array_name]):\\n                raise CJsonError('Internal ast error. Array {} out of order. '\\n                    'Expected index {}, got {}'.format(\\n                    array_name, len(result[array_name]), array_index))\\n            result[array_name].append(to_dict(child))\\n        else:\\n            result[child_name] = to_dict(child)\\n\\n    # Any child attributes that were missing need \\\"None\\\" values in the json.\\n    for child_attr in child_attrs_of(klass):\\n        if child_attr not in result:\\n            result[child_attr] = None\\n\\n    return result\\n\\n\\ndef to_json(node, **kwargs):\\n    \\\"\\\"\\\" Convert ast node to json string \\\"\\\"\\\"\\n    return json.dumps(to_dict(node), **kwargs)\\n\\n\\ndef file_to_dict(filename):\\n    \\\"\\\"\\\" Load C file into dict representation of ast \\\"\\\"\\\"\\n    ast = parse_file(filename, use_cpp=True)\\n    return to_dict(ast)\\n\\n\\ndef file_to_json(filename, **kwargs):\\n    \\\"\\\"\\\" Load C file into json string representation of ast \\\"\\\"\\\"\\n    ast = parse_file(filename, use_cpp=True)\\n    return to_json(ast, **kwargs)\\n\\n\\ndef _parse_coord(coord_str):\\n    \\\"\\\"\\\" Parse coord string (file:line[:column]) into Coord object. \\\"\\\"\\\"\\n    if coord_str is None:\\n        return None\\n\\n    vals = coord_str.split(':')\\n    vals.extend([None] * 3)\\n    filename, line, column = vals[:3]\\n    return Coord(filename, line, column)\\n\\n\\ndef _convert_to_obj(value):\\n    \\\"\\\"\\\"\\n    Convert an object in the dict representation into an object.\\n    Note: Mutually recursive with from_dict.\\n\\n    \\\"\\\"\\\"\\n    value_type = type(value)\\n    if value_type == dict:\\n        return from_dict(value)\\n    elif value_type == list:\\n        return [_convert_to_obj(item) for item in value]\\n    else:\\n        # String\\n        return value\\n\\n\\ndef from_dict(node_dict):\\n    \\\"\\\"\\\" Recursively build an ast from dict representation \\\"\\\"\\\"\\n    class_name = node_dict.pop('_nodetype')\\n\\n    klass = getattr(c_ast, class_name)\\n\\n    # Create a new dict containing the key-value pairs which we can pass\\n    # to node constructors.\\n    objs = {}\\n    for key, value in node_dict.items():\\n        if key == 'coord':\\n            objs[key] = _parse_coord(value)\\n        else:\\n            objs[key] = _convert_to_obj(value)\\n\\n    # Use keyword parameters, which works thanks to beautifully consistent\\n    # ast Node initializers.\\n    return klass(**objs)\\n\\ndef write_json(file_name):\\n    path = AST_preprocess(file_name)\\n    ast_dict = file_to_dict(path)\\n    ast = from_dict(ast_dict)\\n    ast_json = to_json(ast, sort_keys=True, indent=4)\\n    with open('./example/ast.json', 'w+') as f:\\n        f.write(ast_json)\\n    f.close()\\n\",\n      \"commit_date\": \"2017-10-04 11:55:03 +0800\",\n      \"file\": \"ast/AST2JSON.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\nfrom __future__ import print_function\\nfrom pycparser import c_parser, c_ast\\nfrom PrintAST import AST_preprocess\\nfrom AST2JSON import write_json\\nimport sys\\n\\nfile_name = './example/test.cc'\\nwrite_json(file_name)\\n\\n\\n\",\n      \"commit_date\": \"2017-10-04 11:55:03 +0800\",\n      \"file\": \"ast/GenerateHash.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/python\\n# -*- coding: UTF-8 -*-\\nimport os\\n\\ndef AST_preprocess(code_path):\\n    '''Preprocess of the code. Remove the header files and standard libraries'''\\n    path_new = './example/test_new.cc'\\n    with open(code_path , 'r') as f:\\n        lines = f.readlines()\\n    f.close()\\n\\n    with open(path_new , 'w') as f_new:\\n        for line in lines:\\n            if '#include' in line:\\n                line = '\\\\n'\\n            f_new.write(line)\\n    f_new.close()\\n    return path_new\\n\\ndef AST_print(code_path):\\n    '''Print AST based on command line'''\\n    command = 'clang -Xclang -ast-dump -fsyntax-only ' + path\\n    F = os.popen(command)\\n    print (F.read())\",\n      \"commit_date\": \"2017-10-04 11:55:03 +0800\",\n      \"file\": \"ast/PrintAST.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"# Use abstract syntax tree for code similarity detection\\nAuthor: king-jojo\\n\\nClang is a useful tool to show complete information of the syntax tree of a program. However, in order to find the same pattern of the syntax tree of two different programs, we should tailor the syntax tree to preserve the information we really need. We apply pycparser to generate the shrinked syntax tree and save it in the json format. Next, we will use the json file to work out the hash table of the tree. \\n\\nFirst install Clang and pycparser with: \\n\\n    $ sudo apt-get install clang\\n    $ sudo apt-get install pycparser\\n\\n    \",\n      \"commit_date\": \"2017-10-04 11:55:03 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-04 11:55:03 +0800\",\n      \"file\": \"ast/example/test_new.cc\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file/folder output_dir\\n```\\n\\n## Output\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-03%20at%204.31.52%20PM.png)\\n\",\n      \"commit_date\": \"2017-10-03 16:43:31 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"Zimeng Qiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\npython your_dir_of_main.py input_code_file/folder output_dir\\n```\",\n      \"commit_date\": \"2017-10-03 16:26:55 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"Zimeng Qiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\nAuthor: ch-chiu\\n\\n## Usage\\n\\ncd a folder which is a git repository, then run like this:\\n\\n```\\n%(program)s input_code_file/folder output_dir\\n```\",\n      \"commit_date\": \"2017-10-03 16:26:09 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"Zimeng Qiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"dir_path = os.path.dirname(os.path.realpath(__file__))\\n\\n\\ndef get_author(line):\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\semail\\\")\\n    author = regex.findall(line)\\n    return author\\n\\n\\ndef get_email(line):\\n    # TODO: resolve \\\".com.cn\\\" or \\\".edu.cn\\\" case\\n    regex = re.compile(\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\.[a-zA-Z0-9_-]+)\\\")\\n    email = regex.findall(line)\\n    return email\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s+(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\\n        snippet_minus = regex_minus.findall(line)\\n        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\\n            snippet_list.append(snippet[0])\\n    return snippet_list\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\\n        return 1\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\\n#     b_start_line_list = list()\\n#     b_total_line_list = list()\\n#     lines = inp.split(\\\"\\\\n\\\")\\n#     regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n#     regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n#     regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n#     regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n#     for line in lines:\\n#         a_start_line = regex_a_start.findall(line)\\n#         a_total_line = regex_a_total.findall(line)\\n#         b_start_line = regex_b_start.findall(line)\\n#         b_total_line = regex_b_total.findall(line)\\n#         a_start_line_list.extend(a_start_line)\\n#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\n\\n\\ndef get_code(inp):\\n    code_list = list()\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\" \\\\\\n              \\\"--abbrev-commit -p \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    # print(data)\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        tmp = get_author(line)\\n        if len(tmp):\\n            commit_author = tmp[0]\\n            tmp = get_email(line)\\n            if len(tmp):\\n                code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = tmp[0]\\n                code_dict['email'] = commit_email\\n                # print(commit_email)\\n                code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\n                code_dict['code_snippet'] = code_snippet\\n                # code_list.append(code_dict)\\n        elif get_change_section(line):\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = code_snippet\\n            code_list.append(code_dict)\\n    # (fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list) = get_line_index(data)\\n    # code_data = zip(commit_author, commit_email, fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list)\\n    # code_dict = [{\\\"author\\\": author, \\\"email\\\": email, \\\"a_start_line\\\": a_start_line, \\\"a_total_line\\\": a_total_line,\\n    #                  \\\"b_start_line\\\": b_start_line, \\\"b_total_line\\\": b_total_line}\\n    #              for author, email, a_start_line, a_total_line, b_start_line, b_total_line in code_data]\\n    # print(code_list)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(code['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(code['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        snippet = code[\\\"code_snippet\\\"]\\n        for line in snippet:\\n            print(line)\\n    return code_list\\n\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\",\n      \"commit_date\": \"2017-10-03 16:21:52 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = get_code(input_file)\\n\\n\",\n      \"commit_date\": \"2017-10-03 16:21:52 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\nThe script get_info_git.py is used for dumping the developers' name, login, company, location and e-mail.\\nThe script get_info_stackoverflow.py is used for dumping the developers' display_name, location and github account.\\nThe script name_form.py lists the possible Stack Overflow display_name for a developer found in the github commit history.\\nRun the script main.py and you can get a json file containing developers' info of github and Stack Overflow display_name.\\n\\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username and location of a developer can be obtained, which means we should list different possible usernames for each user in the commit history. Possible name forms need to be found, and the range of related users can only be narrowed by info of location now, which is insufficient.\\n\\nFortunately, the relating github account has been found in the Stack Overflow users' profile, which, however, is not accessible through Stack Overflow API but can be extracted from the source code of the users' profile page, of which the url is something like:\\n\\nhttps://stackoverflow.com/users/user_id\\n\\nThat is to say, we can get the github account using user_id. For the possible username of developers on Stack Overflow, the user_id can be obtained through API. And then the github account can be extracted from the source code of the web page using Regular Expression.\\n\\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish.\\n\\nThe next step is to establish the possible username list using a generally form which can be used for all users.\\n\\nAuthor: AlvinZSJ\",\n      \"commit_date\": \"2017-10-02 22:43:47 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"#package\",\n      \"commit_date\": \"2017-10-02 21:50:34 +0800\",\n      \"file\": \"git/user/Get_Info/__init__.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import requests\\nimport types\\nimport time\\n\\n\\ndef delete_duplicate(dict):\\n    Info = []\\n    for item in dict:\\n        if not item in Info:\\n            Info.append(item)\\n    return Info\\n\\ndef request_url(url):\\n    app = '?per_page=100&client_id=8c3d71c8826d42e7cdf6' \\\\\\n          '&client_secret=ae3a7ca2c74dffbf9558fff3b367e32e22140547'\\n    res = requests.get(url+app)\\n    info = res.json()\\n    return info\\n\\ndef extract_dict(res):\\n    # The info for comparsion with that in other open source community\\n    dict_info = {\\\"name\\\":res[\\\"name\\\"],\\\"login\\\":res[\\\"login\\\"],\\n                 \\\"company\\\":res[\\\"company\\\"],\\\"location\\\":res[\\\"location\\\"],\\n                 \\\"email\\\":res[\\\"email\\\"],\\\"stackoverflow_login\\\":\\\"null\\\"}\\n    return dict_info\\n\\ndef get_info(commit_api):\\n    developer_info = request_url(commit_api)\\n    Info = []\\n    cTime = time.time()\\n    print(\\\"Getting info of users in the commit history...\\\")\\n    for item in developer_info:\\n        author_api = item[\\\"author\\\"][\\\"url\\\"]\\n        committer_api = item[\\\"committer\\\"][\\\"url\\\"]\\n\\n        author_info = request_url(author_api)\\n        author_info = extract_dict(author_info)\\n\\n        committer_info = request_url(committer_api)\\n        committer_info = extract_dict(committer_info)\\n\\n        Info.append(author_info)\\n        Info.append(committer_info)\\n    print(time.time() - cTime)\\n    Info = delete_duplicate(Info)\\n    return Info\\n\\n\",\n      \"commit_date\": \"2017-10-02 21:50:34 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_git.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import Get_Info.get_info_git as gt\\nimport re\\nimport requests\\nimport urllib\\nimport Get_Info.name_form as nf\\n\\ndef request_url(url):\\n    request2 = urllib.request.Request(url)\\n    request2.add_header('user-agent', 'Mozilla/5.0')\\n    response2 = urllib.request.urlopen(request2)\\n    html2 = response2.read()\\n    user_source = html2.decode(\\\"utf8\\\")\\n    response2.close()\\n    return user_source\\n\\ndef InfoByName(name):\\n    Info = []\\n    default_info = {\\\"display_name\\\":\\\"\\\",\\\"location\\\":\\\"\\\",\\\"user_id\\\":0}\\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\\\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\\\\n               '&site=stackoverflow'.format(name,name)\\n    try:\\n        info = request_url(user_api)\\n        user_info = info.json()\\n        user_info = user_info[\\\"items\\\"]\\n        for item in user_info:\\n            dict_info = {\\\"display_name\\\": item['display_name'],\\n                         \\\"location\\\": item[\\\"location\\\"], \\\"user_id\\\": item[\\\"user_id\\\"]}\\n            Info.append(dict_info)\\n        Info = gt.delete_duplicate(Info)\\n        return Info\\n    except:\\n        return default_info\\n\\ndef GetGitAccount(user_id):\\n    default = \\\"null\\\"\\n    if not user_id == None:\\n        try:\\n            stk_url = 'https://stackoverflow.com/users/{}'.format(1732559)\\n            user_source = request_url(stk_url)\\n            # user_source = request_url(stk_url)\\n            user_href = re.findall(r\\\"<a.*?href=.*?<\\\\/a>\\\", user_source, re.I | re.S | re.M)\\n            # find it directly?\\n            for href in user_href:\\n                if 'https://github.com/' in href:\\n                    print(href)\\n                    git_account = re.findall(\\\">(.*?)</a>\\\", href, re.S)\\n                    print(git_account)\\n            if not git_account == None:\\n                return git_account\\n            else:\\n                return default\\n        except:\\n            return default\\n    else:\\n        return default\\n\\ndef match_info(git_info):\\n    default_info = {\\\"display_name\\\": \\\"\\\", \\\"location\\\": \\\"\\\", \\\"user_id\\\": 0}\\n    new_info = []\\n    for git_developer in git_info:\\n        possible_name = nf.name_form(git_developer[\\\"name\\\"], git_developer[\\\"login\\\"])\\n        for name in possible_name:\\n            # the info of developers with the same name but different info\\n            stk_info = InfoByName(name)\\n            if not stk_info == default_info:\\n                for stk_developer in stk_info:\\n                    print(stk_developer)\\n                    user_id = stk_developer['user_id']\\n                    git_account = GetGitAccount(user_id)\\n                    if git_account == git_developer[\\\"login\\\"]:\\n                        git_developer[\\\"stackoverflow_login\\\"] = git_account\\n                        break\\n                if not git_developer[\\\"stackoverflow_login\\\"] == \\\"null\\\":\\n                    print(\\\"The Stack Overflow display_name for github user {} is {}\\\".format(git_developer[\\\"name\\\"]),\\n                          git_account)\\n                    break\\n            else:\\n                print(\\\"The Stack Overflow display_name for github user {} not found\\\".format(git_developer[\\\"name\\\"]))\\n                break\\n        new_info.append(git_developer)\\n    return new_info\\n\\n\\n\\n\\n\",\n      \"commit_date\": \"2017-10-02 21:50:34 +0800\",\n      \"file\": \"git/user/Get_Info/get_info_stackoverflow.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"import Get_Info.get_info_git as gt\\nimport Get_Info.get_info_stackoverflow as st\\nimport Get_Info.name_form as nf\\nimport time\\nimport json\\n\\n\\ngit_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\\ncTime = time.time()\\ngit_info = gt.get_info(git_api)\\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_list.json'\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(git_info, ctfile, indent=3)\\nprint(time.time() - cTime)\\n\\n# f = open(info_file,encoding='utf-8')\\n# git_info = json.load(f)\\n\\nnew_info = st.match_info(git_info)\\nwith open(info_file, 'w') as ctfile:\\n    json.dump(new_info, ctfile, indent=3)\\n\",\n      \"commit_date\": \"2017-10-02 21:50:34 +0800\",\n      \"file\": \"git/user/Get_Info/main.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"shenjia@whu.edu\",\n      \"code_snippet\": \"\\n\\n\\ndef name_form(name,login):\\n    possible_name = [name,login]\\n    return possible_name\\n\\n\",\n      \"commit_date\": \"2017-10-02 21:50:34 +0800\",\n      \"file\": \"git/user/Get_Info/name_form.py\",\n      \"author\": \"AlvinZSJ\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"import logging\\nimport os\\nimport sys\\nimport re\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    data = input_data.read()\\n    return data\\n\\n\\ndef get_author(inp, outp):\\n    author_list = list()\\n    command = \\\"git log --pretty=format:'author: %aN' \\\" + inp\\n    input_data = os.popen(command)\\n    lines = input_data.readlines()\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\n?\\\")\\n    for line in lines:\\n        author = regex.findall(line)[0]\\n        author_list.append(author)\\n    return author_list\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\\n    commit_history = get_code(input_file)\\n    print(commit_history)\\n    commit_author = get_author(input_file, output_dir)\\n    print(commit_author)\\n\\n\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\",\n      \"file\": \"git/history/.idea/history.iml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\",\n      \"file\": \"git/history/.idea/misc.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\",\n      \"file\": \"git/history/.idea/modules.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"259\\\">\\n              <caret line=\\\"38\\\" column=\\\"33\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"38\\\" selection-start-column=\\\"33\\\" selection-end-line=\\\"38\\\" selection-end-column=\\\"33\\\" />\\n              <folding>\\n                <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"commit_date\": \"2017-10-02 19:46:30 +0800\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"259\\\">\\n          <caret line=\\\"38\\\" column=\\\"33\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"38\\\" selection-start-column=\\\"33\\\" selection-end-line=\\\"38\\\" selection-end-column=\\\"33\\\" />\\n          <folding>\\n            <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n          </folding>\",\n      \"commit_date\": \"2017-10-02 19:46:30 +0800\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<module type=\\\"PYTHON_MODULE\\\" version=\\\"4\\\">\\n  <component name=\\\"NewModuleRootManager\\\">\\n    <content url=\\\"file://$MODULE_DIR$\\\" />\\n    <orderEntry type=\\\"inheritedJdk\\\" />\\n    <orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TestRunnerService\\\">\\n    <option name=\\\"projectConfiguration\\\" value=\\\"Nosetests\\\" />\\n    <option name=\\\"PROJECT_TEST_RUNNER\\\" value=\\\"Nosetests\\\" />\\n  </component>\\n</module>\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\",\n      \"file\": \"git/history/.idea/history.iml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectRootManager\\\" version=\\\"2\\\" project-jdk-name=\\\"Python 3.5.2 (~/anaconda3/bin/python)\\\" project-jdk-type=\\\"Python SDK\\\" />\\n</project>\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\",\n      \"file\": \"git/history/.idea/misc.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectModuleManager\\\">\\n    <modules>\\n      <module fileurl=\\\"file://$PROJECT_DIR$/.idea/history.iml\\\" filepath=\\\"$PROJECT_DIR$/.idea/history.iml\\\" />\\n    </modules>\\n  </component>\\n</project>\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\",\n      \"file\": \"git/history/.idea/modules.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ChangeListManager\\\">\\n    <list default=\\\"true\\\" id=\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n    <option name=\\\"EXCLUDED_CONVERTED_TO_IGNORED\\\" value=\\\"true\\\" />\\n    <option name=\\\"TRACKING_ENABLED\\\" value=\\\"true\\\" />\\n    <option name=\\\"SHOW_DIALOG\\\" value=\\\"false\\\" />\\n    <option name=\\\"HIGHLIGHT_CONFLICTS\\\" value=\\\"true\\\" />\\n    <option name=\\\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\\\" value=\\\"false\\\" />\\n    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CreatePatchCommitExecutor\\\">\\n    <option name=\\\"PATCH_PATH\\\" value=\\\"\\\" />\\n  </component>\\n  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"34\\\">\\n              <caret line=\\\"23\\\" column=\\\"15\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"23\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"23\\\" selection-end-column=\\\"15\\\" />\\n              <folding>\\n                <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n    </leaf>\\n  </component>\\n  <component name=\\\"FileTemplateManagerImpl\\\">\\n    <option name=\\\"RECENT_TEMPLATES\\\">\\n      <list>\\n        <option value=\\\"Python Script\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"IdeDocumentHistory\\\">\\n    <option name=\\\"CHANGED_PATHS\\\">\\n      <list>\\n        <option value=\\\"$PROJECT_DIR$/main.py\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"ProjectFrameBounds\\\">\\n    <option name=\\\"x\\\" value=\\\"4\\\" />\\n    <option name=\\\"y\\\" value=\\\"22\\\" />\\n    <option name=\\\"width\\\" value=\\\"1436\\\" />\\n    <option name=\\\"height\\\" value=\\\"878\\\" />\\n  </component>\\n  <component name=\\\"ProjectView\\\">\\n    <navigator currentView=\\\"ProjectPane\\\" proportions=\\\"\\\" version=\\\"1\\\">\\n      <flattenPackages />\\n      <showMembers />\\n      <showModules />\\n      <showLibraryContents />\\n      <hideEmptyPackages />\\n      <abbreviatePackageNames />\\n      <autoscrollToSource />\\n      <autoscrollFromSource />\\n      <sortByType />\\n      <manualOrder />\\n      <foldersAlwaysOnTop value=\\\"true\\\" />\\n    </navigator>\\n    <panes>\\n      <pane id=\\\"Scope\\\" />\\n      <pane id=\\\"ProjectPane\\\">\\n        <subPane>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"example\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n        </subPane>\\n      </pane>\\n      <pane id=\\\"Scratches\\\" />\\n    </panes>\\n  </component>\\n  <component name=\\\"PropertiesComponent\\\">\\n    <property name=\\\"settings.editor.selected.configurable\\\" value=\\\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\\\" />\\n  </component>\\n  <component name=\\\"RunManager\\\" selected=\\\"Python.main\\\">\\n    <configuration default=\\\"false\\\" name=\\\"main\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\" temporary=\\\"true\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"$PROJECT_DIR$\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"$PROJECT_DIR$/main.py\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"README.md output\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"Tox\\\" factoryName=\\\"Tox\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Attests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Doctests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Nosetests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Unittests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PUREUNITTEST\\\" value=\\\"true\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"py.test\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"testToRun\\\" value=\\\"\\\" />\\n      <option name=\\\"keywords\\\" value=\\\"\\\" />\\n      <option name=\\\"params\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <option name=\\\"USE_KEYWORD\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <list size=\\\"1\\\">\\n      <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.main\\\" />\\n    </list>\\n    <recent_temporary>\\n      <list size=\\\"1\\\">\\n        <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.main\\\" />\\n      </list>\\n    </recent_temporary>\\n  </component>\\n  <component name=\\\"ShelveChangesManager\\\" show_recycled=\\\"false\\\">\\n    <option name=\\\"remove_strategy\\\" value=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TaskManager\\\">\\n    <task active=\\\"true\\\" id=\\\"Default\\\" summary=\\\"Default task\\\">\\n      <changelist id=\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n      <created>1506936120824</created>\\n      <option name=\\\"number\\\" value=\\\"Default\\\" />\\n      <option name=\\\"presentableId\\\" value=\\\"Default\\\" />\\n      <updated>1506936120824</updated>\\n    </task>\\n    <servers />\\n  </component>\\n  <component name=\\\"ToolWindowManager\\\">\\n    <frame x=\\\"4\\\" y=\\\"22\\\" width=\\\"1436\\\" height=\\\"878\\\" extended-state=\\\"6\\\" />\\n    <editor active=\\\"true\\\" />\\n    <layout>\\n      <window_info id=\\\"Project\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.24946997\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"TODO\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"6\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Event Log\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.32951653\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Debug\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.3994911\\\" sideWeight=\\\"0.5\\\" order=\\\"3\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Cvs\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"4\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Hierarchy\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"Message\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Commander\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Inspection\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"5\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Ant Build\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n    </layout>\\n  </component>\\n  <component name=\\\"VcsContentAnnotationSettings\\\">\\n    <option name=\\\"myLimit\\\" value=\\\"2678400000\\\" />\\n  </component>\\n  <component name=\\\"XDebuggerManager\\\">\\n    <breakpoint-manager>\\n      <breakpoints>\\n        <line-breakpoint enabled=\\\"true\\\" suspend=\\\"THREAD\\\" type=\\\"python-line\\\">\\n          <url>file://$PROJECT_DIR$/main.py</url>\\n          <line>23</line>\\n          <option name=\\\"timeStamp\\\" value=\\\"2\\\" />\\n        </line-breakpoint>\\n      </breakpoints>\\n      <option name=\\\"time\\\" value=\\\"3\\\" />\\n    </breakpoint-manager>\\n    <watches-manager />\\n  </component>\\n  <component name=\\\"editorHistoryManager\\\">\\n    <entry file=\\\"file://$PROJECT_DIR$/example/rusthon_log.txt\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"LargeFileEditor\\\">\\n        <state />\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$USER_HOME$/anaconda3/lib/python3.5/encodings/ascii.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"210\\\">\\n          <caret line=\\\"25\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"25\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"25\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$USER_HOME$/anaconda3/lib/python3.5/codecs.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"148\\\">\\n          <caret line=\\\"320\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"320\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"320\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"34\\\">\\n          <caret line=\\\"23\\\" column=\\\"15\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"23\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"23\\\" selection-end-column=\\\"15\\\" />\\n          <folding>\\n            <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n  </component>\\n</project>\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"{hash: f21727c ref:  (HEAD -> master) commit_title: Add-ast-part-and-generate-ast-of-the-program-based-on-clang date: 1506932084 author: <Zhenghui Jin> email: <zjin@vmware.com>}\\n{hash: 9558691 ref:  commit_title: update date: 1506751165 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 4c8f4f0 ref:  commit_title: update date: 1506751106 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 1f567c2 ref:  commit_title: update date: 1506751008 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 3e6cb9c ref:  commit_title: update date: 1506749090 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 4f04f7e ref:  commit_title: update date: 1506748850 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: fc3971a ref:  commit_title: Create-README.md date: 1506748071 author: <Zhe Wang> email: <a63188722@163.com>}\\n{hash: 018bd60 ref:  commit_title: Initial-commit date: 1506746697 author: <Zhe Wang> email: <a63188722@163.com>}\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\",\n      \"file\": \"git/history/example/record.json\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"code_snippet\": \"* f21727c  (HEAD -> master) Add-ast-part-and-generate-ast-of-the-program-based-on-clang 3 hours ago <Zhenghui Jin> <zjin@vmware.com>| \\n| diff --git a/ast/PrintAST.py b/ast/PrintAST.py\\n| new file mode 100644\\n| index 0000000..d2ab21d\\n| --- /dev/null\\n| +++ b/ast/PrintAST.py\\n| @@ -0,0 +1,25 @@\\n| +#!/usr/bin/env python\\n| +import os\\n| +\\n| +'''\\n| +    Preprocess of the code. Remove the header files and standard libraries\\n| +'''\\n| +code_path = './example/test.cc'\\n| +path_new = './example/test_new.cc'\\n| +with open(code_path , 'r') as f:\\n| +    lines = f.readlines()\\n| +f.close()\\n| +\\n| +with open(path_new , 'w') as f_new:\\n| +    for line in lines:\\n| +        if '#include' in line:\\n| +            continue\\n| +        f_new.write(line)\\n| +f_new.close()\\n| +\\n| +'''\\n| +    Print AST based on command line\\n| +'''\\n| +command = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\\n| +F = os.popen(command)\\n| +print F.read()\\n| diff --git a/ast/README.md b/ast/README.md\\n| new file mode 100644\\n| index 0000000..59999c1\\n| --- /dev/null\\n| +++ b/ast/README.md\\n| @@ -0,0 +1,10 @@\\n| +# Generate abstract syntax tree \\n| +Author: king-jojo\\n| +\\n| +First install Clang with: \\n| +\\n| +    $ sudo apt-get install clang\\n| +\\n| +Usage: \\n| +\\n| +    \\n| diff --git a/ast/example/test.cc b/ast/example/test.cc\\n| new file mode 100644\\n| index 0000000..33955df\\n| --- /dev/null\\n| +++ b/ast/example/test.cc\\n| @@ -0,0 +1,6 @@\\n| +#include <stdio.h>\\n| +int f(int x){\\n| +  int y = (x * 2);\\n| +  int result = (y / 42);\\n| +  return result;\\n| +}\\n| diff --git a/ast/example/test_new.cc b/ast/example/test_new.cc\\n| new file mode 100644\\n| index 0000000..52c0681\\n| --- /dev/null\\n| +++ b/ast/example/test_new.cc\\n| @@ -0,0 +1,5 @@\\n| +int f(int x){\\n| +  int y = (x * 2);\\n| +  int result = (y / 42);\\n| +  return result;\\n| +}\\n\\n* 9558691  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/user/README.md b/git/user/README.md\\n| index 1568efa..2337cca 100644\\n| --- a/git/user/README.md\\n| +++ b/git/user/README.md\\n| @@ -1,3 +1,3 @@\\n|  # Fetch Other Websites Account via Git Account\\n|  \\n| -Author: AlvinZSJt\\n| +Author: AlvinZSJ\\n\\n* 4c8f4f0  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/history/README.md b/git/history/README.md\\n| index bf31411..f2fad88 100644\\n| --- a/git/history/README.md\\n| +++ b/git/history/README.md\\n| @@ -1,3 +1,2 @@\\n| -# Git Commit History\\n| -\\n| +# Map Git Commit History to Authors\\n|  Author: ch-chiu\\n| diff --git a/git/user/README.md b/git/user/README.md\\n| index 384c03d..1568efa 100644\\n| --- a/git/user/README.md\\n| +++ b/git/user/README.md\\n| @@ -1,3 +1,3 @@\\n| -# Fetch Other Websites Account via Git Accoun\\n| +# Fetch Other Websites Account via Git Account\\n|  \\n|  Author: AlvinZSJt\\n\\n* 1f567c2  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/history/README.md b/git/history/README.md\\n| new file mode 100644\\n| index 0000000..bf31411\\n| --- /dev/null\\n| +++ b/git/history/README.md\\n| @@ -0,0 +1,3 @@\\n| +# Git Commit History\\n| +\\n| +Author: ch-chiu\\n| diff --git a/git/user/README.md b/git/user/README.md\\n| new file mode 100644\\n| index 0000000..384c03d\\n| --- /dev/null\\n| +++ b/git/user/README.md\\n| @@ -0,0 +1,3 @@\\n| +# Fetch Other Websites Account via Git Accoun\\n| +\\n| +Author: AlvinZSJt\\n\\n* 3e6cb9c  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/README.md b/README.md\\n| index ab89bcc..b69aded 100644\\n| --- a/README.md\\n| +++ b/README.md\\n| @@ -11,9 +11,7 @@ Our purpose is to make trace open source project more efficient and simple. To r\\n|  ## Project Outline\\n|  \\n|  The whole workflow contains 3 steps.\\n| -\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| -\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\n| -some other trees of code, another way is applying git log api to mapping code with developer.\\n| -\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\n| -visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n| +* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| +* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\\n| +* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n|  \\n\\n* 4f04f7e  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/README.md b/README.md\\n| index ad7247e..ab89bcc 100644\\n| --- a/README.md\\n| +++ b/README.md\\n| @@ -1 +1,19 @@\\n|  # codeTracker\\n| +\\n| +## Obejective\\n| +\\n| +The structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\\n| +\\n| +## Goals\\n| +\\n| +Our purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\\n| +\\n| +## Project Outline\\n| +\\n| +The whole workflow contains 3 steps.\\n| +\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| +\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\n| +some other trees of code, another way is applying git log api to mapping code with developer.\\n| +\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\n| +visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n| +\\n\\n* fc3971a  Create-README.md 2 days ago <Zhe Wang> <a63188722@163.com>| \\n| diff --git a/README.md b/README.md\\n| new file mode 100644\\n| index 0000000..ad7247e\\n| --- /dev/null\\n| +++ b/README.md\\n| @@ -0,0 +1 @@\\n| +# codeTracker\\n\\n* 018bd60  Initial-commit 2 days ago <Zhe Wang> <a63188722@163.com>  \\n  diff --git a/LICENSE b/LICENSE\\n  new file mode 100644\\n  index 0000000..9cecc1d\\n  --- /dev/null\\n  +++ b/LICENSE\\n  @@ -0,0 +1,674 @@\\n  +                    GNU GENERAL PUBLIC LICENSE\\n  +                       Version 3, 29 June 2007\\n  +\\n  + Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n  + Everyone is permitted to copy and distribute verbatim copies\\n  + of this license document, but changing it is not allowed.\\n  +\\n  +                            Preamble\\n  +\\n  +  The GNU General Public License is a free, copyleft license for\\n  +software and other kinds of works.\\n  +\\n  +  The licenses for most software and other practical works are designed\\n  +to take away your freedom to share and change the works.  By contrast,\\n  +the GNU General Public License is intended to guarantee your freedom to\\n  +share and change all versions of a program--to make sure it remains free\\n  +software for all its users.  We, the Free Software Foundation, use the\\n  +GNU General Public License for most of our software; it applies also to\\n  +any other work released this way by its authors.  You can apply it to\\n  +your programs, too.\\n  +\\n  +  When we speak of free software, we are referring to freedom, not\\n  +price.  Our General Public Licenses are designed to make sure that you\\n  +have the freedom to distribute copies of free software (and charge for\\n  +them if you wish), that you receive source code or can get it if you\\n  +want it, that you can change the software or use pieces of it in new\\n  +free programs, and that you know you can do these things.\\n  +\\n  +  To protect your rights, we need to prevent others from denying you\\n  +these rights or asking you to surrender the rights.  Therefore, you have\\n  +certain responsibilities if you distribute copies of the software, or if\\n  +you modify it: responsibilities to respect the freedom of others.\\n  +\\n  +  For example, if you distribute copies of such a program, whether\\n  +gratis or for a fee, you must pass on to the recipients the same\\n  +freedoms that you received.  You must make sure that they, too, receive\\n  +or can get the source code.  And you must show them these terms so they\\n  +know their rights.\\n  +\\n  +  Developers that use the GNU GPL protect your rights with two steps:\\n  +(1) assert copyright on the software, and (2) offer you this License\\n  +giving you legal permission to copy, distribute and/or modify it.\\n  +\\n  +  For the developers' and authors' protection, the GPL clearly explains\\n  +that there is no warranty for this free software.  For both users' and\\n  +authors' sake, the GPL requires that modified versions be marked as\\n  +changed, so that their problems will not be attributed erroneously to\\n  +authors of previous versions.\\n  +\\n  +  Some devices are designed to deny users access to install or run\\n  +modified versions of the software inside them, although the manufacturer\\n  +can do so.  This is fundamentally incompatible with the aim of\\n  +protecting users' freedom to change the software.  The systematic\\n  +pattern of such abuse occurs in the area of products for individuals to\\n  +use, which is precisely where it is most unacceptable.  Therefore, we\\n  +have designed this version of the GPL to prohibit the practice for those\\n  +products.  If such problems arise substantially in other domains, we\\n  +stand ready to extend this provision to those domains in future versions\\n  +of the GPL, as needed to protect the freedom of users.\\n  +\\n  +  Finally, every program is threatened constantly by software patents.\\n  +States should not allow patents to restrict development and use of\\n  +software on general-purpose computers, but in those that do, we wish to\\n  +avoid the special danger that patents applied to a free program could\\n  +make it effectively proprietary.  To prevent this, the GPL assures that\\n  +patents cannot be used to render the program non-free.\\n  +\\n  +  The precise terms and conditions for copying, distribution and\\n  +modification follow.\\n  +\\n  +                       TERMS AND CONDITIONS\\n  +\\n  +  0. Definitions.\\n  +\\n  +  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n  +\\n  +  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\n  +works, such as semiconductor masks.\\n  +\\n  +  \\\"The Program\\\" refers to any copyrightable work licensed under this\\n  +License.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n  +\\\"recipients\\\" may be individuals or organizations.\\n  +\\n  +  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\n  +in a fashion requiring copyright permission, other than the making of an\\n  +exact copy.  The resulting work is called a \\\"modified version\\\" of the\\n  +earlier work or a work \\\"based on\\\" the earlier work.\\n  +\\n  +  A \\\"covered work\\\" means either the unmodified Program or a work based\\n  +on the Program.\\n  +\\n  +  To \\\"propagate\\\" a work means to do anything with it that, without\\n  +permission, would make you directly or secondarily liable for\\n  +infringement under applicable copyright law, except executing it on a\\n  +computer or modifying a private copy.  Propagation includes copying,\\n  +distribution (with or without modification), making available to the\\n  +public, and in some countries other activities as well.\\n  +\\n  +  To \\\"convey\\\" a work means any kind of propagation that enables other\\n  +parties to make or receive copies.  Mere interaction with a user through\\n  +a computer network, with no transfer of a copy, is not conveying.\\n  +\\n  +  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\n  +to the extent that it includes a convenient and prominently visible\\n  +feature that (1) displays an appropriate copyright notice, and (2)\\n  +tells the user that there is no warranty for the work (except to the\\n  +extent that warranties are provided), that licensees may convey the\\n  +work under this License, and how to view a copy of this License.  If\\n  +the interface presents a list of user commands or options, such as a\\n  +menu, a prominent item in the list meets this criterion.\\n  +\\n  +  1. Source Code.\\n  +\\n  +  The \\\"source code\\\" for a work means the preferred form of the work\\n  +for making modifications to it.  \\\"Object code\\\" means any non-source\\n  +form of a work.\\n  +\\n  +  A \\\"Standard Interface\\\" means an interface that either is an official\\n  +standard defined by a recognized standards body, or, in the case of\\n  +interfaces specified for a particular programming language, one that\\n  +is widely used among developers working in that language.\\n  +\\n  +  The \\\"System Libraries\\\" of an executable work include anything, other\\n  +than the work as a whole, that (a) is included in the normal form of\\n  +packaging a Major Component, but which is not part of that Major\\n  +Component, and (b) serves only to enable use of the work with that\\n  +Major Component, or to implement a Standard Interface for which an\\n  +implementation is available to the public in source code form.  A\\n  +\\\"Major Component\\\", in this context, means a major essential component\\n  +(kernel, window system, and so on) of the specific operating system\\n  +(if any) on which the executable work runs, or a compiler used to\\n  +produce the work, or an object code interpreter used to run it.\\n  +\\n  +  The \\\"Corresponding Source\\\" for a work in object code form means all\\n  +the source code needed to generate, install, and (for an executable\\n  +work) run the object code and to modify the work, including scripts to\\n  +control those activities.  However, it does not include the work's\\n  +System Libraries, or general-purpose tools or generally available free\\n  +programs which are used unmodified in performing those activities but\\n  +which are not part of the work.  For example, Corresponding Source\\n  +includes interface definition files associated with source files for\\n  +the work, and the source code for shared libraries and dynamically\\n  +linked subprograms that the work is specifically designed to require,\\n  +such as by intimate data communication or control flow between those\\n  +subprograms and other parts of the work.\\n  +\\n  +  The Corresponding Source need not include anything that users\\n  +can regenerate automatically from other parts of the Corresponding\\n  +Source.\\n  +\\n  +  The Corresponding Source for a work in source code form is that\\n  +same work.\\n  +\\n  +  2. Basic Permissions.\\n  +\\n  +  All rights granted under this License are granted for the term of\\n  +copyright on the Program, and are irrevocable provided the stated\\n  +conditions are met.  This License explicitly affirms your unlimited\\n  +permission to run the unmodified Program.  The output from running a\\n  +covered work is covered by this License only if the output, given its\\n  +content, constitutes a covered work.  This License acknowledges your\\n  +rights of fair use or other equivalent, as provided by copyright law.\\n  +\\n  +  You may make, run and propagate covered works that you do not\\n  +convey, without conditions so long as your license otherwise remains\\n  +in force.  You may convey covered works to others for the sole purpose\\n  +of having them make modifications exclusively for you, or provide you\\n  +with facilities for running those works, provided that you comply with\\n  +the terms of this License in conveying all material for which you do\\n  +not control copyright.  Those thus making or running the covered works\\n  +for you must do so exclusively on your behalf, under your direction\\n  +and control, on terms that prohibit them from making any copies of\\n  +your copyrighted material outside their relationship with you.\\n  +\\n  +  Conveying under any other circumstances is permitted solely under\\n  +the conditions stated below.  Sublicensing is not allowed; section 10\\n  +makes it unnecessary.\\n  +\\n  +  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n  +\\n  +  No covered work shall be deemed part of an effective technological\\n  +measure under any applicable law fulfilling obligations under article\\n  +11 of the WIPO copyright treaty adopted on 20 December 1996, or\\n  +similar laws prohibiting or restricting circumvention of such\\n  +measures.\\n  +\\n  +  When you convey a covered work, you waive any legal power to forbid\\n  +circumvention of technological measures to the extent such circumvention\\n  +is effected by exercising rights under this License with respect to\\n  +the covered work, and you disclaim any intention to limit operation or\\n  +modification of the work as a means of enforcing, against the work's\\n  +users, your or third parties' legal rights to forbid circumvention of\\n  +technological measures.\\n  +\\n  +  4. Conveying Verbatim Copies.\\n  +\\n  +  You may convey verbatim copies of the Program's source code as you\\n  +receive it, in any medium, provided that you conspicuously and\\n  +appropriately publish on each copy an appropriate copyright notice;\\n  +keep intact all notices stating that this License and any\\n  +non-permissive terms added in accord with section 7 apply to the code;\\n  +keep intact all notices of the absence of any warranty; and give all\\n  +recipients a copy of this License along with the Program.\\n  +\\n  +  You may charge any price or no price for each copy that you convey,\\n  +and you may offer support or warranty protection for a fee.\\n  +\\n  +  5. Conveying Modified Source Versions.\\n  +\\n  +  You may convey a work based on the Program, or the modifications to\\n  +produce it from the Program, in the form of source code under the\\n  +terms of section 4, provided that you also meet all of these conditions:\\n  +\\n  +    a) The work must carry prominent notices stating that you modified\\n  +    it, and giving a relevant date.\\n  +\\n  +    b) The work must carry prominent notices stating that it is\\n  +    released under this License and any conditions added under section\\n  +    7.  This requirement modifies the requirement in section 4 to\\n  +    \\\"keep intact all notices\\\".\\n  +\\n  +    c) You must license the entire work, as a whole, under this\\n  +    License to anyone who comes into possession of a copy.  This\\n  +    License will therefore apply, along with any applicable section 7\\n  +    additional terms, to the whole of the work, and all its parts,\\n  +    regardless of how they are packaged.  This License gives no\\n  +    permission to license the work in any other way, but it does not\\n  +    invalidate such permission if you have separately received it.\\n  +\\n  +    d) If the work has interactive user interfaces, each must display\\n  +    Appropriate Legal Notices; however, if the Program has interactive\\n  +    interfaces that do not display Appropriate Legal Notices, your\\n  +    work need not make them do so.\\n  +\\n  +  A compilation of a covered work with other separate and independent\\n  +works, which are not by their nature extensions of the covered work,\\n  +and which are not combined with it such as to form a larger program,\\n  +in or on a volume of a storage or distribution medium, is called an\\n  +\\\"aggregate\\\" if the compilation and its resulting copyright are not\\n  +used to limit the access or legal rights of the compilation's users\\n  +beyond what the individual works permit.  Inclusion of a covered work\\n  +in an aggregate does not cause this License to apply to the other\\n  +parts of the aggregate.\\n  +\\n  +  6. Conveying Non-Source Forms.\\n  +\\n  +  You may convey a covered work in object code form under the terms\\n  +of sections 4 and 5, provided that you also convey the\\n  +machine-readable Corresponding Source under the terms of this License,\\n  +in one of these ways:\\n  +\\n  +    a) Convey the object code in, or embodied in, a physical product\\n  +    (including a physical distribution medium), accompanied by the\\n  +    Corresponding Source fixed on a durable physical medium\\n  +    customarily used for software interchange.\\n  +\\n  +    b) Convey the object code in, or embodied in, a physical product\\n  +    (including a physical distribution medium), accompanied by a\\n  +    written offer, valid for at least three years and valid for as\\n  +    long as you offer spare parts or customer support for that product\\n  +    model, to give anyone who possesses the object code either (1) a\\n  +    copy of the Corresponding Source for all the software in the\\n  +    product that is covered by this License, on a durable physical\\n  +    medium customarily used for software interchange, for a price no\\n  +    more than your reasonable cost of physically performing this\\n  +    conveying of source, or (2) access to copy the\\n  +    Corresponding Source from a network server at no charge.\\n  +\\n  +    c) Convey individual copies of the object code with a copy of the\\n  +    written offer to provide the Corresponding Source.  This\\n  +    alternative is allowed only occasionally and noncommercially, and\\n  +    only if you received the object code with such an offer, in accord\\n  +    with subsection 6b.\\n  +\\n  +    d) Convey the object code by offering access from a designated\\n  +    place (gratis or for a charge), and offer equivalent access to the\\n  +    Corresponding Source in the same way through the same place at no\\n  +    further charge.  You need not require recipients to copy the\\n  +    Corresponding Source along with the object code.  If the place to\\n  +    copy the object code is a network server, the Corresponding Source\\n  +    may be on a different server (operated by you or a third party)\\n  +    that supports equivalent copying facilities, provided you maintain\\n  +    clear directions next to the object code saying where to find the\\n  +    Corresponding Source.  Regardless of what server hosts the\\n  +    Corresponding Source, you remain obligated to ensure that it is\\n  +    available for as long as needed to satisfy these requirements.\\n  +\\n  +    e) Convey the object code using peer-to-peer transmission, provided\\n  +    you inform other peers where the object code and Corresponding\\n  +    Source of the work are being offered to the general public at no\\n  +    charge under subsection 6d.\\n  +\\n  +  A separable portion of the object code, whose source code is excluded\\n  +from the Corresponding Source as a System Library, need not be\\n  +included in conveying the object code work.\\n  +\\n  +  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\n  +tangible personal property which is normally used for personal, family,\\n  +or household purposes, or (2) anything designed or sold for incorporation\\n  +into a dwelling.  In determining whether a product is a consumer product,\\n  +doubtful cases shall be resolved in favor of coverage.  For a particular\\n  +product received by a particular user, \\\"normally used\\\" refers to a\\n  +typical or common use of that class of product, regardless of the status\\n  +of the particular user or of the way in which the particular user\\n  +actually uses, or expects or is expected to use, the product.  A product\\n  +is a consumer product regardless of whether the product has substantial\\n  +commercial, industrial or non-consumer uses, unless such uses represent\\n  +the only significant mode of use of the product.\\n  +\\n  +  \\\"Installation Information\\\" for a User Product means any methods,\\n  +procedures, authorization keys, or other information required to install\\n  +and execute modified versions of a covered work in that User Product from\\n  +a modified version of its Corresponding Source.  The information must\\n  +suffice to ensure that the continued functioning of the modified object\\n  +code is in no case prevented or interfered with solely because\\n  +modification has been made.\\n  +\\n  +  If you convey an object code work under this section in, or with, or\\n  +specifically for use in, a User Product, and the conveying occurs as\\n  +part of a transaction in which the right of possession and use of the\\n  +User Product is transferred to the recipient in perpetuity or for a\\n  +fixed term (regardless of how the transaction is characterized), the\\n  +Corresponding Source conveyed under this section must be accompanied\\n  +by the Installation Information.  But this requirement does not apply\\n  +if neither you nor any third party retains the ability to install\\n  +modified object code on the User Product (for example, the work has\\n  +been installed in ROM).\\n  +\\n  +  The requirement to provide Installation Information does not include a\\n  +requirement to continue to provide support service, warranty, or updates\\n  +for a work that has been modified or installed by the recipient, or for\\n  +the User Product in which it has been modified or installed.  Access to a\\n  +network may be denied when the modification itself materially and\\n  +adversely affects the operation of the network or violates the rules and\\n  +protocols for communication across the network.\\n  +\\n  +  Corresponding Source conveyed, and Installation Information provided,\\n  +in accord with this section must be in a format that is publicly\\n  +documented (and with an implementation available to the public in\\n  +source code form), and must require no special password or key for\\n  +unpacking, reading or copying.\\n  +\\n  +  7. Additional Terms.\\n  +\\n  +  \\\"Additional permissions\\\" are terms that supplement the terms of this\\n  +License by making exceptions from one or more of its conditions.\\n  +Additional permissions that are applicable to the entire Program shall\\n  +be treated as though they were included in this License, to the extent\\n  +that they are valid under applicable law.  If additional permissions\\n  +apply only to part of the Program, that part may be used separately\\n  +under those permissions, but the entire Program remains governed by\\n  +this License without regard to the additional permissions.\\n  +\\n  +  When you convey a copy of a covered work, you may at your option\\n  +remove any additional permissions from that copy, or from any part of\\n  +it.  (Additional permissions may be written to require their own\\n  +removal in certain cases when you modify the work.)  You may place\\n  +additional permissions on material, added by you to a covered work,\\n  +for which you have or can give appropriate copyright permission.\\n  +\\n  +  Notwithstanding any other provision of this License, for material you\\n  +add to a covered work, you may (if authorized by the copyright holders of\\n  +that material) supplement the terms of this License with terms:\\n  +\\n  +    a) Disclaiming warranty or limiting liability differently from the\\n  +    terms of sections 15 and 16 of this License; or\\n  +\\n  +    b) Requiring preservation of specified reasonable legal notices or\\n  +    author attributions in that material or in the Appropriate Legal\\n  +    Notices displayed by works containing it; or\\n  +\\n  +    c) Prohibiting misrepresentation of the origin of that material, or\\n  +    requiring that modified versions of such material be marked in\\n  +    reasonable ways as different from the original version; or\\n  +\\n  +    d) Limiting the use for publicity purposes of names of licensors or\\n  +    authors of the material; or\\n  +\\n  +    e) Declining to grant rights under trademark law for use of some\\n  +    trade names, trademarks, or service marks; or\\n  +\\n  +    f) Requiring indemnification of licensors and authors of that\\n  +    material by anyone who conveys the material (or modified versions of\\n  +    it) with contractual assumptions of liability to the recipient, for\\n  +    any liability that these contractual assumptions directly impose on\\n  +    those licensors and authors.\\n  +\\n  +  All other non-permissive additional terms are considered \\\"further\\n  +restrictions\\\" within the meaning of section 10.  If the Program as you\\n  +received it, or any part of it, contains a notice stating that it is\\n  +governed by this License along with a term that is a further\\n  +restriction, you may remove that term.  If a license document contains\\n  +a further restriction but permits relicensing or conveying under this\\n  +License, you may add to a covered work material governed by the terms\\n  +of that license document, provided that the further restriction does\\n  +not survive such relicensing or conveying.\\n  +\\n  +  If you add terms to a covered work in accord with this section, you\\n  +must place, in the relevant source files, a statement of the\\n  +additional terms that apply to those files, or a notice indicating\\n  +where to find the applicable terms.\\n  +\\n  +  Additional terms, permissive or non-permissive, may be stated in the\\n  +form of a separately written license, or stated as exceptions;\\n  +the above requirements apply either way.\\n  +\\n  +  8. Termination.\\n  +\\n  +  You may not propagate or modify a covered work except as expressly\\n  +provided under this License.  Any attempt otherwise to propagate or\\n  +modify it is void, and will automatically terminate your rights under\\n  +this License (including any patent licenses granted under the third\\n  +paragraph of section 11).\\n  +\\n  +  However, if you cease all violation of this License, then your\\n  +license from a particular copyright holder is reinstated (a)\\n  +provisionally, unless and until the copyright holder explicitly and\\n  +finally terminates your license, and (b) permanently, if the copyright\\n  +holder fails to notify you of the violation by some reasonable means\\n  +prior to 60 days after the cessation.\\n  +\\n  +  Moreover, your license from a particular copyright holder is\\n  +reinstated permanently if the copyright holder notifies you of the\\n  +violation by some reasonable means, this is the first time you have\\n  +received notice of violation of this License (for any work) from that\\n  +copyright holder, and you cure the violation prior to 30 days after\\n  +your receipt of the notice.\\n  +\\n  +  Termination of your rights under this section does not terminate the\\n  +licenses of parties who have received copies or rights from you under\\n  +this License.  If your rights have been terminated and not permanently\\n  +reinstated, you do not qualify to receive new licenses for the same\\n  +material under section 10.\\n  +\\n  +  9. Acceptance Not Required for Having Copies.\\n  +\\n  +  You are not required to accept this License in order to receive or\\n  +run a copy of the Program.  Ancillary propagation of a covered work\\n  +occurring solely as a consequence of using peer-to-peer transmission\\n  +to receive a copy likewise does not require acceptance.  However,\\n  +nothing other than this License grants you permission to propagate or\\n  +modify any covered work.  These actions infringe copyright if you do\\n  +not accept this License.  Therefore, by modifying or propagating a\\n  +covered work, you indicate your acceptance of this License to do so.\\n  +\\n  +  10. Automatic Licensing of Downstream Recipients.\\n  +\\n  +  Each time you convey a covered work, the recipient automatically\\n  +receives a license from the original licensors, to run, modify and\\n  +propagate that work, subject to this License.  You are not responsible\\n  +for enforcing compliance by third parties with this License.\\n  +\\n  +  An \\\"entity transaction\\\" is a transaction transferring control of an\\n  +organization, or substantially all assets of one, or subdividing an\\n  +organization, or merging organizations.  If propagation of a covered\\n  +work results from an entity transaction, each party to that\\n  +transaction who receives a copy of the work also receives whatever\\n  +licenses to the work the party's predecessor in interest had or could\\n  +give under the previous paragraph, plus a right to possession of the\\n  +Corresponding Source of the work from the predecessor in interest, if\\n  +the predecessor has it or can get it with reasonable efforts.\\n  +\\n  +  You may not impose any further restrictions on the exercise of the\\n  +rights granted or affirmed under this License.  For example, you may\\n  +not impose a license fee, royalty, or other charge for exercise of\\n  +rights granted under this License, and you may not initiate litigation\\n  +(including a cross-claim or counterclaim in a lawsuit) alleging that\\n  +any patent claim is infringed by making, using, selling, offering for\\n  +sale, or importing the Program or any portion of it.\\n  +\\n  +  11. Patents.\\n  +\\n  +  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\n  +License of the Program or a work on which the Program is based.  The\\n  +work thus licensed is called the contributor's \\\"contributor version\\\".\\n  +\\n  +  A contributor's \\\"essential patent claims\\\" are all patent claims\\n  +owned or controlled by the contributor, whether already acquired or\\n  +hereafter acquired, that would be infringed by some manner, permitted\\n  +by this License, of making, using, or selling its contributor version,\\n  +but do not include claims that would be infringed only as a\\n  +consequence of further modification of the contributor version.  For\\n  +purposes of this definition, \\\"control\\\" includes the right to grant\\n  +patent sublicenses in a manner consistent with the requirements of\\n  +this License.\\n  +\\n  +  Each contributor grants you a non-exclusive, worldwide, royalty-free\\n  +patent license under the contributor's essential patent claims, to\\n  +make, use, sell, offer for sale, import and otherwise run, modify and\\n  +propagate the contents of its contributor version.\\n  +\\n  +  In the following three paragraphs, a \\\"patent license\\\" is any express\\n  +agreement or commitment, however denominated, not to enforce a patent\\n  +(such as an express permission to practice a patent or covenant not to\\n  +sue for patent infringement).  To \\\"grant\\\" such a patent license to a\\n  +party means to make such an agreement or commitment not to enforce a\\n  +patent against the party.\\n  +\\n  +  If you convey a covered work, knowingly relying on a patent license,\\n  +and the Corresponding Source of the work is not available for anyone\\n  +to copy, free of charge and under the terms of this License, through a\\n  +publicly available network server or other readily accessible means,\\n  +then you must either (1) cause the Corresponding Source to be so\\n  +available, or (2) arrange to deprive yourself of the benefit of the\\n  +patent license for this particular work, or (3) arrange, in a manner\\n  +consistent with the requirements of this License, to extend the patent\\n  +license to downstream recipients.  \\\"Knowingly relying\\\" means you have\\n  +actual knowledge that, but for the patent license, your conveying the\\n  +covered work in a country, or your recipient's use of the covered work\\n  +in a country, would infringe one or more identifiable patents in that\\n  +country that you have reason to believe are valid.\\n  +\\n  +  If, pursuant to or in connection with a single transaction or\\n  +arrangement, you convey, or propagate by procuring conveyance of, a\\n  +covered work, and grant a patent license to some of the parties\\n  +receiving the covered work authorizing them to use, propagate, modify\\n  +or convey a specific copy of the covered work, then the patent license\\n  +you grant is automatically extended to all recipients of the covered\\n  +work and works based on it.\\n  +\\n  +  A patent license is \\\"discriminatory\\\" if it does not include within\\n  +the scope of its coverage, prohibits the exercise of, or is\\n  +conditioned on the non-exercise of one or more of the rights that are\\n  +specifically granted under this License.  You may not convey a covered\\n  +work if you are a party to an arrangement with a third party that is\\n  +in the business of distributing software, under which you make payment\\n  +to the third party based on the extent of your activity of conveying\\n  +the work, and under which the third party grants, to any of the\\n  +parties who would receive the covered work from you, a discriminatory\\n  +patent license (a) in connection with copies of the covered work\\n  +conveyed by you (or copies made from those copies), or (b) primarily\\n  +for and in connection with specific products or compilations that\\n  +contain the covered work, unless you entered into that arrangement,\\n  +or that patent license was granted, prior to 28 March 2007.\\n  +\\n  +  Nothing in this License shall be construed as excluding or limiting\\n  +any implied license or other defenses to infringement that may\\n  +otherwise be available to you under applicable patent law.\\n  +\\n  +  12. No Surrender of Others' Freedom.\\n  +\\n  +  If conditions are imposed on you (whether by court order, agreement or\\n  +otherwise) that contradict the conditions of this License, they do not\\n  +excuse you from the conditions of this License.  If you cannot convey a\\n  +covered work so as to satisfy simultaneously your obligations under this\\n  +License and any other pertinent obligations, then as a consequence you may\\n  +not convey it at all.  For example, if you agree to terms that obligate you\\n  +to collect a royalty for further conveying from those to whom you convey\\n  +the Program, the only way you could satisfy both those terms and this\\n  +License would be to refrain entirely from conveying the Program.\\n  +\\n  +  13. Use with the GNU Affero General Public License.\\n  +\\n  +  Notwithstanding any other provision of this License, you have\\n  +permission to link or combine any covered work with a work licensed\\n  +under version 3 of the GNU Affero General Public License into a single\\n  +combined work, and to convey the resulting work.  The terms of this\\n  +License will continue to apply to the part which is the covered work,\\n  +but the special requirements of the GNU Affero General Public License,\\n  +section 13, concerning interaction through a network will apply to the\\n  +combination as such.\\n  +\\n  +  14. Revised Versions of this License.\\n  +\\n  +  The Free Software Foundation may publish revised and/or new versions of\\n  +the GNU General Public License from time to time.  Such new versions will\\n  +be similar in spirit to the present version, but may differ in detail to\\n  +address new problems or concerns.\\n  +\\n  +  Each version is given a distinguishing version number.  If the\\n  +Program specifies that a certain numbered version of the GNU General\\n  +Public License \\\"or any later version\\\" applies to it, you have the\\n  +option of following the terms and conditions either of that numbered\\n  +version or of any later version published by the Free Software\\n  +Foundation.  If the Program does not specify a version number of the\\n  +GNU General Public License, you may choose any version ever published\\n  +by the Free Software Foundation.\\n  +\\n  +  If the Program specifies that a proxy can decide which future\\n  +versions of the GNU General Public License can be used, that proxy's\\n  +public statement of acceptance of a version permanently authorizes you\\n  +to choose that version for the Program.\\n  +\\n  +  Later license versions may give you additional or different\\n  +permissions.  However, no additional obligations are imposed on any\\n  +author or copyright holder as a result of your choosing to follow a\\n  +later version.\\n  +\\n  +  15. Disclaimer of Warranty.\\n  +\\n  +  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\n  +APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\n  +HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\n  +OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\n  +THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\n  +PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\n  +IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\n  +ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n  +\\n  +  16. Limitation of Liability.\\n  +\\n  +  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\n  +WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\n  +THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\n  +GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\n  +USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\n  +DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\n  +PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\n  +EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\n  +SUCH DAMAGES.\\n  +\\n  +  17. Interpretation of Sections 15 and 16.\\n  +\\n  +  If the disclaimer of warranty and limitation of liability provided\\n  +above cannot be given local legal effect according to their terms,\\n  +reviewing courts shall apply local law that most closely approximates\\n  +an absolute waiver of all civil liability in connection with the\\n  +Program, unless a warranty or assumption of liability accompanies a\\n  +copy of the Program in return for a fee.\\n  +\\n  +                     END OF TERMS AND CONDITIONS\\n  +\\n  +            How to Apply These Terms to Your New Programs\\n  +\\n  +  If you develop a new program, and you want it to be of the greatest\\n  +possible use to the public, the best way to achieve this is to make it\\n  +free software which everyone can redistribute and change under these terms.\\n  +\\n  +  To do so, attach the following notices to the program.  It is safest\\n  +to attach them to the start of each source file to most effectively\\n  +state the exclusion of warranty; and each file should have at least\\n  +the \\\"copyright\\\" line and a pointer to where the full notice is found.\\n  +\\n  +    {one line to give the program's name and a brief idea of what it does.}\\n  +    Copyright (C) {year}  {name of author}\\n  +\\n  +    This program is free software: you can redistribute it and/or modify\\n  +    it under the terms of the GNU General Public License as published by\\n  +    the Free Software Foundation, either version 3 of the License, or\\n  +    (at your option) any later version.\\n  +\\n  +    This program is distributed in the hope that it will be useful,\\n  +    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n  +    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n  +    GNU General Public License for more details.\\n  +\\n  +    You should have received a copy of the GNU General Public License\\n  +    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n  +\\n  +Also add information on how to contact you by electronic and paper mail.\\n  +\\n  +  If the program does terminal interaction, make it output a short\\n  +notice like this when it starts in an interactive mode:\\n  +\\n  +    {project}  Copyright (C) {year}  {fullname}\\n  +    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n  +    This is free software, and you are welcome to redistribute it\\n  +    under certain conditions; type `show c' for details.\\n  +\\n  +The hypothetical commands `show w' and `show c' should show the appropriate\\n  +parts of the General Public License.  Of course, your program's commands\\n  +might be different; for a GUI interface, you would use an \\\"about box\\\".\\n  +\\n  +  You should also get your employer (if you work as a programmer) or school,\\n  +if any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\n  +For more information on this, and how to apply and follow the GNU GPL, see\\n  +<http://www.gnu.org/licenses/>.\\n  +\\n  +  The GNU General Public License does not permit incorporating your program\\n  +into proprietary programs.  If your program is a subroutine library, you\\n  +may consider it more useful to permit linking proprietary applications with\\n  +the library.  If this is what you want to do, use the GNU Lesser General\\n  +Public License instead of this License.  But first, please read\\n  +<http://www.gnu.org/philosophy/why-not-lgpl.html>.\",\n      \"commit_date\": \"1506746697\",\n      \"file\": \"git/history/example/rusthon_log.txt\",\n      \"author\": \"<Zhe Wang>\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir\\n\\\"\\\"\\\"\\n\\nimport logging\\nimport os\\nimport sys\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\n\\ndef get_code(inp):\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email:%ae' \\\" \\\\\\n              \\\"--abbrev-commit -p --graph \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    return data\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\\n\\n    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s')\\n    logging.root.setLevel(level=logging.INFO)\\n    logger.info(\\\"running %s \\\" % ' '.join(sys.argv))\\n\\n    # check and process input arguments\\n    if len(sys.argv) != 3:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir\\\")\\n    input_file, output_dir = sys.argv[1:3]\\n    if not os.path.exists(output_dir):\\n        try:\\n            os.makedirs(output_dir)\\n        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = get_code(input_file)\\n    print(commit_history)\\n\\n\",\n      \"commit_date\": \"1506746697\",\n      \"file\": \"git/history/main.py\",\n      \"author\": \"<Zhe Wang>\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"'''\\ncommand = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\\nF = os.popen(command)\\nprint (F.read())\",\n      \"commit_date\": \"2017-10-02 16:24:49 +0800\",\n      \"file\": \"ast/PrintAST.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#!/usr/bin/env python\\nimport os\\n\\n'''\\n    Preprocess of the code. Remove the header files and standard libraries\\n'''\\ncode_path = './example/test.cc'\\npath_new = './example/test_new.cc'\\nwith open(code_path , 'r') as f:\\n    lines = f.readlines()\\nf.close()\\n\\nwith open(path_new , 'w') as f_new:\\n    for line in lines:\\n        if '#include' in line:\\n            continue\\n        f_new.write(line)\\nf_new.close()\\n\\n'''\\n    Print AST based on command line\\n'''\\ncommand = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\\nF = os.popen(command)\\nprint F.read()\",\n      \"commit_date\": \"2017-10-02 16:14:44 +0800\",\n      \"file\": \"ast/PrintAST.py\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"# Generate abstract syntax tree \\nAuthor: king-jojo\\n\\nFirst install Clang with: \\n\\n    $ sudo apt-get install clang\\n\\nUsage: \\n\\n    \",\n      \"commit_date\": \"2017-10-02 16:14:44 +0800\",\n      \"file\": \"ast/README.md\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"#include <stdio.h>\\nint f(int x){\\n  int y = (x * 2);\\n  int result = (y / 42);\\n  return result;\\n}\",\n      \"commit_date\": \"2017-10-02 16:14:44 +0800\",\n      \"file\": \"ast/example/test.cc\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"zjin@vmware.com\",\n      \"code_snippet\": \"int f(int x){\\n  int y = (x * 2);\\n  int result = (y / 42);\\n  return result;\\n}\",\n      \"commit_date\": \"2017-10-02 16:14:44 +0800\",\n      \"file\": \"ast/example/test_new.cc\",\n      \"author\": \"Zhenghui Jin\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\n\\nAuthor: AlvinZSJ\",\n      \"commit_date\": \"2017-09-30 13:59:25 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\nAuthor: ch-chiu\",\n      \"commit_date\": \"2017-09-30 13:58:26 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Account\\n\\nAuthor: AlvinZSJt\",\n      \"commit_date\": \"2017-09-30 13:58:26 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Git Commit History\\n\\nAuthor: ch-chiu\",\n      \"commit_date\": \"2017-09-30 13:56:48 +0800\",\n      \"file\": \"git/history/README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# Fetch Other Websites Account via Git Accoun\\n\\nAuthor: AlvinZSJt\",\n      \"commit_date\": \"2017-09-30 13:56:48 +0800\",\n      \"file\": \"git/user/README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"## Project Outline\\n\\nThe whole workflow contains 3 steps.\\n* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\\n* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n\",\n      \"commit_date\": \"2017-09-30 13:24:50 +0800\",\n      \"file\": \"README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"code_snippet\": \"# codeTracker\\n\\n## Obejective\\n\\nThe structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\\n\\n## Goals\\n\\nOur purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\\n\\n## Project Outline\\n\\nThe whole workflow contains 3 steps.\\n\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\nsome other trees of code, another way is applying git log api to mapping code with developer.\\n\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\nvisualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n\",\n      \"commit_date\": \"2017-09-30 13:20:50 +0800\",\n      \"file\": \"README.md\",\n      \"author\": \"ChrisQiu\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"code_snippet\": \"# codeTracker\",\n      \"commit_date\": \"2017-09-30 00:07:51 -0500\",\n      \"file\": \"README.md\",\n      \"author\": \"Zhe Wang\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"code_snippet\": \"                    GNU GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n                            Preamble\\n\\n  The GNU General Public License is a free, copyleft license for\\nsoftware and other kinds of works.\\n\\n  The licenses for most software and other practical works are designed\\nto take away your freedom to share and change the works.  By contrast,\\nthe GNU General Public License is intended to guarantee your freedom to\\nshare and change all versions of a program--to make sure it remains free\\nsoftware for all its users.  We, the Free Software Foundation, use the\\nGNU General Public License for most of our software; it applies also to\\nany other work released this way by its authors.  You can apply it to\\nyour programs, too.\\n\\n  When we speak of free software, we are referring to freedom, not\\nprice.  Our General Public Licenses are designed to make sure that you\\nhave the freedom to distribute copies of free software (and charge for\\nthem if you wish), that you receive source code or can get it if you\\nwant it, that you can change the software or use pieces of it in new\\nfree programs, and that you know you can do these things.\\n\\n  To protect your rights, we need to prevent others from denying you\\nthese rights or asking you to surrender the rights.  Therefore, you have\\ncertain responsibilities if you distribute copies of the software, or if\\nyou modify it: responsibilities to respect the freedom of others.\\n\\n  For example, if you distribute copies of such a program, whether\\ngratis or for a fee, you must pass on to the recipients the same\\nfreedoms that you received.  You must make sure that they, too, receive\\nor can get the source code.  And you must show them these terms so they\\nknow their rights.\\n\\n  Developers that use the GNU GPL protect your rights with two steps:\\n(1) assert copyright on the software, and (2) offer you this License\\ngiving you legal permission to copy, distribute and/or modify it.\\n\\n  For the developers' and authors' protection, the GPL clearly explains\\nthat there is no warranty for this free software.  For both users' and\\nauthors' sake, the GPL requires that modified versions be marked as\\nchanged, so that their problems will not be attributed erroneously to\\nauthors of previous versions.\\n\\n  Some devices are designed to deny users access to install or run\\nmodified versions of the software inside them, although the manufacturer\\ncan do so.  This is fundamentally incompatible with the aim of\\nprotecting users' freedom to change the software.  The systematic\\npattern of such abuse occurs in the area of products for individuals to\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\nhave designed this version of the GPL to prohibit the practice for those\\nproducts.  If such problems arise substantially in other domains, we\\nstand ready to extend this provision to those domains in future versions\\nof the GPL, as needed to protect the freedom of users.\\n\\n  Finally, every program is threatened constantly by software patents.\\nStates should not allow patents to restrict development and use of\\nsoftware on general-purpose computers, but in those that do, we wish to\\navoid the special danger that patents applied to a free program could\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\npatents cannot be used to render the program non-free.\\n\\n  The precise terms and conditions for copying, distribution and\\nmodification follow.\\n\\n                       TERMS AND CONDITIONS\\n\\n  0. Definitions.\\n\\n  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n\\n  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\nworks, such as semiconductor masks.\\n\\n  \\\"The Program\\\" refers to any copyrightable work licensed under this\\nLicense.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n\\\"recipients\\\" may be individuals or organizations.\\n\\n  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\nin a fashion requiring copyright permission, other than the making of an\\nexact copy.  The resulting work is called a \\\"modified version\\\" of the\\nearlier work or a work \\\"based on\\\" the earlier work.\\n\\n  A \\\"covered work\\\" means either the unmodified Program or a work based\\non the Program.\\n\\n  To \\\"propagate\\\" a work means to do anything with it that, without\\npermission, would make you directly or secondarily liable for\\ninfringement under applicable copyright law, except executing it on a\\ncomputer or modifying a private copy.  Propagation includes copying,\\ndistribution (with or without modification), making available to the\\npublic, and in some countries other activities as well.\\n\\n  To \\\"convey\\\" a work means any kind of propagation that enables other\\nparties to make or receive copies.  Mere interaction with a user through\\na computer network, with no transfer of a copy, is not conveying.\\n\\n  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\nto the extent that it includes a convenient and prominently visible\\nfeature that (1) displays an appropriate copyright notice, and (2)\\ntells the user that there is no warranty for the work (except to the\\nextent that warranties are provided), that licensees may convey the\\nwork under this License, and how to view a copy of this License.  If\\nthe interface presents a list of user commands or options, such as a\\nmenu, a prominent item in the list meets this criterion.\\n\\n  1. Source Code.\\n\\n  The \\\"source code\\\" for a work means the preferred form of the work\\nfor making modifications to it.  \\\"Object code\\\" means any non-source\\nform of a work.\\n\\n  A \\\"Standard Interface\\\" means an interface that either is an official\\nstandard defined by a recognized standards body, or, in the case of\\ninterfaces specified for a particular programming language, one that\\nis widely used among developers working in that language.\\n\\n  The \\\"System Libraries\\\" of an executable work include anything, other\\nthan the work as a whole, that (a) is included in the normal form of\\npackaging a Major Component, but which is not part of that Major\\nComponent, and (b) serves only to enable use of the work with that\\nMajor Component, or to implement a Standard Interface for which an\\nimplementation is available to the public in source code form.  A\\n\\\"Major Component\\\", in this context, means a major essential component\\n(kernel, window system, and so on) of the specific operating system\\n(if any) on which the executable work runs, or a compiler used to\\nproduce the work, or an object code interpreter used to run it.\\n\\n  The \\\"Corresponding Source\\\" for a work in object code form means all\\nthe source code needed to generate, install, and (for an executable\\nwork) run the object code and to modify the work, including scripts to\\ncontrol those activities.  However, it does not include the work's\\nSystem Libraries, or general-purpose tools or generally available free\\nprograms which are used unmodified in performing those activities but\\nwhich are not part of the work.  For example, Corresponding Source\\nincludes interface definition files associated with source files for\\nthe work, and the source code for shared libraries and dynamically\\nlinked subprograms that the work is specifically designed to require,\\nsuch as by intimate data communication or control flow between those\\nsubprograms and other parts of the work.\\n\\n  The Corresponding Source need not include anything that users\\ncan regenerate automatically from other parts of the Corresponding\\nSource.\\n\\n  The Corresponding Source for a work in source code form is that\\nsame work.\\n\\n  2. Basic Permissions.\\n\\n  All rights granted under this License are granted for the term of\\ncopyright on the Program, and are irrevocable provided the stated\\nconditions are met.  This License explicitly affirms your unlimited\\npermission to run the unmodified Program.  The output from running a\\ncovered work is covered by this License only if the output, given its\\ncontent, constitutes a covered work.  This License acknowledges your\\nrights of fair use or other equivalent, as provided by copyright law.\\n\\n  You may make, run and propagate covered works that you do not\\nconvey, without conditions so long as your license otherwise remains\\nin force.  You may convey covered works to others for the sole purpose\\nof having them make modifications exclusively for you, or provide you\\nwith facilities for running those works, provided that you comply with\\nthe terms of this License in conveying all material for which you do\\nnot control copyright.  Those thus making or running the covered works\\nfor you must do so exclusively on your behalf, under your direction\\nand control, on terms that prohibit them from making any copies of\\nyour copyrighted material outside their relationship with you.\\n\\n  Conveying under any other circumstances is permitted solely under\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\nmakes it unnecessary.\\n\\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n\\n  No covered work shall be deemed part of an effective technological\\nmeasure under any applicable law fulfilling obligations under article\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\nsimilar laws prohibiting or restricting circumvention of such\\nmeasures.\\n\\n  When you convey a covered work, you waive any legal power to forbid\\ncircumvention of technological measures to the extent such circumvention\\nis effected by exercising rights under this License with respect to\\nthe covered work, and you disclaim any intention to limit operation or\\nmodification of the work as a means of enforcing, against the work's\\nusers, your or third parties' legal rights to forbid circumvention of\\ntechnological measures.\\n\\n  4. Conveying Verbatim Copies.\\n\\n  You may convey verbatim copies of the Program's source code as you\\nreceive it, in any medium, provided that you conspicuously and\\nappropriately publish on each copy an appropriate copyright notice;\\nkeep intact all notices stating that this License and any\\nnon-permissive terms added in accord with section 7 apply to the code;\\nkeep intact all notices of the absence of any warranty; and give all\\nrecipients a copy of this License along with the Program.\\n\\n  You may charge any price or no price for each copy that you convey,\\nand you may offer support or warranty protection for a fee.\\n\\n  5. Conveying Modified Source Versions.\\n\\n  You may convey a work based on the Program, or the modifications to\\nproduce it from the Program, in the form of source code under the\\nterms of section 4, provided that you also meet all of these conditions:\\n\\n    a) The work must carry prominent notices stating that you modified\\n    it, and giving a relevant date.\\n\\n    b) The work must carry prominent notices stating that it is\\n    released under this License and any conditions added under section\\n    7.  This requirement modifies the requirement in section 4 to\\n    \\\"keep intact all notices\\\".\\n\\n    c) You must license the entire work, as a whole, under this\\n    License to anyone who comes into possession of a copy.  This\\n    License will therefore apply, along with any applicable section 7\\n    additional terms, to the whole of the work, and all its parts,\\n    regardless of how they are packaged.  This License gives no\\n    permission to license the work in any other way, but it does not\\n    invalidate such permission if you have separately received it.\\n\\n    d) If the work has interactive user interfaces, each must display\\n    Appropriate Legal Notices; however, if the Program has interactive\\n    interfaces that do not display Appropriate Legal Notices, your\\n    work need not make them do so.\\n\\n  A compilation of a covered work with other separate and independent\\nworks, which are not by their nature extensions of the covered work,\\nand which are not combined with it such as to form a larger program,\\nin or on a volume of a storage or distribution medium, is called an\\n\\\"aggregate\\\" if the compilation and its resulting copyright are not\\nused to limit the access or legal rights of the compilation's users\\nbeyond what the individual works permit.  Inclusion of a covered work\\nin an aggregate does not cause this License to apply to the other\\nparts of the aggregate.\\n\\n  6. Conveying Non-Source Forms.\\n\\n  You may convey a covered work in object code form under the terms\\nof sections 4 and 5, provided that you also convey the\\nmachine-readable Corresponding Source under the terms of this License,\\nin one of these ways:\\n\\n    a) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by the\\n    Corresponding Source fixed on a durable physical medium\\n    customarily used for software interchange.\\n\\n    b) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by a\\n    written offer, valid for at least three years and valid for as\\n    long as you offer spare parts or customer support for that product\\n    model, to give anyone who possesses the object code either (1) a\\n    copy of the Corresponding Source for all the software in the\\n    product that is covered by this License, on a durable physical\\n    medium customarily used for software interchange, for a price no\\n    more than your reasonable cost of physically performing this\\n    conveying of source, or (2) access to copy the\\n    Corresponding Source from a network server at no charge.\\n\\n    c) Convey individual copies of the object code with a copy of the\\n    written offer to provide the Corresponding Source.  This\\n    alternative is allowed only occasionally and noncommercially, and\\n    only if you received the object code with such an offer, in accord\\n    with subsection 6b.\\n\\n    d) Convey the object code by offering access from a designated\\n    place (gratis or for a charge), and offer equivalent access to the\\n    Corresponding Source in the same way through the same place at no\\n    further charge.  You need not require recipients to copy the\\n    Corresponding Source along with the object code.  If the place to\\n    copy the object code is a network server, the Corresponding Source\\n    may be on a different server (operated by you or a third party)\\n    that supports equivalent copying facilities, provided you maintain\\n    clear directions next to the object code saying where to find the\\n    Corresponding Source.  Regardless of what server hosts the\\n    Corresponding Source, you remain obligated to ensure that it is\\n    available for as long as needed to satisfy these requirements.\\n\\n    e) Convey the object code using peer-to-peer transmission, provided\\n    you inform other peers where the object code and Corresponding\\n    Source of the work are being offered to the general public at no\\n    charge under subsection 6d.\\n\\n  A separable portion of the object code, whose source code is excluded\\nfrom the Corresponding Source as a System Library, need not be\\nincluded in conveying the object code work.\\n\\n  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\ntangible personal property which is normally used for personal, family,\\nor household purposes, or (2) anything designed or sold for incorporation\\ninto a dwelling.  In determining whether a product is a consumer product,\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\nproduct received by a particular user, \\\"normally used\\\" refers to a\\ntypical or common use of that class of product, regardless of the status\\nof the particular user or of the way in which the particular user\\nactually uses, or expects or is expected to use, the product.  A product\\nis a consumer product regardless of whether the product has substantial\\ncommercial, industrial or non-consumer uses, unless such uses represent\\nthe only significant mode of use of the product.\\n\\n  \\\"Installation Information\\\" for a User Product means any methods,\\nprocedures, authorization keys, or other information required to install\\nand execute modified versions of a covered work in that User Product from\\na modified version of its Corresponding Source.  The information must\\nsuffice to ensure that the continued functioning of the modified object\\ncode is in no case prevented or interfered with solely because\\nmodification has been made.\\n\\n  If you convey an object code work under this section in, or with, or\\nspecifically for use in, a User Product, and the conveying occurs as\\npart of a transaction in which the right of possession and use of the\\nUser Product is transferred to the recipient in perpetuity or for a\\nfixed term (regardless of how the transaction is characterized), the\\nCorresponding Source conveyed under this section must be accompanied\\nby the Installation Information.  But this requirement does not apply\\nif neither you nor any third party retains the ability to install\\nmodified object code on the User Product (for example, the work has\\nbeen installed in ROM).\\n\\n  The requirement to provide Installation Information does not include a\\nrequirement to continue to provide support service, warranty, or updates\\nfor a work that has been modified or installed by the recipient, or for\\nthe User Product in which it has been modified or installed.  Access to a\\nnetwork may be denied when the modification itself materially and\\nadversely affects the operation of the network or violates the rules and\\nprotocols for communication across the network.\\n\\n  Corresponding Source conveyed, and Installation Information provided,\\nin accord with this section must be in a format that is publicly\\ndocumented (and with an implementation available to the public in\\nsource code form), and must require no special password or key for\\nunpacking, reading or copying.\\n\\n  7. Additional Terms.\\n\\n  \\\"Additional permissions\\\" are terms that supplement the terms of this\\nLicense by making exceptions from one or more of its conditions.\\nAdditional permissions that are applicable to the entire Program shall\\nbe treated as though they were included in this License, to the extent\\nthat they are valid under applicable law.  If additional permissions\\napply only to part of the Program, that part may be used separately\\nunder those permissions, but the entire Program remains governed by\\nthis License without regard to the additional permissions.\\n\\n  When you convey a copy of a covered work, you may at your option\\nremove any additional permissions from that copy, or from any part of\\nit.  (Additional permissions may be written to require their own\\nremoval in certain cases when you modify the work.)  You may place\\nadditional permissions on material, added by you to a covered work,\\nfor which you have or can give appropriate copyright permission.\\n\\n  Notwithstanding any other provision of this License, for material you\\nadd to a covered work, you may (if authorized by the copyright holders of\\nthat material) supplement the terms of this License with terms:\\n\\n    a) Disclaiming warranty or limiting liability differently from the\\n    terms of sections 15 and 16 of this License; or\\n\\n    b) Requiring preservation of specified reasonable legal notices or\\n    author attributions in that material or in the Appropriate Legal\\n    Notices displayed by works containing it; or\\n\\n    c) Prohibiting misrepresentation of the origin of that material, or\\n    requiring that modified versions of such material be marked in\\n    reasonable ways as different from the original version; or\\n\\n    d) Limiting the use for publicity purposes of names of licensors or\\n    authors of the material; or\\n\\n    e) Declining to grant rights under trademark law for use of some\\n    trade names, trademarks, or service marks; or\\n\\n    f) Requiring indemnification of licensors and authors of that\\n    material by anyone who conveys the material (or modified versions of\\n    it) with contractual assumptions of liability to the recipient, for\\n    any liability that these contractual assumptions directly impose on\\n    those licensors and authors.\\n\\n  All other non-permissive additional terms are considered \\\"further\\nrestrictions\\\" within the meaning of section 10.  If the Program as you\\nreceived it, or any part of it, contains a notice stating that it is\\ngoverned by this License along with a term that is a further\\nrestriction, you may remove that term.  If a license document contains\\na further restriction but permits relicensing or conveying under this\\nLicense, you may add to a covered work material governed by the terms\\nof that license document, provided that the further restriction does\\nnot survive such relicensing or conveying.\\n\\n  If you add terms to a covered work in accord with this section, you\\nmust place, in the relevant source files, a statement of the\\nadditional terms that apply to those files, or a notice indicating\\nwhere to find the applicable terms.\\n\\n  Additional terms, permissive or non-permissive, may be stated in the\\nform of a separately written license, or stated as exceptions;\\nthe above requirements apply either way.\\n\\n  8. Termination.\\n\\n  You may not propagate or modify a covered work except as expressly\\nprovided under this License.  Any attempt otherwise to propagate or\\nmodify it is void, and will automatically terminate your rights under\\nthis License (including any patent licenses granted under the third\\nparagraph of section 11).\\n\\n  However, if you cease all violation of this License, then your\\nlicense from a particular copyright holder is reinstated (a)\\nprovisionally, unless and until the copyright holder explicitly and\\nfinally terminates your license, and (b) permanently, if the copyright\\nholder fails to notify you of the violation by some reasonable means\\nprior to 60 days after the cessation.\\n\\n  Moreover, your license from a particular copyright holder is\\nreinstated permanently if the copyright holder notifies you of the\\nviolation by some reasonable means, this is the first time you have\\nreceived notice of violation of this License (for any work) from that\\ncopyright holder, and you cure the violation prior to 30 days after\\nyour receipt of the notice.\\n\\n  Termination of your rights under this section does not terminate the\\nlicenses of parties who have received copies or rights from you under\\nthis License.  If your rights have been terminated and not permanently\\nreinstated, you do not qualify to receive new licenses for the same\\nmaterial under section 10.\\n\\n  9. Acceptance Not Required for Having Copies.\\n\\n  You are not required to accept this License in order to receive or\\nrun a copy of the Program.  Ancillary propagation of a covered work\\noccurring solely as a consequence of using peer-to-peer transmission\\nto receive a copy likewise does not require acceptance.  However,\\nnothing other than this License grants you permission to propagate or\\nmodify any covered work.  These actions infringe copyright if you do\\nnot accept this License.  Therefore, by modifying or propagating a\\ncovered work, you indicate your acceptance of this License to do so.\\n\\n  10. Automatic Licensing of Downstream Recipients.\\n\\n  Each time you convey a covered work, the recipient automatically\\nreceives a license from the original licensors, to run, modify and\\npropagate that work, subject to this License.  You are not responsible\\nfor enforcing compliance by third parties with this License.\\n\\n  An \\\"entity transaction\\\" is a transaction transferring control of an\\norganization, or substantially all assets of one, or subdividing an\\norganization, or merging organizations.  If propagation of a covered\\nwork results from an entity transaction, each party to that\\ntransaction who receives a copy of the work also receives whatever\\nlicenses to the work the party's predecessor in interest had or could\\ngive under the previous paragraph, plus a right to possession of the\\nCorresponding Source of the work from the predecessor in interest, if\\nthe predecessor has it or can get it with reasonable efforts.\\n\\n  You may not impose any further restrictions on the exercise of the\\nrights granted or affirmed under this License.  For example, you may\\nnot impose a license fee, royalty, or other charge for exercise of\\nrights granted under this License, and you may not initiate litigation\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\nany patent claim is infringed by making, using, selling, offering for\\nsale, or importing the Program or any portion of it.\\n\\n  11. Patents.\\n\\n  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\nLicense of the Program or a work on which the Program is based.  The\\nwork thus licensed is called the contributor's \\\"contributor version\\\".\\n\\n  A contributor's \\\"essential patent claims\\\" are all patent claims\\nowned or controlled by the contributor, whether already acquired or\\nhereafter acquired, that would be infringed by some manner, permitted\\nby this License, of making, using, or selling its contributor version,\\nbut do not include claims that would be infringed only as a\\nconsequence of further modification of the contributor version.  For\\npurposes of this definition, \\\"control\\\" includes the right to grant\\npatent sublicenses in a manner consistent with the requirements of\\nthis License.\\n\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\npatent license under the contributor's essential patent claims, to\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\npropagate the contents of its contributor version.\\n\\n  In the following three paragraphs, a \\\"patent license\\\" is any express\\nagreement or commitment, however denominated, not to enforce a patent\\n(such as an express permission to practice a patent or covenant not to\\nsue for patent infringement).  To \\\"grant\\\" such a patent license to a\\nparty means to make such an agreement or commitment not to enforce a\\npatent against the party.\\n\\n  If you convey a covered work, knowingly relying on a patent license,\\nand the Corresponding Source of the work is not available for anyone\\nto copy, free of charge and under the terms of this License, through a\\npublicly available network server or other readily accessible means,\\nthen you must either (1) cause the Corresponding Source to be so\\navailable, or (2) arrange to deprive yourself of the benefit of the\\npatent license for this particular work, or (3) arrange, in a manner\\nconsistent with the requirements of this License, to extend the patent\\nlicense to downstream recipients.  \\\"Knowingly relying\\\" means you have\\nactual knowledge that, but for the patent license, your conveying the\\ncovered work in a country, or your recipient's use of the covered work\\nin a country, would infringe one or more identifiable patents in that\\ncountry that you have reason to believe are valid.\\n\\n  If, pursuant to or in connection with a single transaction or\\narrangement, you convey, or propagate by procuring conveyance of, a\\ncovered work, and grant a patent license to some of the parties\\nreceiving the covered work authorizing them to use, propagate, modify\\nor convey a specific copy of the covered work, then the patent license\\nyou grant is automatically extended to all recipients of the covered\\nwork and works based on it.\\n\\n  A patent license is \\\"discriminatory\\\" if it does not include within\\nthe scope of its coverage, prohibits the exercise of, or is\\nconditioned on the non-exercise of one or more of the rights that are\\nspecifically granted under this License.  You may not convey a covered\\nwork if you are a party to an arrangement with a third party that is\\nin the business of distributing software, under which you make payment\\nto the third party based on the extent of your activity of conveying\\nthe work, and under which the third party grants, to any of the\\nparties who would receive the covered work from you, a discriminatory\\npatent license (a) in connection with copies of the covered work\\nconveyed by you (or copies made from those copies), or (b) primarily\\nfor and in connection with specific products or compilations that\\ncontain the covered work, unless you entered into that arrangement,\\nor that patent license was granted, prior to 28 March 2007.\\n\\n  Nothing in this License shall be construed as excluding or limiting\\nany implied license or other defenses to infringement that may\\notherwise be available to you under applicable patent law.\\n\\n  12. No Surrender of Others' Freedom.\\n\\n  If conditions are imposed on you (whether by court order, agreement or\\notherwise) that contradict the conditions of this License, they do not\\nexcuse you from the conditions of this License.  If you cannot convey a\\ncovered work so as to satisfy simultaneously your obligations under this\\nLicense and any other pertinent obligations, then as a consequence you may\\nnot convey it at all.  For example, if you agree to terms that obligate you\\nto collect a royalty for further conveying from those to whom you convey\\nthe Program, the only way you could satisfy both those terms and this\\nLicense would be to refrain entirely from conveying the Program.\\n\\n  13. Use with the GNU Affero General Public License.\\n\\n  Notwithstanding any other provision of this License, you have\\npermission to link or combine any covered work with a work licensed\\nunder version 3 of the GNU Affero General Public License into a single\\ncombined work, and to convey the resulting work.  The terms of this\\nLicense will continue to apply to the part which is the covered work,\\nbut the special requirements of the GNU Affero General Public License,\\nsection 13, concerning interaction through a network will apply to the\\ncombination as such.\\n\\n  14. Revised Versions of this License.\\n\\n  The Free Software Foundation may publish revised and/or new versions of\\nthe GNU General Public License from time to time.  Such new versions will\\nbe similar in spirit to the present version, but may differ in detail to\\naddress new problems or concerns.\\n\\n  Each version is given a distinguishing version number.  If the\\nProgram specifies that a certain numbered version of the GNU General\\nPublic License \\\"or any later version\\\" applies to it, you have the\\noption of following the terms and conditions either of that numbered\\nversion or of any later version published by the Free Software\\nFoundation.  If the Program does not specify a version number of the\\nGNU General Public License, you may choose any version ever published\\nby the Free Software Foundation.\\n\\n  If the Program specifies that a proxy can decide which future\\nversions of the GNU General Public License can be used, that proxy's\\npublic statement of acceptance of a version permanently authorizes you\\nto choose that version for the Program.\\n\\n  Later license versions may give you additional or different\\npermissions.  However, no additional obligations are imposed on any\\nauthor or copyright holder as a result of your choosing to follow a\\nlater version.\\n\\n  15. Disclaimer of Warranty.\\n\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n\\n  16. Limitation of Liability.\\n\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\nSUCH DAMAGES.\\n\\n  17. Interpretation of Sections 15 and 16.\\n\\n  If the disclaimer of warranty and limitation of liability provided\\nabove cannot be given local legal effect according to their terms,\\nreviewing courts shall apply local law that most closely approximates\\nan absolute waiver of all civil liability in connection with the\\nProgram, unless a warranty or assumption of liability accompanies a\\ncopy of the Program in return for a fee.\\n\\n                     END OF TERMS AND CONDITIONS\\n\\n            How to Apply These Terms to Your New Programs\\n\\n  If you develop a new program, and you want it to be of the greatest\\npossible use to the public, the best way to achieve this is to make it\\nfree software which everyone can redistribute and change under these terms.\\n\\n  To do so, attach the following notices to the program.  It is safest\\nto attach them to the start of each source file to most effectively\\nstate the exclusion of warranty; and each file should have at least\\nthe \\\"copyright\\\" line and a pointer to where the full notice is found.\\n\\n    {one line to give the program's name and a brief idea of what it does.}\\n    Copyright (C) {year}  {name of author}\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\nAlso add information on how to contact you by electronic and paper mail.\\n\\n  If the program does terminal interaction, make it output a short\\nnotice like this when it starts in an interactive mode:\\n\\n    {project}  Copyright (C) {year}  {fullname}\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n    This is free software, and you are welcome to redistribute it\\n    under certain conditions; type `show c' for details.\\n\\nThe hypothetical commands `show w' and `show c' should show the appropriate\\nparts of the General Public License.  Of course, your program's commands\\nmight be different; for a GUI interface, you would use an \\\"about box\\\".\\n\\n  You should also get your employer (if you work as a programmer) or school,\\nif any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\nFor more information on this, and how to apply and follow the GNU GPL, see\\n<http://www.gnu.org/licenses/>.\\n\\n  The GNU General Public License does not permit incorporating your program\\ninto proprietary programs.  If your program is a subroutine library, you\\nmay consider it more useful to permit linking proprietary applications with\\nthe library.  If this is what you want to do, use the GNU Lesser General\\nPublic License instead of this License.  But first, please read\\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\",\n      \"commit_date\": \"2017-09-29 23:44:57 -0500\",\n      \"file\": \"LICENSE\",\n      \"author\": \"Zhe Wang\"\n   }\n]",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "[\n   {\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_login\": \"sindresorhus\",\n      \"name\": \"Sindre Sorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"stackoverflow_login\": \"Sindre Sorhus\",\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"email\": \"sindresorhus@gmail.com\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ]\n   },\n   {\n      \"company\": \"BITS Pilani\",\n      \"github_login\": \"t27\",\n      \"name\": \"Tarang Shah\",\n      \"location\": \"India\",\n      \"stackoverflow_login\": \"Tarang Shah\",\n      \"github_language\": [\n         \"CSS\",\n         \"PHP\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"XSLT\",\n         \"QMake\"\n      ],\n      \"email\": null,\n      \"github_tags\": [\n         \"CSS\",\n         \"PHP\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"XSLT\",\n         \"QMake\"\n      ],\n      \"github_topics\": \"null\"\n   },\n   {\n      \"company\": null,\n      \"github_login\": \"lmichelbacher\",\n      \"name\": \"Lukas Michelbacher\",\n      \"location\": \"Edinburgh\",\n      \"stackoverflow_login\": [\n         \"355274_1.0\"\n      ],\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"CSS\",\n         \"Python\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Makefile\",\n         \"PowerShell\"\n      ],\n      \"email\": null,\n      \"github_tags\": [\n         \"Emacs Lisp\",\n         \"CSS\",\n         \"Python\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Makefile\",\n         \"PowerShell\"\n      ],\n      \"github_topics\": \"null\"\n   },\n   {\n      \"company\": null,\n      \"github_login\": \"Kazhnuz\",\n      \"name\": \"Kazhnuz\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\",\n      \"github_language\": [\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ]\n   },\n   {\n      \"company\": null,\n      \"github_login\": \"aleksandar-todorovic\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"stackoverflow_login\": \"null\",\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"email\": \"aleksandar@r3bl.me\",\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"github_topics\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ]\n   },\n   {\n      \"company\": null,\n      \"github_login\": \"likedan\",\n      \"name\": \"Kedan Li\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\",\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"email\": null,\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"github_topics\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ]\n   }\n]",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/README.md",
      "code_snippet": "Clang is a useful tool to show complete information of the syntax tree of a program. This project intends to apply Clang to generating syntax tree of programs. By comparing different syntax trees, we can find the same nodes and parts of two programs so that we can detect which program is suspected of plagiarising. The same parts two syntax trees share will be distinguished by red nodes shown in graph. However, this project has just started for a short time and some functions haven't realized yet. \n\n## Usage\nEnvironment:Ubuntu 16.04</br>\nFirst install Clang and Graphviz with: \n\n    $ sudo apt-get install clang",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/jsons/output.json",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/output/example/bcon",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/output/example/test",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/output/example/test2",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "ast/output/example/test3",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "git/user/Get_Info/.idea/workspace.xml",
      "code_snippet": "          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"150\">\n              <caret line=\"10\" column=\"14\" lean-forward=\"false\" selection-start-line=\"10\" selection-start-column=\"14\" selection-end-line=\"10\" selection-end-column=\"14\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"__init__.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/__init__.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"0\">",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "git/user/Get_Info/.idea/workspace.xml",
      "code_snippet": "    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"65\" y=\"24\" width=\"1301\" height=\"744\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.24980783\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "git/user/Get_Info/.idea/workspace.xml",
      "code_snippet": "      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.32935917\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:52:38 +0800",
      "file": "git/user/Get_Info/.idea/workspace.xml",
      "code_snippet": "        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"150\">\n          <caret line=\"10\" column=\"14\" lean-forward=\"false\" selection-start-line=\"10\" selection-start-column=\"14\" selection-end-line=\"10\" selection-end-column=\"14\" />\n          <folding />\n        </state>\n      </provider>",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/README.md",
      "code_snippet": "Clang is a useful tool to show complete information of the syntax tree of a program. This project intends to apply Clang to generating syntax tree of programs. By comparing different syntax trees, we can find the same nodes and parts of two programs so that we can detect which program is suspected of plagiarising. The same parts two syntax trees share will be distinguished by red nodes shown in graph. However, this project has just started for a short time and some functions haven't realized yet. \n\n## Usage\nEnvironment:Ubuntu 16.04\nFirst install Clang and Graphviz with: \n\n    $ sudo apt-get install clang",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/example/test3.c",
      "code_snippet": "int f(int x){\n  if (x > 100)\n  {\n  return x;\n  }\n  else\n { \n  x = x + 1;\n  return f(x);\n  }\n}\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/example/test_new.c",
      "code_snippet": "int f(int x){\n  if (x > 100)\n  {\n  return x;\n  }\n  else\n { \n  x = x + 1;\n  return f(x);\n  }\n}\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/jsons/output.json",
      "code_snippet": "{\n    \"coord\": \"invalid sloc\", \n    \"_nodetype\": \"TranslationUnitDecl \", \n    \"_subnode\": [\n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"PointerType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"BuiltinType\", \n                            \"_subnode\": []\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"ConstantArrayType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"RecordType\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"null\", \n                                    \"_nodetype\": \"Record\", \n                                    \"_subnode\": []\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"null\", \n            \"_nodetype\": \"FunctionDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"col:13, line:8:1\", \n                    \"_nodetype\": \"CompoundStmt\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"line:7:3, col:10\", \n                            \"_nodetype\": \"ReturnStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:10\", \n                                    \"_nodetype\": \"ImplicitCastExpr\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:10\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, \n                        {\n                            \"coord\": \"NULL\", \n                            \"_nodetype\": \"IfStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"line:6:5, col:9\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:9\", \n                                            \"_nodetype\": \"ImplicitCastExpr\", \n                                            \"_subnode\": [\n                                                {\n                                                    \"coord\": \"col:9\", \n                                                    \"_nodetype\": \"DeclRefExpr\"\n                                                }\n                                            ]\n                                        }, \n                                        {\n                                            \"coord\": \"col:5\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }, \n                                {\n                                    \"coord\": \"line:4:5, col:9\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:9\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }, \n                                        {\n                                            \"coord\": \"col:5\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }, \n                                {\n                                    \"coord\": \"line:3:7, col:11\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:11\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }, \n                                        {\n                                            \"coord\": \"col:7\", \n                                            \"_nodetype\": \"ImplicitCastExpr\", \n                                            \"_subnode\": [\n                                                {\n                                                    \"coord\": \"col:7\", \n                                                    \"_nodetype\": \"DeclRefExpr\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, \n                        {\n                            \"coord\": \"line:3:3, line:6:9\", \n                            \"_nodetype\": \"IfStmt\", \n                            \"_subnode\": []\n                        }, \n                        {\n                            \"coord\": \"line:2:3, col:12\", \n                            \"_nodetype\": \"DeclStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:3, col:11\", \n                                    \"_nodetype\": \"VarDecl\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:11\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }, \n                {\n                    \"coord\": \"col:7, col:11\", \n                    \"_nodetype\": \"ParmVarDecl\", \n                    \"_subnode\": []\n                }\n            ]\n        }\n    ]\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/output/example/bcon",
      "code_snippet": "// ['example/bcon']\ndigraph {\n\t0 [label=TranslationUnitDecl]\n\t1 [label=TypedefDecl]\n\t0 -> 1\n\t3 [label=TypedefDecl]\n\t0 -> 3\n\t5 [label=TypedefDecl]\n\t0 -> 5\n\t8 [label=TypedefDecl]\n\t0 -> 8\n\t12 [label=VarDecl]\n\t0 -> 12\n\t26 [label=FunctionDecl]\n\t0 -> 26\n\t29 [label=FunctionDecl]\n\t0 -> 29\n\t31 [label=FunctionDecl]\n\t0 -> 31\n\t336 [label=FunctionDecl]\n\t0 -> 336\n\t337 [label=FunctionDecl]\n\t0 -> 337\n\t338 [label=FunctionDecl]\n\t0 -> 338\n\t339 [label=FunctionDecl]\n\t0 -> 339\n\t340 [label=FunctionDecl]\n\t0 -> 340\n\t341 [label=FunctionDecl]\n\t0 -> 341\n\t342 [label=FunctionDecl]\n\t0 -> 342\n\t343 [label=FunctionDecl]\n\t0 -> 343\n\t344 [label=FunctionDecl]\n\t0 -> 344\n\t345 [label=FunctionDecl]\n\t0 -> 345\n\t346 [label=FunctionDecl]\n\t0 -> 346\n\t347 [label=FunctionDecl]\n\t0 -> 347\n\t348 [label=FunctionDecl]\n\t0 -> 348\n\t349 [label=FunctionDecl]\n\t0 -> 349\n\t350 [label=FunctionDecl]\n\t0 -> 350\n\t351 [label=FunctionDecl]\n\t0 -> 351\n\t352 [label=FunctionDecl]\n\t0 -> 352\n\t355 [label=FunctionDecl]\n\t0 -> 355\n\t356 [label=EnumDecl]\n\t0 -> 356\n\t362 [label=TypedefDecl]\n\t0 -> 362\n\t366 [label=FunctionDecl]\n\t0 -> 366\n\t457 [label=FunctionDecl]\n\t0 -> 457\n\t458 [label=FunctionDecl]\n\t0 -> 458\n\t474 [label=FunctionDecl]\n\t0 -> 474\n\t475 [label=FunctionDecl]\n\t0 -> 475\n\t476 [label=FunctionDecl]\n\t0 -> 476\n\t825 [label=FunctionDecl]\n\t0 -> 825\n\t2 [label=BuiltinType]\n\t1 -> 2\n\t4 [label=BuiltinType]\n\t3 -> 4\n\t6 [label=PointerType]\n\t5 -> 6\n\t9 [label=ConstantArrayType]\n\t8 -> 9\n\t13 [label=InitListExpr]\n\t12 -> 13\n\t27 [label=ParmVarDecl]\n\t26 -> 27\n\t28 [label=ParmVarDecl]\n\t26 -> 28\n\t30 [label=ParmVarDecl]\n\t29 -> 30\n\t32 [label=ParmVarDecl]\n\t31 -> 32\n\t33 [label=ParmVarDecl]\n\t31 -> 33\n\t34 [label=ParmVarDecl]\n\t31 -> 34\n\t35 [label=ParmVarDecl]\n\t31 -> 35\n\t36 [label=CompoundStmt]\n\t31 -> 36\n\t353 [label=ParmVarDecl]\n\t352 -> 353\n\t354 [label=FormatAttr]\n\t352 -> 354\n\t357 [label=EnumConstantDecl]\n\t356 -> 357\n\t358 [label=EnumConstantDecl]\n\t356 -> 358\n\t359 [label=EnumConstantDecl]\n\t356 -> 359\n\t360 [label=EnumConstantDecl]\n\t356 -> 360\n\t361 [label=EnumConstantDecl]\n\t356 -> 361\n\t363 [label=ElaboratedType]\n\t362 -> 363\n\t367 [label=ParmVarDecl]\n\t366 -> 367\n\t368 [label=ParmVarDecl]\n\t366 -> 368\n\t369 [label=ParmVarDecl]\n\t366 -> 369\n\t370 [label=CompoundStmt]\n\t366 -> 370\n\t459 [label=ParmVarDecl]\n\t458 -> 459\n\t460 [label=ParmVarDecl]\n\t458 -> 460\n\t461 [label=CompoundStmt]\n\t458 -> 461\n\t462 [label=FullComment]\n\t458 -> 462\n\t477 [label=ParmVarDecl]\n\t476 -> 477\n\t478 [label=CompoundStmt]\n\t476 -> 478\n\t7 [label=BuiltinType]\n\t6 -> 7\n\t10 [label=RecordType]\n\t9 -> 10\n\t14 [label=ImplicitCastExpr]\n\t13 -> 14\n\t17 [label=ImplicitCastExpr]\n\t13 -> 17\n\t20 [label=ImplicitCastExpr]\n\t13 -> 20\n\t23 [label=ImplicitCastExpr]\n\t13 -> 23\n\t37 [label=ImplicitCastExpr]\n\t36 -> 37\n\t39 [label=DeclStmt]\n\t36 -> 39\n\t52 [label=DeclStmt]\n\t36 -> 52\n\t65 [label=SwitchStmt]\n\t36 -> 65\n\t66 [label=SwitchStmt]\n\t36 -> 66\n\t364 [label=EnumType]\n\t363 -> 364\n\t371 [label=DeclStmt]\n\t370 -> 371\n\t375 [label=DeclStmt]\n\t370 -> 375\n\t379 [label=DeclStmt]\n\t370 -> 379\n\t383 [label=DeclStmt]\n\t370 -> 383\n\t385 [label=DeclStmt]\n\t370 -> 385\n\t387 [label=DeclStmt]\n\t370 -> 387\n\t389 [label=DeclStmt]\n\t370 -> 389\n\t391 [label=ForStmt]\n\t370 -> 391\n\t392 [label=ForStmt]\n\t370 -> 392\n\t393 [label=ForStmt]\n\t370 -> 393\n\t394 [label=ForStmt]\n\t370 -> 394\n\t395 [label=ForStmt]\n\t370 -> 395\n\t463 [label=ParagraphComment]\n\t462 -> 463\n\t466 [label=ParamCommandComment]\n\t462 -> 466\n\t470 [label=ParamCommandComment]\n\t462 -> 470\n\t479 [label=DeclStmt]\n\t478 -> 479\n\t483 [label=DeclStmt]\n\t478 -> 483\n\t488 [label=DeclStmt]\n\t478 -> 488\n\t490 [label=CallExpr]\n\t478 -> 490\n\t494 [label=ForStmt]\n\t478 -> 494\n\t495 [label=ForStmt]\n\t478 -> 495\n\t496 [label=ForStmt]\n\t478 -> 496\n\t821 [label=CallExpr]\n\t478 -> 821\n\t11 [label=Record]\n\t10 -> 11\n\t15 [label=ImplicitCastExpr]\n\t14 -> 15\n\t18 [label=ImplicitCastExpr]\n\t17 -> 18\n\t21 [label=ImplicitCastExpr]\n\t20 -> 21\n\t24 [label=ImplicitCastExpr]\n\t23 -> 24\n\t38 [label=DeclRefExpr]\n\t37 -> 38\n\t40 [label=VarDecl]\n\t39 -> 40\n\t53 [label=VarDecl]\n\t52 -> 53\n\t67 [label=ImplicitCastExpr]\n\t66 -> 67\n\t70 [label=CompoundStmt]\n\t66 -> 70\n\t365 [label=Enum]\n\t364 -> 365\n\t372 [label=VarDecl]\n\t371 -> 372\n\t376 [label=VarDecl]\n\t375 -> 376\n\t380 [label=VarDecl]\n\t379 -> 380\n\t384 [label=VarDecl]\n\t383 -> 384\n\t386 [label=VarDecl]\n\t385 -> 386\n\t388 [label=VarDecl]\n\t387 -> 388\n\t390 [label=VarDecl]\n\t389 -> 390\n\t396 [label=CompoundStmt]\n\t395 -> 396\n\t464 [label=TextComment]\n\t463 -> 464\n\t465 [label=TextComment]\n\t463 -> 465\n\t467 [label=ParagraphComment]\n\t466 -> 467\n\t471 [label=ParagraphComment]\n\t470 -> 471\n\t480 [label=VarDecl]\n\t479 -> 480\n\t484 [label=VarDecl]\n\t483 -> 484\n\t489 [label=VarDecl]\n\t488 -> 489\n\t491 [label=ImplicitCastExpr]\n\t490 -> 491\n\t493 [label=CharacterLiteral]\n\t490 -> 493\n\t497 [label=UnaryOperator]\n\t496 -> 497\n\t501 [label=CompoundStmt]\n\t496 -> 501\n\t822 [label=ImplicitCastExpr]\n\t821 -> 822\n\t824 [label=CharacterLiteral]\n\t821 -> 824\n\t16 [label=StringLiteral]\n\t15 -> 16\n\t19 [label=StringLiteral]\n\t18 -> 19\n\t22 [label=StringLiteral]\n\t21 -> 22\n\t25 [label=StringLiteral]\n\t24 -> 25\n\t41 [label=ImplicitCastExpr]\n\t40 -> 41\n\t54 [label=ImplicitCastExpr]\n\t53 -> 54\n\t68 [label=ImplicitCastExpr]\n\t67 -> 68\n\t71 [label=CaseStmt]\n\t70 -> 71\n\t156 [label=BreakStmt]\n\t70 -> 156\n\t157 [label=CaseStmt]\n\t70 -> 157\n\t234 [label=BreakStmt]\n\t70 -> 234\n\t235 [label=CaseStmt]\n\t70 -> 235\n\t317 [label=BreakStmt]\n\t70 -> 317\n\t318 [label=DefaultStmt]\n\t70 -> 318\n\t331 [label=CallExpr]\n\t70 -> 331\n\t335 [label=BreakStmt]\n\t70 -> 335\n\t373 [label=ImplicitCastExpr]\n\t372 -> 373\n\t377 [label=ImplicitCastExpr]\n\t376 -> 377\n\t381 [label=ImplicitCastExpr]\n\t380 -> 381\n\t397 [label=DeclStmt]\n\t396 -> 397\n\t399 [label=SwitchStmt]\n\t396 -> 399\n\t400 [label=SwitchStmt]\n\t396 -> 400\n\t468 [label=TextComment]\n\t467 -> 468\n\t469 [label=TextComment]\n\t467 -> 469\n\t472 [label=TextComment]\n\t471 -> 472\n\t473 [label=TextComment]\n\t471 -> 473\n\t481 [label=ImplicitCastExpr]\n\t480 -> 481\n\t485 [label=ImplicitCastExpr]\n\t484 -> 485\n\t492 [label=DeclRefExpr]\n\t491 -> 492\n\t498 [label=ImplicitCastExpr]\n\t497 -> 498\n\t502 [label=DeclStmt]\n\t501 -> 502\n\t506 [label=IfStmt]\n\t501 -> 506\n\t507 [label=IfStmt]\n\t501 -> 507\n\t812 [label=BinaryOperator]\n\t501 -> 812\n\t816 [label=BinaryOperator]\n\t501 -> 816\n\t823 [label=DeclRefExpr]\n\t822 -> 823\n\t42 [label=ConditionalOperator]\n\t41 -> 42\n\t55 [label=ConditionalOperator]\n\t54 -> 55\n\t69 [label=DeclRefExpr]\n\t68 -> 69\n\t72 [label=CharacterLiteral]\n\t71 -> 72\n\t73 [label=CharacterLiteral]\n\t71 -> 73\n\t74 [label=SwitchStmt]\n\t71 -> 74\n\t75 [label=SwitchStmt]\n\t71 -> 75\n\t158 [label=CharacterLiteral]\n\t157 -> 158\n\t159 [label=CharacterLiteral]\n\t157 -> 159\n\t160 [label=SwitchStmt]\n\t157 -> 160\n\t161 [label=SwitchStmt]\n\t157 -> 161\n\t236 [label=CharacterLiteral]\n\t235 -> 236\n\t237 [label=CharacterLiteral]\n\t235 -> 237\n\t238 [label=IfStmt]\n\t235 -> 238\n\t239 [label=IfStmt]\n\t235 -> 239\n\t319 [label=CallExpr]\n\t318 -> 319\n\t332 [label=ImplicitCastExpr]\n\t331 -> 332\n\t334 [label=IntegerLiteral]\n\t331 -> 334\n\t374 [label=DeclRefExpr]\n\t373 -> 374\n\t378 [label=IntegerLiteral]\n\t377 -> 378\n\t382 [label=IntegerLiteral]\n\t381 -> 382\n\t398 [label=VarDecl]\n\t397 -> 398\n\t401 [label=ImplicitCastExpr]\n\t400 -> 401\n\t404 [label=CompoundStmt]\n\t400 -> 404\n\t482 [label=IntegerLiteral]\n\t481 -> 482\n\t486 [label=ImplicitCastExpr]\n\t485 -> 486\n\t499 [label=DeclRefExpr]\n\t498 -> 499\n\t500 [label=DeclRefExpr]\n\t498 -> 500\n\t503 [label=VarDecl]\n\t502 -> 503\n\t508 [label=ImplicitCastExpr]\n\t507 -> 508\n\t510 [label=CompoundStmt]\n\t507 -> 510\n\t770 [label=CompoundStmt]\n\t507 -> 770\n\t813 [label=DeclRefExpr]\n\t812 -> 813\n\t814 [label=ImplicitCastExpr]\n\t812 -> 814\n\t817 [label=DeclRefExpr]\n\t816 -> 817\n\t818 [label=ImplicitCastExpr]\n\t816 -> 818\n\t43 [label=ImplicitCastExpr]\n\t42 -> 43\n\t45 [label=ImplicitCastExpr]\n\t42 -> 45\n\t51 [label=CharacterLiteral]\n\t42 -> 51\n\t56 [label=ImplicitCastExpr]\n\t55 -> 56\n\t58 [label=ImplicitCastExpr]\n\t55 -> 58\n\t64 [label=CharacterLiteral]\n\t55 -> 64\n\t76 [label=ImplicitCastExpr]\n\t75 -> 76\n\t79 [label=CompoundStmt]\n\t75 -> 79\n\t162 [label=ImplicitCastExpr]\n\t161 -> 162\n\t165 [label=CompoundStmt]\n\t161 -> 165\n\t240 [label=OpaqueValueExpr]\n\t239 -> 240\n\t241 [label=CompoundStmt]\n\t239 -> 241\n\t320 [label=ImplicitCastExpr]\n\t319 -> 320\n\t322 [label=ImplicitCastExpr]\n\t319 -> 322\n\t325 [label=ImplicitCastExpr]\n\t319 -> 325\n\t328 [label=ImplicitCastExpr]\n\t319 -> 328\n\t333 [label=DeclRefExpr]\n\t332 -> 333\n\t402 [label=ImplicitCastExpr]\n\t401 -> 402\n\t405 [label=CaseStmt]\n\t404 -> 405\n\t410 [label=BreakStmt]\n\t404 -> 410\n\t411 [label=CaseStmt]\n\t404 -> 411\n\t416 [label=BreakStmt]\n\t404 -> 416\n\t417 [label=CaseStmt]\n\t404 -> 417\n\t422 [label=BinaryOperator]\n\t404 -> 422\n\t426 [label=BinaryOperator]\n\t404 -> 426\n\t430 [label=BreakStmt]\n\t404 -> 430\n\t431 [label=CaseStmt]\n\t404 -> 431\n\t436 [label=BreakStmt]\n\t404 -> 436\n\t437 [label=CaseStmt]\n\t404 -> 437\n\t442 [label=BinaryOperator]\n\t404 -> 442\n\t446 [label=BinaryOperator]\n\t404 -> 446\n\t450 [label=BreakStmt]\n\t404 -> 450\n\t451 [label=DefaultStmt]\n\t404 -> 451\n\t456 [label=BreakStmt]\n\t404 -> 456\n\t487 [label=StringLiteral]\n\t486 -> 487\n\t504 [label=ImplicitCastExpr]\n\t503 -> 504\n\t509 [label=DeclRefExpr]\n\t508 -> 509\n\t511 [label=SwitchStmt]\n\t510 -> 511\n\t512 [label=SwitchStmt]\n\t510 -> 512\n\t771 [label=DeclStmt]\n\t770 -> 771\n\t773 [label=SwitchStmt]\n\t770 -> 773\n\t774 [label=SwitchStmt]\n\t770 -> 774\n\t802 [label=CallExpr]\n\t770 -> 802\n\t815 [label=DeclRefExpr]\n\t814 -> 815\n\t819 [label=ImplicitCastExpr]\n\t818 -> 819\n\t44 [label=DeclRefExpr]\n\t43 -> 44\n\t46 [label=ImplicitCastExpr]\n\t45 -> 46\n\t57 [label=DeclRefExpr]\n\t56 -> 57\n\t59 [label=ImplicitCastExpr]\n\t58 -> 59\n\t77 [label=ImplicitCastExpr]\n\t76 -> 77\n\t80 [label=CaseStmt]\n\t79 -> 80\n\t87 [label=BreakStmt]\n\t79 -> 87\n\t88 [label=CaseStmt]\n\t79 -> 88\n\t92 [label=BreakStmt]\n\t79 -> 92\n\t93 [label=CaseStmt]\n\t79 -> 93\n\t97 [label=BreakStmt]\n\t79 -> 97\n\t98 [label=CaseStmt]\n\t79 -> 98\n\t102 [label=BreakStmt]\n\t79 -> 102\n\t103 [label=CaseStmt]\n\t79 -> 103\n\t107 [label=BreakStmt]\n\t79 -> 107\n\t108 [label=CaseStmt]\n\t79 -> 108\n\t112 [label=BreakStmt]\n\t79 -> 112\n\t113 [label=CaseStmt]\n\t79 -> 113\n\t117 [label=BreakStmt]\n\t79 -> 117\n\t118 [label=CaseStmt]\n\t79 -> 118\n\t122 [label=BreakStmt]\n\t79 -> 122\n\t123 [label=CaseStmt]\n\t79 -> 123\n\t127 [label=BreakStmt]\n\t79 -> 127\n\t128 [label=CaseStmt]\n\t79 -> 128\n\t132 [label=BreakStmt]\n\t79 -> 132\n\t133 [label=CaseStmt]\n\t79 -> 133\n\t137 [label=BreakStmt]\n\t79 -> 137\n\t138 [label=DefaultStmt]\n\t79 -> 138\n\t151 [label=CallExpr]\n\t79 -> 151\n\t155 [label=BreakStmt]\n\t79 -> 155\n\t163 [label=ImplicitCastExpr]\n\t162 -> 163\n\t166 [label=CaseStmt]\n\t165 -> 166\n\t170 [label=BreakStmt]\n\t165 -> 170\n\t171 [label=CaseStmt]\n\t165 -> 171\n\t175 [label=BreakStmt]\n\t165 -> 175\n\t176 [label=CaseStmt]\n\t165 -> 176\n\t180 [label=BreakStmt]\n\t165 -> 180\n\t181 [label=CaseStmt]\n\t165 -> 181\n\t185 [label=BreakStmt]\n\t165 -> 185\n\t186 [label=CaseStmt]\n\t165 -> 186\n\t190 [label=BreakStmt]\n\t165 -> 190\n\t191 [label=CaseStmt]\n\t165 -> 191\n\t195 [label=BreakStmt]\n\t165 -> 195\n\t196 [label=CaseStmt]\n\t165 -> 196\n\t200 [label=BreakStmt]\n\t165 -> 200\n\t201 [label=CaseStmt]\n\t165 -> 201\n\t205 [label=BreakStmt]\n\t165 -> 205\n\t206 [label=CaseStmt]\n\t165 -> 206\n\t210 [label=BreakStmt]\n\t165 -> 210\n\t211 [label=CaseStmt]\n\t165 -> 211\n\t215 [label=BreakStmt]\n\t165 -> 215\n\t216 [label=DefaultStmt]\n\t165 -> 216\n\t229 [label=CallExpr]\n\t165 -> 229\n\t233 [label=BreakStmt]\n\t165 -> 233\n\t242 [label=SwitchStmt]\n\t241 -> 242\n\t243 [label=SwitchStmt]\n\t241 -> 243\n\t321 [label=DeclRefExpr]\n\t320 -> 321\n\t323 [label=ImplicitCastExpr]\n\t322 -> 323\n\t326 [label=ImplicitCastExpr]\n\t325 -> 326\n\t329 [label=ImplicitCastExpr]\n\t328 -> 329\n\t403 [label=DeclRefExpr]\n\t402 -> 403\n\t406 [label=ImplicitCastExpr]\n\t405 -> 406\n\t409 [label=NullStmt]\n\t405 -> 409\n\t412 [label=ImplicitCastExpr]\n\t411 -> 412\n\t415 [label=NullStmt]\n\t411 -> 415\n\t418 [label=ImplicitCastExpr]\n\t417 -> 418\n\t421 [label=NullStmt]\n\t417 -> 421\n\t423 [label=DeclRefExpr]\n\t422 -> 423\n\t424 [label=ImplicitCastExpr]\n\t422 -> 424\n\t427 [label=DeclRefExpr]\n\t426 -> 427\n\t428 [label=ImplicitCastExpr]\n\t426 -> 428\n\t432 [label=ImplicitCastExpr]\n\t431 -> 432\n\t435 [label=NullStmt]\n\t431 -> 435\n\t438 [label=ImplicitCastExpr]\n\t437 -> 438\n\t441 [label=NullStmt]\n\t437 -> 441\n\t443 [label=DeclRefExpr]\n\t442 -> 443\n\t444 [label=ImplicitCastExpr]\n\t442 -> 444\n\t447 [label=DeclRefExpr]\n\t446 -> 447\n\t448 [label=ImplicitCastExpr]\n\t446 -> 448\n\t452 [label=CallExpr]\n\t451 -> 452\n\t505 [label=IntegerLiteral]\n\t504 -> 505\n\t513 [label=ImplicitCastExpr]\n\t512 -> 513\n\t519 [label=CompoundStmt]\n\t512 -> 519\n\t772 [label=VarDecl]\n\t771 -> 772\n\t775 [label=ImplicitCastExpr]\n\t774 -> 775\n\t781 [label=CompoundStmt]\n\t774 -> 781\n\t803 [label=ImplicitCastExpr]\n\t802 -> 803\n\t805 [label=ImplicitCastExpr]\n\t802 -> 805\n\t808 [label=ImplicitCastExpr]\n\t802 -> 808\n\t810 [label=ImplicitCastExpr]\n\t802 -> 810\n\t820 [label=StringLiteral]\n\t819 -> 820\n\t47 [label=ArraySubscriptExpr]\n\t46 -> 47\n\t60 [label=ArraySubscriptExpr]\n\t59 -> 60\n\t78 [label=DeclRefExpr]\n\t77 -> 78\n\t81 [label=CharacterLiteral]\n\t80 -> 81\n\t82 [label=CharacterLiteral]\n\t80 -> 82\n\t83 [label=CaseStmt]\n\t80 -> 83\n\t89 [label=CharacterLiteral]\n\t88 -> 89\n\t90 [label=CharacterLiteral]\n\t88 -> 90\n\t91 [label=NullStmt]\n\t88 -> 91\n\t94 [label=CharacterLiteral]\n\t93 -> 94\n\t95 [label=CharacterLiteral]\n\t93 -> 95\n\t96 [label=NullStmt]\n\t93 -> 96\n\t99 [label=CharacterLiteral]\n\t98 -> 99\n\t100 [label=CharacterLiteral]\n\t98 -> 100\n\t101 [label=NullStmt]\n\t98 -> 101\n\t104 [label=CharacterLiteral]\n\t103 -> 104\n\t105 [label=CharacterLiteral]\n\t103 -> 105\n\t106 [label=NullStmt]\n\t103 -> 106\n\t109 [label=CharacterLiteral]\n\t108 -> 109\n\t110 [label=CharacterLiteral]\n\t108 -> 110\n\t111 [label=NullStmt]\n\t108 -> 111\n\t114 [label=CharacterLiteral]\n\t113 -> 114\n\t115 [label=CharacterLiteral]\n\t113 -> 115\n\t116 [label=NullStmt]\n\t113 -> 116\n\t119 [label=CharacterLiteral]\n\t118 -> 119\n\t120 [label=CharacterLiteral]\n\t118 -> 120\n\t121 [label=NullStmt]\n\t118 -> 121\n\t124 [label=CharacterLiteral]\n\t123 -> 124\n\t125 [label=CharacterLiteral]\n\t123 -> 125\n\t126 [label=NullStmt]\n\t123 -> 126\n\t129 [label=CharacterLiteral]\n\t128 -> 129\n\t130 [label=CharacterLiteral]\n\t128 -> 130\n\t131 [label=NullStmt]\n\t128 -> 131\n\t134 [label=CharacterLiteral]\n\t133 -> 134\n\t135 [label=CharacterLiteral]\n\t133 -> 135\n\t136 [label=NullStmt]\n\t133 -> 136\n\t139 [label=CallExpr]\n\t138 -> 139\n\t152 [label=ImplicitCastExpr]\n\t151 -> 152\n\t154 [label=IntegerLiteral]\n\t151 -> 154\n\t164 [label=DeclRefExpr]\n\t163 -> 164\n\t167 [label=CharacterLiteral]\n\t166 -> 167\n\t168 [label=CharacterLiteral]\n\t166 -> 168\n\t169 [label=NullStmt]\n\t166 -> 169\n\t172 [label=CharacterLiteral]\n\t171 -> 172\n\t173 [label=CharacterLiteral]\n\t171 -> 173\n\t174 [label=NullStmt]\n\t171 -> 174\n\t177 [label=CharacterLiteral]\n\t176 -> 177\n\t178 [label=CharacterLiteral]\n\t176 -> 178\n\t179 [label=NullStmt]\n\t176 -> 179\n\t182 [label=CharacterLiteral]\n\t181 -> 182\n\t183 [label=CharacterLiteral]\n\t181 -> 183\n\t184 [label=NullStmt]\n\t181 -> 184\n\t187 [label=CharacterLiteral]\n\t186 -> 187\n\t188 [label=CharacterLiteral]\n\t186 -> 188\n\t189 [label=NullStmt]\n\t186 -> 189\n\t192 [label=CharacterLiteral]\n\t191 -> 192\n\t193 [label=CharacterLiteral]\n\t191 -> 193\n\t194 [label=NullStmt]\n\t191 -> 194\n\t197 [label=CharacterLiteral]\n\t196 -> 197\n\t198 [label=CharacterLiteral]\n\t196 -> 198\n\t199 [label=NullStmt]\n\t196 -> 199\n\t202 [label=CharacterLiteral]\n\t201 -> 202\n\t203 [label=CharacterLiteral]\n\t201 -> 203\n\t204 [label=NullStmt]\n\t201 -> 204\n\t207 [label=CharacterLiteral]\n\t206 -> 207\n\t208 [label=CharacterLiteral]\n\t206 -> 208\n\t209 [label=NullStmt]\n\t206 -> 209\n\t212 [label=CharacterLiteral]\n\t211 -> 212\n\t213 [label=CharacterLiteral]\n\t211 -> 213\n\t214 [label=NullStmt]\n\t211 -> 214\n\t217 [label=CallExpr]\n\t216 -> 217\n\t230 [label=ImplicitCastExpr]\n\t229 -> 230\n\t232 [label=IntegerLiteral]\n\t229 -> 232\n\t244 [label=ImplicitCastExpr]\n\t243 -> 244\n\t247 [label=CompoundStmt]\n\t243 -> 247\n\t324 [label=StringLiteral]\n\t323 -> 324\n\t327 [label=DeclRefExpr]\n\t326 -> 327\n\t330 [label=DeclRefExpr]\n\t329 -> 330\n\t407 [label=DeclRefExpr]\n\t406 -> 407\n\t408 [label=DeclRefExpr]\n\t406 -> 408\n\t413 [label=DeclRefExpr]\n\t412 -> 413\n\t414 [label=DeclRefExpr]\n\t412 -> 414\n\t419 [label=DeclRefExpr]\n\t418 -> 419\n\t420 [label=DeclRefExpr]\n\t418 -> 420\n\t425 [label=DeclRefExpr]\n\t424 -> 425\n\t429 [label=IntegerLiteral]\n\t428 -> 429\n\t433 [label=DeclRefExpr]\n\t432 -> 433\n\t434 [label=DeclRefExpr]\n\t432 -> 434\n\t439 [label=DeclRefExpr]\n\t438 -> 439\n\t440 [label=DeclRefExpr]\n\t438 -> 440\n\t445 [label=DeclRefExpr]\n\t444 -> 445\n\t449 [label=IntegerLiteral]\n\t448 -> 449\n\t453 [label=ImplicitCastExpr]\n\t452 -> 453\n\t455 [label=IntegerLiteral]\n\t452 -> 455\n\t514 [label=ImplicitCastExpr]\n\t513 -> 514\n\t520 [label=CaseStmt]\n\t519 -> 520\n\t601 [label=BreakStmt]\n\t519 -> 601\n\t602 [label=CaseStmt]\n\t519 -> 602\n\t678 [label=BreakStmt]\n\t519 -> 678\n\t679 [label=CaseStmt]\n\t519 -> 679\n\t755 [label=BreakStmt]\n\t519 -> 755\n\t756 [label=DefaultStmt]\n\t519 -> 756\n\t765 [label=CallExpr]\n\t519 -> 765\n\t769 [label=BreakStmt]\n\t519 -> 769\n\t776 [label=ImplicitCastExpr]\n\t775 -> 776\n\t782 [label=CaseStmt]\n\t781 -> 782\n\t796 [label=BreakStmt]\n\t781 -> 796\n\t797 [label=CaseStmt]\n\t781 -> 797\n\t801 [label=BreakStmt]\n\t781 -> 801\n\t804 [label=DeclRefExpr]\n\t803 -> 804\n\t806 [label=ImplicitCastExpr]\n\t805 -> 806\n\t809 [label=DeclRefExpr]\n\t808 -> 809\n\t811 [label=DeclRefExpr]\n\t810 -> 811\n\t48 [label=ImplicitCastExpr]\n\t47 -> 48\n\t50 [label=IntegerLiteral]\n\t47 -> 50\n\t61 [label=ImplicitCastExpr]\n\t60 -> 61\n\t63 [label=IntegerLiteral]\n\t60 -> 63\n\t84 [label=CharacterLiteral]\n\t83 -> 84\n\t85 [label=CharacterLiteral]\n\t83 -> 85\n\t86 [label=NullStmt]\n\t83 -> 86\n\t140 [label=ImplicitCastExpr]\n\t139 -> 140\n\t142 [label=ImplicitCastExpr]\n\t139 -> 142\n\t145 [label=ImplicitCastExpr]\n\t139 -> 145\n\t148 [label=ImplicitCastExpr]\n\t139 -> 148\n\t153 [label=DeclRefExpr]\n\t152 -> 153\n\t218 [label=ImplicitCastExpr]\n\t217 -> 218\n\t220 [label=ImplicitCastExpr]\n\t217 -> 220\n\t223 [label=ImplicitCastExpr]\n\t217 -> 223\n\t226 [label=ImplicitCastExpr]\n\t217 -> 226\n\t231 [label=DeclRefExpr]\n\t230 -> 231\n\t245 [label=ImplicitCastExpr]\n\t244 -> 245\n\t248 [label=CaseStmt]\n\t247 -> 248\n\t252 [label=BreakStmt]\n\t247 -> 252\n\t253 [label=CaseStmt]\n\t247 -> 253\n\t257 [label=BreakStmt]\n\t247 -> 257\n\t258 [label=CaseStmt]\n\t247 -> 258\n\t262 [label=BreakStmt]\n\t247 -> 262\n\t263 [label=CaseStmt]\n\t247 -> 263\n\t267 [label=BreakStmt]\n\t247 -> 267\n\t268 [label=CaseStmt]\n\t247 -> 268\n\t272 [label=BreakStmt]\n\t247 -> 272\n\t273 [label=CaseStmt]\n\t247 -> 273\n\t277 [label=BreakStmt]\n\t247 -> 277\n\t278 [label=CaseStmt]\n\t247 -> 278\n\t282 [label=BreakStmt]\n\t247 -> 282\n\t283 [label=CaseStmt]\n\t247 -> 283\n\t287 [label=BreakStmt]\n\t247 -> 287\n\t288 [label=CaseStmt]\n\t247 -> 288\n\t292 [label=BreakStmt]\n\t247 -> 292\n\t293 [label=CaseStmt]\n\t247 -> 293\n\t297 [label=BreakStmt]\n\t247 -> 297\n\t298 [label=DefaultStmt]\n\t247 -> 298\n\t311 [label=CallExpr]\n\t247 -> 311\n\t315 [label=BreakStmt]\n\t247 -> 315\n\t316 [label=BreakStmt]\n\t247 -> 316\n\t454 [label=DeclRefExpr]\n\t453 -> 454\n\t515 [label=ArraySubscriptExpr]\n\t514 -> 515\n\t521 [label=CharacterLiteral]\n\t520 -> 521\n\t522 [label=CharacterLiteral]\n\t520 -> 522\n\t523 [label=SwitchStmt]\n\t520 -> 523\n\t524 [label=SwitchStmt]\n\t520 -> 524\n\t603 [label=CharacterLiteral]\n\t602 -> 603\n\t604 [label=CharacterLiteral]\n\t602 -> 604\n\t605 [label=SwitchStmt]\n\t602 -> 605\n\t606 [label=SwitchStmt]\n\t602 -> 606\n\t680 [label=CharacterLiteral]\n\t679 -> 680\n\t681 [label=CharacterLiteral]\n\t679 -> 681\n\t682 [label=SwitchStmt]\n\t679 -> 682\n\t683 [label=SwitchStmt]\n\t679 -> 683\n\t757 [label=CallExpr]\n\t756 -> 757\n\t766 [label=ImplicitCastExpr]\n\t765 -> 766\n\t768 [label=IntegerLiteral]\n\t765 -> 768\n\t777 [label=ArraySubscriptExpr]\n\t776 -> 777\n\t783 [label=CharacterLiteral]\n\t782 -> 783\n\t784 [label=CharacterLiteral]\n\t782 -> 784\n\t785 [label=BinaryOperator]\n\t782 -> 785\n\t798 [label=CharacterLiteral]\n\t797 -> 798\n\t799 [label=CharacterLiteral]\n\t797 -> 799\n\t800 [label=NullStmt]\n\t797 -> 800\n\t807 [label=StringLiteral]\n\t806 -> 807\n\t49 [label=DeclRefExpr]\n\t48 -> 49\n\t62 [label=DeclRefExpr]\n\t61 -> 62\n\t141 [label=DeclRefExpr]\n\t140 -> 141\n\t143 [label=ImplicitCastExpr]\n\t142 -> 143\n\t146 [label=ImplicitCastExpr]\n\t145 -> 146\n\t149 [label=ImplicitCastExpr]\n\t148 -> 149\n\t219 [label=DeclRefExpr]\n\t218 -> 219\n\t221 [label=ImplicitCastExpr]\n\t220 -> 221\n\t224 [label=ImplicitCastExpr]\n\t223 -> 224\n\t227 [label=ImplicitCastExpr]\n\t226 -> 227\n\t246 [label=DeclRefExpr]\n\t245 -> 246\n\t249 [label=CharacterLiteral]\n\t248 -> 249\n\t250 [label=CharacterLiteral]\n\t248 -> 250\n\t251 [label=NullStmt]\n\t248 -> 251\n\t254 [label=CharacterLiteral]\n\t253 -> 254\n\t255 [label=CharacterLiteral]\n\t253 -> 255\n\t256 [label=NullStmt]\n\t253 -> 256\n\t259 [label=CharacterLiteral]\n\t258 -> 259\n\t260 [label=CharacterLiteral]\n\t258 -> 260\n\t261 [label=NullStmt]\n\t258 -> 261\n\t264 [label=CharacterLiteral]\n\t263 -> 264\n\t265 [label=CharacterLiteral]\n\t263 -> 265\n\t266 [label=NullStmt]\n\t263 -> 266\n\t269 [label=CharacterLiteral]\n\t268 -> 269\n\t270 [label=CharacterLiteral]\n\t268 -> 270\n\t271 [label=NullStmt]\n\t268 -> 271\n\t274 [label=CharacterLiteral]\n\t273 -> 274\n\t275 [label=CharacterLiteral]\n\t273 -> 275\n\t276 [label=NullStmt]\n\t273 -> 276\n\t279 [label=CharacterLiteral]\n\t278 -> 279\n\t280 [label=CharacterLiteral]\n\t278 -> 280\n\t281 [label=NullStmt]\n\t278 -> 281\n\t284 [label=CharacterLiteral]\n\t283 -> 284\n\t285 [label=CharacterLiteral]\n\t283 -> 285\n\t286 [label=NullStmt]\n\t283 -> 286\n\t289 [label=CharacterLiteral]\n\t288 -> 289\n\t290 [label=CharacterLiteral]\n\t288 -> 290\n\t291 [label=NullStmt]\n\t288 -> 291\n\t294 [label=CharacterLiteral]\n\t293 -> 294\n\t295 [label=CharacterLiteral]\n\t293 -> 295\n\t296 [label=NullStmt]\n\t293 -> 296\n\t299 [label=CallExpr]\n\t298 -> 299\n\t312 [label=ImplicitCastExpr]\n\t311 -> 312\n\t314 [label=IntegerLiteral]\n\t311 -> 314\n\t516 [label=ImplicitCastExpr]\n\t515 -> 516\n\t518 [label=IntegerLiteral]\n\t515 -> 518\n\t525 [label=ImplicitCastExpr]\n\t524 -> 525\n\t531 [label=CompoundStmt]\n\t524 -> 531\n\t607 [label=ImplicitCastExpr]\n\t606 -> 607\n\t613 [label=CompoundStmt]\n\t606 -> 613\n\t684 [label=ImplicitCastExpr]\n\t683 -> 684\n\t690 [label=CompoundStmt]\n\t683 -> 690\n\t758 [label=ImplicitCastExpr]\n\t757 -> 758\n\t760 [label=ImplicitCastExpr]\n\t757 -> 760\n\t763 [label=ImplicitCastExpr]\n\t757 -> 763\n\t767 [label=DeclRefExpr]\n\t766 -> 767\n\t778 [label=ImplicitCastExpr]\n\t777 -> 778\n\t780 [label=IntegerLiteral]\n\t777 -> 780\n\t786 [label=DeclRefExpr]\n\t785 -> 786\n\t787 [label=ParenExpr]\n\t785 -> 787\n\t144 [label=StringLiteral]\n\t143 -> 144\n\t147 [label=DeclRefExpr]\n\t146 -> 147\n\t150 [label=DeclRefExpr]\n\t149 -> 150\n\t222 [label=StringLiteral]\n\t221 -> 222\n\t225 [label=DeclRefExpr]\n\t224 -> 225\n\t228 [label=DeclRefExpr]\n\t227 -> 228\n\t300 [label=ImplicitCastExpr]\n\t299 -> 300\n\t302 [label=ImplicitCastExpr]\n\t299 -> 302\n\t305 [label=ImplicitCastExpr]\n\t299 -> 305\n\t308 [label=ImplicitCastExpr]\n\t299 -> 308\n\t313 [label=DeclRefExpr]\n\t312 -> 313\n\t517 [label=DeclRefExpr]\n\t516 -> 517\n\t526 [label=ImplicitCastExpr]\n\t525 -> 526\n\t532 [label=CaseStmt]\n\t531 -> 532\n\t536 [label=BreakStmt]\n\t531 -> 536\n\t537 [label=CaseStmt]\n\t531 -> 537\n\t541 [label=BreakStmt]\n\t531 -> 541\n\t542 [label=CaseStmt]\n\t531 -> 542\n\t546 [label=BreakStmt]\n\t531 -> 546\n\t547 [label=CaseStmt]\n\t531 -> 547\n\t551 [label=BreakStmt]\n\t531 -> 551\n\t552 [label=CaseStmt]\n\t531 -> 552\n\t556 [label=BreakStmt]\n\t531 -> 556\n\t557 [label=CaseStmt]\n\t531 -> 557\n\t561 [label=BreakStmt]\n\t531 -> 561\n\t562 [label=CaseStmt]\n\t531 -> 562\n\t566 [label=BreakStmt]\n\t531 -> 566\n\t567 [label=CaseStmt]\n\t531 -> 567\n\t571 [label=BreakStmt]\n\t531 -> 571\n\t572 [label=CaseStmt]\n\t531 -> 572\n\t576 [label=BreakStmt]\n\t531 -> 576\n\t577 [label=CaseStmt]\n\t531 -> 577\n\t581 [label=BreakStmt]\n\t531 -> 581\n\t582 [label=CaseStmt]\n\t531 -> 582\n\t586 [label=BreakStmt]\n\t531 -> 586\n\t587 [label=DefaultStmt]\n\t531 -> 587\n\t596 [label=CallExpr]\n\t531 -> 596\n\t600 [label=BreakStmt]\n\t531 -> 600\n\t608 [label=ImplicitCastExpr]\n\t607 -> 608\n\t614 [label=CaseStmt]\n\t613 -> 614\n\t618 [label=BreakStmt]\n\t613 -> 618\n\t619 [label=CaseStmt]\n\t613 -> 619\n\t623 [label=BreakStmt]\n\t613 -> 623\n\t624 [label=CaseStmt]\n\t613 -> 624\n\t628 [label=BreakStmt]\n\t613 -> 628\n\t629 [label=CaseStmt]\n\t613 -> 629\n\t633 [label=BreakStmt]\n\t613 -> 633\n\t634 [label=CaseStmt]\n\t613 -> 634\n\t638 [label=BreakStmt]\n\t613 -> 638\n\t639 [label=CaseStmt]\n\t613 -> 639\n\t643 [label=BreakStmt]\n\t613 -> 643\n\t644 [label=CaseStmt]\n\t613 -> 644\n\t648 [label=BreakStmt]\n\t613 -> 648\n\t649 [label=CaseStmt]\n\t613 -> 649\n\t653 [label=BreakStmt]\n\t613 -> 653\n\t654 [label=CaseStmt]\n\t613 -> 654\n\t658 [label=BreakStmt]\n\t613 -> 658\n\t659 [label=CaseStmt]\n\t613 -> 659\n\t663 [label=BreakStmt]\n\t613 -> 663\n\t664 [label=DefaultStmt]\n\t613 -> 664\n\t673 [label=CallExpr]\n\t613 -> 673\n\t677 [label=BreakStmt]\n\t613 -> 677\n\t685 [label=ImplicitCastExpr]\n\t684 -> 685\n\t691 [label=CaseStmt]\n\t690 -> 691\n\t695 [label=BreakStmt]\n\t690 -> 695\n\t696 [label=CaseStmt]\n\t690 -> 696\n\t700 [label=BreakStmt]\n\t690 -> 700\n\t701 [label=CaseStmt]\n\t690 -> 701\n\t705 [label=BreakStmt]\n\t690 -> 705\n\t706 [label=CaseStmt]\n\t690 -> 706\n\t710 [label=BreakStmt]\n\t690 -> 710\n\t711 [label=CaseStmt]\n\t690 -> 711\n\t715 [label=BreakStmt]\n\t690 -> 715\n\t716 [label=CaseStmt]\n\t690 -> 716\n\t720 [label=BreakStmt]\n\t690 -> 720\n\t721 [label=CaseStmt]\n\t690 -> 721\n\t725 [label=BreakStmt]\n\t690 -> 725\n\t726 [label=CaseStmt]\n\t690 -> 726\n\t730 [label=BreakStmt]\n\t690 -> 730\n\t731 [label=CaseStmt]\n\t690 -> 731\n\t735 [label=BreakStmt]\n\t690 -> 735\n\t736 [label=CaseStmt]\n\t690 -> 736\n\t740 [label=BreakStmt]\n\t690 -> 740\n\t741 [label=DefaultStmt]\n\t690 -> 741\n\t750 [label=CallExpr]\n\t690 -> 750\n\t754 [label=BreakStmt]\n\t690 -> 754\n\t759 [label=DeclRefExpr]\n\t758 -> 759\n\t761 [label=ImplicitCastExpr]\n\t760 -> 761\n\t764 [label=DeclRefExpr]\n\t763 -> 764\n\t779 [label=DeclRefExpr]\n\t778 -> 779\n\t788 [label=BinaryOperator]\n\t787 -> 788\n\t301 [label=DeclRefExpr]\n\t300 -> 301\n\t303 [label=ImplicitCastExpr]\n\t302 -> 303\n\t306 [label=ImplicitCastExpr]\n\t305 -> 306\n\t309 [label=ImplicitCastExpr]\n\t308 -> 309\n\t527 [label=ArraySubscriptExpr]\n\t526 -> 527\n\t533 [label=CharacterLiteral]\n\t532 -> 533\n\t534 [label=CharacterLiteral]\n\t532 -> 534\n\t535 [label=NullStmt]\n\t532 -> 535\n\t538 [label=CharacterLiteral]\n\t537 -> 538\n\t539 [label=CharacterLiteral]\n\t537 -> 539\n\t540 [label=NullStmt]\n\t537 -> 540\n\t543 [label=CharacterLiteral]\n\t542 -> 543\n\t544 [label=CharacterLiteral]\n\t542 -> 544\n\t545 [label=NullStmt]\n\t542 -> 545\n\t548 [label=CharacterLiteral]\n\t547 -> 548\n\t549 [label=CharacterLiteral]\n\t547 -> 549\n\t550 [label=NullStmt]\n\t547 -> 550\n\t553 [label=CharacterLiteral]\n\t552 -> 553\n\t554 [label=CharacterLiteral]\n\t552 -> 554\n\t555 [label=NullStmt]\n\t552 -> 555\n\t558 [label=CharacterLiteral]\n\t557 -> 558\n\t559 [label=CharacterLiteral]\n\t557 -> 559\n\t560 [label=NullStmt]\n\t557 -> 560\n\t563 [label=CharacterLiteral]\n\t562 -> 563\n\t564 [label=CharacterLiteral]\n\t562 -> 564\n\t565 [label=NullStmt]\n\t562 -> 565\n\t568 [label=CharacterLiteral]\n\t567 -> 568\n\t569 [label=CharacterLiteral]\n\t567 -> 569\n\t570 [label=NullStmt]\n\t567 -> 570\n\t573 [label=CharacterLiteral]\n\t572 -> 573\n\t574 [label=CharacterLiteral]\n\t572 -> 574\n\t575 [label=NullStmt]\n\t572 -> 575\n\t578 [label=CharacterLiteral]\n\t577 -> 578\n\t579 [label=CharacterLiteral]\n\t577 -> 579\n\t580 [label=NullStmt]\n\t577 -> 580\n\t583 [label=CharacterLiteral]\n\t582 -> 583\n\t584 [label=CharacterLiteral]\n\t582 -> 584\n\t585 [label=NullStmt]\n\t582 -> 585\n\t588 [label=CallExpr]\n\t587 -> 588\n\t597 [label=ImplicitCastExpr]\n\t596 -> 597\n\t599 [label=IntegerLiteral]\n\t596 -> 599\n\t609 [label=ArraySubscriptExpr]\n\t608 -> 609\n\t615 [label=CharacterLiteral]\n\t614 -> 615\n\t616 [label=CharacterLiteral]\n\t614 -> 616\n\t617 [label=NullStmt]\n\t614 -> 617\n\t620 [label=CharacterLiteral]\n\t619 -> 620\n\t621 [label=CharacterLiteral]\n\t619 -> 621\n\t622 [label=NullStmt]\n\t619 -> 622\n\t625 [label=CharacterLiteral]\n\t624 -> 625\n\t626 [label=CharacterLiteral]\n\t624 -> 626\n\t627 [label=NullStmt]\n\t624 -> 627\n\t630 [label=CharacterLiteral]\n\t629 -> 630\n\t631 [label=CharacterLiteral]\n\t629 -> 631\n\t632 [label=NullStmt]\n\t629 -> 632\n\t635 [label=CharacterLiteral]\n\t634 -> 635\n\t636 [label=CharacterLiteral]\n\t634 -> 636\n\t637 [label=NullStmt]\n\t634 -> 637\n\t640 [label=CharacterLiteral]\n\t639 -> 640\n\t641 [label=CharacterLiteral]\n\t639 -> 641\n\t642 [label=NullStmt]\n\t639 -> 642\n\t645 [label=CharacterLiteral]\n\t644 -> 645\n\t646 [label=CharacterLiteral]\n\t644 -> 646\n\t647 [label=NullStmt]\n\t644 -> 647\n\t650 [label=CharacterLiteral]\n\t649 -> 650\n\t651 [label=CharacterLiteral]\n\t649 -> 651\n\t652 [label=NullStmt]\n\t649 -> 652\n\t655 [label=CharacterLiteral]\n\t654 -> 655\n\t656 [label=CharacterLiteral]\n\t654 -> 656\n\t657 [label=NullStmt]\n\t654 -> 657\n\t660 [label=CharacterLiteral]\n\t659 -> 660\n\t661 [label=CharacterLiteral]\n\t659 -> 661\n\t662 [label=NullStmt]\n\t659 -> 662\n\t665 [label=CallExpr]\n\t664 -> 665\n\t674 [label=ImplicitCastExpr]\n\t673 -> 674\n\t676 [label=IntegerLiteral]\n\t673 -> 676\n\t686 [label=ArraySubscriptExpr]\n\t685 -> 686\n\t692 [label=CharacterLiteral]\n\t691 -> 692\n\t693 [label=CharacterLiteral]\n\t691 -> 693\n\t694 [label=NullStmt]\n\t691 -> 694\n\t697 [label=CharacterLiteral]\n\t696 -> 697\n\t698 [label=CharacterLiteral]\n\t696 -> 698\n\t699 [label=NullStmt]\n\t696 -> 699\n\t702 [label=CharacterLiteral]\n\t701 -> 702\n\t703 [label=CharacterLiteral]\n\t701 -> 703\n\t704 [label=NullStmt]\n\t701 -> 704\n\t707 [label=CharacterLiteral]\n\t706 -> 707\n\t708 [label=CharacterLiteral]\n\t706 -> 708\n\t709 [label=NullStmt]\n\t706 -> 709\n\t712 [label=CharacterLiteral]\n\t711 -> 712\n\t713 [label=CharacterLiteral]\n\t711 -> 713\n\t714 [label=NullStmt]\n\t711 -> 714\n\t717 [label=CharacterLiteral]\n\t716 -> 717\n\t718 [label=CharacterLiteral]\n\t716 -> 718\n\t719 [label=NullStmt]\n\t716 -> 719\n\t722 [label=CharacterLiteral]\n\t721 -> 722\n\t723 [label=CharacterLiteral]\n\t721 -> 723\n\t724 [label=NullStmt]\n\t721 -> 724\n\t727 [label=CharacterLiteral]\n\t726 -> 727\n\t728 [label=CharacterLiteral]\n\t726 -> 728\n\t729 [label=NullStmt]\n\t726 -> 729\n\t732 [label=CharacterLiteral]\n\t731 -> 732\n\t733 [label=CharacterLiteral]\n\t731 -> 733\n\t734 [label=NullStmt]\n\t731 -> 734\n\t737 [label=CharacterLiteral]\n\t736 -> 737\n\t738 [label=CharacterLiteral]\n\t736 -> 738\n\t739 [label=NullStmt]\n\t736 -> 739\n\t742 [label=CallExpr]\n\t741 -> 742\n\t751 [label=ImplicitCastExpr]\n\t750 -> 751\n\t753 [label=IntegerLiteral]\n\t750 -> 753\n\t762 [label=StringLiteral]\n\t761 -> 762\n\t789 [label=ImplicitCastExpr]\n\t788 -> 789\n\t795 [label=CharacterLiteral]\n\t788 -> 795\n\t304 [label=StringLiteral]\n\t303 -> 304\n\t307 [label=DeclRefExpr]\n\t306 -> 307\n\t310 [label=DeclRefExpr]\n\t309 -> 310\n\t528 [label=ImplicitCastExpr]\n\t527 -> 528\n\t530 [label=IntegerLiteral]\n\t527 -> 530\n\t589 [label=ImplicitCastExpr]\n\t588 -> 589\n\t591 [label=ImplicitCastExpr]\n\t588 -> 591\n\t594 [label=ImplicitCastExpr]\n\t588 -> 594\n\t598 [label=DeclRefExpr]\n\t597 -> 598\n\t610 [label=ImplicitCastExpr]\n\t609 -> 610\n\t612 [label=IntegerLiteral]\n\t609 -> 612\n\t666 [label=ImplicitCastExpr]\n\t665 -> 666\n\t668 [label=ImplicitCastExpr]\n\t665 -> 668\n\t671 [label=ImplicitCastExpr]\n\t665 -> 671\n\t675 [label=DeclRefExpr]\n\t674 -> 675\n\t687 [label=ImplicitCastExpr]\n\t686 -> 687\n\t689 [label=IntegerLiteral]\n\t686 -> 689\n\t743 [label=ImplicitCastExpr]\n\t742 -> 743\n\t745 [label=ImplicitCastExpr]\n\t742 -> 745\n\t748 [label=ImplicitCastExpr]\n\t742 -> 748\n\t752 [label=DeclRefExpr]\n\t751 -> 752\n\t790 [label=ImplicitCastExpr]\n\t789 -> 790\n\t529 [label=DeclRefExpr]\n\t528 -> 529\n\t590 [label=DeclRefExpr]\n\t589 -> 590\n\t592 [label=ImplicitCastExpr]\n\t591 -> 592\n\t595 [label=DeclRefExpr]\n\t594 -> 595\n\t611 [label=DeclRefExpr]\n\t610 -> 611\n\t667 [label=DeclRefExpr]\n\t666 -> 667\n\t669 [label=ImplicitCastExpr]\n\t668 -> 669\n\t672 [label=DeclRefExpr]\n\t671 -> 672\n\t688 [label=DeclRefExpr]\n\t687 -> 688\n\t744 [label=DeclRefExpr]\n\t743 -> 744\n\t746 [label=ImplicitCastExpr]\n\t745 -> 746\n\t749 [label=DeclRefExpr]\n\t748 -> 749\n\t791 [label=ArraySubscriptExpr]\n\t790 -> 791\n\t593 [label=StringLiteral]\n\t592 -> 593\n\t670 [label=StringLiteral]\n\t669 -> 670\n\t747 [label=StringLiteral]\n\t746 -> 747\n\t792 [label=ImplicitCastExpr]\n\t791 -> 792\n\t794 [label=IntegerLiteral]\n\t791 -> 794\n\t793 [label=DeclRefExpr]\n\t792 -> 793\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/output/example/test",
      "code_snippet": "// ['example/test']\ndigraph {\n\t0 [label=TranslationUnitDecl color=red]\n\t1 [label=TypedefDecl color=red]\n\t0 -> 1\n\t3 [label=TypedefDecl color=red]\n\t0 -> 3\n\t5 [label=TypedefDecl color=red]\n\t0 -> 5\n\t8 [label=TypedefDecl color=red]\n\t0 -> 8\n\t12 [label=FunctionDecl color=red]\n\t0 -> 12\n\t2 [label=BuiltinType color=red]\n\t1 -> 2\n\t4 [label=BuiltinType color=red]\n\t3 -> 4\n\t6 [label=PointerType color=red]\n\t5 -> 6\n\t9 [label=ConstantArrayType color=red]\n\t8 -> 9\n\t13 [label=ParmVarDecl color=red]\n\t12 -> 13\n\t14 [label=CompoundStmt color=red]\n\t12 -> 14\n\t7 [label=BuiltinType color=red]\n\t6 -> 7\n\t10 [label=RecordType color=red]\n\t9 -> 10\n\t15 [label=DeclStmt color=red]\n\t14 -> 15\n\t18 [label=IfStmt]\n\t14 -> 18\n\t19 [label=IfStmt]\n\t14 -> 19\n\t31 [label=ReturnStmt color=red]\n\t14 -> 31\n\t11 [label=Record color=red]\n\t10 -> 11\n\t16 [label=VarDecl color=red]\n\t15 -> 16\n\t20 [label=BinaryOperator color=red]\n\t19 -> 20\n\t24 [label=BinaryOperator color=red]\n\t19 -> 24\n\t27 [label=BinaryOperator color=red]\n\t19 -> 27\n\t32 [label=ImplicitCastExpr color=red]\n\t31 -> 32\n\t17 [label=IntegerLiteral]\n\t16 -> 17\n\t21 [label=ImplicitCastExpr color=red]\n\t20 -> 21\n\t23 [label=IntegerLiteral color=red]\n\t20 -> 23\n\t25 [label=DeclRefExpr]\n\t24 -> 25\n\t26 [label=IntegerLiteral color=red]\n\t24 -> 26\n\t28 [label=DeclRefExpr]\n\t27 -> 28\n\t29 [label=ImplicitCastExpr color=red]\n\t27 -> 29\n\t33 [label=DeclRefExpr]\n\t32 -> 33\n\t22 [label=DeclRefExpr color=red]\n\t21 -> 22\n\t30 [label=DeclRefExpr color=red]\n\t29 -> 30\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "ast/output/example/test3",
      "code_snippet": "// ['example/test3']\ndigraph {\n\t0 [label=TranslationUnitDecl]\n\t1 [label=TypedefDecl]\n\t0 -> 1\n\t3 [label=TypedefDecl]\n\t0 -> 3\n\t5 [label=TypedefDecl]\n\t0 -> 5\n\t8 [label=TypedefDecl]\n\t0 -> 8\n\t12 [label=FunctionDecl]\n\t0 -> 12\n\t2 [label=BuiltinType]\n\t1 -> 2\n\t4 [label=BuiltinType]\n\t3 -> 4\n\t6 [label=PointerType]\n\t5 -> 6\n\t9 [label=ConstantArrayType]\n\t8 -> 9\n\t13 [label=ParmVarDecl]\n\t12 -> 13\n\t14 [label=CompoundStmt]\n\t12 -> 14\n\t7 [label=BuiltinType]\n\t6 -> 7\n\t10 [label=RecordType]\n\t9 -> 10\n\t15 [label=IfStmt]\n\t14 -> 15\n\t16 [label=IfStmt]\n\t14 -> 16\n\t11 [label=Record]\n\t10 -> 11\n\t17 [label=BinaryOperator]\n\t16 -> 17\n\t21 [label=CompoundStmt]\n\t16 -> 21\n\t25 [label=CompoundStmt]\n\t16 -> 25\n\t18 [label=ImplicitCastExpr]\n\t17 -> 18\n\t20 [label=IntegerLiteral]\n\t17 -> 20\n\t22 [label=ReturnStmt]\n\t21 -> 22\n\t26 [label=BinaryOperator]\n\t25 -> 26\n\t32 [label=ReturnStmt]\n\t25 -> 32\n\t19 [label=DeclRefExpr]\n\t18 -> 19\n\t23 [label=ImplicitCastExpr]\n\t22 -> 23\n\t27 [label=DeclRefExpr]\n\t26 -> 27\n\t28 [label=BinaryOperator]\n\t26 -> 28\n\t33 [label=CallExpr]\n\t32 -> 33\n\t24 [label=DeclRefExpr]\n\t23 -> 24\n\t29 [label=ImplicitCastExpr]\n\t28 -> 29\n\t31 [label=IntegerLiteral]\n\t28 -> 31\n\t34 [label=ImplicitCastExpr]\n\t33 -> 34\n\t36 [label=ImplicitCastExpr]\n\t33 -> 36\n\t30 [label=DeclRefExpr]\n\t29 -> 30\n\t35 [label=DeclRefExpr]\n\t34 -> 35\n\t37 [label=DeclRefExpr]\n\t36 -> 37\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "git/user/Get_Info/.idea/Get_Info.iml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"TestRunnerService\">\n    <option name=\"projectConfiguration\" value=\"Nosetests\" />\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"Nosetests\" />\n  </component>\n</module>",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "git/user/Get_Info/.idea/misc.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 2.7.12 (/usr/bin/python2.7)\" project-jdk-type=\"Python SDK\" />\n</project>",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "git/user/Get_Info/.idea/modules.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/Get_Info.iml\" filepath=\"$PROJECT_DIR$/.idea/Get_Info.iml\" />\n    </modules>\n  </component>\n</project>",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 16:43:48 +0800",
      "file": "git/user/Get_Info/.idea/workspace.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"68a02d29-4956-439c-9c86-d401f2dc4abc\" name=\"Default\" comment=\"\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"75\">\n              <caret line=\"5\" column=\"13\" lean-forward=\"false\" selection-start-line=\"5\" selection-start-column=\"5\" selection-end-line=\"5\" selection-end-column=\"13\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"120\">\n              <caret line=\"8\" column=\"7\" lean-forward=\"true\" selection-start-line=\"8\" selection-start-column=\"7\" selection-end-line=\"8\" selection-end-column=\"28\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"__init__.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/__init__.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"0\">\n              <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/main.py\" />\n        <option value=\"$PROJECT_DIR$/__init__.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectFrameBounds\">\n    <option name=\"x\" value=\"65\" />\n    <option name=\"y\" value=\"24\" />\n    <option name=\"width\" value=\"1301\" />\n    <option name=\"height\" value=\"744\" />\n  </component>\n  <component name=\"ProjectView\">\n    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\">\n      <flattenPackages />\n      <showMembers />\n      <showModules />\n      <showLibraryContents />\n      <hideEmptyPackages />\n      <abbreviatePackageNames />\n      <autoscrollToSource />\n      <autoscrollFromSource />\n      <sortByType />\n      <manualOrder />\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"Scope\" />\n      <pane id=\"Scratches\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"Get_Info\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"Get_Info\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n        </subPane>\n      </pane>\n    </panes>\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.main\">\n    <configuration default=\"false\" name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Attests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Nosetests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Unittests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PUREUNITTEST\" value=\"true\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"py.test\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"Get_Info\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"testToRun\" value=\"\" />\n      <option name=\"keywords\" value=\"\" />\n      <option name=\"params\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <option name=\"USE_KEYWORD\" value=\"false\" />\n      <method />\n    </configuration>\n    <list size=\"1\">\n      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n    </list>\n    <recent_temporary>\n      <list size=\"1\">\n        <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"ShelveChangesManager\" show_recycled=\"false\">\n    <option name=\"remove_strategy\" value=\"false\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"68a02d29-4956-439c-9c86-d401f2dc4abc\" name=\"Default\" comment=\"\" />\n      <created>1507878366144</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1507878366144</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"65\" y=\"24\" width=\"1301\" height=\"744\" extended-state=\"7\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.24980783\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.32935917\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n    </layout>\n  </component>\n  <component name=\"VcsContentAnnotationSettings\">\n    <option name=\"myLimit\" value=\"2678400000\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager />\n    <watches-manager />\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"75\">\n          <caret line=\"5\" column=\"13\" lean-forward=\"false\" selection-start-line=\"5\" selection-start-column=\"5\" selection-end-line=\"5\" selection-end-column=\"13\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"120\">\n          <caret line=\"8\" column=\"7\" lean-forward=\"true\" selection-start-line=\"8\" selection-start-column=\"7\" selection-end-line=\"8\" selection-end-column=\"28\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/__init__.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CoverageDataManager\">\n    <SUITE FILE_PATH=\"coverage/user$get_info_stackoverflow.coverage\" NAME=\"get_info_stackoverflow Coverage Results\" MODIFIED=\"1507877720752\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$syn_tags.coverage\" NAME=\"syn_tags Coverage Results\" MODIFIED=\"1507808388576\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$get_info_git.coverage\" NAME=\"get_info_git Coverage Results\" MODIFIED=\"1507877344356\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"649\">\n              <caret line=\"243\" column=\"0\" lean-forward=\"true\" selection-start-line=\"243\" selection-start-column=\"0\" selection-end-line=\"243\" selection-end-column=\"0\" />\n              <folding>\n                <element signature=\"e#0#9#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"270\">\n              <caret line=\"27\" column=\"0\" lean-forward=\"false\" selection-start-line=\"27\" selection-start-column=\"0\" selection-end-line=\"30\" selection-end-column=\"36\" />\n              <folding>\n                <element signature=\"e#0#11#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <file leaf-file-name=\"get_info_git.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"250\">\n              <caret line=\"96\" column=\"54\" lean-forward=\"false\" selection-start-line=\"96\" selection-start-column=\"54\" selection-end-line=\"96\" selection-end-column=\"54\" />\n              <folding>\n                <element signature=\"e#0#15#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/Get_Info/syn_tags.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/main.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_git.py\" />\n      </list>\n    </option>\n  </component>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n        </subPane>\n      </pane>\n      <pane id=\"Scope\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.35520834\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"270\">\n          <caret line=\"27\" column=\"0\" lean-forward=\"false\" selection-start-line=\"27\" selection-start-column=\"0\" selection-end-line=\"30\" selection-end-column=\"36\" />\n          <folding>\n            <element signature=\"e#0#11#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"250\">\n          <caret line=\"96\" column=\"54\" lean-forward=\"false\" selection-start-line=\"96\" selection-start-column=\"54\" selection-end-line=\"96\" selection-end-column=\"54\" />\n          <folding>\n            <element signature=\"e#0#15#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"649\">\n          <caret line=\"243\" column=\"0\" lean-forward=\"true\" selection-start-line=\"243\" selection-start-column=\"0\" selection-end-line=\"243\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#0#9#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "[\n   {\n      \"email\": \"sindresorhus@gmail.com\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"stackoverflow_login\": \"Sindre Sorhus\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"github_login\": \"sindresorhus\",\n      \"name\": \"Sindre Sorhus\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"India\",\n      \"company\": \"BITS Pilani\",\n      \"github_topics\": \"null\",\n      \"stackoverflow_login\": \"Tarang Shah\",\n      \"github_tags\": [\n         \"CSS\",\n         \"PHP\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"XSLT\",\n         \"QMake\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"PHP\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C#\",\n         \"XSLT\",\n         \"QMake\"\n      ],\n      \"github_login\": \"t27\",\n      \"name\": \"Tarang Shah\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Edinburgh\",\n      \"company\": null,\n      \"github_topics\": \"null\",\n      \"stackoverflow_login\": [\n         \"355274_1.0\"\n      ],\n      \"github_tags\": [\n         \"Emacs Lisp\",\n         \"CSS\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Makefile\",\n         \"PowerShell\"\n      ],\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"CSS\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C\",\n         \"Makefile\",\n         \"PowerShell\"\n      ],\n      \"github_login\": \"lmichelbacher\",\n      \"name\": \"Lukas Michelbacher\"\n   },\n   {\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"location\": null,\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"Shell\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"github_login\": \"Kazhnuz\",\n      \"name\": \"Kazhnuz\"\n   },\n   {\n      \"email\": \"aleksandar@r3bl.me\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"company\": null,\n      \"github_topics\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"github_login\": \"aleksandar-todorovic\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"company\": null,\n      \"github_topics\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"github_login\": \"likedan\",\n      \"name\": \"Kedan Li\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "import time\nimport json\nimport multiprocessing\nimport sys\n\ndef delete_duplicate(dict):\n    Info = []",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    return Info\n\ndef search_info(developer_login):\n    print(\"Getting info of users in the name list...\")\n    api = 'https://api.github.com/users/{}'.format(developer_login)\n    developer_info = request_url(api, 100)\n    developer_info = extract_dict(developer_info)\n\n    return developer_info\n\ndef multi_Prcapi(commit_api):\n    developer_info = request_url(commit_api, 5)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    print(time.time() - cTime)\n    pool.close()\n    pool.join()\n    merge_info = git_info\n    # for developer in git_info:\n    #     merge_info.extend(developer)\n    cTime = time.time()\n    merge_info = delete_duplicate(merge_info)\n    pool = multiprocessing.Pool(processes=10)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 15:00:43 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "\n\nif __name__ == '__main__':\n    Info_path = sys.path[0] + \"/Info\"\n    # git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n    name_file = Info_path + '/login_list.json'\n    name_list = open(name_file, encoding='utf-8')\n    name_list = json.load(name_list)\n    # git_info = multi_Prcapi(git_api)\n    git_info = multi_Prclist(name_list)\n    info_file = '/home/ace/zsj/GetInfo/Info/awesome_match_5.json'\n    cTime = time.time()\n    print(\"Dumping the info...\")",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 13:41:50 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\n\n\n## Usage:<br>\n**1** Find the information of github developers who committed to a certain project.<br>\n**2** Find the information of github developers in a login list.<br>\n`Input`: The name of a github repo or a list of github developers' name.<br>\n`Output`: A json file including github users\u2019 name, login, location, language, tags, email.<br><br>\n**3** Find github developers\u2019 Stack Overflow account. **(Identity Linkage)** \u00a0<br>\n`Input`: A json file including github user's name, login, location, language and tags.<br>\n`Output`: A json file including the input information and the corresponding Stack Overflow account and possible ids.<br><br>\n\n## Script Description<br>\n* `get_info_git.py` dumps the Github developers' name, login, company, location, e-mail, language and topics. <br>\n* `get_info_stackoverflow.py` dumps the Stack Overflow developers' display name, location, tags, github associated account and possible user id for identity linkage.<br>\n* `name_form.py` lists the possible Stack Overflow display name for a Github developer.<br>\n* `syn_tags.py` gets the synonymous tags for comparsion of tags between github and Stach Overflow users. <br>\n* Run the script `main.py` according to the following instructions:<br><br>\n```\n--lt  : python main.py --lt [input file] [output file]\n        Dump the info of developers in the input name list\n\n--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file]\n        Dump the developers' info in the commit history of input repo\n\n--mp  : python main.py --mp [file]\n        Mapping between developers on github and Stack Overflow, but the info should be dumped first\n```\n\n## Get the Information of Github Developers\nUsing `get_info_git.py` to dump the developers' name, login, company, location, e-mail, languages and topics using github API.",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CoverageDataManager\">\n    <SUITE FILE_PATH=\"coverage/user$get_info_stackoverflow.coverage\" NAME=\"get_info_stackoverflow Coverage Results\" MODIFIED=\"1507863878084\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$syn_tags.coverage\" NAME=\"syn_tags Coverage Results\" MODIFIED=\"1507808388576\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$get_info_git.coverage\" NAME=\"get_info_git Coverage Results\" MODIFIED=\"1507816232902\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n  </component>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"224\">\n              <caret line=\"22\" column=\"49\" lean-forward=\"true\" selection-start-line=\"22\" selection-start-column=\"49\" selection-end-line=\"22\" selection-end-column=\"49\" />\n              <folding>\n                <element signature=\"e#0#9#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"225\">\n              <caret line=\"15\" column=\"24\" lean-forward=\"false\" selection-start-line=\"15\" selection-start-column=\"24\" selection-end-line=\"15\" selection-end-column=\"24\" />\n              <folding>\n                <element signature=\"e#0#11#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <list>\n        <option value=\"$PROJECT_DIR$/Get_Info/syn_tags.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_git.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/main.py\" />\n      </list>\n    </option>\n  </component>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"65\" y=\"24\" width=\"1855\" height=\"1056\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.2498618\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Database\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.27291667\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"224\">\n          <caret line=\"22\" column=\"49\" lean-forward=\"true\" selection-start-line=\"22\" selection-start-column=\"49\" selection-end-line=\"22\" selection-end-column=\"49\" />\n          <folding>\n            <element signature=\"e#0#9#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"225\">\n          <caret line=\"15\" column=\"24\" lean-forward=\"false\" selection-start-line=\"15\" selection-start-column=\"24\" selection-end-line=\"15\" selection-end-column=\"24\" />\n          <folding>\n            <element signature=\"e#0#11#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "[\n   {\n      \"name\": \"Sindre Sorhus\",\n      \"stackoverflow_login\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"email\": \"sindresorhus@gmail.com\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",\n         \"dark-mode\",\n         \"alfred3-workflow\",\n         \"applescript\",\n         \"alfy\",\n         \"npm-package\",\n         \"emoji\",\n         \"emoji-picker\",\n         \"emoji-searcher\",\n         \"nodejs\",\n         \"lock\",\n         \"c-language\",\n         \"npm\",\n         \"npms\",\n         \"search\",\n         \"search-engine\",\n         \"alfred-theme\",\n         \"theme\",\n         \"simple\",\n         \"minimalistic\",\n         \"light\",\n         \"framework\",\n         \"javascript\",\n         \"workflow\",\n         \"ama\",\n         \"ask-me-anything\",\n         \"question-answering\",\n         \"meta\",\n         \"personal\",\n         \"ask\",\n         \"open-content\",\n         \"questions\",\n         \"answers\",\n         \"questions-and-answers\",\n         \"list\",\n         \"awesome\",\n         \"awesome-list\",\n         \"deprecated\",\n         \"twitter\",\n         \"electron\",\n         \"electron-app\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Swift\"\n      ],\n      \"github_login\": \"sindresorhus\",\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"deprecated\",\n         \"twitter\",\n         \"electron\",\n         \"electron-app\",\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ]\n   },\n   {\n      \"name\": \"Tarang Shah\",\n      \"stackoverflow_login\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"email\": null,\n      \"github_tags\": [\n         \"CSS\",\n         \"PHP\",\n         \"JavaScript\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"QMake\"\n      ],\n      \"github_login\": \"t27\",\n      \"github_topics\": \"null\",\n      \"location\": \"India\",\n      \"github_language\": [\n         \"CSS\",\n         \"PHP\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Shell\",\n         \"Jupyter Notebook\",\n         \"Python\",\n         \"C++\",\n         \"IDL\",\n         \"Arduino\",\n         \"Java\",\n         \"Processing\",\n         \"C\",\n         \"Batchfile\",\n         \"CMake\",\n         \"Scheme\",\n         \"GLSL\",\n         \"Makefile\",\n         \"Prolog\",\n         \"C#\",\n         \"XSLT\",\n         \"QMake\"\n      ]\n   },\n   {\n      \"name\": \"Lukas Michelbacher\",\n      \"stackoverflow_login\": [\n         \"355274_1.0\"\n      ],\n      \"company\": null,\n      \"email\": null,\n      \"github_tags\": [\n         \"Emacs Lisp\",\n         \"CSS\",\n         \"Python\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"PowerShell\"\n      ],\n      \"github_login\": \"lmichelbacher\",\n      \"github_topics\": \"null\",\n      \"location\": \"Edinburgh\",\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"PHP\",\n         \"JavaScript\",\n         \"C++\",\n         \"C\",\n         \"Makefile\",\n         \"PowerShell\"\n      ]\n   },\n   {\n      \"name\": \"Kazhnuz\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",\n         \"applications\",\n         \"gnome-shell-extension\",\n         \"gtk-theme\",\n         \"css\",\n         \"html\",\n         \"bootstrap\",\n         \"icons\",\n         \"faenza\",\n         \"linux\",\n         \"bootstrap3\",\n         \"css3\",\n         \"html5\",\n         \"education\",\n         \"ressources-educatives\",\n         \"logiciels\",\n         \"libre\",\n         \"culture-libre\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Python\"\n      ],\n      \"github_login\": \"Kazhnuz\",\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"ressources-educatives\",\n         \"logiciels\",\n         \"libre\",\n         \"culture-libre\",\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"location\": null,\n      \"github_language\": [\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ]\n   },\n   {\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"email\": \"aleksandar@r3bl.me\",\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"c\",\n         \"linux\",\n         \"linux-distribution\",\n         \"desktop-environment\",\n         \"x-window-manager\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Ruby\"\n      ],\n      \"github_login\": \"aleksandar-todorovic\",\n      \"github_topics\": [\n         \"automation\",\n         \"home-automation\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"linux\",\n         \"linux-distribution\",\n         \"desktop-environment\",\n         \"x-window-manager\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ]\n   },\n   {\n      \"name\": \"Kedan Li\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"email\": null,\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",\n         \"machine-learning\",\n         \"curated-list\",\n         \"coreml-framework\",\n         \"coreml-models\",\n         \"coremltools\",\n         \"awesome-list\",\n         \"models\",\n         \"swift-framework\",\n         \"swift3\",\n         \"swift-library\",\n         \"ios\",\n         \"ios-swift\",\n         \"ios-ui\",\n         \"ios-animation\",\n         \"ios-lib\",\n         \"xib\",\n         \"animation\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"Erlang\"\n      ],\n      \"github_login\": \"likedan\",\n      \"github_topics\": [\n         \"coreml\",\n         \"coreml-model\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "         \"ios-animation\",\n         \"ios-lib\",\n         \"xib\",\n         \"animation\",\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"location\": null,\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ]\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "if not os.path.exists(Info_path):\n    os.mkdir(Info_path)\n\n\n\nif len(sys.argv) == 1 or sys.argv[1] == '--help':\n    help = \"--lt  : python main.py --lt [input file] [output file]\\n\" \\\n           \"        Dump the info of developers in the input name list\\n\" \\\n           \"\\n\" \\\n           \"--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file] \\n\" \\\n           \"        Dump the developers' info in the commit history of input repo\\n\" \\\n           \"\\n\" \\\n           \"--mp  : python main.py --mp [file]\\n\" \\\n           \"        Mapping between developers on github and Stack Overflow, but the info should be dumped first\"\n    print(help)\n\nelif sys.argv[1] == '--lt':\n    name_file = Info_path + '/{}'.format(sys.argv[2])\n    output_file = Info_path + '/{}'.format(sys.argv[3])\n    name_list = open(name_file, encoding='utf-8')",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-13 11:28:15 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "        json.dump(match_info, ctfile, indent=3)\n    print(time.time() - cTime)\n\n\n\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/misc.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.5.2 virtualenv at ~/.pyenv/versions/nltk-3-5-2\" project-jdk-type=\"Python SDK\" />\n</project>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/user.iml",
      "code_snippet": "<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.5.2 virtualenv at ~/.pyenv/versions/nltk-3-5-2\" jdkType=\"Python SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"TestRunnerService\">",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CoverageDataManager\">\n    <SUITE FILE_PATH=\"coverage/user$get_info_stackoverflow.coverage\" NAME=\"get_info_stackoverflow Coverage Results\" MODIFIED=\"1507817805123\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$syn_tags.coverage\" NAME=\"syn_tags Coverage Results\" MODIFIED=\"1507808388576\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n    <SUITE FILE_PATH=\"coverage/user$get_info_git.coverage\" NAME=\"get_info_git Coverage Results\" MODIFIED=\"1507816232902\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Get_Info\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"1169\">\n              <caret line=\"226\" column=\"0\" lean-forward=\"true\" selection-start-line=\"226\" selection-start-column=\"0\" selection-end-line=\"226\" selection-end-column=\"0\" />\n              <folding>\n                <element signature=\"e#0#9#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"104\">\n              <caret line=\"39\" column=\"53\" lean-forward=\"false\" selection-start-line=\"39\" selection-start-column=\"53\" selection-end-line=\"39\" selection-end-column=\"53\" />\n              <folding>\n                <element signature=\"e#0#11#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <file leaf-file-name=\"get_info_git.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"286\">\n              <caret line=\"141\" column=\"0\" lean-forward=\"false\" selection-start-line=\"141\" selection-start-column=\"0\" selection-end-line=\"143\" selection-end-column=\"15\" />\n              <folding>\n                <element signature=\"e#0#15#0\" expanded=\"true\" />\n              </folding>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"syn_tags.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"195\">\n              <caret line=\"13\" column=\"0\" lean-forward=\"false\" selection-start-line=\"13\" selection-start-column=\"0\" selection-end-line=\"14\" selection-end-column=\"26\" />\n              <folding>\n                <element signature=\"e#0#22#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      </list>\n    </option>\n  </component>\n  <component name=\"FindInProjectRecents\">\n    <findStrings>\n      <find>item</find>\n    </findStrings>\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/Get_Info/syn_tags.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_git.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/main.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\" />\n      </list>\n    </option>\n  </component>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../..\" />\n    <property name=\"js.eslint.eslintPackage\" value=\"\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Get_Info\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.get_info_stackoverflow\">\n    <configuration default=\"false\" name=\"syn_tags\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Get_Info\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Get_Info/syn_tags.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"false\" name=\"get_info_git\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Get_Info\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Get_Info/get_info_git.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"false\" name=\"get_info_stackoverflow\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Get_Info\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"DjangoTestsConfigurationType\" factoryName=\"Django tests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <option name=\"USE_KEYWORD\" value=\"false\" />\n      <method />\n    </configuration>\n    <list size=\"3\">\n      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.syn_tags\" />\n      <item index=\"1\" class=\"java.lang.String\" itemvalue=\"Python.get_info_git\" />\n      <item index=\"2\" class=\"java.lang.String\" itemvalue=\"Python.get_info_stackoverflow\" />\n    </list>\n    <recent_temporary>\n      <list size=\"3\">\n        <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.get_info_stackoverflow\" />\n        <item index=\"1\" class=\"java.lang.String\" itemvalue=\"Python.get_info_git\" />\n        <item index=\"2\" class=\"java.lang.String\" itemvalue=\"Python.syn_tags\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"ShelveChangesManager\" show_recycled=\"false\">\n    <option name=\"remove_strategy\" value=\"false\" />\n  </component>\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"778d6186-437e-4b56-8ed0-86e00419feed\" name=\"Default\" comment=\"\" />",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Database\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.46770832\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n    </layout>\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/name_form.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"195\">\n          <caret line=\"13\" column=\"0\" lean-forward=\"false\" selection-start-line=\"13\" selection-start-column=\"0\" selection-end-line=\"14\" selection-end-column=\"26\" />\n          <folding>\n            <element signature=\"e#0#22#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"286\">\n          <caret line=\"141\" column=\"0\" lean-forward=\"false\" selection-start-line=\"141\" selection-start-column=\"0\" selection-end-line=\"143\" selection-end-column=\"15\" />\n          <folding>\n            <element signature=\"e#0#15#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"104\">\n          <caret line=\"39\" column=\"53\" lean-forward=\"false\" selection-start-line=\"39\" selection-start-column=\"53\" selection-end-line=\"39\" selection-end-column=\"53\" />\n          <folding>\n            <element signature=\"e#0#11#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"1169\">\n          <caret line=\"226\" column=\"0\" lean-forward=\"true\" selection-start-line=\"226\" selection-start-column=\"0\" selection-end-line=\"226\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#0#9#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "import requests\nimport time\nimport json\nimport multiprocessing\n\ndef delete_duplicate(dict):\n    Info = []",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "def request_url(url,pagesize):\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\n    # cTime = time.time()\n    res = requests.get(url+app)\n    res.encoding = 'utf-8'\n    info = res.json()\n    # print(\"Requesting...:{}\".format(time.time() - cTime))\n    return info\n\ndef extract_dict(res):",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    return dict_info\n\ndef get_langtopics(user):\n    # git_info = []\n    language = []\n    topics = []\n    print(\"Finding languages and topics used by github user: {}\".format(user[\"github_login\"]))\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\"github_login\"])\n    repos = request_url(repo_api, 30)\n\n    for item in repos:\n        # can be  parallel topics & language\n        repo_name = item[\"name\"]\n        # cTime = time.time()\n        repo_topics = requests.get('https://api.github.com/repos/{}/{}/topics?'\n                                   'per_page=10&client_id=ff50be78bda6f9fd0f2f'\n                                   '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\n                                   .format(user[\"github_login\"], repo_name),\n                                   headers={\"Accept\": \"application/vnd.github.mercy-preview+json\"})\n        repo_topics = repo_topics.json()[\"names\"]\n        # print(\"Requesting...:{}\".format(time.time() - cTime))\n        topics.extend(repo_topics)\n\n        if not item[\"languages_url\"] == None:\n            language_api = item[\"languages_url\"]\n            language_dict = request_url(language_api, 100)\n        else:\n            language_dict = None\n        language.extend(language_dict)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    topics = delete_duplicate(topics)\n    language = delete_duplicate(language)\n\n    print(\"Github user {} languages: {}\".format(user[\"github_login\"], language))\n    print(\"Github user {} topics: {}\\n\".format(user[\"github_login\"], topics))\n    user[\"github_language\"] = language\n    user[\"github_topics\"] = (topics if not topics == [] else \"null\")\n    return user\n\n\ndef get_info(developer_info):\n    Info = []\n    # for item in developer_info:\n        ### For a list of developers, find their url\n    item = developer_info\n    if not item[\"author\"][\"login\"] in Info:\n        author_api = (item[\"author\"][\"url\"] if not item[\"author\"] == None else \"null\")\n    else:\n        author_api = \"null\"\n\n    if not item[\"committer\"][\"login\"] in Info:\n        committer_api = (item[\"committer\"][\"url\"] if not item[\"committer\"] == None else \"null\")\n    else:\n        committer_api = \"null\"\n\n    if not author_api == \"null\":\n        author_info = request_url(author_api, 100)\n        author_info = extract_dict(author_info)\n        Info.append(author_info)\n\n    if not committer_api == \"null\":\n        committer_info = request_url(committer_api, 100)\n        committer_info = extract_dict(committer_info)\n        Info.append(committer_info)\n\n    return Info\n\ndef search_info(developer_login):\n    Info = []",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    print(time.time() - cTime)\n    return git_info\n\ndef multi_Prcapi(commit_api):\n    developer_info = request_url(commit_api, 5)\n    print(\"Getting info of user in the commit history...\")\n\n    cTime = time.time()\n    pool = multiprocessing.Pool(processes=10)\n    git_info = pool.map(get_info,developer_info)\n    print(time.time() - cTime)\n    pool.close()\n    pool.join()\n    merge_info = []\n    for developer in git_info:\n        merge_info.extend(developer)\n\n    cTime = time.time()\n    merge_info = delete_duplicate(merge_info)\n    pool = multiprocessing.Pool(processes=10)\n    merge_info = pool.map(get_langtopics,merge_info)\n    print(time.time() - cTime)\n    pool.close()\n    pool.join()\n    return merge_info\n\ndef multi_Prclist(name_list):\n    print(\"Getting info of user in the commit history...\")\n    cTime = time.time()\n    pool = multiprocessing.Pool(processes=10)\n    git_info = pool.map(search_info,name_list)\n    print(time.time() - cTime)\n    pool.close()\n    pool.join()\n    merge_info = []\n    for developer in git_info:\n        merge_info.extend(developer)\n\n    cTime = time.time()\n    merge_info = delete_duplicate(merge_info)\n    pool = multiprocessing.Pool(processes=10)\n    merge_info = pool.map(get_langtopics,merge_info)\n    print(time.time() - cTime)\n    pool.close()\n    pool.join()\n    return merge_info\n\n\n\nif __name__ == '__main__':\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n\n    git_info = multi_Prcapi(git_api)\n    info_file = '/home/ace/zsj/GetInfo/Info/awesome_match_5.json'\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(info_file, 'w') as ctfile:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import time\nimport urllib\nimport urllib.error\nimport multiprocessing\nimport requests\nimport sys\nimport json\nimport Get_Info.get_info_git as gt\nimport Get_Info.name_form as nf\nfrom Get_Info import levenshtein as le",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "        return []\n\n\ndef match_account(git_developer):\n    syn_file = sys.path[0] + \"/Info/syn_list.json\"\n    syn_list = open(syn_file, encoding='utf-8')\n\n    default_info = []\n    # Merge the languages and topics to github_tags\n    git_developer = merge_langtopics(git_developer)\n    # print(\"Finding Github user {} on Stack Overflow...\".format(git_developer[\"name\"]))\n    possible_name = nf.possible_names(git_developer[\"name\"], git_developer[\"github_login\"])\n    print(\"Possible name of {}: {}\".format(git_developer[\"name\"],possible_name))\n\n    for name in possible_name:\n        # All info of developers whose username contains the input name\n        stk_info = InfoByName(name)\n        stk_info = gt.delete_duplicate(stk_info)\n\n        if not stk_info == default_info:\n            print(\"The possible info of Stack Overflow user {} is {}\".format(name, stk_info))\n            cTime = time.time()\n\n            for stk_developer in stk_info:\n                user_id = stk_developer['user_id']\n                git_account = GetGitAccount(user_id)\n\n                if git_account == git_developer[\"github_login\"]:\n                    git_developer[\"stackoverflow_login\"] = stk_developer[\"display_name\"]\n                    print(time.time() - cTime)\n                    break\n\n            # Continue to establish mapping if the possible match has been found?\n            if git_developer[\"stackoverflow_login\"] == \"null\" or git_developer[\"stackoverflow_login\"] == []:\n                git_developer[\"stackoverflow_login\"] = []\n                print(\"\\nNo linked account has been found. Mapping the users using tags and location...\")\n                print(\"{} tags: {}\".format(git_developer[\"github_login\"], git_developer[\"github_tags\"]))\n\n                cTime = time.time()\n                for stk_developer in stk_info:\n                    developer_tags = get_tags(stk_developer)\n                    stk_developer[\"tags\"] = developer_tags\n                    match_name = match_info(git_developer, stk_developer, syn_list, 1)\n                    if not match_name == []:\n                        git_developer[\"stackoverflow_login\"].append(match_name)\n                print(time.time() - cTime)\n            else:\n                break\n\n    if not git_developer[\"stackoverflow_login\"] == \"null\" and not git_developer[\"stackoverflow_login\"] == []:\n        print(\"The Stack Overflow display_name for github user {}: {}\".format(git_developer[\"name\"],\n                                                                              git_developer['stackoverflow_login']))\n    else:\n        git_developer[\"stackoverflow_login\"] = \"null\"\n        print(\"The Stack Overflow display_name for github user {} not found\".format(git_developer[\"name\"]))\n    return git_developer\n\n\ndef multi_match(git_developers):\n    pool = multiprocessing.Pool(processes=10)\n    git_info = pool.map(match_account,git_developers)\n    pool.close()\n    pool.join()\n    return git_info\n\nif __name__ == '__main__':\n    Info_path = sys.path[0] + \"/Info\"\n    info_file = Info_path + '/login_try.json'\n    git_info = open(info_file, encoding='utf-8')\n    git_info = json.load(git_info)\n    stk_count = total_count = 0\n\n    cTime = time.time()\n    print(\"Matching developers between Github and Stack Overflow...\")\n    match_info = multi_match(git_info)\n    print(time.time() - cTime)\n\n    for item in match_info:\n        if not item[\"stackoverflow_login\"] == \"null\":\n            stk_count = stk_count + 1\n        total_count = total_count + 1\n\n    print(\"\\n The number of developers with Stack Overflow account is {}\".format(stk_count))\n    print(\"The number of developers is {}\".format(total_count))\n    print(\"Ratio:{}\".format(round(stk_count / total_count, 4)))\n\n    print(\"Saving the results of matching...\")\n    cTime = time.time()\n    file = Info_path + '/awesome_info_1.json'\n    with open(info_file, 'w') as ctfile:\n        json.dump(match_info, ctfile, indent=3)\n    print(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "    output_file = Info_path + '/{}'.format(sys.argv[3])\n    name_list = open(name_file, encoding='utf-8')\n    name_list = json.load(name_list)\n    git_info = gt.multi_Prclist(name_list)\n\n    cTime = time.time()\n    print(\"Dumping the info...\")",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "elif sys.argv[1] == '--cm':\n    # 'sindresorhus/awesome'\n    git_api = 'https://api.github.com/repos/{}/commits'.format(sys.argv[2])\n    git_info = gt.multi_Prcapi(git_api)\n    output_file = Info_path + '/{}'.format(sys.argv[3])\n\n    cTime = time.time()",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "\nelif sys.argv[1] == '--mp':\n    info_file = Info_path + '/{}'.format(sys.argv[2])\n\n    git_info = open(info_file, encoding='utf-8')\n    git_info = json.load(git_info)\n    stk_count = total_count = 0\n\n    cTime = time.time()\n    print(\"Matching developers between Github and Stack Overflow...\")\n    match_info = st.multi_match(git_info)\n    print(time.time() - cTime)\n\n    for item in match_info:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-12 22:22:52 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "import multiprocessing\nimport time\n\n\ndef f(x):\n    for i in range(x):\n        for j in range(i):\n            print(j)\n    # time.sleep(2)\n    print(x)\n\n\nif __name__ == '__main__':\n    pool = multiprocessing.Pool(processes=5)\n    pool.map(f, range(10))",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:29:46 +0800",
      "file": "git/history/output/commit_history.json",
      "code_snippet": "[\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir <--fsearch|--search|--mapping>\\n\\\"\\\"\\\"\\n\\nimport json\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"    # check and process input arguments\\n    if len(sys.argv) != 4:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\")\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\n    if not os.path.exists(output_dir):\\n        try:\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Wrong argument!\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\\\")\\n\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:17:00 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        # elif len(snippet_minus):\\n            # snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        else:\\n            snippet = str()\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"    return snippet_list\\n\\n\\ndef get_date(line):\\n    regex = re.compile(\\\"date:\\\\s([0-9\\\\-:+\\\\s]*)\\\\sauthor:\\\")\\n    date = regex.findall(line)\\n    return date\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"    else:\\n        return 0\\n\\n\\ndef get_line_index(inp):\\n    a_start_line_list = list()\\n    a_total_line_list = list()\\n    b_start_line_list = list()\\n    b_total_line_list = list()\\n    lines = inp.split(\\\"\\\\n\\\")\\n    regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n    regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n    regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n    regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n    for line in lines:\\n        a_start_line = regex_a_start.findall(line)\\n        a_total_line = regex_a_total.findall(line)\\n        b_start_line = regex_b_start.findall(line)\\n        b_total_line = regex_b_total.findall(line)\\n        a_start_line_list.extend(a_start_line)\\n        a_total_line_list.extend(a_total_line)\\n        b_start_line_list.extend(b_start_line)\\n        b_total_line_list.extend(b_total_line)\\n    return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"            email = get_info.get_email(line)\\n            if len(email):\\n                commit_author = author[0]\\n                commit_email = email[0]\\n                commit_date = get_info.get_date(line)\\n                if len(commit_date):\\n                    commit_date = commit_date[0]\\n        elif get_info.get_change_file(line):\\n            commit_file = get_info.get_change_file(line)\\n            # code_dict['file'] = commit_file[0]\\n        elif get_info.get_change_section(line):\\n            code_dict['file'] = commit_file[0]\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            code_dict['commit_date'] = commit_date\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Commit Date: {}\\\".format(code['commit_date']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(code[\\\"code_snippet\\\"])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"code_snippet\": \"\\n\\ndef print_match_result(data_list):\\n    print('\\\\033[1;34m')\\n    print(\\\"Found {} match result\\\".format(len(data_list)))\\n    for data in data_list:\\n        print('\\\\033[1;31m')\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Commit Date: {}\\\".format(data['commit_date']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(data[\\\"code_snippet\\\"])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-09 12:11:20 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\n\\nAuthor: ch-chiu\\n\\n## Usage\",\n      \"author\": \"Zimeng Qiu\",\n      \"commit_date\": \"2017-10-07 21:49:49 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\n$ python your_dir_of_main.py input output_dir <--mapping|--fsearch|--search>\\n```\\n\\n## Mapping Mode\\n\\nThis mode use command like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file/folder output_dir --mapping\\n```\\n\\nThe script will generate a JSON file in output directory including author, file name and committed code snippets of every commit.\\n\\nYou can explore all time commit history by either scrolling screen or looking up generated JSON file.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.32.12%20PM.png)\\n\\n## Code File Search Mode\\n\\nRun like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file output_dir --fsearch\\n```\\n\\nThis mode enable you to search a code snippet in git commit history of a file or whole directory and find who created this code snippet and which file is this snippet in.\\n\\nAttention: The input code file of this mode is not a complete file from git repository, it actually stores a copy of code snippet that you might come across from somewhere of web but you are not sure which project or file it belongs to. At this time, you can copy this code snippet and save it as a .txt file as input code file of this mode. Then the script will automatically find the information you want.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.14%20PM.png)\\n\\n## Code Search Mode\\n\\nRun like this:\\n\\n```\\n$ python your_dir_of_main.py \\\"your code snippet\\\" output_dir --search\\n```\\n\\nThis mode generally has the same function with ```--fsearch``` mode. However, unlike that mode, this one enables you avoid save code snippet as a .txt file, instead, you can copy them in terminal and run command directly.\\n\\nAttention: Remember to add \\\"\\\" to declare your code snippet as a string.\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.32%20PM.png)\",\n      \"author\": \"Zimeng Qiu\",\n      \"commit_date\": \"2017-10-07 21:49:49 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\\n            code_list.append(code_dict)\\n    return code_list\\n\\n\\ndef print_code_list(code_list):\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"        # snippet = code[\\\"code_snippet\\\"]\\n        # for line in snippet:\\n        #     print(line)\\n        print(code[\\\"code_snippet\\\"])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"code_snippet\": \"        if input_code in code['code_snippet']:\\n            match_data = code\\n            match_data_list.append(match_data)\\n    return match_data_list\\n\\n\\ndef print_match_result(data_list):\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    if func_argv == \\\"--mapping\\\":\\n        if not os.path.exists(input_file):\\n            print(\\\"{}: No such file or directory\\\".format(input_file))\\n        else:\\n            commit_history = mapping.get_code(input_file)\\n            mapping.print_code_list(commit_history)\\n            history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n            with open(history_file, 'w') as f:\\n                json.dump(commit_history, f, indent=3)\\n    elif func_argv == \\\"--fsearch\\\":\\n        commit_history = mapping.get_code(dir_path)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n        input_code = search_commit_history.get_input_code(input_file)\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    elif func_argv == \\\"--search\\\":\\n        commit_history = mapping.get_code(dir_path)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n        input_code = input_file\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Wrong argument!\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/test.txt\",\n      \"code_snippet\": \"from commit_history import mapping\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 21:33:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"    return email\\n\\n\\ndef get_file_name(line):\\n    regex = re.compile(\\\"\\\\+{3}\\\\sb/(.*)$\\\")\\n    file_name = regex.findall(line)\\n    return file_name\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = str()\\n            # snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"    else:\\n        return 0\\n\\n\\ndef get_change_file(line):\\n    regex = re.compile(\\\"diff\\\\s--git\\\\sa/.*\\\\sb/(.*)$\\\")\\n    file_name = regex.findall(line)\\n    if file_name:\\n        return file_name\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        author = get_info.get_author(line)\\n        if len(author):\\n            email = get_info.get_email(line)\\n            if len(email):\\n                commit_author = author[0]\\n                # code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = email[0]\\n                # code_dict['email'] = commit_email\\n                # print(commit_email)\\n                # code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n                # code_dict['code_snippet'] = code_snippet\\n        elif get_info.get_change_file(line):\\n            commit_file = get_info.get_change_file(line)\\n            code_dict['file'] = commit_file[0]\\n        elif get_info.get_change_section(line):\\n            code_dict['file'] = commit_file[0]\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = \\\"\\\\n\\\".join(code_snippet)\\n            code_list.append(code_dict)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"File Name: {}\\\".format(code['file']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        # snippet = code[\\\"code_snippet\\\"]\\n        # for line in snippet:\\n        #     print(line)\\n        print(code[\\\"code_snippet\\\"])\\n    return code_list\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/git_search/search_commit_history.py\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtility for searching code snippet in git commit history\\n\\\"\\\"\\\"\\n\\nimport os\\nimport json\\n\\n\\ndef get_input_code(input_file):\\n    input_code = open(input_file).read()\\n    return input_code\\n\\n\\ndef search_in_history(input_code, output_dir):\\n    history_file = os.path.join(output_dir, 'commit_history.json')\\n    with open(history_file) as f:\\n        history = json.load(f)\\n    match_data_list = list()\\n    for code in history:\\n        if input_code in code['code_snippet']:\\n            match_data = code\\n            match_data_list.append(match_data)\\n    if len(match_data_list):\\n        return match_data_list\\n    else:\\n        return \\\"Error! No data in this git repository match with input code.\\\"\\n\\n\\ndef print_match_result(data_list):\\n    print(\\\"Found {} match result\\\".format(len(data_list)))\\n    for data in data_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(data['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(data['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"File Name: {}\\\".format(data['file']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        print(data[\\\"code_snippet\\\"])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir <--search|--mapping>\\n\\\"\\\"\\\"\\n\\nimport json\\nimport logging\\nimport os\\nimport sys\\n\\nfrom commit_history import mapping\\nfrom git_search import search_commit_history\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"    logger.info(\\\"running %s \\\" % ' '.join(sys.argv))\\n\\n    # check and process input arguments\\n    if len(sys.argv) != 4:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n    input_file, output_dir, func_argv = sys.argv[1:4]\\n    if not os.path.exists(output_dir):\\n        try:\\n            os.makedirs(output_dir)\\n        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    if func_argv == \\\"--mapping\\\":\\n        commit_history = mapping.get_code(input_file)\\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n        with open(history_file, 'w') as f:\\n            json.dump(commit_history, f, indent=3)\\n    elif func_argv == \\\"--search\\\":\\n        if not os.path.exists(os.path.join(output_dir, 'commit_history.json')):\\n            try:\\n                commit_history = mapping.get_code(input_file)\\n                history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\\n                with open(history_file, 'w') as f:\\n                    json.dump(commit_history, f, indent=3)\\n            except OSError as exception:\\n                raise SystemExit(\\\"Error: Search failed\\\")\\n        input_code = search_commit_history.get_input_code(input_file)\\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\\n        search_commit_history.print_match_result(search_result)\\n    else:\\n        print(\\\"Lack of argument\\\")\\n        print(\\\"Usage: python main.py input_code_file output_dir <--search|--mapping>\\\")\\n\\n\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-07 18:49:18 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/get_info.py\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtilities to get some information from github commit history\\n\\\"\\\"\\\"\\n\\nimport re\\n\\n\\ndef get_author(line):\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\semail\\\")\\n    author = regex.findall(line)\\n    return author\\n\\n\\ndef get_email(line):\\n    # TODO: resolve \\\".com.cn\\\" or \\\".edu.cn\\\" case\\n    regex = re.compile(\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\.[a-zA-Z0-9_-]+)\\\")\\n    email = regex.findall(line)\\n    return email\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s+(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\\n        snippet_minus = regex_minus.findall(line)\\n        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\\n            snippet_list.append(snippet[0])\\n    return snippet_list\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\\n        return 1\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\\n#     b_start_line_list = list()\\n#     b_total_line_list = list()\\n#     lines = inp.split(\\\"\\\\n\\\")\\n#     regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n#     regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n#     regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n#     regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n#     for line in lines:\\n#         a_start_line = regex_a_start.findall(line)\\n#         a_total_line = regex_a_total.findall(line)\\n#         b_start_line = regex_b_start.findall(line)\\n#         b_total_line = regex_b_total.findall(line)\\n#         a_start_line_list.extend(a_start_line)\\n#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/commit_history/mapping.py\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUtilities mapping code snippets of every commit with author\\n\\\"\\\"\\\"\\n\\nimport os\\nfrom commit_history import get_info\\n\\n\\ndef get_code(inp):\\n    code_list = list()\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\" \\\\\\n              \\\"--abbrev-commit -p \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    # print(data)\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        tmp = get_info.get_author(line)\\n        if len(tmp):\\n            commit_author = tmp[0]\\n            tmp = get_info.get_email(line)\\n            if len(tmp):\\n                code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = tmp[0]\\n                code_dict['email'] = commit_email\\n                # print(commit_email)\\n                code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n                code_dict['code_snippet'] = code_snippet\\n                # code_list.append(code_dict)\\n        elif get_info.get_change_section(line):\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = code_snippet\\n            code_list.append(code_dict)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(code['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(code['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        snippet = code[\\\"code_snippet\\\"]\\n        for line in snippet:\\n            print(line)\\n    return code_list\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"import logging\\nimport os\\nimport sys\\n\\nfrom commit_history import mapping\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = mapping.get_code(input_file)\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-05 14:50:59 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\n$ python your_dir_of_main.py input_code_file/folder output_dir\\n```\\n\\n## Output\\n\\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-03%20at%204.31.52%20PM.png)\\n\",\n      \"author\": \"Zimeng Qiu\",\n      \"commit_date\": \"2017-10-03 16:43:31 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"cd a folder which is a git repository, then run like this:\\n\\n```\\npython your_dir_of_main.py input_code_file/folder output_dir\\n```\",\n      \"author\": \"Zimeng Qiu\",\n      \"commit_date\": \"2017-10-03 16:26:55 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\nAuthor: ch-chiu\\n\\n## Usage\\n\\ncd a folder which is a git repository, then run like this:\\n\\n```\\n%(program)s input_code_file/folder output_dir\\n```\",\n      \"author\": \"Zimeng Qiu\",\n      \"commit_date\": \"2017-10-03 16:26:09 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"dir_path = os.path.dirname(os.path.realpath(__file__))\\n\\n\\ndef get_author(line):\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\semail\\\")\\n    author = regex.findall(line)\\n    return author\\n\\n\\ndef get_email(line):\\n    # TODO: resolve \\\".com.cn\\\" or \\\".edu.cn\\\" case\\n    regex = re.compile(\\\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\\\.[a-zA-Z0-9_-]+)\\\")\\n    email = regex.findall(line)\\n    return email\\n\\n\\ndef get_code_snippet(lines):\\n    snippet_list = list()\\n    snippet = list()\\n    regex_plus = re.compile(\\\"^\\\\+(?!\\\\+\\\\+)(.*)$\\\")\\n    regex_minus = re.compile(\\\"^-(?!--)(.*)$\\\")\\n    regex_remain = re.compile(\\\"^\\\\s+(.*)\\\")\\n    regex_pause = re.compile(\\\"^(@@|hash)\\\")\\n    for line in lines:\\n        snippet_plus = regex_plus.findall(line)\\n        snippet_minus = regex_minus.findall(line)\\n        snippet_remain = regex_remain.findall(line)\\n        if len(snippet_plus):\\n            snippet = snippet_plus\\n        elif len(snippet_minus):\\n            snippet = snippet_minus\\n        elif len(snippet_remain):\\n            snippet = snippet_remain\\n        if regex_pause.findall(line):\\n            break\\n        if len(snippet):\\n            snippet_list.append(snippet[0])\\n    return snippet_list\\n\\n\\ndef get_change_section(line):\\n    regex = re.compile(\\\"^@@\\\")\\n    if regex.findall(line):\\n        return 1\\n    else:\\n        return 0\\n\\n# def get_line_index(inp):\\n#     a_start_line_list = list()\\n#     a_total_line_list = list()\\n#     b_start_line_list = list()\\n#     b_total_line_list = list()\\n#     lines = inp.split(\\\"\\\\n\\\")\\n#     regex_a_start = re.compile(\\\"@@\\\\s-(\\\\d+),\\\\d+\\\\s\\\")\\n#     regex_a_total = re.compile(\\\"@@\\\\s-\\\\d+,(\\\\d+)\\\\s\\\")\\n#     regex_b_start = re.compile(\\\"\\\\+(\\\\d+),\\\\d+\\\\s@@\\\")\\n#     regex_b_total = re.compile(\\\"\\\\+\\\\d+,(\\\\d+)\\\\s@@\\\")\\n#     for line in lines:\\n#         a_start_line = regex_a_start.findall(line)\\n#         a_total_line = regex_a_total.findall(line)\\n#         b_start_line = regex_b_start.findall(line)\\n#         b_total_line = regex_b_total.findall(line)\\n#         a_start_line_list.extend(a_start_line)\\n#         a_total_line_list.extend(a_total_line)\\n#         b_start_line_list.extend(b_start_line)\\n#         b_total_line_list.extend(b_total_line)\\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\\n\\n\\ndef get_code(inp):\\n    code_list = list()\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \\\" \\\\\\n              \\\"--abbrev-commit -p \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    # print(data)\\n    lines = data.split(\\\"\\\\n\\\")\\n    for index, line in enumerate(lines):\\n        code_dict = dict()\\n        tmp = get_author(line)\\n        if len(tmp):\\n            commit_author = tmp[0]\\n            tmp = get_email(line)\\n            if len(tmp):\\n                code_dict['author'] = commit_author\\n                # print(commit_author)\\n                commit_email = tmp[0]\\n                code_dict['email'] = commit_email\\n                # print(commit_email)\\n                code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\n                code_dict['code_snippet'] = code_snippet\\n                # code_list.append(code_dict)\\n        elif get_change_section(line):\\n            code_dict['author'] = commit_author\\n            # print(commit_author)\\n            code_dict['email'] = commit_email\\n            # print(commit_email)\\n            code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\\n            code_dict['code_snippet'] = code_snippet\\n            code_list.append(code_dict)\\n    # (fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list) = get_line_index(data)\\n    # code_data = zip(commit_author, commit_email, fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list)\\n    # code_dict = [{\\\"author\\\": author, \\\"email\\\": email, \\\"a_start_line\\\": a_start_line, \\\"a_total_line\\\": a_total_line,\\n    #                  \\\"b_start_line\\\": b_start_line, \\\"b_total_line\\\": b_total_line}\\n    #              for author, email, a_start_line, a_total_line, b_start_line, b_total_line in code_data]\\n    # print(code_list)\\n    for code in code_list:\\n        print('\\\\033[1;31m')\\n        print('*' * 150)\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Author: {}\\\".format(code['author']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"Email: {}\\\".format(code['email']))\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print(\\\"\\\")\\n        print('*' * 150)\\n        print('\\\\033[0m')\\n        snippet = code[\\\"code_snippet\\\"]\\n        for line in snippet:\\n            print(line)\\n    return code_list\\n\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-03 16:21:52 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = get_code(input_file)\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-03 16:21:52 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"import logging\\nimport os\\nimport sys\\nimport re\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"    data = input_data.read()\\n    return data\\n\\n\\ndef get_author(inp, outp):\\n    author_list = list()\\n    command = \\\"git log --pretty=format:'author: %aN' \\\" + inp\\n    input_data = os.popen(command)\\n    lines = input_data.readlines()\\n    regex = re.compile(\\\"author:\\\\s(.*)?\\\\n?\\\")\\n    for line in lines:\\n        author = regex.findall(line)[0]\\n        author_list.append(author)\\n    return author_list\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"\\n    commit_history = get_code(input_file)\\n    print(commit_history)\\n    commit_author = get_author(input_file, output_dir)\\n    print(commit_author)\\n\\n\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 21:28:17 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/history.iml\",\n      \"code_snippet\": \"\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/misc.xml\",\n      \"code_snippet\": \"\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/modules.xml\",\n      \"code_snippet\": \"\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"code_snippet\": \"\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:49:27 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"code_snippet\": \"      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"259\\\">\\n              <caret line=\\\"38\\\" column=\\\"33\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"38\\\" selection-start-column=\\\"33\\\" selection-end-line=\\\"38\\\" selection-end-column=\\\"33\\\" />\\n              <folding>\\n                <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n              </folding>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:46:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"code_snippet\": \"    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"259\\\">\\n          <caret line=\\\"38\\\" column=\\\"33\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"38\\\" selection-start-column=\\\"33\\\" selection-end-line=\\\"38\\\" selection-end-column=\\\"33\\\" />\\n          <folding>\\n            <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n          </folding>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:46:30 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/history.iml\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<module type=\\\"PYTHON_MODULE\\\" version=\\\"4\\\">\\n  <component name=\\\"NewModuleRootManager\\\">\\n    <content url=\\\"file://$MODULE_DIR$\\\" />\\n    <orderEntry type=\\\"inheritedJdk\\\" />\\n    <orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TestRunnerService\\\">\\n    <option name=\\\"projectConfiguration\\\" value=\\\"Nosetests\\\" />\\n    <option name=\\\"PROJECT_TEST_RUNNER\\\" value=\\\"Nosetests\\\" />\\n  </component>\\n</module>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/misc.xml\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectRootManager\\\" version=\\\"2\\\" project-jdk-name=\\\"Python 3.5.2 (~/anaconda3/bin/python)\\\" project-jdk-type=\\\"Python SDK\\\" />\\n</project>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/modules.xml\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ProjectModuleManager\\\">\\n    <modules>\\n      <module fileurl=\\\"file://$PROJECT_DIR$/.idea/history.iml\\\" filepath=\\\"$PROJECT_DIR$/.idea/history.iml\\\" />\\n    </modules>\\n  </component>\\n</project>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/.idea/workspace.xml\",\n      \"code_snippet\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project version=\\\"4\\\">\\n  <component name=\\\"ChangeListManager\\\">\\n    <list default=\\\"true\\\" id=\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n    <option name=\\\"EXCLUDED_CONVERTED_TO_IGNORED\\\" value=\\\"true\\\" />\\n    <option name=\\\"TRACKING_ENABLED\\\" value=\\\"true\\\" />\\n    <option name=\\\"SHOW_DIALOG\\\" value=\\\"false\\\" />\\n    <option name=\\\"HIGHLIGHT_CONFLICTS\\\" value=\\\"true\\\" />\\n    <option name=\\\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\\\" value=\\\"false\\\" />\\n    <option name=\\\"LAST_RESOLUTION\\\" value=\\\"IGNORE\\\" />\\n  </component>\\n  <component name=\\\"CreatePatchCommitExecutor\\\">\\n    <option name=\\\"PATCH_PATH\\\" value=\\\"\\\" />\\n  </component>\\n  <component name=\\\"ExecutionTargetManager\\\" SELECTED_TARGET=\\\"default_target\\\" />\\n  <component name=\\\"FileEditorManager\\\">\\n    <leaf>\\n      <file leaf-file-name=\\\"main.py\\\" pinned=\\\"false\\\" current-in-tab=\\\"true\\\">\\n        <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n          <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n            <state relative-caret-position=\\\"34\\\">\\n              <caret line=\\\"23\\\" column=\\\"15\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"23\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"23\\\" selection-end-column=\\\"15\\\" />\\n              <folding>\\n                <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n              </folding>\\n            </state>\\n          </provider>\\n        </entry>\\n      </file>\\n    </leaf>\\n  </component>\\n  <component name=\\\"FileTemplateManagerImpl\\\">\\n    <option name=\\\"RECENT_TEMPLATES\\\">\\n      <list>\\n        <option value=\\\"Python Script\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"IdeDocumentHistory\\\">\\n    <option name=\\\"CHANGED_PATHS\\\">\\n      <list>\\n        <option value=\\\"$PROJECT_DIR$/main.py\\\" />\\n      </list>\\n    </option>\\n  </component>\\n  <component name=\\\"ProjectFrameBounds\\\">\\n    <option name=\\\"x\\\" value=\\\"4\\\" />\\n    <option name=\\\"y\\\" value=\\\"22\\\" />\\n    <option name=\\\"width\\\" value=\\\"1436\\\" />\\n    <option name=\\\"height\\\" value=\\\"878\\\" />\\n  </component>\\n  <component name=\\\"ProjectView\\\">\\n    <navigator currentView=\\\"ProjectPane\\\" proportions=\\\"\\\" version=\\\"1\\\">\\n      <flattenPackages />\\n      <showMembers />\\n      <showModules />\\n      <showLibraryContents />\\n      <hideEmptyPackages />\\n      <abbreviatePackageNames />\\n      <autoscrollToSource />\\n      <autoscrollFromSource />\\n      <sortByType />\\n      <manualOrder />\\n      <foldersAlwaysOnTop value=\\\"true\\\" />\\n    </navigator>\\n    <panes>\\n      <pane id=\\\"Scope\\\" />\\n      <pane id=\\\"ProjectPane\\\">\\n        <subPane>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n          <PATH>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"history\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n            <PATH_ELEMENT>\\n              <option name=\\\"myItemId\\\" value=\\\"example\\\" />\\n              <option name=\\\"myItemType\\\" value=\\\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\\\" />\\n            </PATH_ELEMENT>\\n          </PATH>\\n        </subPane>\\n      </pane>\\n      <pane id=\\\"Scratches\\\" />\\n    </panes>\\n  </component>\\n  <component name=\\\"PropertiesComponent\\\">\\n    <property name=\\\"settings.editor.selected.configurable\\\" value=\\\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\\\" />\\n  </component>\\n  <component name=\\\"RunManager\\\" selected=\\\"Python.main\\\">\\n    <configuration default=\\\"false\\\" name=\\\"main\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\" temporary=\\\"true\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"$PROJECT_DIR$\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"$PROJECT_DIR$/main.py\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"README.md output\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"PythonConfigurationType\\\" factoryName=\\\"Python\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs>\\n        <env name=\\\"PYTHONUNBUFFERED\\\" value=\\\"1\\\" />\\n      </envs>\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"PARAMETERS\\\" value=\\\"\\\" />\\n      <option name=\\\"SHOW_COMMAND_LINE\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"Tox\\\" factoryName=\\\"Tox\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Attests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Doctests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Nosetests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"Unittests\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"PUREUNITTEST\\\" value=\\\"true\\\" />\\n      <option name=\\\"PARAMS\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <configuration default=\\\"true\\\" type=\\\"tests\\\" factoryName=\\\"py.test\\\">\\n      <option name=\\\"INTERPRETER_OPTIONS\\\" value=\\\"\\\" />\\n      <option name=\\\"PARENT_ENVS\\\" value=\\\"true\\\" />\\n      <envs />\\n      <option name=\\\"SDK_HOME\\\" value=\\\"\\\" />\\n      <option name=\\\"WORKING_DIRECTORY\\\" value=\\\"\\\" />\\n      <option name=\\\"IS_MODULE_SDK\\\" value=\\\"false\\\" />\\n      <option name=\\\"ADD_CONTENT_ROOTS\\\" value=\\\"true\\\" />\\n      <option name=\\\"ADD_SOURCE_ROOTS\\\" value=\\\"true\\\" />\\n      <module name=\\\"history\\\" />\\n      <option name=\\\"SCRIPT_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"CLASS_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"METHOD_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"FOLDER_NAME\\\" value=\\\"\\\" />\\n      <option name=\\\"TEST_TYPE\\\" value=\\\"TEST_SCRIPT\\\" />\\n      <option name=\\\"PATTERN\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PATTERN\\\" value=\\\"false\\\" />\\n      <option name=\\\"testToRun\\\" value=\\\"\\\" />\\n      <option name=\\\"keywords\\\" value=\\\"\\\" />\\n      <option name=\\\"params\\\" value=\\\"\\\" />\\n      <option name=\\\"USE_PARAM\\\" value=\\\"false\\\" />\\n      <option name=\\\"USE_KEYWORD\\\" value=\\\"false\\\" />\\n      <method />\\n    </configuration>\\n    <list size=\\\"1\\\">\\n      <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.main\\\" />\\n    </list>\\n    <recent_temporary>\\n      <list size=\\\"1\\\">\\n        <item index=\\\"0\\\" class=\\\"java.lang.String\\\" itemvalue=\\\"Python.main\\\" />\\n      </list>\\n    </recent_temporary>\\n  </component>\\n  <component name=\\\"ShelveChangesManager\\\" show_recycled=\\\"false\\\">\\n    <option name=\\\"remove_strategy\\\" value=\\\"false\\\" />\\n  </component>\\n  <component name=\\\"TaskManager\\\">\\n    <task active=\\\"true\\\" id=\\\"Default\\\" summary=\\\"Default task\\\">\\n      <changelist id=\\\"b852bcfd-6593-4ce5-850b-383493b2292f\\\" name=\\\"Default\\\" comment=\\\"\\\" />\\n      <created>1506936120824</created>\\n      <option name=\\\"number\\\" value=\\\"Default\\\" />\\n      <option name=\\\"presentableId\\\" value=\\\"Default\\\" />\\n      <updated>1506936120824</updated>\\n    </task>\\n    <servers />\\n  </component>\\n  <component name=\\\"ToolWindowManager\\\">\\n    <frame x=\\\"4\\\" y=\\\"22\\\" width=\\\"1436\\\" height=\\\"878\\\" extended-state=\\\"6\\\" />\\n    <editor active=\\\"true\\\" />\\n    <layout>\\n      <window_info id=\\\"Project\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.24946997\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"TODO\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"6\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Event Log\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Version Control\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"false\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Python Console\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Run\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"true\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.32951653\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Structure\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Terminal\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Favorites\\\" active=\\\"false\\\" anchor=\\\"left\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"-1\\\" side_tool=\\\"true\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Debug\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.3994911\\\" sideWeight=\\\"0.5\\\" order=\\\"3\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Cvs\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"4\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Hierarchy\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"2\\\" side_tool=\\\"false\\\" content_ui=\\\"combo\\\" />\\n      <window_info id=\\\"Message\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Commander\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"0\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Find\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.33\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Inspection\\\" active=\\\"false\\\" anchor=\\\"bottom\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.4\\\" sideWeight=\\\"0.5\\\" order=\\\"5\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n      <window_info id=\\\"Ant Build\\\" active=\\\"false\\\" anchor=\\\"right\\\" auto_hide=\\\"false\\\" internal_type=\\\"DOCKED\\\" type=\\\"DOCKED\\\" visible=\\\"false\\\" show_stripe_button=\\\"true\\\" weight=\\\"0.25\\\" sideWeight=\\\"0.5\\\" order=\\\"1\\\" side_tool=\\\"false\\\" content_ui=\\\"tabs\\\" />\\n    </layout>\\n  </component>\\n  <component name=\\\"VcsContentAnnotationSettings\\\">\\n    <option name=\\\"myLimit\\\" value=\\\"2678400000\\\" />\\n  </component>\\n  <component name=\\\"XDebuggerManager\\\">\\n    <breakpoint-manager>\\n      <breakpoints>\\n        <line-breakpoint enabled=\\\"true\\\" suspend=\\\"THREAD\\\" type=\\\"python-line\\\">\\n          <url>file://$PROJECT_DIR$/main.py</url>\\n          <line>23</line>\\n          <option name=\\\"timeStamp\\\" value=\\\"2\\\" />\\n        </line-breakpoint>\\n      </breakpoints>\\n      <option name=\\\"time\\\" value=\\\"3\\\" />\\n    </breakpoint-manager>\\n    <watches-manager />\\n  </component>\\n  <component name=\\\"editorHistoryManager\\\">\\n    <entry file=\\\"file://$PROJECT_DIR$/example/rusthon_log.txt\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"LargeFileEditor\\\">\\n        <state />\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$USER_HOME$/anaconda3/lib/python3.5/encodings/ascii.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"210\\\">\\n          <caret line=\\\"25\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"25\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"25\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$USER_HOME$/anaconda3/lib/python3.5/codecs.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"148\\\">\\n          <caret line=\\\"320\\\" column=\\\"0\\\" lean-forward=\\\"false\\\" selection-start-line=\\\"320\\\" selection-start-column=\\\"0\\\" selection-end-line=\\\"320\\\" selection-end-column=\\\"0\\\" />\\n          <folding />\\n        </state>\\n      </provider>\\n    </entry>\\n    <entry file=\\\"file://$PROJECT_DIR$/main.py\\\">\\n      <provider selected=\\\"true\\\" editor-type-id=\\\"text-editor\\\">\\n        <state relative-caret-position=\\\"34\\\">\\n          <caret line=\\\"23\\\" column=\\\"15\\\" lean-forward=\\\"true\\\" selection-start-line=\\\"23\\\" selection-start-column=\\\"15\\\" selection-end-line=\\\"23\\\" selection-end-column=\\\"15\\\" />\\n          <folding>\\n            <element signature=\\\"e#238#252#0\\\" expanded=\\\"true\\\" />\\n          </folding>\\n        </state>\\n      </provider>\\n    </entry>\\n  </component>\\n</project>\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/example/record.json\",\n      \"code_snippet\": \"{hash: f21727c ref:  (HEAD -> master) commit_title: Add-ast-part-and-generate-ast-of-the-program-based-on-clang date: 1506932084 author: <Zhenghui Jin> email: <zjin@vmware.com>}\\n{hash: 9558691 ref:  commit_title: update date: 1506751165 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 4c8f4f0 ref:  commit_title: update date: 1506751106 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 1f567c2 ref:  commit_title: update date: 1506751008 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 3e6cb9c ref:  commit_title: update date: 1506749090 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: 4f04f7e ref:  commit_title: update date: 1506748850 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\\n{hash: fc3971a ref:  commit_title: Create-README.md date: 1506748071 author: <Zhe Wang> email: <a63188722@163.com>}\\n{hash: 018bd60 ref:  commit_title: Initial-commit date: 1506746697 author: <Zhe Wang> email: <a63188722@163.com>}\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-10-02 19:43:07 +0800\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"file\": \"git/history/example/rusthon_log.txt\",\n      \"code_snippet\": \"* f21727c  (HEAD -> master) Add-ast-part-and-generate-ast-of-the-program-based-on-clang 3 hours ago <Zhenghui Jin> <zjin@vmware.com>| \\n| diff --git a/ast/PrintAST.py b/ast/PrintAST.py\\n| new file mode 100644\\n| index 0000000..d2ab21d\\n| --- /dev/null\\n| +++ b/ast/PrintAST.py\\n| @@ -0,0 +1,25 @@\\n| +#!/usr/bin/env python\\n| +import os\\n| +\\n| +'''\\n| +    Preprocess of the code. Remove the header files and standard libraries\\n| +'''\\n| +code_path = './example/test.cc'\\n| +path_new = './example/test_new.cc'\\n| +with open(code_path , 'r') as f:\\n| +    lines = f.readlines()\\n| +f.close()\\n| +\\n| +with open(path_new , 'w') as f_new:\\n| +    for line in lines:\\n| +        if '#include' in line:\\n| +            continue\\n| +        f_new.write(line)\\n| +f_new.close()\\n| +\\n| +'''\\n| +    Print AST based on command line\\n| +'''\\n| +command = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\\n| +F = os.popen(command)\\n| +print F.read()\\n| diff --git a/ast/README.md b/ast/README.md\\n| new file mode 100644\\n| index 0000000..59999c1\\n| --- /dev/null\\n| +++ b/ast/README.md\\n| @@ -0,0 +1,10 @@\\n| +# Generate abstract syntax tree \\n| +Author: king-jojo\\n| +\\n| +First install Clang with: \\n| +\\n| +    $ sudo apt-get install clang\\n| +\\n| +Usage: \\n| +\\n| +    \\n| diff --git a/ast/example/test.cc b/ast/example/test.cc\\n| new file mode 100644\\n| index 0000000..33955df\\n| --- /dev/null\\n| +++ b/ast/example/test.cc\\n| @@ -0,0 +1,6 @@\\n| +#include <stdio.h>\\n| +int f(int x){\\n| +  int y = (x * 2);\\n| +  int result = (y / 42);\\n| +  return result;\\n| +}\\n| diff --git a/ast/example/test_new.cc b/ast/example/test_new.cc\\n| new file mode 100644\\n| index 0000000..52c0681\\n| --- /dev/null\\n| +++ b/ast/example/test_new.cc\\n| @@ -0,0 +1,5 @@\\n| +int f(int x){\\n| +  int y = (x * 2);\\n| +  int result = (y / 42);\\n| +  return result;\\n| +}\\n\\n* 9558691  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/user/README.md b/git/user/README.md\\n| index 1568efa..2337cca 100644\\n| --- a/git/user/README.md\\n| +++ b/git/user/README.md\\n| @@ -1,3 +1,3 @@\\n|  # Fetch Other Websites Account via Git Account\\n|  \\n| -Author: AlvinZSJt\\n| +Author: AlvinZSJ\\n\\n* 4c8f4f0  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/history/README.md b/git/history/README.md\\n| index bf31411..f2fad88 100644\\n| --- a/git/history/README.md\\n| +++ b/git/history/README.md\\n| @@ -1,3 +1,2 @@\\n| -# Git Commit History\\n| -\\n| +# Map Git Commit History to Authors\\n|  Author: ch-chiu\\n| diff --git a/git/user/README.md b/git/user/README.md\\n| index 384c03d..1568efa 100644\\n| --- a/git/user/README.md\\n| +++ b/git/user/README.md\\n| @@ -1,3 +1,3 @@\\n| -# Fetch Other Websites Account via Git Accoun\\n| +# Fetch Other Websites Account via Git Account\\n|  \\n|  Author: AlvinZSJt\\n\\n* 1f567c2  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/git/history/README.md b/git/history/README.md\\n| new file mode 100644\\n| index 0000000..bf31411\\n| --- /dev/null\\n| +++ b/git/history/README.md\\n| @@ -0,0 +1,3 @@\\n| +# Git Commit History\\n| +\\n| +Author: ch-chiu\\n| diff --git a/git/user/README.md b/git/user/README.md\\n| new file mode 100644\\n| index 0000000..384c03d\\n| --- /dev/null\\n| +++ b/git/user/README.md\\n| @@ -0,0 +1,3 @@\\n| +# Fetch Other Websites Account via Git Accoun\\n| +\\n| +Author: AlvinZSJt\\n\\n* 3e6cb9c  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/README.md b/README.md\\n| index ab89bcc..b69aded 100644\\n| --- a/README.md\\n| +++ b/README.md\\n| @@ -11,9 +11,7 @@ Our purpose is to make trace open source project more efficient and simple. To r\\n|  ## Project Outline\\n|  \\n|  The whole workflow contains 3 steps.\\n| -\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| -\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\n| -some other trees of code, another way is applying git log api to mapping code with developer.\\n| -\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\n| -visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n| +* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| +* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\\n| +* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n|  \\n\\n* 4f04f7e  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \\n| diff --git a/README.md b/README.md\\n| index ad7247e..ab89bcc 100644\\n| --- a/README.md\\n| +++ b/README.md\\n| @@ -1 +1,19 @@\\n|  # codeTracker\\n| +\\n| +## Obejective\\n| +\\n| +The structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\\n| +\\n| +## Goals\\n| +\\n| +Our purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\\n| +\\n| +## Project Outline\\n| +\\n| +The whole workflow contains 3 steps.\\n| +\\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\\n| +\\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\\n| +some other trees of code, another way is applying git log api to mapping code with developer.\\n| +\\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\\n| +visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\\n| +\\n\\n* fc3971a  Create-README.md 2 days ago <Zhe Wang> <a63188722@163.com>| \\n| diff --git a/README.md b/README.md\\n| new file mode 100644\\n| index 0000000..ad7247e\\n| --- /dev/null\\n| +++ b/README.md\\n| @@ -0,0 +1 @@\\n| +# codeTracker\\n\\n* 018bd60  Initial-commit 2 days ago <Zhe Wang> <a63188722@163.com>  \\n  diff --git a/LICENSE b/LICENSE\\n  new file mode 100644\\n  index 0000000..9cecc1d\\n  --- /dev/null\\n  +++ b/LICENSE\\n  @@ -0,0 +1,674 @@\\n  +                    GNU GENERAL PUBLIC LICENSE\\n  +                       Version 3, 29 June 2007\\n  +\\n  + Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\n  + Everyone is permitted to copy and distribute verbatim copies\\n  + of this license document, but changing it is not allowed.\\n  +\\n  +                            Preamble\\n  +\\n  +  The GNU General Public License is a free, copyleft license for\\n  +software and other kinds of works.\\n  +\\n  +  The licenses for most software and other practical works are designed\\n  +to take away your freedom to share and change the works.  By contrast,\\n  +the GNU General Public License is intended to guarantee your freedom to\\n  +share and change all versions of a program--to make sure it remains free\\n  +software for all its users.  We, the Free Software Foundation, use the\\n  +GNU General Public License for most of our software; it applies also to\\n  +any other work released this way by its authors.  You can apply it to\\n  +your programs, too.\\n  +\\n  +  When we speak of free software, we are referring to freedom, not\\n  +price.  Our General Public Licenses are designed to make sure that you\\n  +have the freedom to distribute copies of free software (and charge for\\n  +them if you wish), that you receive source code or can get it if you\\n  +want it, that you can change the software or use pieces of it in new\\n  +free programs, and that you know you can do these things.\\n  +\\n  +  To protect your rights, we need to prevent others from denying you\\n  +these rights or asking you to surrender the rights.  Therefore, you have\\n  +certain responsibilities if you distribute copies of the software, or if\\n  +you modify it: responsibilities to respect the freedom of others.\\n  +\\n  +  For example, if you distribute copies of such a program, whether\\n  +gratis or for a fee, you must pass on to the recipients the same\\n  +freedoms that you received.  You must make sure that they, too, receive\\n  +or can get the source code.  And you must show them these terms so they\\n  +know their rights.\\n  +\\n  +  Developers that use the GNU GPL protect your rights with two steps:\\n  +(1) assert copyright on the software, and (2) offer you this License\\n  +giving you legal permission to copy, distribute and/or modify it.\\n  +\\n  +  For the developers' and authors' protection, the GPL clearly explains\\n  +that there is no warranty for this free software.  For both users' and\\n  +authors' sake, the GPL requires that modified versions be marked as\\n  +changed, so that their problems will not be attributed erroneously to\\n  +authors of previous versions.\\n  +\\n  +  Some devices are designed to deny users access to install or run\\n  +modified versions of the software inside them, although the manufacturer\\n  +can do so.  This is fundamentally incompatible with the aim of\\n  +protecting users' freedom to change the software.  The systematic\\n  +pattern of such abuse occurs in the area of products for individuals to\\n  +use, which is precisely where it is most unacceptable.  Therefore, we\\n  +have designed this version of the GPL to prohibit the practice for those\\n  +products.  If such problems arise substantially in other domains, we\\n  +stand ready to extend this provision to those domains in future versions\\n  +of the GPL, as needed to protect the freedom of users.\\n  +\\n  +  Finally, every program is threatened constantly by software patents.\\n  +States should not allow patents to restrict development and use of\\n  +software on general-purpose computers, but in those that do, we wish to\\n  +avoid the special danger that patents applied to a free program could\\n  +make it effectively proprietary.  To prevent this, the GPL assures that\\n  +patents cannot be used to render the program non-free.\\n  +\\n  +  The precise terms and conditions for copying, distribution and\\n  +modification follow.\\n  +\\n  +                       TERMS AND CONDITIONS\\n  +\\n  +  0. Definitions.\\n  +\\n  +  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\n  +\\n  +  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\n  +works, such as semiconductor masks.\\n  +\\n  +  \\\"The Program\\\" refers to any copyrightable work licensed under this\\n  +License.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\n  +\\\"recipients\\\" may be individuals or organizations.\\n  +\\n  +  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\n  +in a fashion requiring copyright permission, other than the making of an\\n  +exact copy.  The resulting work is called a \\\"modified version\\\" of the\\n  +earlier work or a work \\\"based on\\\" the earlier work.\\n  +\\n  +  A \\\"covered work\\\" means either the unmodified Program or a work based\\n  +on the Program.\\n  +\\n  +  To \\\"propagate\\\" a work means to do anything with it that, without\\n  +permission, would make you directly or secondarily liable for\\n  +infringement under applicable copyright law, except executing it on a\\n  +computer or modifying a private copy.  Propagation includes copying,\\n  +distribution (with or without modification), making available to the\\n  +public, and in some countries other activities as well.\\n  +\\n  +  To \\\"convey\\\" a work means any kind of propagation that enables other\\n  +parties to make or receive copies.  Mere interaction with a user through\\n  +a computer network, with no transfer of a copy, is not conveying.\\n  +\\n  +  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\n  +to the extent that it includes a convenient and prominently visible\\n  +feature that (1) displays an appropriate copyright notice, and (2)\\n  +tells the user that there is no warranty for the work (except to the\\n  +extent that warranties are provided), that licensees may convey the\\n  +work under this License, and how to view a copy of this License.  If\\n  +the interface presents a list of user commands or options, such as a\\n  +menu, a prominent item in the list meets this criterion.\\n  +\\n  +  1. Source Code.\\n  +\\n  +  The \\\"source code\\\" for a work means the preferred form of the work\\n  +for making modifications to it.  \\\"Object code\\\" means any non-source\\n  +form of a work.\\n  +\\n  +  A \\\"Standard Interface\\\" means an interface that either is an official\\n  +standard defined by a recognized standards body, or, in the case of\\n  +interfaces specified for a particular programming language, one that\\n  +is widely used among developers working in that language.\\n  +\\n  +  The \\\"System Libraries\\\" of an executable work include anything, other\\n  +than the work as a whole, that (a) is included in the normal form of\\n  +packaging a Major Component, but which is not part of that Major\\n  +Component, and (b) serves only to enable use of the work with that\\n  +Major Component, or to implement a Standard Interface for which an\\n  +implementation is available to the public in source code form.  A\\n  +\\\"Major Component\\\", in this context, means a major essential component\\n  +(kernel, window system, and so on) of the specific operating system\\n  +(if any) on which the executable work runs, or a compiler used to\\n  +produce the work, or an object code interpreter used to run it.\\n  +\\n  +  The \\\"Corresponding Source\\\" for a work in object code form means all\\n  +the source code needed to generate, install, and (for an executable\\n  +work) run the object code and to modify the work, including scripts to\\n  +control those activities.  However, it does not include the work's\\n  +System Libraries, or general-purpose tools or generally available free\\n  +programs which are used unmodified in performing those activities but\\n  +which are not part of the work.  For example, Corresponding Source\\n  +includes interface definition files associated with source files for\\n  +the work, and the source code for shared libraries and dynamically\\n  +linked subprograms that the work is specifically designed to require,\\n  +such as by intimate data communication or control flow between those\\n  +subprograms and other parts of the work.\\n  +\\n  +  The Corresponding Source need not include anything that users\\n  +can regenerate automatically from other parts of the Corresponding\\n  +Source.\\n  +\\n  +  The Corresponding Source for a work in source code form is that\\n  +same work.\\n  +\\n  +  2. Basic Permissions.\\n  +\\n  +  All rights granted under this License are granted for the term of\\n  +copyright on the Program, and are irrevocable provided the stated\\n  +conditions are met.  This License explicitly affirms your unlimited\\n  +permission to run the unmodified Program.  The output from running a\\n  +covered work is covered by this License only if the output, given its\\n  +content, constitutes a covered work.  This License acknowledges your\\n  +rights of fair use or other equivalent, as provided by copyright law.\\n  +\\n  +  You may make, run and propagate covered works that you do not\\n  +convey, without conditions so long as your license otherwise remains\\n  +in force.  You may convey covered works to others for the sole purpose\\n  +of having them make modifications exclusively for you, or provide you\\n  +with facilities for running those works, provided that you comply with\\n  +the terms of this License in conveying all material for which you do\\n  +not control copyright.  Those thus making or running the covered works\\n  +for you must do so exclusively on your behalf, under your direction\\n  +and control, on terms that prohibit them from making any copies of\\n  +your copyrighted material outside their relationship with you.\\n  +\\n  +  Conveying under any other circumstances is permitted solely under\\n  +the conditions stated below.  Sublicensing is not allowed; section 10\\n  +makes it unnecessary.\\n  +\\n  +  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\n  +\\n  +  No covered work shall be deemed part of an effective technological\\n  +measure under any applicable law fulfilling obligations under article\\n  +11 of the WIPO copyright treaty adopted on 20 December 1996, or\\n  +similar laws prohibiting or restricting circumvention of such\\n  +measures.\\n  +\\n  +  When you convey a covered work, you waive any legal power to forbid\\n  +circumvention of technological measures to the extent such circumvention\\n  +is effected by exercising rights under this License with respect to\\n  +the covered work, and you disclaim any intention to limit operation or\\n  +modification of the work as a means of enforcing, against the work's\\n  +users, your or third parties' legal rights to forbid circumvention of\\n  +technological measures.\\n  +\\n  +  4. Conveying Verbatim Copies.\\n  +\\n  +  You may convey verbatim copies of the Program's source code as you\\n  +receive it, in any medium, provided that you conspicuously and\\n  +appropriately publish on each copy an appropriate copyright notice;\\n  +keep intact all notices stating that this License and any\\n  +non-permissive terms added in accord with section 7 apply to the code;\\n  +keep intact all notices of the absence of any warranty; and give all\\n  +recipients a copy of this License along with the Program.\\n  +\\n  +  You may charge any price or no price for each copy that you convey,\\n  +and you may offer support or warranty protection for a fee.\\n  +\\n  +  5. Conveying Modified Source Versions.\\n  +\\n  +  You may convey a work based on the Program, or the modifications to\\n  +produce it from the Program, in the form of source code under the\\n  +terms of section 4, provided that you also meet all of these conditions:\\n  +\\n  +    a) The work must carry prominent notices stating that you modified\\n  +    it, and giving a relevant date.\\n  +\\n  +    b) The work must carry prominent notices stating that it is\\n  +    released under this License and any conditions added under section\\n  +    7.  This requirement modifies the requirement in section 4 to\\n  +    \\\"keep intact all notices\\\".\\n  +\\n  +    c) You must license the entire work, as a whole, under this\\n  +    License to anyone who comes into possession of a copy.  This\\n  +    License will therefore apply, along with any applicable section 7\\n  +    additional terms, to the whole of the work, and all its parts,\\n  +    regardless of how they are packaged.  This License gives no\\n  +    permission to license the work in any other way, but it does not\\n  +    invalidate such permission if you have separately received it.\\n  +\\n  +    d) If the work has interactive user interfaces, each must display\\n  +    Appropriate Legal Notices; however, if the Program has interactive\\n  +    interfaces that do not display Appropriate Legal Notices, your\\n  +    work need not make them do so.\\n  +\\n  +  A compilation of a covered work with other separate and independent\\n  +works, which are not by their nature extensions of the covered work,\\n  +and which are not combined with it such as to form a larger program,\\n  +in or on a volume of a storage or distribution medium, is called an\\n  +\\\"aggregate\\\" if the compilation and its resulting copyright are not\\n  +used to limit the access or legal rights of the compilation's users\\n  +beyond what the individual works permit.  Inclusion of a covered work\\n  +in an aggregate does not cause this License to apply to the other\\n  +parts of the aggregate.\\n  +\\n  +  6. Conveying Non-Source Forms.\\n  +\\n  +  You may convey a covered work in object code form under the terms\\n  +of sections 4 and 5, provided that you also convey the\\n  +machine-readable Corresponding Source under the terms of this License,\\n  +in one of these ways:\\n  +\\n  +    a) Convey the object code in, or embodied in, a physical product\\n  +    (including a physical distribution medium), accompanied by the\\n  +    Corresponding Source fixed on a durable physical medium\\n  +    customarily used for software interchange.\\n  +\\n  +    b) Convey the object code in, or embodied in, a physical product\\n  +    (including a physical distribution medium), accompanied by a\\n  +    written offer, valid for at least three years and valid for as\\n  +    long as you offer spare parts or customer support for that product\\n  +    model, to give anyone who possesses the object code either (1) a\\n  +    copy of the Corresponding Source for all the software in the\\n  +    product that is covered by this License, on a durable physical\\n  +    medium customarily used for software interchange, for a price no\\n  +    more than your reasonable cost of physically performing this\\n  +    conveying of source, or (2) access to copy the\\n  +    Corresponding Source from a network server at no charge.\\n  +\\n  +    c) Convey individual copies of the object code with a copy of the\\n  +    written offer to provide the Corresponding Source.  This\\n  +    alternative is allowed only occasionally and noncommercially, and\\n  +    only if you received the object code with such an offer, in accord\\n  +    with subsection 6b.\\n  +\\n  +    d) Convey the object code by offering access from a designated\\n  +    place (gratis or for a charge), and offer equivalent access to the\\n  +    Corresponding Source in the same way through the same place at no\\n  +    further charge.  You need not require recipients to copy the\\n  +    Corresponding Source along with the object code.  If the place to\\n  +    copy the object code is a network server, the Corresponding Source\\n  +    may be on a different server (operated by you or a third party)\\n  +    that supports equivalent copying facilities, provided you maintain\\n  +    clear directions next to the object code saying where to find the\\n  +    Corresponding Source.  Regardless of what server hosts the\\n  +    Corresponding Source, you remain obligated to ensure that it is\\n  +    available for as long as needed to satisfy these requirements.\\n  +\\n  +    e) Convey the object code using peer-to-peer transmission, provided\\n  +    you inform other peers where the object code and Corresponding\\n  +    Source of the work are being offered to the general public at no\\n  +    charge under subsection 6d.\\n  +\\n  +  A separable portion of the object code, whose source code is excluded\\n  +from the Corresponding Source as a System Library, need not be\\n  +included in conveying the object code work.\\n  +\\n  +  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\n  +tangible personal property which is normally used for personal, family,\\n  +or household purposes, or (2) anything designed or sold for incorporation\\n  +into a dwelling.  In determining whether a product is a consumer product,\\n  +doubtful cases shall be resolved in favor of coverage.  For a particular\\n  +product received by a particular user, \\\"normally used\\\" refers to a\\n  +typical or common use of that class of product, regardless of the status\\n  +of the particular user or of the way in which the particular user\\n  +actually uses, or expects or is expected to use, the product.  A product\\n  +is a consumer product regardless of whether the product has substantial\\n  +commercial, industrial or non-consumer uses, unless such uses represent\\n  +the only significant mode of use of the product.\\n  +\\n  +  \\\"Installation Information\\\" for a User Product means any methods,\\n  +procedures, authorization keys, or other information required to install\\n  +and execute modified versions of a covered work in that User Product from\\n  +a modified version of its Corresponding Source.  The information must\\n  +suffice to ensure that the continued functioning of the modified object\\n  +code is in no case prevented or interfered with solely because\\n  +modification has been made.\\n  +\\n  +  If you convey an object code work under this section in, or with, or\\n  +specifically for use in, a User Product, and the conveying occurs as\\n  +part of a transaction in which the right of possession and use of the\\n  +User Product is transferred to the recipient in perpetuity or for a\\n  +fixed term (regardless of how the transaction is characterized), the\\n  +Corresponding Source conveyed under this section must be accompanied\\n  +by the Installation Information.  But this requirement does not apply\\n  +if neither you nor any third party retains the ability to install\\n  +modified object code on the User Product (for example, the work has\\n  +been installed in ROM).\\n  +\\n  +  The requirement to provide Installation Information does not include a\\n  +requirement to continue to provide support service, warranty, or updates\\n  +for a work that has been modified or installed by the recipient, or for\\n  +the User Product in which it has been modified or installed.  Access to a\\n  +network may be denied when the modification itself materially and\\n  +adversely affects the operation of the network or violates the rules and\\n  +protocols for communication across the network.\\n  +\\n  +  Corresponding Source conveyed, and Installation Information provided,\\n  +in accord with this section must be in a format that is publicly\\n  +documented (and with an implementation available to the public in\\n  +source code form), and must require no special password or key for\\n  +unpacking, reading or copying.\\n  +\\n  +  7. Additional Terms.\\n  +\\n  +  \\\"Additional permissions\\\" are terms that supplement the terms of this\\n  +License by making exceptions from one or more of its conditions.\\n  +Additional permissions that are applicable to the entire Program shall\\n  +be treated as though they were included in this License, to the extent\\n  +that they are valid under applicable law.  If additional permissions\\n  +apply only to part of the Program, that part may be used separately\\n  +under those permissions, but the entire Program remains governed by\\n  +this License without regard to the additional permissions.\\n  +\\n  +  When you convey a copy of a covered work, you may at your option\\n  +remove any additional permissions from that copy, or from any part of\\n  +it.  (Additional permissions may be written to require their own\\n  +removal in certain cases when you modify the work.)  You may place\\n  +additional permissions on material, added by you to a covered work,\\n  +for which you have or can give appropriate copyright permission.\\n  +\\n  +  Notwithstanding any other provision of this License, for material you\\n  +add to a covered work, you may (if authorized by the copyright holders of\\n  +that material) supplement the terms of this License with terms:\\n  +\\n  +    a) Disclaiming warranty or limiting liability differently from the\\n  +    terms of sections 15 and 16 of this License; or\\n  +\\n  +    b) Requiring preservation of specified reasonable legal notices or\\n  +    author attributions in that material or in the Appropriate Legal\\n  +    Notices displayed by works containing it; or\\n  +\\n  +    c) Prohibiting misrepresentation of the origin of that material, or\\n  +    requiring that modified versions of such material be marked in\\n  +    reasonable ways as different from the original version; or\\n  +\\n  +    d) Limiting the use for publicity purposes of names of licensors or\\n  +    authors of the material; or\\n  +\\n  +    e) Declining to grant rights under trademark law for use of some\\n  +    trade names, trademarks, or service marks; or\\n  +\\n  +    f) Requiring indemnification of licensors and authors of that\\n  +    material by anyone who conveys the material (or modified versions of\\n  +    it) with contractual assumptions of liability to the recipient, for\\n  +    any liability that these contractual assumptions directly impose on\\n  +    those licensors and authors.\\n  +\\n  +  All other non-permissive additional terms are considered \\\"further\\n  +restrictions\\\" within the meaning of section 10.  If the Program as you\\n  +received it, or any part of it, contains a notice stating that it is\\n  +governed by this License along with a term that is a further\\n  +restriction, you may remove that term.  If a license document contains\\n  +a further restriction but permits relicensing or conveying under this\\n  +License, you may add to a covered work material governed by the terms\\n  +of that license document, provided that the further restriction does\\n  +not survive such relicensing or conveying.\\n  +\\n  +  If you add terms to a covered work in accord with this section, you\\n  +must place, in the relevant source files, a statement of the\\n  +additional terms that apply to those files, or a notice indicating\\n  +where to find the applicable terms.\\n  +\\n  +  Additional terms, permissive or non-permissive, may be stated in the\\n  +form of a separately written license, or stated as exceptions;\\n  +the above requirements apply either way.\\n  +\\n  +  8. Termination.\\n  +\\n  +  You may not propagate or modify a covered work except as expressly\\n  +provided under this License.  Any attempt otherwise to propagate or\\n  +modify it is void, and will automatically terminate your rights under\\n  +this License (including any patent licenses granted under the third\\n  +paragraph of section 11).\\n  +\\n  +  However, if you cease all violation of this License, then your\\n  +license from a particular copyright holder is reinstated (a)\\n  +provisionally, unless and until the copyright holder explicitly and\\n  +finally terminates your license, and (b) permanently, if the copyright\\n  +holder fails to notify you of the violation by some reasonable means\\n  +prior to 60 days after the cessation.\\n  +\\n  +  Moreover, your license from a particular copyright holder is\\n  +reinstated permanently if the copyright holder notifies you of the\\n  +violation by some reasonable means, this is the first time you have\\n  +received notice of violation of this License (for any work) from that\\n  +copyright holder, and you cure the violation prior to 30 days after\\n  +your receipt of the notice.\\n  +\\n  +  Termination of your rights under this section does not terminate the\\n  +licenses of parties who have received copies or rights from you under\\n  +this License.  If your rights have been terminated and not permanently\\n  +reinstated, you do not qualify to receive new licenses for the same\\n  +material under section 10.\\n  +\\n  +  9. Acceptance Not Required for Having Copies.\\n  +\\n  +  You are not required to accept this License in order to receive or\\n  +run a copy of the Program.  Ancillary propagation of a covered work\\n  +occurring solely as a consequence of using peer-to-peer transmission\\n  +to receive a copy likewise does not require acceptance.  However,\\n  +nothing other than this License grants you permission to propagate or\\n  +modify any covered work.  These actions infringe copyright if you do\\n  +not accept this License.  Therefore, by modifying or propagating a\\n  +covered work, you indicate your acceptance of this License to do so.\\n  +\\n  +  10. Automatic Licensing of Downstream Recipients.\\n  +\\n  +  Each time you convey a covered work, the recipient automatically\\n  +receives a license from the original licensors, to run, modify and\\n  +propagate that work, subject to this License.  You are not responsible\\n  +for enforcing compliance by third parties with this License.\\n  +\\n  +  An \\\"entity transaction\\\" is a transaction transferring control of an\\n  +organization, or substantially all assets of one, or subdividing an\\n  +organization, or merging organizations.  If propagation of a covered\\n  +work results from an entity transaction, each party to that\\n  +transaction who receives a copy of the work also receives whatever\\n  +licenses to the work the party's predecessor in interest had or could\\n  +give under the previous paragraph, plus a right to possession of the\\n  +Corresponding Source of the work from the predecessor in interest, if\\n  +the predecessor has it or can get it with reasonable efforts.\\n  +\\n  +  You may not impose any further restrictions on the exercise of the\\n  +rights granted or affirmed under this License.  For example, you may\\n  +not impose a license fee, royalty, or other charge for exercise of\\n  +rights granted under this License, and you may not initiate litigation\\n  +(including a cross-claim or counterclaim in a lawsuit) alleging that\\n  +any patent claim is infringed by making, using, selling, offering for\\n  +sale, or importing the Program or any portion of it.\\n  +\\n  +  11. Patents.\\n  +\\n  +  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\n  +License of the Program or a work on which the Program is based.  The\\n  +work thus licensed is called the contributor's \\\"contributor version\\\".\\n  +\\n  +  A contributor's \\\"essential patent claims\\\" are all patent claims\\n  +owned or controlled by the contributor, whether already acquired or\\n  +hereafter acquired, that would be infringed by some manner, permitted\\n  +by this License, of making, using, or selling its contributor version,\\n  +but do not include claims that would be infringed only as a\\n  +consequence of further modification of the contributor version.  For\\n  +purposes of this definition, \\\"control\\\" includes the right to grant\\n  +patent sublicenses in a manner consistent with the requirements of\\n  +this License.\\n  +\\n  +  Each contributor grants you a non-exclusive, worldwide, royalty-free\\n  +patent license under the contributor's essential patent claims, to\\n  +make, use, sell, offer for sale, import and otherwise run, modify and\\n  +propagate the contents of its contributor version.\\n  +\\n  +  In the following three paragraphs, a \\\"patent license\\\" is any express\\n  +agreement or commitment, however denominated, not to enforce a patent\\n  +(such as an express permission to practice a patent or covenant not to\\n  +sue for patent infringement).  To \\\"grant\\\" such a patent license to a\\n  +party means to make such an agreement or commitment not to enforce a\\n  +patent against the party.\\n  +\\n  +  If you convey a covered work, knowingly relying on a patent license,\\n  +and the Corresponding Source of the work is not available for anyone\\n  +to copy, free of charge and under the terms of this License, through a\\n  +publicly available network server or other readily accessible means,\\n  +then you must either (1) cause the Corresponding Source to be so\\n  +available, or (2) arrange to deprive yourself of the benefit of the\\n  +patent license for this particular work, or (3) arrange, in a manner\\n  +consistent with the requirements of this License, to extend the patent\\n  +license to downstream recipients.  \\\"Knowingly relying\\\" means you have\\n  +actual knowledge that, but for the patent license, your conveying the\\n  +covered work in a country, or your recipient's use of the covered work\\n  +in a country, would infringe one or more identifiable patents in that\\n  +country that you have reason to believe are valid.\\n  +\\n  +  If, pursuant to or in connection with a single transaction or\\n  +arrangement, you convey, or propagate by procuring conveyance of, a\\n  +covered work, and grant a patent license to some of the parties\\n  +receiving the covered work authorizing them to use, propagate, modify\\n  +or convey a specific copy of the covered work, then the patent license\\n  +you grant is automatically extended to all recipients of the covered\\n  +work and works based on it.\\n  +\\n  +  A patent license is \\\"discriminatory\\\" if it does not include within\\n  +the scope of its coverage, prohibits the exercise of, or is\\n  +conditioned on the non-exercise of one or more of the rights that are\\n  +specifically granted under this License.  You may not convey a covered\\n  +work if you are a party to an arrangement with a third party that is\\n  +in the business of distributing software, under which you make payment\\n  +to the third party based on the extent of your activity of conveying\\n  +the work, and under which the third party grants, to any of the\\n  +parties who would receive the covered work from you, a discriminatory\\n  +patent license (a) in connection with copies of the covered work\\n  +conveyed by you (or copies made from those copies), or (b) primarily\\n  +for and in connection with specific products or compilations that\\n  +contain the covered work, unless you entered into that arrangement,\\n  +or that patent license was granted, prior to 28 March 2007.\\n  +\\n  +  Nothing in this License shall be construed as excluding or limiting\\n  +any implied license or other defenses to infringement that may\\n  +otherwise be available to you under applicable patent law.\\n  +\\n  +  12. No Surrender of Others' Freedom.\\n  +\\n  +  If conditions are imposed on you (whether by court order, agreement or\\n  +otherwise) that contradict the conditions of this License, they do not\\n  +excuse you from the conditions of this License.  If you cannot convey a\\n  +covered work so as to satisfy simultaneously your obligations under this\\n  +License and any other pertinent obligations, then as a consequence you may\\n  +not convey it at all.  For example, if you agree to terms that obligate you\\n  +to collect a royalty for further conveying from those to whom you convey\\n  +the Program, the only way you could satisfy both those terms and this\\n  +License would be to refrain entirely from conveying the Program.\\n  +\\n  +  13. Use with the GNU Affero General Public License.\\n  +\\n  +  Notwithstanding any other provision of this License, you have\\n  +permission to link or combine any covered work with a work licensed\\n  +under version 3 of the GNU Affero General Public License into a single\\n  +combined work, and to convey the resulting work.  The terms of this\\n  +License will continue to apply to the part which is the covered work,\\n  +but the special requirements of the GNU Affero General Public License,\\n  +section 13, concerning interaction through a network will apply to the\\n  +combination as such.\\n  +\\n  +  14. Revised Versions of this License.\\n  +\\n  +  The Free Software Foundation may publish revised and/or new versions of\\n  +the GNU General Public License from time to time.  Such new versions will\\n  +be similar in spirit to the present version, but may differ in detail to\\n  +address new problems or concerns.\\n  +\\n  +  Each version is given a distinguishing version number.  If the\\n  +Program specifies that a certain numbered version of the GNU General\\n  +Public License \\\"or any later version\\\" applies to it, you have the\\n  +option of following the terms and conditions either of that numbered\\n  +version or of any later version published by the Free Software\\n  +Foundation.  If the Program does not specify a version number of the\\n  +GNU General Public License, you may choose any version ever published\\n  +by the Free Software Foundation.\\n  +\\n  +  If the Program specifies that a proxy can decide which future\\n  +versions of the GNU General Public License can be used, that proxy's\\n  +public statement of acceptance of a version permanently authorizes you\\n  +to choose that version for the Program.\\n  +\\n  +  Later license versions may give you additional or different\\n  +permissions.  However, no additional obligations are imposed on any\\n  +author or copyright holder as a result of your choosing to follow a\\n  +later version.\\n  +\\n  +  15. Disclaimer of Warranty.\\n  +\\n  +  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\n  +APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\n  +HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\n  +OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\n  +THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\n  +PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\n  +IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\n  +ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n  +\\n  +  16. Limitation of Liability.\\n  +\\n  +  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\n  +WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\n  +THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\n  +GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\n  +USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\n  +DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\n  +PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\n  +EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\n  +SUCH DAMAGES.\\n  +\\n  +  17. Interpretation of Sections 15 and 16.\\n  +\\n  +  If the disclaimer of warranty and limitation of liability provided\\n  +above cannot be given local legal effect according to their terms,\\n  +reviewing courts shall apply local law that most closely approximates\\n  +an absolute waiver of all civil liability in connection with the\\n  +Program, unless a warranty or assumption of liability accompanies a\\n  +copy of the Program in return for a fee.\\n  +\\n  +                     END OF TERMS AND CONDITIONS\\n  +\\n  +            How to Apply These Terms to Your New Programs\\n  +\\n  +  If you develop a new program, and you want it to be of the greatest\\n  +possible use to the public, the best way to achieve this is to make it\\n  +free software which everyone can redistribute and change under these terms.\\n  +\\n  +  To do so, attach the following notices to the program.  It is safest\\n  +to attach them to the start of each source file to most effectively\\n  +state the exclusion of warranty; and each file should have at least\\n  +the \\\"copyright\\\" line and a pointer to where the full notice is found.\\n  +\\n  +    {one line to give the program's name and a brief idea of what it does.}\\n  +    Copyright (C) {year}  {name of author}\\n  +\\n  +    This program is free software: you can redistribute it and/or modify\\n  +    it under the terms of the GNU General Public License as published by\\n  +    the Free Software Foundation, either version 3 of the License, or\\n  +    (at your option) any later version.\\n  +\\n  +    This program is distributed in the hope that it will be useful,\\n  +    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n  +    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n  +    GNU General Public License for more details.\\n  +\\n  +    You should have received a copy of the GNU General Public License\\n  +    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n  +\\n  +Also add information on how to contact you by electronic and paper mail.\\n  +\\n  +  If the program does terminal interaction, make it output a short\\n  +notice like this when it starts in an interactive mode:\\n  +\\n  +    {project}  Copyright (C) {year}  {fullname}\\n  +    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\n  +    This is free software, and you are welcome to redistribute it\\n  +    under certain conditions; type `show c' for details.\\n  +\\n  +The hypothetical commands `show w' and `show c' should show the appropriate\\n  +parts of the General Public License.  Of course, your program's commands\\n  +might be different; for a GUI interface, you would use an \\\"about box\\\".\\n  +\\n  +  You should also get your employer (if you work as a programmer) or school,\\n  +if any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\n  +For more information on this, and how to apply and follow the GNU GPL, see\\n  +<http://www.gnu.org/licenses/>.\\n  +\\n  +  The GNU General Public License does not permit incorporating your program\\n  +into proprietary programs.  If your program is a subroutine library, you\\n  +may consider it more useful to permit linking proprietary applications with\\n  +the library.  If this is what you want to do, use the GNU Lesser General\\n  +Public License instead of this License.  But first, please read\\n  +<http://www.gnu.org/philosophy/why-not-lgpl.html>.\",\n      \"author\": \"<Zhe Wang>\",\n      \"commit_date\": \"1506746697\"\n   },\n   {\n      \"email\": \"a63188722@163.com\",\n      \"file\": \"git/history/main.py\",\n      \"code_snippet\": \"#!~/anaconda3/bin/ python\\n# -*- coding: utf-8 -*-\\n#\\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\\n\\n\\\"\\\"\\\"\\nUSAGE: %(program)s input_code_file output_dir\\n\\\"\\\"\\\"\\n\\nimport logging\\nimport os\\nimport sys\\n\\ndir_path = os.path.dirname(os.path.realpath(__file__))\\n\\n\\ndef get_code(inp):\\n    command = \\\"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email:%ae' \\\" \\\\\\n              \\\"--abbrev-commit -p --graph \\\" + inp\\\\\\n              # + \\\" > \\\" + outp + \\\"/log.txt\\\"\\n    input_data = os.popen(command)\\n    data = input_data.read()\\n    return data\\n\\nif __name__ == '__main__':\\n    program = os.path.basename(sys.argv[0])\\n    logger = logging.getLogger(program)\\n\\n    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s')\\n    logging.root.setLevel(level=logging.INFO)\\n    logger.info(\\\"running %s \\\" % ' '.join(sys.argv))\\n\\n    # check and process input arguments\\n    if len(sys.argv) != 3:\\n        print(len(sys.argv))\\n        raise SystemExit(\\\"Usage: python main.py input_code_file output_dir\\\")\\n    input_file, output_dir = sys.argv[1:3]\\n    if not os.path.exists(output_dir):\\n        try:\\n            os.makedirs(output_dir)\\n        except OSError as exception:\\n            raise SystemExit(\\\"Error: Could not create the output dir.\\\")\\n\\n    commit_history = get_code(input_file)\\n    print(commit_history)\\n\\n\",\n      \"author\": \"<Zhe Wang>\",\n      \"commit_date\": \"1506746697\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"# Map Git Commit History to Authors\\nAuthor: ch-chiu\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-09-30 13:58:26 +0800\"\n   },\n   {\n      \"email\": \"CNPG-qzm@hotmail.com\",\n      \"file\": \"git/history/README.md\",\n      \"code_snippet\": \"# Git Commit History\\n\\nAuthor: ch-chiu\",\n      \"author\": \"ChrisQiu\",\n      \"commit_date\": \"2017-09-30 13:56:48 +0800\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": [],
      "file": "git/user/.idea/inspectionProfiles/profiles_settings.xml",
      "code_snippet": "<component name=\"InspectionProjectProfileManager\">\n  <settings>\n    <option name=\"useProjectProfile\" value=\"false\" />\n    <option name=\"USE_PROJECT_PROFILE\" value=\"false\" />\n    <version value=\"1.0\" />\n  </settings>\n</component>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/.idea/misc.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.5.3 (~/.pyenv/versions/3.5.3/bin/python)\" project-jdk-type=\"Python SDK\" />\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/.idea/modules.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/user.iml\" filepath=\"$PROJECT_DIR$/.idea/user.iml\" />\n    </modules>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/.idea/user.iml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"TestRunnerService\">\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"Unittests\" />\n  </component>\n</module>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/.idea/workspace.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"778d6186-437e-4b56-8ed0-86e00419feed\" name=\"Default\" comment=\"\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"get_info_stackoverflow.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"75\">\n              <caret line=\"5\" column=\"15\" lean-forward=\"false\" selection-start-line=\"5\" selection-start-column=\"15\" selection-end-line=\"5\" selection-end-column=\"15\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"135\">\n              <caret line=\"9\" column=\"0\" lean-forward=\"false\" selection-start-line=\"9\" selection-start-column=\"0\" selection-end-line=\"9\" selection-end-column=\"33\" />\n              <folding>\n                <element signature=\"e#0#11#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"get_info_git.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"0\">\n              <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n              <folding>\n                <element signature=\"e#0#15#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"levenshtein.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"0\">\n              <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"name_form.py\" pinned=\"false\" current-in-tab=\"false\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/name_form.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"0\">\n              <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n              <folding />\n            </state>\n          </provider>\n        </entry>\n      </file>\n      <file leaf-file-name=\"syn_tags.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"705\">\n              <caret line=\"56\" column=\"29\" lean-forward=\"false\" selection-start-line=\"56\" selection-start-column=\"29\" selection-end-line=\"56\" selection-end-column=\"29\" />\n              <folding>\n                <element signature=\"e#0#11#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\" />\n        <option value=\"$PROJECT_DIR$/Get_Info/syn_tags.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"JsBuildToolGruntFileManager\" detection-done=\"true\" sorting=\"DEFINITION_ORDER\" />\n  <component name=\"JsBuildToolPackageJson\" detection-done=\"true\" sorting=\"DEFINITION_ORDER\" />\n  <component name=\"JsGulpfileManager\">\n    <detection-done>true</detection-done>\n    <sorting>DEFINITION_ORDER</sorting>\n  </component>\n  <component name=\"ProjectFrameBounds\">\n    <option name=\"x\" value=\"65\" />\n    <option name=\"y\" value=\"24\" />\n    <option name=\"width\" value=\"1855\" />\n    <option name=\"height\" value=\"1056\" />\n  </component>\n  <component name=\"ProjectView\">\n    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\">\n      <flattenPackages />\n      <showMembers />\n      <showModules />\n      <showLibraryContents />\n      <hideEmptyPackages />\n      <abbreviatePackageNames />\n      <autoscrollToSource />\n      <autoscrollFromSource />\n      <sortByType />\n      <manualOrder />\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"Scratches\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"user\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"Get_Info\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n        </subPane>\n      </pane>\n      <pane id=\"Scope\" />\n    </panes>\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"js.eslint.eslintPackage\" value=\"\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Get_Info\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"DjangoTestsConfigurationType\" factoryName=\"Django tests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"TARGET\" value=\"\" />\n      <option name=\"SETTINGS_FILE\" value=\"\" />\n      <option name=\"CUSTOM_SETTINGS\" value=\"false\" />\n      <option name=\"USE_OPTIONS\" value=\"false\" />\n      <option name=\"OPTIONS\" value=\"\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"JavaScriptTestRunnerProtractor\" factoryName=\"Protractor\">\n      <config-file value=\"\" />\n      <node-interpreter value=\"project\" />\n      <envs />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"JavascriptDebugType\" factoryName=\"JavaScript Debug\">\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PyBehaveRunConfigurationType\" factoryName=\"Behave\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"ADDITIONAL_ARGS\" value=\"\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PyLettuceRunConfigurationType\" factoryName=\"Lettuce\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"ADDITIONAL_ARGS\" value=\"\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <module name=\"user\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"js.build_tools.gulp\" factoryName=\"Gulp.js\">\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"js.build_tools.npm\" factoryName=\"npm\">\n      <command value=\"run\" />\n      <scripts />\n      <node-interpreter value=\"project\" />\n      <envs />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Attests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Nosetests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Unittests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PUREUNITTEST\" value=\"true\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"py.test\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"user\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" enabled=\"false\" sample_coverage=\"true\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"testToRun\" value=\"\" />\n      <option name=\"keywords\" value=\"\" />\n      <option name=\"params\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <option name=\"USE_KEYWORD\" value=\"false\" />\n      <method />\n    </configuration>\n  </component>\n  <component name=\"ShelveChangesManager\" show_recycled=\"false\">\n    <option name=\"remove_strategy\" value=\"false\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"778d6186-437e-4b56-8ed0-86e00419feed\" name=\"Default\" comment=\"\" />\n      <created>1507731249492</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1507731249492</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"65\" y=\"24\" width=\"1855\" height=\"1056\" extended-state=\"6\" />\n    <editor active=\"false\" />\n    <layout>\n      <window_info id=\"Project\" active=\"true\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.2498618\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Database\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n    </layout>\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"processedProjectFiles\" value=\"true\" />\n  </component>\n  <component name=\"VcsContentAnnotationSettings\">\n    <option name=\"myLimit\" value=\"2678400000\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager />\n    <watches-manager />\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get/.idea/misc.xml\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get/.idea/Get_Info.iml\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_git.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding>\n            <element signature=\"e#0#15#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/get_info_stackoverflow.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"75\">\n          <caret line=\"5\" column=\"15\" lean-forward=\"false\" selection-start-line=\"5\" selection-start-column=\"15\" selection-end-line=\"5\" selection-end-column=\"15\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/levenshtein.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/name_form.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"0\">\n          <caret line=\"0\" column=\"0\" lean-forward=\"false\" selection-start-line=\"0\" selection-start-column=\"0\" selection-end-line=\"0\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"135\">\n          <caret line=\"9\" column=\"0\" lean-forward=\"false\" selection-start-line=\"9\" selection-start-column=\"0\" selection-end-line=\"9\" selection-end-column=\"33\" />\n          <folding>\n            <element signature=\"e#0#11#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Get_Info/syn_tags.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"705\">\n          <caret line=\"56\" column=\"29\" lean-forward=\"false\" selection-start-line=\"56\" selection-start-column=\"29\" selection-end-line=\"56\" selection-end-column=\"29\" />\n          <folding>\n            <element signature=\"e#0#11#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "[\n   {\n      \"github_login\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\",\n      \"stackoverflow_login\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"electron\",\n         \"electron-app\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"name\": \"Sindre Sorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\"\n   },\n   {\n      \"github_login\": \"t27\",\n      \"email\": null,\n      \"stackoverflow_login\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"C#\",\n         \"QMake\"\n      ],\n      \"name\": \"Tarang Shah\",\n      \"location\": \"India\"\n   },\n   {\n      \"github_login\": \"lmichelbacher\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"355274_1.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"Python\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"C++\",\n         \"PowerShell\"\n      ],\n      \"name\": \"Lukas Michelbacher\",\n      \"location\": \"Edinburgh\"\n   },\n   {\n      \"github_login\": \"Kazhnuz\",\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"libre\",\n         \"culture-libre\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Makefile\",\n         \"CSS\",\n         \"M4\",\n         \"Shell\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"name\": \"Kazhnuz\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"aleksandar-todorovic\",\n      \"email\": \"aleksandar@r3bl.me\",\n      \"stackoverflow_login\": [\n         \"8766_0.74\",\n         \"120206_0.78\",\n         \"3666431_0.93\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"desktop-environment\",\n         \"x-window-manager\"\n      ],\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\"\n   },\n   {\n      \"github_login\": \"likedan\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"xib\",\n         \"animation\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Makefile\",\n         \"Shell\",\n         \"Ruby\",\n         \"Swift\",\n         \"C\",\n         \"JavaScript\",\n         \"CSS\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"name\": \"Kedan Li\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"web-flow\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": \"null\",\n      \"github_language\": [],\n      \"name\": \"GitHub Web Flow\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"kennethreitz\",\n      \"email\": \"me@kennethreitz.org\",\n      \"stackoverflow_login\": [\n         \"120004_1.12\"\n      ],\n      \"company\": \"Heroku\",\n      \"github_topics\": [\n         \"environment\",\n         \"cd\",\n         \"shell-extension\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"for-humans\",\n         \"kennethreitz\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"Makefile\",\n         \"Shell\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Smarty\"\n      ],\n      \"name\": \"Kenneth Reitz\",\n      \"location\": \"Winchester, VA\"\n   },\n   {\n      \"github_login\": \"johnjago\",\n      \"email\": null,\n      \"stackoverflow_login\": \"John Jago\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-list\",\n         \"ad-free\",\n         \"websites\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"print\",\n         \"cards\"\n      ],\n      \"github_language\": [\n         \"Java\",\n         \"Protocol Buffer\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\"\n      ],\n      \"name\": \"John Jago\",\n      \"location\": \"United States\"\n   },\n   {\n      \"github_login\": \"sfischer13\",\n      \"email\": null,\n      \"stackoverflow_login\": \"Stefanus\",\n      \"company\": null,\n      \"github_topics\": [\n         \"atom\",\n         \"atom-package\",\n         \"bundle\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"mit-license\",\n         \"workflow-management\"\n      ],\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"TeX\",\n         \"Makefile\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Go\",\n         \"Shell\",\n         \"Common Lisp\",\n         \"Awk\",\n         \"Lua\",\n         \"Haskell\",\n         \"Roff\",\n         \"Perl\",\n         \"Batchfile\",\n         \"Smarty\",\n         \"Python\",\n         \"C++\",\n         \"Java\"\n      ],\n      \"name\": \"Stefanus\",\n      \"location\": \"Germany\"\n   },\n   {\n      \"github_login\": \"ukstv\",\n      \"email\": \"sergey@ukstv.me\",\n      \"stackoverflow_login\": [\n         \"1682447_0.88\"\n      ],\n      \"company\": \"@machinomy \",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"JavaScript\",\n         \"Ruby\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"ApacheConf\",\n         \"TypeScript\"\n      ],\n      \"name\": \"Sergey Ukustov\",\n      \"location\": \"Volgograd, Russia\"\n   },\n   {\n      \"github_login\": \"Siilwyn\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"pixel-art\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Vim script\",\n         \"TypeScript\"\n      ],\n      \"name\": \"Selwyn\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"hobbyquaker\",\n      \"email\": \"hq@ccu.io\",\n      \"stackoverflow_login\": [\n         \"1941282_0.83\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"airtunes\",\n         \"airplay\",\n         \"mqtt\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"api\",\n         \"serial\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Batchfile\",\n         \"Inno Setup\",\n         \"Arduino\",\n         \"Tcl\"\n      ],\n      \"name\": \"Sebastian Raff\",\n      \"location\": \"Stuttgart, Germany\"\n   },\n   {\n      \"github_login\": \"stetso\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"lua\",\n         \"gamedev\",\n         \"mobile-game\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"mobile\",\n         \"swipe-gestures\"\n      ],\n      \"github_language\": [\n         \"CMake\",\n         \"Python\",\n         \"JavaScript\",\n         \"Roff\",\n         \"Java\",\n         \"GLSL\",\n         \"Lua\",\n         \"QMake\",\n         \"PHP\",\n         \"Batchfile\",\n         \"HTML\",\n         \"HLSL\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"C\",\n         \"Prolog\",\n         \"C++\",\n         \"CSS\",\n         \"Perl\",\n         \"Shell\",\n         \"NSIS\",\n         \"Makefile\",\n         \"TypeScript\"\n      ],\n      \"name\": null,\n      \"location\": null\n   },\n   {\n      \"github_login\": \"roaldnefs\",\n      \"email\": \"info@roaldnefs.com\",\n      \"stackoverflow_login\": \"Roald Nefs\",\n      \"company\": \"@Warpnet\",\n      \"github_topics\": [\n         \"prometheus\",\n         \"awesome-list\",\n         \"awesome\",\n         \"dotfiles\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Vim script\",\n         \"Shell\"\n      ],\n      \"name\": \"Roald Nefs\",\n      \"location\": \"The Netherlands\"\n   },\n   {\n      \"github_login\": \"chasegiunta\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"75827_0.9\"\n      ],\n      \"company\": \"@simplygoodwork\",\n      \"github_topics\": [\n         \"craftcms\",\n         \"craft\",\n         \"awesome-list\",\n         \"awesome\",\n         \"craft-plugin\",\n         \"list\"\n      ],\n      \"github_language\": [\n         \"PHP\",\n         \"HTML\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Nginx\",\n         \"Shell\"\n      ],\n      \"name\": \"Chase Giunta\",\n      \"location\": \"Dallas, TX\"\n   },\n   {\n      \"github_login\": \"LappleApple\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"272692_0.83\",\n         \"314481_0.8\",\n         \"742907_0.87\"\n      ],\n      \"company\": \"Zalando\",\n      \"github_topics\": [\n         \"awesome-list\",\n         \"leadership\",\n         \"management\",\n         \"engineering-managers\",\n         \"hiring\",\n         \"diversity\",\n         \"engineering-management\",\n         \"awesome\",\n         \"tech-culture\",\n         \"retrospectives\"\n      ],\n      \"github_language\": [\n         \"Scala\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"PLpgSQL\",\n         \"Erlang\"\n      ],\n      \"name\": \"Lauri Apple\",\n      \"location\": \"Berlin; Twitter @lauritaapplez\"\n   },\n   {\n      \"github_login\": \"meitar\",\n      \"email\": \"meitarm+github@gmail.com\",\n      \"stackoverflow_login\": [\n         \"8124383_0.92\",\n         \"5301419_0.92\"\n      ],\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"github_topics\": [\n         \"awesome-list\",\n         \"lockpicking\",\n         \"locksport\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"chrome-extension\",\n         \"web-extension\"\n      ],\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Ruby\",\n         \"Perl\"\n      ],\n      \"name\": \"Meitar M.\",\n      \"location\": \"https://cyberbusking.org/\"\n   },\n   {\n      \"github_login\": \"angrykoala\",\n      \"email\": \"angrykoala@outlook.es\",\n      \"stackoverflow_login\": \"angrykoala\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"list\",\n         \"esoteric\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"music\",\n         \"tags\"\n      ],\n      \"github_language\": [\n         \"C#\",\n         \"XSLT\",\n         \"HTML\",\n         \"Java\",\n         \"Makefile\",\n         \"Shell\",\n         \"CSS\",\n         \"JavaScript\",\n         \"C++\",\n         \"C\",\n         \"Python\",\n         \"TeX\",\n         \"GCC Machine Description\",\n         \"Gnuplot\"\n      ],\n      \"name\": \"Andr\\u00e9s\",\n      \"location\": \"Madrid & Granada, Spain\"\n   },\n   {\n      \"github_login\": \"ooade\",\n      \"email\": \"ooade96@gmail.com\",\n      \"stackoverflow_login\": \"Ademola Adegbuyi\",\n      \"company\": null,\n      \"github_topics\": [\n         \"challenge\",\n         \"code\",\n         \"portfolio\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"starter-kit\",\n         \"pwa-boilerplate\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Vue\",\n         \"HTML\",\n         \"Shell\"\n      ],\n      \"name\": \"Ademola Adegbuyi\",\n      \"location\": \"Lagos, Nigeria\"\n   },\n   {\n      \"github_login\": \"mezod\",\n      \"email\": \"mezood@gmail.com\",\n      \"stackoverflow_login\": [\n         \"2129043_1.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"indie\",\n         \"indiedev\",\n         \"passive-income\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"awesome\",\n         \"awesome-list\"\n      ],\n      \"github_language\": [\n         \"Ruby\",\n         \"Makefile\",\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Java\",\n         \"ApacheConf\",\n         \"Smarty\",\n         \"PHP\",\n         \"Shell\"\n      ],\n      \"name\": \"Joan Boixad\\u00f3s\",\n      \"location\": \"Barcelona, Catalonia\"\n   },\n   {\n      \"github_login\": \"sheonhan\",\n      \"email\": \"sheon.han@gmail.com\",\n      \"stackoverflow_login\": \"Sheon Han\",\n      \"company\": \"@PrincetonUniversity\",\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"effective-altruism\",\n         \"philanthropy\"\n      ],\n      \"github_language\": [\n         \"Java\",\n         \"HTML\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Jupyter Notebook\",\n         \"Go\"\n      ],\n      \"name\": \"Sheon Han\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"m1guelpf\",\n      \"email\": \"github@miguelpiedrafita.com\",\n      \"stackoverflow_login\": [\n         \"6386024_1.0\"\n      ],\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"github_topics\": [\n         \"php\",\n         \"curl\",\n         \"php-api\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"deployment\",\n         \"mode\"\n      ],\n      \"github_language\": [\n         \"ApacheConf\",\n         \"PHP\",\n         \"Java\",\n         \"Shell\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Vue\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"Makefile\"\n      ],\n      \"name\": \"Miguel Piedrafita\",\n      \"location\": \"Spain\"\n   },\n   {\n      \"github_login\": \"davisonio\",\n      \"email\": \"craig@davison.io\",\n      \"stackoverflow_login\": [\n         \"4034514_1.54\",\n         \"6248437_1.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"text\",\n         \"textures\"\n      ],\n      \"github_language\": [\n         \"Lua\",\n         \"Shell\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Java\"\n      ],\n      \"name\": \"Craig Davison\",\n      \"location\": \"Hampshire, UK\"\n   },\n   {\n      \"github_login\": \"vitalets\",\n      \"email\": \"noginsk@rambler.ru\",\n      \"stackoverflow_login\": \"vitalets\",\n      \"company\": \"Yandex\",\n      \"github_topics\": [\n         \"smart-tv\",\n         \"smarttv\",\n         \"tizen\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"eventbus\",\n         \"listener\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Ruby\",\n         \"Shell\",\n         \"CoffeeScript\",\n         \"PHP\",\n         \"Perl\",\n         \"Java\"\n      ],\n      \"name\": \"Vitaliy Potapov\",\n      \"location\": \"Moscow\"\n   },\n   {\n      \"github_login\": \"mipmip\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Lingewoud B.V.\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"Ruby\",\n         \"Shell\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"CSS\",\n         \"AppleScript\"\n      ],\n      \"name\": \"Pim Snel\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"arbox\",\n      \"email\": \"arbox@yandex.com\",\n      \"stackoverflow_login\": \"Andrei Beliankou\",\n      \"company\": null,\n      \"github_topics\": [\n         \"ruby\",\n         \"java\",\n         \"interoperability\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"style\",\n         \"tokenizer\"\n      ],\n      \"github_language\": [\n         \"Ruby\",\n         \"Common Lisp\",\n         \"Pascal\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Python\",\n         \"CSS\",\n         \"Makefile\",\n         \"Emacs Lisp\",\n         \"R\",\n         \"Java\",\n         \"C\",\n         \"Shell\",\n         \"Forth\"\n      ],\n      \"name\": \"Andrei Beliankou\",\n      \"location\": \"Germany\"\n   },\n   {\n      \"github_login\": \"k4m4\",\n      \"email\": null,\n      \"stackoverflow_login\": \"k4m4\",\n      \"company\": null,\n      \"github_topics\": [\n         \"donations\",\n         \"template\",\n         \"website-template\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"tor\",\n         \"terminal\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Makefile\"\n      ],\n      \"name\": \"Nikolaos Kamarinakis\",\n      \"location\": \"Athens, Greece\"\n   },\n   {\n      \"github_login\": \"analyticalmonk\",\n      \"email\": \"akashtndn.acm@gmail.com\",\n      \"stackoverflow_login\": [\n         \"927837_1.6\",\n         \"1189078_1.07\"\n      ],\n      \"company\": \"@socialcopsdev\",\n      \"github_topics\": [\n         \"data-science-competition\",\n         \"data-science\",\n         \"r\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"castra\",\n         \"ipython-notebook\"\n      ],\n      \"github_language\": [\n         \"R\",\n         \"Jupyter Notebook\",\n         \"HTML\",\n         \"Ruby\",\n         \"CSS\",\n         \"Python\",\n         \"Batchfile\",\n         \"Shell\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"PHP\"\n      ],\n      \"name\": \"Akash Tandon\",\n      \"location\": \"India\"\n   },\n   {\n      \"github_login\": \"faroit\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-list\",\n         \"python\",\n         \"audio\",\n         \"audio-player\",\n         \"vuejs\",\n         \"electron\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Shell\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Vue\",\n         \"Jupyter Notebook\"\n      ],\n      \"name\": \"Fabian-Robert St\\u00f6ter\",\n      \"location\": \"Europe\"\n   },\n   {\n      \"github_login\": \"RyanZim\",\n      \"email\": null,\n      \"stackoverflow_login\": \"RyanZim\",\n      \"company\": \"@ExodusMovement \",\n      \"github_topics\": [\n         \"npm\",\n         \"awesome\",\n         \"awesome-list\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"nodejs\",\n         \"js\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\"\n      ],\n      \"name\": \"Ryan Zimmerman\",\n      \"location\": \"East Earl, PA\"\n   },\n   {\n      \"github_login\": \"RichardLitt\",\n      \"email\": \"richard.littauer@gmail.com\",\n      \"stackoverflow_login\": [\n         \"123048_2.38\"\n      ],\n      \"company\": \"@mntnr \",\n      \"github_topics\": [\n         \"bear\",\n         \"bears\",\n         \"bearss\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"access\",\n         \"poetry\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"Ruby\",\n         \"Makefile\",\n         \"CSS\",\n         \"HTML\",\n         \"Shell\",\n         \"Go\"\n      ],\n      \"name\": \"Richard Littauer\",\n      \"location\": \"Montr\\u00e9al\"\n   },\n   {\n      \"github_login\": \"victorlaerte\",\n      \"email\": \"victorlaertedoliveira@gmail.com\",\n      \"stackoverflow_login\": [\n         \"1967345_1.23\",\n         \"5314295_0.85\"\n      ],\n      \"company\": \"@liferay \",\n      \"github_topics\": [\n         \"android\",\n         \"android-seed\",\n         \"template\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"asynctask\",\n         \"javafx\"\n      ],\n      \"github_language\": [\n         \"Java\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"CoffeeScript\",\n         \"Ruby\",\n         \"Cucumber\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"C\",\n         \"Shell\",\n         \"C++\",\n         \"Makefile\",\n         \"Kotlin\",\n         \"Swift\",\n         \"Python\",\n         \"Gherkin\",\n         \"FreeMarker\"\n      ],\n      \"name\": \"Victor Laerte Oliveira\",\n      \"location\": \"Recife, Pernambuco - Brazil\"\n   },\n   {\n      \"github_login\": \"xiaohanyu\",\n      \"email\": \"xiaohanyu1988@gmail.com\",\n      \"stackoverflow_login\": \"Xiao Hanyu\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"tikz\",\n         \"latex\",\n         \"tex\",\n         \"shell\",\n         \"fun\",\n         \"imagemagick\"\n      ],\n      \"github_language\": [\n         \"Common Lisp\",\n         \"Lua\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"VimL\",\n         \"CMake\"\n      ],\n      \"name\": \"Xiao Hanyu\",\n      \"location\": \"Singapore\"\n   },\n   {\n      \"github_login\": \"DavidLambauer\",\n      \"email\": \"mail@davidlambauer.de\",\n      \"stackoverflow_login\": [\n         \"211772_3.71\",\n         \"1216625_1.91\",\n         \"1301510_2.14\"\n      ],\n      \"company\": \"@AOEpeople \",\n      \"github_topics\": [\n         \"awesome\",\n         \"magento2\",\n         \"collection\",\n         \"magento-2\",\n         \"magento-extension\",\n         \"php\",\n         \"packages\",\n         \"awesome-list\",\n         \"documentation\",\n         \"documentation-tool\"\n      ],\n      \"github_language\": [\n         \"PHP\",\n         \"HTML\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"XSLT\",\n         \"Perl\"\n      ],\n      \"name\": \"DavidLamabuer\",\n      \"location\": \"Germany\"\n   },\n   {\n      \"github_login\": \"kevva\",\n      \"email\": \"kevinmartensson@gmail.com\",\n      \"stackoverflow_login\": [\n         \"43843_2.33\",\n         \"249862_3.33\"\n      ],\n      \"company\": \"@imagemin @yeoman\",\n      \"github_topics\": [\n         \"binary\",\n         \"check\",\n         \"nodejs\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"https\",\n         \"tunnel\"\n      ],\n      \"github_language\": [\n         \"JavaScript\"\n      ],\n      \"name\": \"Kevin M\\u00e5rtensson\",\n      \"location\": \"Sweden\"\n   },\n   {\n      \"github_login\": \"MatthewVita\",\n      \"email\": \"matthewvita@live.com\",\n      \"stackoverflow_login\": \"Matthew Vita\",\n      \"company\": null,\n      \"github_topics\": [\n         \"hl7-parsing\",\n         \"hl7-message\",\n         \"hit\",\n         \"healthcare\",\n         \"hl7\",\n         \"hl7-builder\",\n         \"hapi\",\n         \"emr\"\n      ],\n      \"github_language\": [\n         \"Shell\",\n         \"Python\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Smarty\",\n         \"VimL\"\n      ],\n      \"name\": \"Matthew Vita\",\n      \"location\": \"Los Angeles, US\"\n   },\n   {\n      \"github_login\": \"kud1ing\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"3310503_0.87\",\n         \"6314864_0.74\",\n         \"2053774_0.91\",\n         \"984652_0.91\",\n         \"1566699_0.87\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"rust\",\n         \"jni\",\n         \"java\",\n         \"ffi\",\n         \"tinkerpop\"\n      ],\n      \"github_language\": [\n         \"Vim script\",\n         \"Shell\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Rust\",\n         \"Java\"\n      ],\n      \"name\": null,\n      \"location\": \"Germany, pretty central\"\n   },\n   {\n      \"github_login\": \"jbmoelker\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"De Voorhoede\",\n      \"github_topics\": [\n         \"svelte\",\n         \"demo\",\n         \"examples\",\n         \"rollup\",\n         \"postcss\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Java\",\n         \"ApacheConf\"\n      ],\n      \"name\": \"Jasper Moelker\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"davidvanleeuwen\",\n      \"email\": \"david@madeawkward.com\",\n      \"stackoverflow_login\": [\n         \"1032656_0.93\",\n         \"1781906_0.8\",\n         \"2459318_0.8\"\n      ],\n      \"company\": \"Awkward\",\n      \"github_topics\": [\n         \"life\",\n         \"personal\"\n      ],\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Shell\",\n         \"TypeScript\"\n      ],\n      \"name\": \"David van Leeuwen\",\n      \"location\": \"The Netherlands\"\n   },\n   {\n      \"github_login\": \"qazbnm456\",\n      \"email\": \"boik@tdohacker.org\",\n      \"stackoverflow_login\": [\n         \"1981340_1.33\",\n         \"7919645_1.67\",\n         \"2513085_2.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"cve\",\n         \"poc\",\n         \"awesome-list\",\n         \"list\",\n         \"security\",\n         \"trivia\",\n         \"treasure\",\n         \"web\",\n         \"websecurity\",\n         \"penetration-testing\",\n         \"vuejs2\",\n         \"electron\",\n         \"prototype\",\n         \"docker\",\n         \"wargame\",\n         \"ctf\",\n         \"rails\"\n      ],\n      \"github_language\": [\n         \"Swift\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Hack\",\n         \"Nginx\"\n      ],\n      \"name\": \"Boik\",\n      \"location\": \"Taiwan\"\n   },\n   {\n      \"github_login\": \"armaldio\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"7536780_1.33\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"website\",\n         \"armaldio\",\n         \"blog\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"construct2\",\n         \"plugin\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Batchfile\",\n         \"Shell\",\n         \"HTML\",\n         \"PHP\"\n      ],\n      \"name\": \"Quentin Goinaud\",\n      \"location\": \"France\"\n   },\n   {\n      \"github_login\": \"mislavcimpersak\",\n      \"email\": null,\n      \"stackoverflow_login\": \"mislav\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"jokes\",\n         \"fun\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"xkcd\",\n         \"excuses\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"CoffeeScript\",\n         \"HTML\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Makefile\",\n         \"F#\",\n         \"PHP\",\n         \"Java\",\n         \"Groovy\",\n         \"TypeScript\",\n         \"Swift\",\n         \"Batchfile\",\n         \"Scala\",\n         \"C#\"\n      ],\n      \"name\": \"Mislav Cimper\\u0161ak\",\n      \"location\": \"Zagreb, Croatia\"\n   },\n   {\n      \"github_login\": \"sjfricke\",\n      \"email\": \"sjfricke@wisc.edu\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"webgl-programming\",\n         \"webgl-articles\",\n         \"glsl-editors\",\n         \"webgl-tutorials\",\n         \"webgl\",\n         \"learning-webgl\",\n         \"webgl-references\",\n         \"webgl-spec-sheet\",\n         \"awesome\",\n         \"awesome-list\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Cuda\",\n         \"Objective-C\"\n      ],\n      \"name\": \"Spencer\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"quangv\",\n      \"email\": \"quang@absentsoft.com\",\n      \"stackoverflow_login\": \"Quang Van\",\n      \"company\": \"Absent Software\",\n      \"github_topics\": [\n         \"couchdb\",\n         \"cloudant\",\n         \"couchdb-wiki\",\n         \"best-practices\",\n         \"couchdb-chat\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"VimL\",\n         \"Python\"\n      ],\n      \"name\": \"Quang Van\",\n      \"location\": \"Central Mass.\"\n   },\n   {\n      \"github_login\": \"kminek\",\n      \"email\": \"kontakt@kminek.pl\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"markdown\",\n         \"parser\",\n         \"standard\",\n         \"marklink\",\n         \"sublime-text\",\n         \"php\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"PHP\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Python\",\n         \"Batchfile\"\n      ],\n      \"name\": \"Grzesiek W\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"pmatseykanets\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"71470_1.58\",\n         \"133476_0.83\",\n         \"178910_0.75\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"laravel\",\n         \"laravel-package\",\n         \"beanstalkd\",\n         \"artisan-command\",\n         \"import\",\n         \"database\",\n         \"eloquent\",\n         \"queue\",\n         \"laravel-scout\",\n         \"postgresql\",\n         \"postgres\",\n         \"full-text-search\"\n      ],\n      \"github_language\": [\n         \"PHP\",\n         \"Makefile\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Roff\",\n         \"ApacheConf\"\n      ],\n      \"name\": \"Peter Matseykanets\",\n      \"location\": \"Columbia, MD\"\n   },\n   {\n      \"github_login\": \"gdi2290\",\n      \"email\": \"github@gdi2290.com\",\n      \"stackoverflow_login\": \"gdi2290\",\n      \"company\": \"@TipeIO\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Dart\",\n         \"HTML\"\n      ],\n      \"name\": \"PatrickJS [tipe.io]\",\n      \"location\": \"San Francisco, CA\"\n   },\n   {\n      \"github_login\": \"bouzlibop\",\n      \"email\": \"bouzlibop@gmail.com\",\n      \"stackoverflow_login\": [\n         \"39182_1.67\",\n         \"420940_1.0\",\n         \"451116_3.33\"\n      ],\n      \"company\": null,\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Ruby\"\n      ],\n      \"name\": \"Adrian Baran\",\n      \"location\": \"Krak\\u00f3w\"\n   },\n   {\n      \"github_login\": \"BubuAnabelas\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"list\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"torrent\",\n         \"p2p\"\n      ],\n      \"github_language\": [\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Perl\",\n         \"ApacheConf\",\n         \"Makefile\"\n      ],\n      \"name\": \"Joaqu\\u00edn Serna\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"podo\",\n      \"email\": \"g.jaloveckas@gmail.com\",\n      \"stackoverflow_login\": [\n         \"775930_1.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"framer-prototype\",\n         \"framer-studio\",\n         \"framerjs\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"autocode\",\n         \"video-course\"\n      ],\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\"\n      ],\n      \"name\": \"Giedrius Jaloveckas\",\n      \"location\": \"Vilnius, Lithuania\"\n   },\n   {\n      \"github_login\": \"terryum\",\n      \"email\": \"terry.t.um@gmail.com\",\n      \"stackoverflow_login\": [\n         \"705767_0.9\",\n         \"1061092_0.8\"\n      ],\n      \"company\": \"University of Waterloo\",\n      \"github_topics\": [\n         \"deep-learning\",\n         \"deep-neural-networks\",\n         \"machine-learning\"\n      ],\n      \"github_language\": [\n         \"Matlab\",\n         \"Python\",\n         \"TeX\",\n         \"Jupyter Notebook\"\n      ],\n      \"name\": \"Terry Taewoong Um\",\n      \"location\": \"Waterloo, ON, Canada\"\n   },\n   {\n      \"github_login\": \"LucasBassetti\",\n      \"email\": \"lucasbr.dafonseca@gmail.com\",\n      \"stackoverflow_login\": [\n         \"31172_1.0\",\n         \"53710_1.17\",\n         \"330171_0.92\"\n      ],\n      \"company\": \"@Integration-Alpha\",\n      \"github_topics\": [\n         \"archimate\",\n         \"java\",\n         \"plugin\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"spa\",\n         \"documentation\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Makefile\",\n         \"Shell\",\n         \"Web Ontology Language\",\n         \"CoffeeScript\",\n         \"Batchfile\",\n         \"Cap'n Proto\"\n      ],\n      \"name\": \"Lucas Bassetti\",\n      \"location\": \"Vit\\u00f3ria - ES\"\n   },\n   {\n      \"github_login\": \"TheJambo\",\n      \"email\": \"james@james.am\",\n      \"stackoverflow_login\": [\n         \"2536666_1.0\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"testing\",\n         \"tester\",\n         \"naughty-strings\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"CMake\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"HTML\",\n         \"Shell\"\n      ],\n      \"name\": \"James Osborn\",\n      \"location\": \"Cambridge, United Kingdom\"\n   },\n   {\n      \"github_login\": \"dar5hak\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"1516870_1.0\",\n         \"6714539_1.55\",\n         \"7498139_1.73\",\n         \"8058836_1.18\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"beautify\",\n         \"typography\",\n         \"yeoman-generator\",\n         \"awesome-list\"\n      ],\n      \"github_language\": [\n         \"Ruby\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"TypeScript\",\n         \"Gherkin\"\n      ],\n      \"name\": \"Darshak Parikh\",\n      \"location\": \"Pune, India\"\n   },\n   {\n      \"github_login\": \"aviaryan\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"614912_0.94\"\n      ],\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"alfred3-workflow\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"editor\",\n         \"bot-editor\"\n      ],\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Batchfile\",\n         \"AutoHotkey\",\n         \"Shell\",\n         \"Python\",\n         \"C++\",\n         \"Ruby\",\n         \"Java\",\n         \"Go\",\n         \"C\",\n         \"C#\",\n         \"Perl\",\n         \"SourcePawn\"\n      ],\n      \"name\": \"Avi Aryan\",\n      \"location\": \"Gandhinagar, India\"\n   },\n   {\n      \"github_login\": \"petk\",\n      \"email\": \"peterkokot@gmail.com\",\n      \"stackoverflow_login\": [\n         \"1484994_1.14\"\n      ],\n      \"company\": \"@php-earth \",\n      \"github_topics\": [\n         \"awesome\",\n         \"community\",\n         \"groups\",\n         \"dojo\",\n         \"javascript\",\n         \"awesome-list\",\n         \"jquery\",\n         \"php\",\n         \"benchmark\"\n      ],\n      \"github_language\": [\n         \"XSLT\",\n         \"PHP\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"ApacheConf\",\n         \"Vue\"\n      ],\n      \"name\": \"Peter Kokot\",\n      \"location\": \"Area 51\"\n   },\n   {\n      \"github_login\": \"d3viant0ne\",\n      \"email\": \"wiens.joshua@gmail.com\",\n      \"stackoverflow_login\": \"d3viant0ne\",\n      \"company\": null,\n      \"github_topics\": [\n         \"docker\",\n         \"nodejs\",\n         \"circleci\",\n         \"debian-jessie\"\n      ],\n      \"github_language\": [\n         \"TypeScript\",\n         \"CSS\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Python\",\n         \"Smarty\"\n      ],\n      \"name\": \"Joshua Wiens\",\n      \"location\": \"Twitter - @d3viant0ne \"\n   },\n   {\n      \"github_login\": \"terkelg\",\n      \"email\": \"terkel@terkel.com\",\n      \"stackoverflow_login\": \"Terkel Gjervig\",\n      \"company\": \"@activetheory\",\n      \"github_topics\": [\n         \"awesome\",\n         \"creative-coding\",\n         \"interaction-design\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"boilerplate\",\n         \"starter-kit\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"Lua\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Vim script\",\n         \"Makefile\",\n         \"Shell\",\n         \"Python\",\n         \"GLSL\",\n         \"Vue\"\n      ],\n      \"name\": \"Terkel\",\n      \"location\": \"Los Angeles, CA\"\n   },\n   {\n      \"github_login\": \"mischah\",\n      \"email\": \"mail@michael-kuehnel.de\",\n      \"stackoverflow_login\": [\n         \"702783_1.0\"\n      ],\n      \"company\": \"Micromata GmbH\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Ruby\",\n         \"Makefile\"\n      ],\n      \"name\": \"Michael K\\u00fchnel\",\n      \"location\": \"Kassel, Germany\"\n   },\n   {\n      \"github_login\": \"kasbah\",\n      \"email\": \"kaspar.emanuel@gmail.com\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"Python\",\n         \"Makefile\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Arduino\",\n         \"OpenSCAD\"\n      ],\n      \"name\": \"Kaspar Emanuel\",\n      \"location\": null\n   },\n   {\n      \"github_login\": \"JesseTG\",\n      \"email\": \"jessetalavera@aol.com\",\n      \"stackoverflow_login\": \"JesseTG\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"qt-framework\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"c\",\n         \"gpgpu\"\n      ],\n      \"github_language\": [\n         \"Java\",\n         \"Shell\",\n         \"FreeMarker\",\n         \"Objective-C\",\n         \"C\",\n         \"C++\",\n         \"Makefile\",\n         \"M4\",\n         \"CSS\",\n         \"JavaScript\",\n         \"GLSL\",\n         \"CMake\",\n         \"Lua\",\n         \"Objective-C++\",\n         \"Mathematica\",\n         \"C#\",\n         \"Haxe\",\n         \"TeX\",\n         \"Cuda\",\n         \"Processing\",\n         \"Ruby\",\n         \"QMake\"\n      ],\n      \"name\": \"Jesse Talavera-Greenberg\",\n      \"location\": \"New York, NY\"\n   },\n   {\n      \"github_login\": \"sger\",\n      \"email\": \"spiros.gerokostas@gmail.com\",\n      \"stackoverflow_login\": [\n         \"798598_2.5\",\n         \"3273271_2.0\",\n         \"1058584_1.0\",\n         \"5155563_9.57\"\n      ],\n      \"company\": \"Binary Level\",\n      \"github_topics\": [\n         \"programming-elixir\",\n         \"elixir\",\n         \"programming-erlang\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"hash\",\n         \"go-programming\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"Elixir\",\n         \"Swift\",\n         \"Shell\",\n         \"Go\",\n         \"Brainfuck\",\n         \"C\",\n         \"ApacheConf\",\n         \"PHP\",\n         \"VimL\",\n         \"PowerShell\",\n         \"Batchfile\",\n         \"Makefile\",\n         \"Erlang\",\n         \"CSS\"\n      ],\n      \"name\": \"Spiros Gerokostas\",\n      \"location\": \"Athens\"\n   },\n   {\n      \"github_login\": \"timofurrer\",\n      \"email\": \"tuxtimo@gmail.com\",\n      \"stackoverflow_login\": [\n         \"6855712_1.13\",\n         \"5361882_0.93\"\n      ],\n      \"company\": null,\n      \"github_topics\": [\n         \"vimrc\",\n         \"vim-configuration\",\n         \"personal\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"heartbeat\",\n         \"device\"\n      ],\n      \"github_language\": [\n         \"Shell\",\n         \"Vim script\",\n         \"Python\",\n         \"Java\",\n         \"Makefile\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Tcl\",\n         \"PowerShell\",\n         \"Batchfile\",\n         \"C\",\n         \"Assembly\",\n         \"C++\"\n      ],\n      \"name\": \"Timo Furrer\",\n      \"location\": \"__switzerland__\"\n   },\n   {\n      \"github_login\": \"harpribot\",\n      \"email\": \"harshal.priyadarshi@utexas.edu\",\n      \"stackoverflow_login\": \"harpribot\",\n      \"company\": \"University of Texas at Austin\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"CMake\",\n         \"C++\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"Scheme\",\n         \"Batchfile\"\n      ],\n      \"name\": \"Harshal Priyadarshi\",\n      \"location\": \"Austin, TX\"\n   },\n   {\n      \"github_login\": \"aliesbelik\",\n      \"email\": null,\n      \"stackoverflow_login\": \"Aliaksandr Belik\",\n      \"company\": null,\n      \"github_topics\": [\n         \"awesome-jmeter\",\n         \"awesome\",\n         \"jmeter\",\n         \"jmeter-plugin\",\n         \"load-testing\",\n         \"performance-measurement\"\n      ],\n      \"github_language\": [\n         \"XSLT\",\n         \"Groovy\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"M4\",\n         \"Perl\"\n      ],\n      \"name\": \"Aliaksandr Belik\",\n      \"location\": \"Belarus\"\n   },\n   {\n      \"github_login\": \"hbokh\",\n      \"email\": \"hbokhoven@gmail.com\",\n      \"stackoverflow_login\": [\n         \"2524858_0.81\",\n         \"3739287_0.81\"\n      ],\n      \"company\": \"@wearespindle \",\n      \"github_topics\": [\n         \"saltstack\",\n         \"configuration-management\",\n         \"awesome-list\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"ansible-tutorial\",\n         \"mysql-ha\"\n      ],\n      \"github_language\": [\n         \"Python\",\n         \"Shell\",\n         \"Ruby\",\n         \"Standard ML\",\n         \"CoffeeScript\",\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Makefile\",\n         \"Nginx\",\n         \"VimL\",\n         \"PHP\",\n         \"Arduino\",\n         \"SaltStack\"\n      ],\n      \"name\": \"Henk\",\n      \"location\": \"Groningen, the Netherlands\"\n   },\n   {\n      \"github_login\": \"websemantics\",\n      \"email\": \"adnan@websemantics.ca\",\n      \"stackoverflow_login\": [\n         \"407743_1.0\",\n         \"453026_0.87\",\n         \"631942_1.6\"\n      ],\n      \"company\": \"Web Semantics, Inc.\",\n      \"github_topics\": [\n         \"atom\",\n         \"styleguide\",\n         \"ui\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"web-scraping\",\n         \"headless-chrome\"\n      ],\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Ruby\",\n         \"CSS\",\n         \"PHP\",\n         \"PowerShell\",\n         \"ApacheConf\"\n      ],\n      \"name\": \"Adnan M.Sagar, PhD\",\n      \"location\": \"Toronto, Canada\"\n   },\n   {\n      \"github_login\": \"vors\",\n      \"email\": null,\n      \"stackoverflow_login\": [\n         \"3629426_1.64\",\n         \"6668673_1.91\"\n      ],\n      \"company\": \"@Dropbox\",\n      \"github_topics\": \"null\",\n      \"github_language\": [\n         \"Arduino\",\n         \"AutoHotkey\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"PHP\",\n         \"Perl\"\n      ],\n      \"name\": \"Sergei Vorobev\",\n      \"location\": \"Seattle, WA\"\n   },\n   {\n      \"github_login\": \"nicolesaidy\",\n      \"email\": \"nicolesaidy@gmail.com\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"github_topics\": [\n         \"design\",\n         \"webdesign\",\n         \"ui-design\",\n         \"ux-design\"\n      ],\n      \"github_language\": [\n         \"VimL\",\n         \"JavaScript\",",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "         \"ApacheConf\",\n         \"PHP\"\n      ],\n      \"name\": \"Nicole Saidy\",\n      \"location\": null\n   }\n]",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/__init__.py",
      "code_snippet": "",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\nimport requests\n\nimport Get_Info.get_info_git as gt\nimport Get_Info.name_form as nf\nfrom Get_Info import levenshtein as le\n\n\ndef request_api(api):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "from Get_Info import get_info_git as gt\n\n\ndef name_form(name):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "import json\nimport time\nimport requests\nimport sys\n\nfrom Get_Info import get_info_git as gt\n\n\ndef request_api(api):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": [],
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "\n\nif __name__ == '__main__':\n    Info_path = sys.path[0] + \"/Info\"\n    info_file = Info_path + '/awesome_info.json'\n    f = open(info_file, encoding='utf-8')\n    git_info = json.load(f)\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "%aN"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/Info/login_try.json",
      "code_snippet": "[\n   {\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"github_login\": \"sindresorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"github_topics\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",\n         \"dark-mode\",\n         \"alfred3-workflow\",\n         \"applescript\",\n         \"alfy\",\n         \"npm-package\",\n         \"emoji\",\n         \"emoji-picker\",\n         \"emoji-searcher\",\n         \"nodejs\",\n         \"lock\",\n         \"c-language\",\n         \"npm\",\n         \"npms\",\n         \"search\",\n         \"search-engine\",\n         \"alfred-theme\",\n         \"theme\",\n         \"simple\",\n         \"minimalistic\",\n         \"light\",\n         \"framework\",\n         \"javascript\",\n         \"workflow\",\n         \"ama\",\n         \"ask-me-anything\",\n         \"question-answering\",\n         \"meta\",\n         \"personal\",\n         \"ask\",\n         \"open-content\",\n         \"questions\",\n         \"answers\",\n         \"questions-and-answers\",\n         \"list\",\n         \"awesome\",\n         \"awesome-list\",\n         \"deprecated\",\n         \"twitter\",\n         \"electron\",\n         \"electron-app\"\n      ],\n      \"name\": \"Sindre Sorhus\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"sindresorhus@gmail.com\"\n   },\n   {\n      \"company\": \"BITS Pilani\",\n      \"github_language\": [\n         \"CSS\",\n         \"PHP\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Shell\",\n         \"Jupyter Notebook\",\n         \"Python\",\n         \"C++\",\n         \"IDL\",\n         \"Arduino\",\n         \"Java\",\n         \"Processing\",\n         \"C\",\n         \"Batchfile\",\n         \"CMake\",\n         \"Scheme\",\n         \"GLSL\",\n         \"Makefile\",\n         \"Prolog\",\n         \"C#\",\n         \"XSLT\",\n         \"QMake\"\n      ],\n      \"github_login\": \"t27\",\n      \"location\": \"India\",\n      \"github_topics\": \"null\",\n      \"name\": \"Tarang Shah\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"company\": null,\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"PHP\",\n         \"JavaScript\",\n         \"C++\",\n         \"C\",\n         \"Makefile\",\n         \"PowerShell\"\n      ],\n      \"github_login\": \"lmichelbacher\",\n      \"location\": \"Edinburgh\",\n      \"github_topics\": \"null\",\n      \"name\": \"Lukas Michelbacher\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"company\": null,\n      \"github_language\": [\n         \"CSS\",\n         \"Shell\",\n         \"M4\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"github_login\": \"Kazhnuz\",\n      \"location\": null,\n      \"github_topics\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",\n         \"applications\",\n         \"gnome-shell-extension\",\n         \"gtk-theme\",\n         \"css\",\n         \"html\",\n         \"bootstrap\",\n         \"icons\",\n         \"faenza\",\n         \"linux\",\n         \"bootstrap3\",\n         \"css3\",\n         \"html5\",\n         \"education\",\n         \"ressources-educatives\",\n         \"logiciels\",\n         \"libre\",\n         \"culture-libre\"\n      ],\n      \"name\": \"Kazhnuz\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"kazhnuz@openmailbox.org\"\n   },\n   {\n      \"company\": null,\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Python\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"github_login\": \"aleksandar-todorovic\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"github_topics\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"c\",\n         \"linux\",\n         \"linux-distribution\",\n         \"desktop-environment\",\n         \"x-window-manager\"\n      ],\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"aleksandar@r3bl.me\"\n   },\n   {\n      \"company\": null,\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Swift\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"github_login\": \"likedan\",\n      \"location\": null,\n      \"github_topics\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",\n         \"machine-learning\",\n         \"curated-list\",\n         \"coreml-framework\",\n         \"coreml-models\",\n         \"coremltools\",\n         \"awesome-list\",\n         \"models\",\n         \"swift-framework\",\n         \"swift3\",\n         \"swift-library\",\n         \"ios\",\n         \"ios-swift\",\n         \"ios-ui\",\n         \"ios-animation\",\n         \"ios-lib\",\n         \"xib\",\n         \"animation\"\n      ],\n      \"name\": \"Kedan Li\",\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n    git_info = get_info(git_api)\n    info_file = '/home/ace/zsj/Get_Info_previous/Info/awesome_match_5.json'\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(info_file, 'w') as ctfile:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import re\nimport time\nimport urllib\nimport urllib.error\n\nimport requests\n\nimport Get_Info_previous.get_info_git as gt\nimport Get_Info_previous.name_form as nf\nfrom Get_Info_previous import levenshtein as le\n\n\ndef request_api(api):",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "import json\nimport os\nimport sys\nimport time\nimport sys\nfrom Get_Info import get_info_git as gt\nfrom Get_Info import get_info_stackoverflow as st\n\nsys.path.append('/home/ace/zsj/GetInfo')\nInfo_path = sys.path[0] + \"/Info\"\nif not os.path.exists(Info_path):\n    os.mkdir(Info_path)\n\nif sys.argv[1] == '--lt':\n    name_file = Info_path + '/{}'.format(sys.argv[2])\n    output_file = Info_path + '/{}'.format(sys.argv[3])\n    name_list = open(name_file, encoding='utf-8')\n    name_list = json.load(name_list)\n    git_info = gt.search_info(name_list)\n\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(output_file, 'w') as ctfile:\n        json.dump(git_info, ctfile, indent=3)\n    print(time.time() - cTime)\n\nelif sys.argv[1] == '--cm':\n    # 'sindresorhus/awesome'\n    git_api = 'https://api.github.com/repos/{}/commits'.format(sys.argv[2])\n    git_info = gt.get_info(git_api)\n    output_file = Info_path + '/{}'.format(sys.argv[3])\n\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(output_file, 'w') as ctfile:\n        json.dump(git_info, ctfile, indent=3)\n    print(time.time() - cTime)\n\nelif sys.argv[1] == '--mp':\n    info_file = Info_path + '/{}'.format(sys.argv[2])\n    syn_file = Info_path + '/syn_list.json'\n\n    git_info = open(info_file, encoding='utf-8')\n    syn_list = open(syn_file, encoding='utf-8')\n    git_info = json.load(git_info)\n    syn_list = json.load(syn_list)\n    stk_count = total_count = 0\n\n    cTime = time.time()\n    print(\"Matching developers between Github and Stack Overflow...\")\n    match_info = st.match_account(git_info, syn_list)\n    print(time.time() - cTime)\n\n    for item in match_info:\n        if not item[\"stackoverflow_login\"] == \"null\":\n            stk_count = stk_count + 1\n        total_count = total_count + 1\n\n    print(\"\\n The number of developers with Stack Overflow account is {}\".format(stk_count))\n    print(\"The number of developers is {}\".format(total_count))\n    print(\"Ratio:{}\".format(round(stk_count / total_count, 4)))\n\n    print(\"Saving the results of matching...\")\n    cTime = time.time()\n    file = Info_path + '/awesome_info_1.json'\n    with open(info_file, 'w') as ctfile:\n        json.dump(match_info, ctfile, indent=3)\n    print(time.time() - cTime)\n\nelif sys.argv[1] == '--help':\n    help = \"--lt  : python main.py --lt [input file] [output file]\\n\" \\\n           \"        Dump the info of developers in the input name list\\n\" \\\n           \"\\n\" \\\n           \"--cm  : python main.py --cm 'repo name'('sindresorhus/awesome') [output file] \\n\" \\\n           \"        Dump the developers' info in the commit history of input repo\\n\" \\\n           \"\\n\" \\\n           \"--mp  : python main.py --mp [file]\\n\" \\\n           \"        Mapping between developers on github and Stack Overflow, but the info should be dumped first\"\n    print(help)\n\n\n\n\n\n\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "from Get_Info_previous import get_info_git as gt\n\n\ndef name_form(name):",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "import json\nimport time\n\nimport requests\n\nfrom Get_Info_previous import get_info_git as gt\n\n\ndef request_api(api):\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\n    info = requests.get(api + app_key)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "\n\nif __name__ == '__main__':\n    info_file = '/home/ace/zsj/Get_Info_previous/Info/awesome_info.json'\n    f = open(info_file, encoding='utf-8')\n    git_info = json.load(f)\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 22:07:19 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "\n    print(\"Dumping the syn_list...\")\n    cTime = time.time()\n    file = '/home/ace/zsj/Get_Info_previous/Info/syn_list.json'\n    with open(file, 'w') as ctfile:\n        json.dump(syn_list, ctfile, indent=3)\n    print(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "{\n   \"os\": \"os\",\n   \"construct2\": \"construct2\",\n   \"Prolog\": \"prolog\",\n   \"uncopyright\": \"uncopyright\",\n   \"opengl\": \"opengl\",\n   \"coreml-models\": \"coreml-models\",\n   \"app\": \"app\",\n   \"awesome-jmeter\": \"awesome-jmeter\",\n   \"pyrocms\": \"pyrocms\",\n   \"Awk\": \"awk\",\n   \"access-land\": \"access-land\",\n   \"search-engine\": \"search-engine\",\n   \"brain\": \"brain\",\n   \"alfred\": \"alfred\",\n   \"node-module\": \"node-module\",\n   \"web-scraping\": [\n      \"webpagescraping\",\n      \"web-scraping\"\n   ],\n   \"Pascal\": \"pascal\",\n   \"services\": \"services\",\n   \"zsh\": \"zsh\",\n   \"arcticfox\": \"arcticfox\",\n   \"nodemcu\": \"nodemcu\",\n   \"life\": \"life\",\n   \"chai\": \"chai\",\n   \"php\": [\n      \"php-include\",\n      \"phtml\",\n      \"php-fpm\",\n      \"php-session\",\n      \"php-readfile\",\n      \"php-functions\",\n      \"php-cgi\",\n      \"php-mail\",\n      \"php-errors\",\n      \"php-cli\",\n      \"php.ini\",\n      \"hypertext-preprocessor\",\n      \"php-frameworks\",\n      \"php5\",\n      \"php-date\",\n      \"php-oop\",\n      \"php\"\n   ],\n   \"typography\": \"typography\",\n   \"lm\": \"lm\",\n   \"meta\": \"meta\",\n   \"eta\": \"eta\",\n   \"poc\": \"poc\",\n   \"excuses\": \"excuses\",\n   \"Smarty\": \"smarty\",\n   \"pwa\": \"pwa\",\n   \"presentation\": \"presentation\",\n   \"pubsub\": \"pubsub\",\n   \"animation\": [\n      \"scaleanimation\",\n      \"rotateanimation\",\n      \"animated\",\n      \"animations\",\n      \"animation\"\n   ],\n   \"sublime-text\": \"sublime-text\",\n   \"ui-design\": \"ui-design\",\n   \"vagrant\": \"vagrant\",\n   \"pandas\": \"pandas\",\n   \"smarthome\": \"smarthome\",\n   \"twitter-bot\": \"twitter-bot\",\n   \"ssr\": \"ssr\",\n   \"background-jobs\": \"background-jobs\",\n   \"portableapps\": \"portableapps\",\n   \"craft-plugin\": \"craft-plugin\",\n   \"apple-tv\": \"apple-tv\",\n   \"coreml\": \"coreml\",\n   \"Vim script\": \"vim script\",\n   \"PLpgSQL\": \"plpgsql\",\n   \"devops-services\": \"devops-services\",\n   \"webrtc\": \"webrtc\",\n   \"linux\": \"linux\",\n   \"applescript\": \"applescript\",\n   \"apple\": \"apple\",\n   \"print\": \"print\",\n   \"homematic\": \"homematic\",\n   \"clipboard\": \"clipboard\",\n   \"laravel-package\": \"laravel-package\",\n   \"devops-tools\": \"devops-tools\",\n   \"article\": \"article\",\n   \"groups\": \"groups\",\n   \"decode\": \"decode\",\n   \"desktop-environment\": \"desktop-environment\",\n   \"talk\": \"talk\",\n   \"datascience\": \"datascience\",\n   \"philanthropy\": \"philanthropy\",\n   \"alfred-theme\": \"alfred-theme\",\n   \"DTrace\": \"dtrace\",\n   \"docker\": \"docker\",\n   \"blaze\": \"blaze\",\n   \"p2p\": [\n      \"peer-to-peer\",\n      \"p2p\"\n   ],\n   \"gnome\": \"gnome\",\n   \"synonyms\": \"synonyms\",\n   \"event-emitter\": \"event-emitter\",\n   \"SaltStack\": \"saltstack\",\n   \"msr\": \"msr\",\n   \"alfy\": \"alfy\",\n   \"GLSL\": \"glsl\",\n   \"linux-distribution\": \"linux-distribution\",\n   \"tasks\": \"tasks\",\n   \"buddypress\": \"buddypress\",\n   \"eloquent\": \"eloquent\",\n   \"OpenSCAD\": \"openscad\",\n   \"coremltools\": \"coremltools\",\n   \"launchpad\": \"launchpad\",\n   \"rust\": \"rust\",\n   \"tester\": \"tester\",\n   \"github\": \"github\",\n   \"qt-framework\": \"qt-framework\",\n   \"natural-language-processing\": \"natural-language-processing\",\n   \"mods\": \"mods\",\n   \"crabgrass\": \"crabgrass\",\n   \"craig-server-game\": \"craig-server-game\",\n   \"github-io\": \"github-io\",\n   \"github-page\": \"github-page\",\n   \"webgl-tutorials\": \"webgl-tutorials\",\n   \"type-safety\": \"type-safety\",\n   \"math-library\": \"math-library\",\n   \"swift3\": [\n      \"swift3.1\",\n      \"swift3.0.2\",\n      \"swift3.0.1\",\n      \"swift3.0\",\n      \"swift3\"\n   ],\n   \"loaders\": \"loaders\",\n   \"android-seed\": \"android-seed\",\n   \"https\": \"https\",\n   \"purge\": \"purge\",\n   \"clear\": \"clear\",\n   \"eventemitter\": \"eventemitter\",\n   \"github-bot\": \"github-bot\",\n   \"davisonio\": \"davisonio\",\n   \"0xacab\": \"0xacab\",\n   \"slides\": \"slides\",\n   \"Standard ML\": \"standard ml\",\n   \"nlp\": [\n      \"language-processing\",\n      \"computational-linguistics\",\n      \"natural-language\",\n      \"natural-language-process\",\n      \"nlp\"\n   ],\n   \"Java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",\n      \"jdk\",\n      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\",\n      \"java\"\n   ],\n   \"land\": \"land\",\n   \"Perl\": \"perl\",\n   \"budget-manager\": \"budget-manager\",\n   \"benchmark\": \"benchmark\",\n   \"financial-independence\": \"financial-independence\",\n   \"code\": \"code\",\n   \"less\": [\n      \"lesscss\",\n      \"less\"\n   ],\n   \"elixir-school\": \"elixir-school\",\n   \"jekyll\": \"jekyll\",\n   \"linux-kernel\": \"linux-kernel\",\n   \"fsf\": \"fsf\",\n   \"buzzer\": \"buzzer\",\n   \"TypeScript\": \"typescript\",\n   \"awesomeness\": \"awesomeness\",\n   \"educational\": \"educational\",\n   \"numerical-calculations\": \"numerical-calculations\",\n   \"OpenEdge ABL\": \"openedge abl\",\n   \"gbm\": \"gbm\",\n   \"making-games\": \"making-games\",\n   \"dsl\": [\n      \"domain-specific-languages\",\n      \"dsl\"\n   ],\n   \"questions-and-answers\": \"questions-and-answers\",\n   \"Meson\": \"meson\",\n   \"models\": \"models\",\n   \"Scheme\": \"scheme\",\n   \"dumb\": \"dumb\",\n   \"Protocol Buffer\": \"protocol buffer\",\n   \"macosx\": \"macosx\",\n   \"lecture\": \"lecture\",\n   \"audio\": [\n      \"sounds\",\n      \"sound-api\",\n      \"sound\",\n      \"audio\"\n   ],\n   \"dropbox-v2\": \"dropbox-v2\",\n   \"learn\": \"learn\",\n   \"data-science-competition\": \"data-science-competition\",\n   \"screen-brightness\": \"screen-brightness\",\n   \"torrent\": \"torrent\",\n   \"stringtools\": \"stringtools\",\n   \"software-freedom\": \"software-freedom\",\n   \"fault-tolerance\": \"fault-tolerance\",\n   \"log\": \"log\",\n   \"webpack\": \"webpack\",\n   \"readme\": \"readme\",\n   \"ansible-tips\": \"ansible-tips\",\n   \"unit\": \"unit\",\n   \"Mako\": \"mako\",\n   \"apns2\": \"apns2\",\n   \"machine-learning\": \"machine-learning\",\n   \"minimalist\": \"minimalist\",\n   \"codeforces\": \"codeforces\",\n   \"trump\": \"trump\",\n   \"application\": \"application\",\n   \"data-mining\": \"data-mining\",\n   \"gtk-theme\": \"gtk-theme\",\n   \"alfred-3\": \"alfred-3\",\n   \"pixel-art\": \"pixel-art\",\n   \"curl\": \"curl\",\n   \"PigLatin\": \"piglatin\",\n   \"Jupyter Notebook\": \"jupyter notebook\",\n   \"events\": [\n      \"event\",\n      \"events\"\n   ],\n   \"webgl-spec-sheet\": \"webgl-spec-sheet\",\n   \"html\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\",\n      \"html\"\n   ],\n   \"cache\": \"cache\",\n   \"www\": \"www\",\n   \"effective-altruism\": \"effective-altruism\",\n   \"haskell\": \"haskell\",\n   \"btc\": \"btc\",\n   \"ibge\": \"ibge\",\n   \"home-automation\": \"home-automation\",\n   \"Cucumber\": \"cucumber\",\n   \"platform-game\": \"platform-game\",\n   \"Batchfile\": \"batchfile\",\n   \"ui\": \"ui\",\n   \"tutorial\": \"tutorial\",\n   \"beautify\": \"beautify\",\n   \"wikipedia\": \"wikipedia\",\n   \"chatbot\": \"chatbot\",\n   \"LLVM\": \"llvm\",\n   \"programming-elixir\": \"programming-elixir\",\n   \"tags\": [\n      \"tag\",\n      \"tags\"\n   ],\n   \"github-api\": \"github-api\",\n   \"string-manipulation\": \"string-manipulation\",\n   \"coroutines\": \"coroutines\",\n   \"buddhism\": \"buddhism\",\n   \"emoji\": \"emoji\",\n   \"dictionary\": [\n      \"map\",\n      \"dictionaries\",\n      \"dict\",\n      \"dictionary\"\n   ],\n   \"physical-security\": \"physical-security\",\n   \"darkage-mod\": \"darkage-mod\",\n   \"education\": \"education\",\n   \"vim\": [\n      \"viml\",\n      \"vimscript\",\n      \"gvim\",\n      \"gvimrc\",\n      \"vimrc\",\n      \"vim\"\n   ],\n   \"Mercury\": \"mercury\",\n   \"deployment\": [\n      \"deploy\",\n      \"deployment\"\n   ],\n   \"M4\": \"m4\",\n   \"dna-chipsets\": \"dna-chipsets\",\n   \"chromecast\": \"chromecast\",\n   \"framework\": \"framework\",\n   \"promises\": \"promises\",\n   \"Haxe\": \"haxe\",\n   \"search\": [\n      \"searching\",\n      \"search\"\n   ],\n   \"elixir-dropbox\": \"elixir-dropbox\",\n   \"contest\": \"contest\",\n   \"engineering-managers\": \"engineering-managers\",\n   \"channels\": \"channels\",\n   \"python3\": \"python3\",\n   \"html5-filesystem-api\": \"html5-filesystem-api\",\n   \"electron-app\": \"electron-app\",\n   \"XQuery\": \"xquery\",\n   \"interaction-design\": \"interaction-design\",\n   \"twitter\": [\n      \"twitter-api\",\n      \"twitter\"\n   ],\n   \"music\": \"music\",\n   \"ApacheConf\": \"apacheconf\",\n   \"csv2json\": \"csv2json\",\n   \"documentation\": [\n      \"docs\",\n      \"documentation\"\n   ],\n   \"slice\": [\n      \"string-slice\",\n      \"array-slice\",\n      \"slices\",\n      \"slicing\",\n      \"slice\"\n   ],\n   \"framerjs\": \"framerjs\",\n   \"minify\": [\n      \"minification\",\n      \"minifier\",\n      \"minify\"\n   ],\n   \"GCC Machine Description\": \"gcc machine description\",\n   \"ColdFusion\": \"coldfusion\",\n   \"ramme\": \"ramme\",\n   \"apc\": \"apc\",\n   \"imgur\": \"imgur\",\n   \"framer-resources\": \"framer-resources\",\n   \"ppa\": \"ppa\",\n   \"jokes\": \"jokes\",\n   \"picking-locks\": \"picking-locks\",\n   \"dilmes-ipsum\": \"dilmes-ipsum\",\n   \"JavaScript\": [\n      \"javascript-module\",\n      \"vanilla-javascript\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \".js\",\n      \"ecmascript\",\n      \"js\",\n      \"javascript\"\n   ],\n   \"conversational-ui\": \"conversational-ui\",\n   \"joke\": \"joke\",\n   \"data-structures\": [\n      \"data-structure\",\n      \"data-structures\"\n   ],\n   \"mooc\": \"mooc\",\n   \"math-snippets\": \"math-snippets\",\n   \"learning-webgl\": \"learning-webgl\",\n   \"type-token-ratio\": \"type-token-ratio\",\n   \"lua\": \"lua\",\n   \"OCaml\": \"ocaml\",\n   \"bear\": \"bear\",\n   \"cpu\": \"cpu\",\n   \"ios-animation\": \"ios-animation\",\n   \"brute-force\": \"brute-force\",\n   \"react-native\": \"react-native\",\n   \"PureBasic\": \"purebasic\",\n   \"Clojure\": [\n      \"cljx\",\n      \"cljc\",\n      \"clj\",\n      \"clojure\"\n   ],\n   \"rubyml\": \"rubyml\",\n   \"kennethreitz\": \"kennethreitz\",\n   \"mobile\": \"mobile\",\n   \"camo\": \"camo\",\n   \"deep-learning\": \"deep-learning\",\n   \"bricks\": \"bricks\",\n   \"trump-ipsum\": \"trump-ipsum\",\n   \"laravel-scout\": \"laravel-scout\",\n   \"webtorrent\": \"webtorrent\",\n   \"imgur-uploader\": \"imgur-uploader\",\n   \"trivia\": \"trivia\",\n   \"dark-mode\": \"dark-mode\",\n   \"snakemake\": \"snakemake\",\n   \"uncss\": \"uncss\",\n   \"c\": \"c\",\n   \"GAP\": \"gap\",\n   \"counter-strike\": \"counter-strike\",\n   \"Forth\": \"forth\",\n   \"generator\": [\n      \"generators\",\n      \"generator\"\n   ],\n   \"modular\": \"modular\",\n   \"circleci\": \"circleci\",\n   \"transliteration\": \"transliteration\",\n   \"configuration-management\": \"configuration-management\",\n   \"cc0\": \"cc0\",\n   \"testing\": [\n      \"test\",\n      \"tests\",\n      \"software-testing\",\n      \"testing\"\n   ],\n   \"free-software\": \"free-software\",\n   \"process-manager\": \"process-manager\",\n   \"xib\": \"xib\",\n   \"Assembly\": [\n      \"assembly-language\",\n      \"assembler\",\n      \"asm\",\n      \"assembly\"\n   ],\n   \"lorem\": \"lorem\",\n   \"ruby-gem\": \"ruby-gem\",\n   \"cdf\": \"cdf\",\n   \"magento-extension\": \"magento-extension\",\n   \"https-agents\": \"https-agents\",\n   \"notification-service\": \"notification-service\",\n   \"hl7-builder\": \"hl7-builder\",\n   \"bundle\": \"bundle\",\n   \"plaintext-accounting\": \"plaintext-accounting\",\n   \"Web Ontology Language\": \"web ontology language\",\n   \"minimalistic\": \"minimalistic\",\n   \"donations\": \"donations\",\n   \"tunnel\": \"tunnel\",\n   \"books\": \"books\",\n   \"Groovy\": \"groovy\",\n   \"i18n\": \"i18n\",\n   \"telekom\": \"telekom\",\n   \"environment\": \"environment\",\n   \"petition\": \"petition\",\n   \"binary\": [\n      \"binary-system\",\n      \"binary-number\",\n      \"binary\"\n   ],\n   \"http\": \"http\",\n   \"power\": \"power\",\n   \"computational-linguistics\": \"computational-linguistics\",\n   \"windows\": [\n      \"windows-application\",\n      \"windows-programming\",\n      \"windows\"\n   ],\n   \"drone-ci\": \"drone-ci\",\n   \"NSIS\": \"nsis\",\n   \"toolbox\": \"toolbox\",\n   \"framer-prototype\": \"framer-prototype\",\n   \"dhamma\": \"dhamma\",\n   \"SourcePawn\": \"sourcepawn\",\n   \"laravel\": \"laravel\",\n   \"dask\": \"dask\",\n   \"jni\": [\n      \"java-native-interface\",\n      \"jni\"\n   ],\n   \"penetration-testing\": [\n      \"pen-testing\",\n      \"penetration-testing\"\n   ],\n   \"umbrella\": \"umbrella\",\n   \"icons\": [\n      \"icon\",\n      \"icons\"\n   ],\n   \"portfolio\": \"portfolio\",\n   \"icinga\": \"icinga\",\n   \"filesystem-api\": \"filesystem-api\",\n   \"threejs\": \"threejs\",\n   \"cd\": \"cd\",\n   \"pentaho\": \"pentaho\",\n   \"darkage\": \"darkage\",\n   \"emoji-searcher\": \"emoji-searcher\",\n   \"aviaryan\": \"aviaryan\",\n   \"speedport\": \"speedport\",\n   \"hash\": [\n      \"hashes\",\n      \"hashing\",\n      \"hash\"\n   ],\n   \"deep-web\": \"deep-web\",\n   \"development-workflow\": \"development-workflow\",\n   \"sublime\": \"sublime\",\n   \"typo3\": \"typo3\",\n   \"SQLPL\": \"sqlpl\",\n   \"Go\": [\n      \"golang\",\n      \"go-language\",\n      \"go\"\n   ],\n   \"chromium\": \"chromium\",\n   \"smarttv\": \"smarttv\",\n   \"no-login\": \"no-login\",\n   \"bot\": \"bot\",\n   \"sexy-lists\": \"sexy-lists\",\n   \"ubuntu\": [\n      \"lubuntu\",\n      \"kubuntu\",\n      \"xubuntu\",\n      \"ubuntu\"\n   ],\n   \"passive-income\": \"passive-income\",\n   \"listener\": \"listener\",\n   \"es2015\": \"es2015\",\n   \"heartbeat\": \"heartbeat\",\n   \"algorithmen\": \"algorithmen\",\n   \"ant\": [\n      \"apache-ant\",\n      \"ant\"\n   ],\n   \"mocha\": \"mocha\",\n   \"GDB\": \"gdb\",\n   \"utilities\": \"utilities\",\n   \"hslu\": \"hslu\",\n   \"gnu\": \"gnu\",\n   \"gpgpu\": \"gpgpu\",\n   \"clipjump\": \"clipjump\",\n   \"open-content\": \"open-content\",\n   \"web-extension\": \"web-extension\",\n   \"web\": [\n      \"www\",\n      \"web\"\n   ],\n   \"magento2\": \"magento2\",\n   \"Logtalk\": \"logtalk\",\n   \"queue\": \"queue\",\n   \"yeoman-generator\": \"yeoman-generator\",\n   \"bots\": [\n      \"bot\",\n      \"bots\"\n   ],\n   \"npm-package\": \"npm-package\",\n   \"sideproject\": \"sideproject\",\n   \"Groff\": \"groff\",\n   \"filter\": [\n      \"filters\",\n      \"filter\"\n   ],\n   \"graphics-engine\": \"graphics-engine\",\n   \"magento-2\": \"magento-2\",\n   \"kanban\": \"kanban\",\n   \"Elixir\": [\n      \"elixir-lang\",\n      \"elixir\"\n   ],\n   \"bittorrent\": \"bittorrent\",\n   \"HCL\": \"hcl\",\n   \"prometheus\": \"prometheus\",\n   \"api-client\": \"api-client\",\n   \"swipe-gestures\": \"swipe-gestures\",\n   \"number\": \"number\",\n   \"javafx\": \"javafx\",\n   \"cdn\": \"cdn\",\n   \"webgl\": \"webgl\",\n   \"commonmark\": \"commonmark\",\n   \"atom-package\": \"atom-package\",\n   \"apollo\": \"apollo\",\n   \"Yacc\": \"yacc\",\n   \"cryptocurrency\": \"cryptocurrency\",\n   \"latex\": \"latex\",\n   \"matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\",\n      \"matlab\"\n   ],\n   \"apollo-server\": \"apollo-server\",\n   \"fonsole\": \"fonsole\",\n   \"programming-erlang\": \"programming-erlang\",\n   \"parser\": \"parser\",\n   \"pure-css\": \"pure-css\",\n   \"datenstrukturen\": \"datenstrukturen\",\n   \"swift-framework\": \"swift-framework\",\n   \"tilt-sensor\": \"tilt-sensor\",\n   \"faenza\": \"faenza\",\n   \"ansible-demo\": \"ansible-demo\",\n   \"css\": [\n      \"css-font-weight\",\n      \"dynamic-css\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"cascading-style-sheet\",\n      \"css\"\n   ],\n   \"zappa\": \"zappa\",\n   \"math\": [\n      \"arithmetic\",\n      \"mathematical\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"mathematics\",\n      \"math\"\n   ],\n   \"faas\": \"faas\",\n   \"chrome-extension\": \"chrome-extension\",\n   \"xkcd\": \"xkcd\",\n   \"gpl\": \"gpl\",\n   \"stream\": [\n      \"streams\",\n      \"stream\"\n   ],\n   \"arpa\": \"arpa\",\n   \"bot-editor\": \"bot-editor\",\n   \"learning-java\": \"learning-java\",\n   \"webpack2\": \"webpack2\",\n   \"culture-libre\": \"culture-libre\",\n   \"rails\": \"rails\",\n   \"ios-ui\": \"ios-ui\",\n   \"otp\": \"otp\",\n   \"giphy\": \"giphy\",\n   \"homegear\": \"homegear\",\n   \"answers\": \"answers\",\n   \"eth\": \"eth\",\n   \"cli\": \"cli\",\n   \"html5\": [\n      \"time-tag\",\n      \"xhtml5\",\n      \"html5\"\n   ],\n   \"sublime-text-package\": \"sublime-text-package\",\n   \"bash\": [\n      \"bash-function\",\n      \".bash-profile\",\n      \"bash-variables\",\n      \"bash-alias\",\n      \".bashrc\",\n      \"bashrc\",\n      \"bash-script\",\n      \"bash\"\n   ],\n   \"XSLT\": [\n      \"xml-transform\",\n      \"xslt-2.0-processors\",\n      \"xsltprocessor\",\n      \"xsltproc\",\n      \"xsltransform\",\n      \"xsl\",\n      \"xslt\"\n   ],\n   \"tex\": \"tex\",\n   \"Elm\": \"elm\",\n   \"Scilab\": \"scilab\",\n   \"travis-torrent\": \"travis-torrent\",\n   \"Lua\": \"lua\",\n   \"plaintext\": \"plaintext\",\n   \"questions\": [\n      \"question\",\n      \"questions\"\n   ],\n   \"craft\": \"craft\",\n   \"beancount\": \"beancount\",\n   \"minetest-subgame\": \"minetest-subgame\",\n   \"golang\": \"golang\",\n   \"load-testing\": [\n      \"loadtest\",\n      \"load-testing\"\n   ],\n   \"bitcoin\": \"bitcoin\",\n   \"demo\": \"demo\",\n   \"mirror\": \"mirror\",\n   \"coin\": \"coin\",\n   \"workflow-management\": \"workflow-management\",\n   \"npm\": \"npm\",\n   \"rubocop\": \"rubocop\",\n   \"theme\": \"theme\",\n   \"c-language\": \"c-language\",\n   \"HTML\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\",\n      \"html\"\n   ],\n   \"pyrocms-extenstions\": \"pyrocms-extenstions\",\n   \"svelte\": \"svelte\",\n   \"golang-library\": \"golang-library\",\n   \"culfw\": \"culfw\",\n   \"Ruby\": \"ruby\",\n   \"rpc\": \"rpc\",\n   \"Augeas\": \"augeas\",\n   \"Agda\": \"agda\",\n   \"hl7-parsing\": \"hl7-parsing\",\n   \"Roff\": \"roff\",\n   \"Makefile\": [\n      \"make\",\n      \"makefiles\",\n      \"makefile\"\n   ],\n   \"cards\": \"cards\",\n   \"css-minifier\": \"css-minifier\",\n   \"networking\": [\n      \"networks\",\n      \"network\",\n      \"networking\"\n   ],\n   \"ask\": \"ask\",\n   \"Nim\": \"nim\",\n   \"apcupsd\": \"apcupsd\",\n   \"collection\": \"collection\",\n   \"game-engine\": \"game-engine\",\n   \"text-metric\": \"text-metric\",\n   \"background\": \"background\",\n   \"git\": \"git\",\n   \"tool\": \"tool\",\n   \"indie\": \"indie\",\n   \"package\": \"package\",\n   \"ios\": [\n      \"ios-sdk\",\n      \"apple-ios\",\n      \"iphone-os\",\n      \"ios\"\n   ],\n   \"ontouml\": \"ontouml\",\n   \"competitive\": \"competitive\",\n   \"m17n\": \"m17n\",\n   \"ibus\": \"ibus\",\n   \"light\": \"light\",\n   \"static-site-generator\": \"static-site-generator\",\n   \"rubynlp\": \"rubynlp\",\n   \"emr\": \"emr\",\n   \"ui-components\": \"ui-components\",\n   \"simple\": \"simple\",\n   \"keyboard\": [\n      \"keyboards\",\n      \"keyboard\"\n   ],\n   \"TeX\": \"tex\",\n   \"css-selector\": \"css-selector\",\n   \"Julia\": \"julia\",\n   \"minetest-mod\": \"minetest-mod\",\n   \"h2oai\": \"h2oai\",\n   \"zesty\": \"zesty\",\n   \"minetest\": \"minetest\",\n   \"algo\": \"algo\",\n   \"webdesign\": \"webdesign\",\n   \"deep-neural-networks\": \"deep-neural-networks\",\n   \"coach-sheet\": \"coach-sheet\",\n   \"check\": \"check\",\n   \"clipboard-manager\": \"clipboard-manager\",\n   \"getting-started\": \"getting-started\",\n   \"farsi\": \"farsi\",\n   \"esoteric\": \"esoteric\",\n   \"esoteric-language\": \"esoteric-language\",\n   \"text-manipulation\": \"text-manipulation\",\n   \"usb\": [\n      \"usbdevice\",\n      \"usb\"\n   ],\n   \"separator\": \"separator\",\n   \"codepen\": \"codepen\",\n   \"website-template\": \"website-template\",\n   \"engineering-management\": \"engineering-management\",\n   \"delimiter\": \"delimiter\",\n   \"placeholder\": \"placeholder\",\n   \"Isabelle\": \"isabelle\",\n   \"fun\": [\n      \"humour\",\n      \"humor\",\n      \"fun\"\n   ],\n   \"xBase\": \"xbase\",\n   \"rubydatascience\": \"rubydatascience\",\n   \"Rust\": \"rust\",\n   \"Eagle\": \"eagle\",\n   \"calculator\": \"calculator\",\n   \"electron\": \"electron\",\n   \"PowerShell\": [\n      \"windows-powershell\",\n      \"powershell\"\n   ],\n   \"tikz\": \"tikz\",\n   \"reddit\": [\n      \"reddit-api\",\n      \"reddit\"\n   ],\n   \"artisan-command\": \"artisan-command\",\n   \"hl7-message\": \"hl7-message\",\n   \"pwa-boilerplate\": \"pwa-boilerplate\",\n   \"template\": \"template\",\n   \"archi\": \"archi\",\n   \"django\": \"django\",\n   \"markdown\": \"markdown\",\n   \"competitive-programming-contests\": \"competitive-programming-contests\",\n   \"hacking\": \"hacking\",\n   \"dropbox\": \"dropbox\",\n   \"lorem-ipsum-generator\": \"lorem-ipsum-generator\",\n   \"engine\": \"engine\",\n   \"couchdb-wiki\": \"couchdb-wiki\",\n   \"codejam\": \"codejam\",\n   \"nextjs\": \"nextjs\",\n   \"video-course\": \"video-course\",\n   \"Emacs Lisp\": \"emacs lisp\",\n   \"config\": \"config\",\n   \"AutoHotkey\": \"autohotkey\",\n   \"jmeter-plugin\": \"jmeter-plugin\",\n   \"ooc\": \"ooc\",\n   \"graphql\": \"graphql\",\n   \"Vue\": \"vue\",\n   \"scim\": \"scim\",\n   \"postgresql\": [\n      \"sql-postgres\",\n      \"pgsql\",\n      \"postgres\",\n      \"postgresql\"\n   ],\n   \"ASP\": \"asp\",\n   \"java-scripts\": \"java-scripts\",\n   \"Kotlin\": \"kotlin\",\n   \"ctf\": \"ctf\",\n   \"mysql-ha\": \"mysql-ha\",\n   \"couchdb\": \"couchdb\",\n   \"react\": \"react\",\n   \"irc\": \"irc\",\n   \"potato\": \"potato\",\n   \"colors\": [\n      \"colours\",\n      \"colour\",\n      \"color\",\n      \"colors\"\n   ],\n   \"aws-lambda\": [\n      \"amazon-lambda\",\n      \"aws-lambda\"\n   ],\n   \"programming-style\": \"programming-style\",\n   \"C\": \"c\",\n   \"mobile-game\": \"mobile-game\",\n   \"freedom\": \"freedom\",\n   \"PHP\": [\n      \"php-include\",\n      \"phtml\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"php5\",\n      \"php-date\",\n      \"php-oop\",\n      \"php\"\n   ],\n   \"Inno Setup\": \"inno setup\",\n   \"anime\": \"anime\",\n   \"deprecated\": [\n      \"deprecation\",\n      \"deprecated\"\n   ],\n   \"public-domain\": \"public-domain\",\n   \"apns\": \"apns\",\n   \"terminal\": [\n      \"terminals\",\n      \"terminal\"\n   ],\n   \"wikimedia\": \"wikimedia\",\n   \"Arduino\": \"arduino\",\n   \"formatter\": \"formatter\",\n   \"Perl6\": \"perl6\",\n   \"lisp\": \"lisp\",\n   \"exercise\": \"exercise\",\n   \"naughty-strings\": \"naughty-strings\",\n   \"glsl\": \"glsl\",\n   \"coreml-framework\": \"coreml-framework\",\n   \"linter\": \"linter\",\n   \"vape\": \"vape\",\n   \"mathematics\": \"mathematics\",\n   \"npm-scripts\": \"npm-scripts\",\n   \"Processing\": [\n      \"processing.org\",\n      \"processing\"\n   ],\n   \"framer-studio\": \"framer-studio\",\n   \"best-practices\": \"best-practices\",\n   \"design\": \"design\",\n   \"puppeteer\": \"puppeteer\",\n   \"applications\": \"applications\",\n   \"community\": \"community\",\n   \"ios-swift\": \"ios-swift\",\n   \"x-window-manager\": \"x-window-manager\",\n   \"dictionary-based-attacks\": \"dictionary-based-attacks\",\n   \"Swift\": [\n      \"swift1.2\",\n      \"swift-ios\",\n      \"swift-language\",\n      \"swift\"\n   ],\n   \"internet-of-things\": \"internet-of-things\",\n   \"Objective-C++\": \"objective-c++\",\n   \"lock\": \"lock\",\n   \"Shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\",\n      \"shell\"\n   ],\n   \"bearss\": \"bearss\",\n   \"synonym\": \"synonym\",\n   \"activity\": \"activity\",\n   \"websites\": \"websites\",\n   \"lorem-ipsum\": \"lorem-ipsum\",\n   \"qt-applications\": \"qt-applications\",\n   \"minetest-engine\": \"minetest-engine\",\n   \"ad\": \"ad\",\n   \"KiCad\": \"kicad\",\n   \"ipsum\": \"ipsum\",\n   \"games-showcase\": \"games-showcase\",\n   \"tinkerpop\": \"tinkerpop\",\n   \"editor\": \"editor\",\n   \"practice\": \"practice\",\n   \"iot\": \"iot\",\n   \"treasure\": \"treasure\",\n   \"http2\": \"http2\",\n   \"numbertools\": \"numbertools\",\n   \"coreml-model\": \"coreml-model\",\n   \"Hack\": \"hack\",\n   \"indiedev\": \"indiedev\",\n   \"creative-coding\": \"creative-coding\",\n   \"Common Lisp\": \"common lisp\",\n   \"api\": [\n      \"apis\",\n      \"api\"\n   ],\n   \"postcss\": \"postcss\",\n   \"tokenizer\": \"tokenizer\",\n   \"temperature-control\": \"temperature-control\",\n   \"workflow\": \"workflow\",\n   \"nodejs\": \"nodejs\",\n   \"chat\": \"chat\",\n   \"game-development\": \"game-development\",\n   \"calc\": \"calc\",\n   \"io\": [\n      \"input-output\",\n      \"io\"\n   ],\n   \"craig-minetest-server\": \"craig-minetest-server\",\n   \"Tcl\": \"tcl\",\n   \"random-text\": \"random-text\",\n   \"shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\",\n      \"shell\"\n   ],\n   \"Brainfuck\": \"brainfuck\",\n   \"competitive-programming\": \"competitive-programming\",\n   \"enzyme\": \"enzyme\",\n   \"guitar\": \"guitar\",\n   \"HLSL\": \"hlsl\",\n   \"heart\": \"heart\",\n   \"dojo\": [\n      \"dojo-store\",\n      \"dojo-layer\",\n      \"dojo.stateful\",\n      \"dojo-require\",\n      \"dojo.data\",\n      \"dijit\",\n      \"dojox\",\n      \"dojo\"\n   ],\n   \"Gherkin\": \"gherkin\",\n   \"quotes\": \"quotes\",\n   \"nagios-plugin\": \"nagios-plugin\",\n   \"badges\": \"badges\",\n   \"hit\": \"hit\",\n   \"brightness\": \"brightness\",\n   \"CMake\": \"cmake\",\n   \"vim-configuration\": \"vim-configuration\",\n   \"craig\": \"craig\",\n   \"language-support\": \"language-support\",\n   \"database\": [\n      \"dbms\",\n      \"database-structure\",\n      \"db\",\n      \"databases\",\n      \"database\"\n   ],\n   \"hackerearth\": \"hackerearth\",\n   \"cloudant\": \"cloudant\",\n   \"alfred-workflow\": \"alfred-workflow\",\n   \"accounting\": \"accounting\",\n   \"ansible-role\": \"ansible-role\",\n   \"tor\": \"tor\",\n   \"github-pages\": [\n      \"gh-pages\",\n      \"github-pages\"\n   ],\n   \"subscription\": \"subscription\",\n   \"graphics\": [\n      \"computer-graphics\",\n      \"graphics\"\n   ],\n   \"qt\": \"qt\",\n   \"opensource\": \"opensource\",\n   \"preact\": \"preact\",\n   \"hapi\": \"hapi\",\n   \"cpp\": \"cpp\",\n   \"tizen\": \"tizen\",\n   \"cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\",\n      \"cuda\"\n   ],\n   \"go-programming\": \"go-programming\",\n   \"Scala\": \"scala\",\n   \"ansible-roles\": \"ansible-roles\",\n   \"ios-lib\": \"ios-lib\",\n   \"ANTLR\": \"antlr\",\n   \"jsx\": \"jsx\",\n   \"R\": [\n      \"r-language\",\n      \"rstats\",\n      \"r\"\n   ],\n   \"Coq\": \"coq\",\n   \"beta\": \"beta\",\n   \"locksport\": \"locksport\",\n   \"Idris\": \"idris\",\n   \"gnome-shell-extension\": \"gnome-shell-extension\",\n   \"castra\": \"castra\",\n   \"dmx\": \"dmx\",\n   \"logiciels\": \"logiciels\",\n   \"textures\": [\n      \"texture\",\n      \"textures\"\n   ],\n   \"pixel-layout\": \"pixel-layout\",\n   \"bacon-mod\": \"bacon-mod\",\n   \"webgl-programming\": \"webgl-programming\",\n   \"programming-language\": \"programming-language\",\n   \"Cap'n Proto\": \"cap'n proto\",\n   \"tunneling-proxies\": \"tunneling-proxies\",\n   \"type-checking\": \"type-checking\",\n   \"text-analysis\": \"text-analysis\",\n   \"build\": [\n      \"builds\",\n      \"build\"\n   ],\n   \"mqtt\": \"mqtt\",\n   \"nextcloud\": \"nextcloud\",\n   \"C++\": [\n      \"cpp\",\n      \"c++\"\n   ],\n   \"instagram\": \"instagram\",\n   \"interoperability\": \"interoperability\",\n   \"fhem\": \"fhem\",\n   \"pixel\": \"pixel\",\n   \"react-toolbox\": \"react-toolbox\",\n   \"svg\": [\n      \"svg-path\",\n      \"svgz\",\n      \"svg\"\n   ],\n   \"java-8\": [\n      \"jdk1.8\",\n      \"jdk8\",\n      \"java-8\"\n   ],\n   \"gideros\": \"gideros\",\n   \"portfolio-website\": \"portfolio-website\",\n   \"data-analysis\": \"data-analysis\",\n   \"data-analytics\": \"data-analytics\",\n   \"macos\": \"macos\",\n   \"sublime-text-3\": \"sublime-text-3\",\n   \"wordpress-plugin\": \"wordpress-plugin\",\n   \"Mathematica\": \"mathematica\",\n   \"prototype\": [\n      \"prototypes\",\n      \"prototype\"\n   ],\n   \"encode\": \"encode\",\n   \"pm2\": \"pm2\",\n   \"headless-chrome\": \"headless-chrome\",\n   \"ux-design\": \"ux-design\",\n   \"intelligence\": \"intelligence\",\n   \"audio-player\": [\n      \"audio-playing\",\n      \"audio-player\"\n   ],\n   \"web-crawler\": [\n      \"spider\",\n      \"crawl\",\n      \"crawling\",\n      \"crawler\",\n      \"webcrawling\",\n      \"web-spider\",\n      \"webspiders\",\n      \"web-crawler\"\n   ],\n   \"serial\": \"serial\",\n   \"performance-measurement\": \"performance-measurement\",\n   \"canvas\": \"canvas\",\n   \"elixir-books\": \"elixir-books\",\n   \"buddypress-plugin\": \"buddypress-plugin\",\n   \"websecurity\": \"websecurity\",\n   \"python-asyncio\": \"python-asyncio\",\n   \"bookmarks\": [\n      \"bookmark\",\n      \"bookmarks\"\n   ],\n   \"resources\": [\n      \"resource\",\n      \"resources\"\n   ],\n   \"litecoin\": \"litecoin\",\n   \"codechef\": \"codechef\",\n   \"text-measuring\": \"text-measuring\",\n   \"configuration\": \"configuration\",\n   \"language-model\": \"language-model\",\n   \"reveal-js\": \"reveal-js\",\n   \"ledger\": \"ledger\",\n   \"construct\": \"construct\",\n   \"brightness-level\": \"brightness-level\",\n   \"E\": \"e\",\n   \"sublime-text-plugin\": \"sublime-text-plugin\",\n   \"docker-image\": \"docker-image\",\n   \"bears\": \"bears\",\n   \"framer\": \"framer\",\n   \"security\": [\n      \"web-security\",\n      \"vulnerabilities\",\n      \"vulnerability\",\n      \"secure\",\n      \"security\"\n   ],\n   \"softball\": \"softball\",\n   \"task-runner\": \"task-runner\",\n   \"ama\": \"ama\",\n   \"java-library\": \"java-library\",\n   \"type-hints\": \"type-hints\",\n   \"no-login-web-apps\": \"no-login-web-apps\",\n   \"art-net\": \"art-net\",\n   \"typo3-cms\": \"typo3-cms\",\n   \"game\": \"game\",\n   \"android-tv\": \"android-tv\",\n   \"rollup\": \"rollup\",\n   \"sensor\": \"sensor\",\n   \"LiveScript\": \"livescript\",\n   \"leightweight\": \"leightweight\",\n   \"transparency\": \"transparency\",\n   \"pyrocms3\": \"pyrocms3\",\n   \"standard\": \"standard\",\n   \"tmux\": \"tmux\",\n   \"nicehash\": \"nicehash\",\n   \"hackerrank\": \"hackerrank\",\n   \"chuck-norris\": \"chuck-norris\",\n   \"input-method\": \"input-method\",\n   \"vuejs\": \"vuejs\",\n   \"erlang\": \"erlang\",\n   \"cve\": \"cve\",\n   \"Cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\",\n      \"cuda\"\n   ],\n   \"craftcms\": \"craftcms\",\n   \"fs20\": \"fs20\",\n   \"glsl-editors\": \"glsl-editors\",\n   \"asynctask\": \"asynctask\",\n   \"archimate\": \"archimate\",\n   \"dmx512\": \"dmx512\",\n   \"logger\": \"logger\",\n   \"jobs\": [\n      \"job\",\n      \"jobs\"\n   ],\n   \"monitoring\": \"monitoring\",\n   \"style-guide\": \"style-guide\",\n   \"COBOL\": \"cobol\",\n   \"wargame\": \"wargame\",\n   \"eslint\": \"eslint\",\n   \"pixels\": \"pixels\",\n   \"elixir-lang\": \"elixir-lang\",\n   \"uim\": \"uim\",\n   \"M\": \"m\",\n   \"runtime-code-analysis\": \"runtime-code-analysis\",\n   \"hl7\": \"hl7\",\n   \"plugin\": \"plugin\",\n   \"competitive-learning\": \"competitive-learning\",\n   \"lighting\": \"lighting\",\n   \"mp3\": \"mp3\",\n   \"ipython-notebook\": \"ipython-notebook\",\n   \"owl\": \"owl\",\n   \"gamedev\": \"gamedev\",\n   \"shader\": [\n      \"shaders\",\n      \"shader\"\n   ],\n   \"ressources-educatives\": \"ressources-educatives\",\n   \"alfred3-workflow\": \"alfred3-workflow\",\n   \"mobile-development\": \"mobile-development\",\n   \"vuejs2\": \"vuejs2\",\n   \"test\": \"test\",\n   \"openthesaurus\": \"openthesaurus\",\n   \"locksmithing\": \"locksmithing\",\n   \"java-sample\": \"java-sample\",\n   \"samsung-smart-tv\": \"samsung-smart-tv\",\n   \"string\": [\n      \"empty-string\",\n      \"str\",\n      \"string-manipulation\",\n      \"strings\",\n      \"string\"\n   ],\n   \"webgl-articles\": \"webgl-articles\",\n   \"Alloy\": \"alloy\",\n   \"backup-script\": \"backup-script\",\n   \"chrome\": \"chrome\",\n   \"jvm\": \"jvm\",\n   \"lockpicking\": \"lockpicking\",\n   \"AppleScript\": \"applescript\",\n   \"ethereum\": \"ethereum\",\n   \"percent\": \"percent\",\n   \"boilerplate\": \"boilerplate\",\n   \"list\": [\n      \"ilist\",\n      \"lists\",\n      \"list\"\n   ],\n   \"Nginx\": \"nginx\",\n   \"erlang-vm\": \"erlang-vm\",\n   \"pitches\": \"pitches\",\n   \"import\": [\n      \"imports\",\n      \"importing\",\n      \"import\"\n   ],\n   \"personal\": \"personal\",\n   \"shell-extension\": \"shell-extension\",\n   \"video-game\": \"video-game\",\n   \"beanstalkd\": \"beanstalkd\",\n   \"jmeter\": [\n      \"apache-jmeter\",\n      \"jmeter\"\n   ],\n   \"ansi\": \"ansi\",\n   \"CSS\": [\n      \"css-font-weight\",\n      \"dynamic-css\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"css-background-image\",\n      \"css-layout\",\n      \"cascading-style-sheet\",\n      \"css\"\n   ],\n   \"artnet\": \"artnet\",\n   \"python-3\": \"python-3\",\n   \"nginx\": \"nginx\",\n   \"launcher\": \"launcher\",\n   \"awesome-list\": \"awesome-list\",\n   \"wtfpl\": \"wtfpl\",\n   \"blog\": \"blog\",\n   \"couchdb-chat\": \"couchdb-chat\",\n   \"language\": \"language\",\n   \"template-engine\": \"template-engine\",\n   \"vue\": \"vue\",\n   \"devops\": \"devops\",\n   \"algorithms\": \"algorithms\",\n   \"Erlang\": \"erlang\",\n   \"swift-library\": \"swift-library\",\n   \"infosec\": \"infosec\",\n   \"dotfiles\": \"dotfiles\",\n   \"persian\": \"persian\",\n   \"bootstrap3\": \"bootstrap3\",\n   \"retrospectives\": \"retrospectives\",\n   \"management\": \"management\",\n   \"mod\": \"mod\",\n   \"cdnjs\": \"cdnjs\",\n   \"ffi\": \"ffi\",\n   \"battery\": \"battery\",\n   \"lesscss\": \"lesscss\",\n   \"Gnuplot\": \"gnuplot\",\n   \"marklink\": \"marklink\",\n   \"java8\": \"java8\",\n   \"pydata\": \"pydata\",\n   \"baseball\": \"baseball\",\n   \"airbnb-javascript\": \"airbnb-javascript\",\n   \"firmware\": \"firmware\",\n   \"ml\": \"ml\",\n   \"ruby\": \"ruby\",\n   \"bbatsov\": \"bbatsov\",\n   \"tech-culture\": \"tech-culture\",\n   \"protocol\": \"protocol\",\n   \"go\": [\n      \"golang\",\n      \"go-language\",\n      \"go\"\n   ],\n   \"armaldio\": \"armaldio\",\n   \"css3\": [\n      \"css-text-shadow\",\n      \"css-text-overflow\",\n      \"css-box-shadow\",\n      \"css-border-radius\",\n      \"css-border-image\",\n      \"css3\"\n   ],\n   \"java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",\n      \"jdk\",\n      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\",\n      \"java\"\n   ],\n   \"shell-scripts\": \"shell-scripts\",\n   \"question-answering\": \"question-answering\",\n   \"challenge\": [\n      \"code-challenge\",\n      \"challenge\"\n   ],\n   \"gif\": \"gif\",\n   \"ad-free\": \"ad-free\",\n   \"hstore\": \"hstore\",\n   \"locksmith\": \"locksmith\",\n   \"callbacks\": \"callbacks\",\n   \"bootstrap\": \"bootstrap\",\n   \"webos-tv\": \"webos-tv\",\n   \"ansible\": [\n      \"ansible-playbook\",\n      \"ansible\"\n   ],\n   \"Brightscript\": \"brightscript\",\n   \"voltage\": \"voltage\",\n   \"airplay\": \"airplay\",\n   \"console\": \"console\",\n   \"itch\": \"itch\",\n   \"Stata\": \"stata\",\n   \"style\": \"style\",\n   \"c-plus-plus\": \"c-plus-plus\",\n   \"babel-plugin\": \"babel-plugin\",\n   \"ripple\": \"ripple\",\n   \"mqtt-broker\": \"mqtt-broker\",\n   \"deployer\": \"deployer\",\n   \"elixir-programming-language\": \"elixir-programming-language\",\n   \"CoffeeScript\": [\n      \"coffee\",\n      \"coffeescript\"\n   ],\n   \"text\": \"text\",\n   \"r\": [\n      \"r-language\",\n      \"rstats\",\n      \"r\"\n   ],\n   \"math-toolbox\": \"math-toolbox\",\n   \"record\": \"record\",\n   \"numpy\": \"numpy\",\n   \"neuroscience\": \"neuroscience\",\n   \"dark-ages\": \"dark-ages\",\n   \"gui\": \"gui\",\n   \"linux-kernel-module\": \"linux-kernel-module\",\n   \"eventbus\": \"eventbus\",\n   \"images\": \"images\",\n   \"pipe\": [\n      \"pipes\",\n      \"pipe\"\n   ],\n   \"data-science\": \"data-science\",\n   \"nagios\": \"nagios\",\n   \"debian-jessie\": \"debian-jessie\",\n   \"ttr\": \"ttr\",\n   \"visualization\": [\n      \"visualisation\",\n      \"visualization\"\n   ],\n   \"levenshtein-distance\": [\n      \"levenstein\",\n      \"levenshtein\",\n      \"levenshtein-distance\"\n   ],\n   \"stories\": \"stories\",\n   \"frege\": \"frege\",\n   \"service-worker\": \"service-worker\",\n   \"arp-spoofing\": \"arp-spoofing\",\n   \"Python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\",\n      \"python\"\n   ],\n   \"geometry\": \"geometry\",\n   \"apollo-graphql-ecosystem\": \"apollo-graphql-ecosystem\",\n   \"php-api\": \"php-api\",\n   \"website\": [\n      \"websites\",\n      \"website\"\n   ],\n   \"antonym\": \"antonym\",\n   \"box2d\": \"box2d\",\n   \"Logos\": \"logos\",\n   \"ask-me-anything\": \"ask-me-anything\",\n   \"device\": \"device\",\n   \"imagemagick\": \"imagemagick\",\n   \"mysql\": [\n      \"mysqldump\",\n      \"mysqlclient\",\n      \"mysqld\",\n      \"mysql-table\",\n      \"mysql-server\",\n      \"mysql-query\",\n      \"my-sql\",\n      \"mysql\"\n   ],\n   \"mit-license\": \"mit-license\",\n   \"ontologia\": \"ontologia\",\n   \"unlicense\": \"unlicense\",\n   \"spa\": \"spa\",\n   \"healthcare\": \"healthcare\",\n   \"texttools\": \"texttools\",\n   \"web-app\": \"web-app\",\n   \"angular\": [\n      \"angular4.x\",\n      \"angular4\",\n      \"angular2\",\n      \"angular\"\n   ],\n   \"learning\": [\n      \"learn\",\n      \"learning\"\n   ],\n   \"jquery\": [\n      \"jquery-css\",\n      \"jquery-find\",\n      \"jquery-post\",\n      \"jquery-get\",\n      \"jquery-hasclass\",\n      \"jquery-after\",\n      \"jquery-callback\",\n      \"removeclass\",\n      \"toggleclass\",\n      \"addclass\",\n      \"jquery-live\",\n      \"jquery-core\",\n      \"jquery\"\n   ],\n   \"atom\": \"atom\",\n   \"paper\": \"paper\",\n   \"babel\": \"babel\",\n   \"postgres\": \"postgres\",\n   \"styleguide\": \"styleguide\",\n   \"translation\": [\n      \"t9n\",\n      \"translation\"\n   ],\n   \"Haskell\": \"haskell\",\n   \"bad-code\": \"bad-code\",\n   \"packages\": \"packages\",\n   \"saltstack\": \"saltstack\",\n   \"js\": \"js\",\n   \"pos-tag\": \"pos-tag\",\n   \"simplepixels-texture-pack\": \"simplepixels-texture-pack\",\n   \"stage-lighting\": \"stage-lighting\",\n   \"QMake\": \"qmake\",\n   \"Lex\": \"lex\",\n   \"vimrc\": \"vimrc\",\n   \"russian\": \"russian\",\n   \"hypernym\": \"hypernym\",\n   \"apollo-client\": \"apollo-client\",\n   \"full-text-search\": [\n      \"fulltext\",\n      \"fts\",\n      \"fulltext-searching\",\n      \"full-text-search\"\n   ],\n   \"movies\": \"movies\",\n   \"Matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\",\n      \"matlab\"\n   ],\n   \"spring\": [\n      \"spring-framework\",\n      \"spring\"\n   ],\n   \"android\": [\n      \"android-framework\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"android-mobile\",\n      \"android\"\n   ],\n   \"gaming\": \"gaming\",\n   \"libre\": \"libre\",\n   \"hyponym\": \"hyponym\",\n   \"autohotkey\": \"autohotkey\",\n   \"theravada\": \"theravada\",\n   \"cuda-by-example\": \"cuda-by-example\",\n   \"redirect\": [\n      \"redirecting\",\n      \"redirection\",\n      \"redirects\",\n      \"redirect\"\n   ],\n   \"for-humans\": \"for-humans\",\n   \"awesome\": \"awesome\",\n   \"Puppet\": \"puppet\",\n   \"airtunes\": \"airtunes\",\n   \"data-visualization\": \"data-visualization\",\n   \"multiple-clipboards\": \"multiple-clipboards\",\n   \"leadership\": \"leadership\",\n   \"information-visualization\": \"information-visualization\",\n   \"python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\",\n      \"python\"\n   ],\n   \"executable\": \"executable\",\n   \"gaming-cms\": \"gaming-cms\",\n   \"automation\": \"automation\",\n   \"webgl-references\": \"webgl-references\",\n   \"examples\": \"examples\",\n   \"airbnb\": \"airbnb\",\n   \"Clean\": \"clean\",\n   \"Visual Basic\": \"visual basic\",\n   \"curated-list\": \"curated-list\",\n   \"library\": \"library\",\n   \"Racket\": [\n      \"drracket\",\n      \"plt-scheme\",\n      \"drscheme\",\n      \"racket\"\n   ],\n   \"coloured-stone-bricks\": \"coloured-stone-bricks\",\n   \"keypicking\": \"keypicking\",\n   \"started\": \"started\",\n   \"hiring\": \"hiring\",\n   \"module\": [\n      \"modules\",\n      \"module\"\n   ],\n   \"string-metrics\": \"string-metrics\",\n   \"Smalltalk\": \"smalltalk\",\n   \"graphics-programming\": \"graphics-programming\",\n   \"redux\": \"redux\",\n   \"Objective-C\": [\n      \"objc\",\n      \"objective-c\"\n   ],\n   \"starter-kit\": \"starter-kit\",\n   \"javascript\": [\n      \"javascript-module\",\n      \"vanilla-javascript\",\n      \"javascript-runtime\",\n      \"javascript-library\",\n      \"javascript-disabled\",\n      \"javascript-dom\",\n      \"javascript-alert\",\n      \"classic-javascript\",\n      \"javascript-execution\",\n      \".js\",\n      \"ecmascript\",\n      \"js\",\n      \"javascript\"\n   ],\n   \"generative-art\": \"generative-art\",\n   \"settings\": \"settings\",\n   \"IDL\": \"idl\",\n   \"minetest-mods\": \"minetest-mods\",\n   \"VimL\": \"viml\",\n   \"ups\": \"ups\",\n   \"ai\": \"ai\",\n   \"documentation-tool\": \"documentation-tool\",\n   \"mode\": \"mode\",\n   \"poetry\": \"poetry\",\n   \"3d-graphics\": \"3d-graphics\",\n   \"general-tutorials\": \"general-tutorials\",\n   \"atom-plugin\": \"atom-plugin\",\n   \"string-distance\": \"string-distance\",\n   \"diversity\": \"diversity\",\n   \"Fortran\": \"fortran\",\n   \"csv\": [\n      \"tsv\",\n      \"comma-separated\",\n      \".csv\",\n      \"csv\"\n   ],\n   \"proxy\": \"proxy\",\n   \"access\": \"access\",\n   \"german\": \"german\",\n   \"wallet\": \"wallet\",\n   \"bounty\": \"bounty\",\n   \"jupyter-notebook\": \"jupyter-notebook\",\n   \"velocity\": \"velocity\",\n   \"Dart\": \"dart\",\n   \"smart-tv\": \"smart-tv\",\n   \"router\": \"router\",\n   \"bacon\": \"bacon\",\n   \"hamming-distance\": \"hamming-distance\",\n   \"npms\": \"npms\",\n   \"emoji-picker\": \"emoji-picker\",\n   \"FreeMarker\": \"freemarker\",\n   \"favorite\": \"favorite\",\n   \"SystemVerilog\": \"systemverilog\",\n   \"government\": \"government\",\n   \"entrepreneurs\": \"entrepreneurs\",\n   \"elixir\": [\n      \"elixir-lang\",\n      \"elixir\"\n   ],\n   \"physec\": \"physec\",\n   \"social-network\": \"social-network\",\n   \"inter-process-communication\": \"inter-process-communication\",\n   \"prompt\": \"prompt\",\n   \"sentiment-analysis\": \"sentiment-analysis\",\n   \"serverless\": \"serverless\",\n   \"asyncio\": \"asyncio\",\n   \"autocode\": \"autocode\",\n   \"ansible-tutorial\": \"ansible-tutorial\",\n   \"tsv\": \"tsv\",\n   \"texture-pack\": \"texture-pack\",\n   \"bootstrapper\": \"bootstrapper\"\n}",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "def request_url(url,pagesize):\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\n    cTime = time.time()\n    res = requests.get(url+app)\n    res.encoding = 'utf-8'\n    info = res.json()\n    print(\"Requesting...:{}\".format(time.time() - cTime))\n    return info\n\ndef extract_dict(res):",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "                 \"email\":res[\"email\"],\"stackoverflow_login\":\"null\"}\n    return dict_info\n\ndef get_langtopics(user):\n    language = []\n    topics = []\n    print(\"Finding languages and topics used by github user: {}\".format(user[\"github_login\"]))\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\"github_login\"])\n    repos = request_url(repo_api,30)\n\n    for item in repos:\n        #can be  parallel topics & language\n        repo_name = item[\"name\"]\n        cTime = time.time()\n        repo_topics = requests.get('https://api.github.com/repos/{}/{}/topics?'\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'\n                                 '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\n                                 .format(user[\"github_login\"],repo_name),\n                                 headers = {\"Accept\":\"application/vnd.github.mercy-preview+json\"})\n        repo_topics = repo_topics.json()[\"names\"]\n        print(\"Requesting...:{}\".format(time.time() - cTime))\n        topics.extend(repo_topics)\n\n        if not item[\"languages_url\"] == None:\n            language_api = item[\"languages_url\"]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "            language_dict = None\n        language.extend(language_dict)\n\n    topics = delete_duplicate(topics)\n    language = delete_duplicate(language)\n\n    print(\"Github user {} languages: {}\".format(user[\"github_login\"],language))\n    print(\"Github user {} topics: {}\\n\".format(user[\"github_login\"], topics))\n    user[\"github_language\"] = language\n    user[\"github_topics\"] = (topics if not topics == [] else \"null\")\n    return user\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    print(\"Getting info of users in the commit history...\")\n    for item in developer_info:\n        ### For a list of developers, find their url\n        if not item[\"author\"][\"login\"] in Info:\n            author_api = (item[\"author\"][\"url\"] if not item[\"author\"] == None else \"null\")\n        else:\n            author_api = \"null\"\n\n        if not item[\"committer\"][\"login\"] in Info:\n            committer_api = (item[\"committer\"][\"url\"] if not item[\"committer\"] == None else \"null\")\n        else:\n            committer_api = \"null\"\n\n        if not author_api == \"null\":\n            author_info = request_url(author_api,100)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    git_info = []\n    cTime = time.time()\n    for git_developer in Info:\n        git_developer = get_langtopics(git_developer)\n        git_info.append(git_developer)\n    print(time.time() - cTime)\n    return git_info",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    git_info = []\n    cTime = time.time()\n    for git_developer in Info:\n        git_developer = get_langtopics(git_developer)\n        git_info.append(git_developer)\n    print(time.time() - cTime)\n    return git_info\n\n\nif __name__ == '__main__':\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n    git_info = get_info(git_api)\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_match_5.json'\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(info_file, 'w') as ctfile:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import re\nimport requests\nimport urllib\nimport urllib.error\nimport time\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    user_info = user_info.json()\n    return user_info\n\n\ndef request_source(source_url):\n    request2 = urllib.request.Request(source_url)\n    request2.add_header('user-agent', 'Chrome/51.0.2704.63 Safari/537.36')\n    try:\n        response2 = urllib.request.urlopen(request2)\n        html2 = response2.read()\n        user_source = html2.decode(\"utf8\")\n        response2.close()\n    except urllib.error.HTTPError:\n        print(\"Internal Server Error when requesting {}\".format(source_url))\n        return \"null\"\n    return user_source\n\n\ndef InfoByName(name):\n    Info = []\n    default_info = {\"display_name\":\"\",\"location\":\"\",\"user_id\":0}\n    #THe API returns info of all possible Stack Overflow usernames which contain the input name\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\n               '&site=stackoverflow'.format(name,name)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    else:\n        return default_info\n\n\ndef GetGitAccount(user_id):\n    \"\"\"\"Get the associated github account from Stack Overflow users' profile\"\"\"\n    default = \"null\"\n    if not user_id == None:\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\n        user_source = request_source(stk_url)\n        if not user_source == \"null\":\n            user_href = re.findall(r\"<a.*?href=.*?<\\/a>\", user_source, re.I | re.S | re.M)\n            # find it directly\n            git_account = None\n            for href in user_href:\n                if 'https://github.com/' in href:\n                    git_account = re.findall('href\\=\\\"https\\:\\/\\/github\\.com\\/(.*?)\\\"', href, re.S)\n                    git_account = git_account[0]\n            if not git_account == None:\n                return git_account\n            else:\n                return default\n        else:\n            return default\n    else:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\n\ndef get_tags(stk_developer):\n    \"\"\"\"Get the tags of Stack Overflow developer through API\"\"\"\n    tags = []\n    tags_api = 'https://api.stackexchange.com/2.2/users/{}/tags' \\\n               '?pagesize=100&order=desc&sort=popular' \\\n               '&site=stackoverflow'.format(stk_developer['user_id'])\n    tags_info = request_api(tags_api)\n    tags_info = tags_info[\"items\"]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    return tags\n\n\ndef merge_langtopics(git_developer):\n    topics_git = git_developer[\"github_topics\"]\n    language_git = git_developer[\"github_language\"]\n    if not topics_git == \"null\" and not language_git == \"null\":\n        topics_git.extend(language_git)\n        tags_git = topics_git\n    elif topics_git == \"null\" and not language_git == \"null\":\n        tags_git = language_git\n    else:\n        tags_git = topics_git\n    git_developer[\"github_tags\"] = tags_git\n    return git_developer\n\n\ndef match_info(git_developer,stk_developer,syn_list,Threshold):\n    \"\"\"\"The location and tags comparison\"\"\"\n    location_stk = stk_developer[\"location\"]\n    location_git = git_developer[\"location\"]\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "            elif location_stk in location_git:\n                location_score = 1\n            else:\n                # Levenshtein distance between two strings of location\n                distance = le.lev(location_stk, location_git)\n                len_git = max(len(location_git),len(location_stk))\n                location_score = distance / len_git\n        except TypeError:\n            location_score = 0",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\n    tags_git = git_developer[\"github_tags\"]\n    tags_stk = stk_developer[\"tags\"]\n    print(\"\\n{} tags: {}\".format(stk_developer[\"user_id\"],tags_stk))\n\n    match_count = github_count = 0\n    if not tags_stk == [] and not tags_git == \"null\":\n        match_tags = []\n        for tag in tags_git:\n            github_count = github_count + 1\n            if tag in syn_list:\n                stk_syn = syn_list[tag]\n                if type(stk_syn) == list:\n                    for syn_tags in stk_syn:\n                        if syn_tags in tags_stk:\n                            match_tags.append(syn_tags)\n                            match_count = match_count + 1\n                            break\n                elif type(stk_syn) == str:\n                    if stk_syn in tags_stk:\n                        match_count = match_count + 1\n        print(\"Match tag for {}: {}\".format(stk_developer[\"display_name\"],match_tags))\n    else:\n        match_count = 0\n        github_count = 1\n\n    tag_score = match_count / github_count * 2\n    final_score = round(location_score + tag_score, 2)\n    print(\"Final score for {}: {}\".format(stk_developer[\"display_name\"],final_score))\n\n    if final_score >= Threshold:\n        match_name = str(stk_developer[\"user_id\"]) + \"_\" + str(final_score)\n        return match_name\n    else:\n        return []\n\n\ndef match_account(git_info,syn_list):\n    default_info = []\n    new_info = []\n\n    for git_developer in git_info:\n        # Merge the languages and topics to github_tags\n        git_developer = merge_langtopics(git_developer)\n        print(\"\\n\\nFinding Github user {} on Stack Overflow...\".format(git_developer[\"name\"]))\n        possible_name = nf.possible_names(git_developer[\"name\"], git_developer[\"github_login\"])\n        print(\"Possible name:{}\".format(possible_name))\n\n        for name in possible_name:\n            #All info of developers whose username contains the input name",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "                # Continue to establish mapping if the possible match has been found?\n                if git_developer[\"stackoverflow_login\"] == \"null\" or git_developer[\"stackoverflow_login\"] == []:\n                    git_developer[\"stackoverflow_login\"] = []\n                    print(\"\\nNo linked account has been found. Mapping the users using tags and location...\")\n                    print(\"{} tags: {}\".format(git_developer[\"github_login\"], git_developer[\"github_tags\"]))\n\n                    cTime = time.time()\n                    for stk_developer in stk_info:\n                        developer_tags = get_tags(stk_developer)\n                        stk_developer[\"tags\"] = developer_tags\n                        match_name = match_info(git_developer,stk_developer,syn_list,1)\n                        if not match_name == []:\n                            git_developer[\"stackoverflow_login\"].append(match_name)\n                    print(time.time() - cTime)\n                else:\n                    break\n\n        if not git_developer[\"stackoverflow_login\"] == \"null\" and not git_developer[\"stackoverflow_login\"] == []:\n            print(\"The Stack Overflow display_name for github user {}: {}\".format(git_developer[\"name\"],git_developer['stackoverflow_login']))\n        else:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "if not os.path.exists(Info_path):\n    os.mkdir(Info_path)\n\n# name_file = Info_path + '/login_list.json'\n# name_list = open(name_file,encoding='utf-8')\n# name_list = json.load(name_list)\n# git_info = gt.search_info(name_list)\n\ninfo_file = Info_path + '/awesome_match_5.json'\nsyn_file = Info_path + '/syn_list.json'\n\n\ngit_info = open(info_file,encoding='utf-8')\nsyn_list = open(syn_file,encoding='utf-8')\ngit_info = json.load(git_info)\nsyn_list = json.load(syn_list)\nstk_count = total_count = 0\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "\nprint(\"Saving the results of matching...\")\ncTime = time.time()\nfile = Info_path + '/awesome_info_1.json'\nwith open(info_file, 'w') as ctfile:\n    json.dump(match_info, ctfile, indent=3)\nprint(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "    tags_list = []\n    for item in git_info:\n        language = (item[\"github_language\"] if not item[\"github_language\"] == \"null\" else [])\n        tags = (item[\"github_topics\"] if not item[\"github_topics\"] == \"null\" else [])\n        tags_list.extend(language)\n        tags_list.extend(tags)\n\n    tags_list = gt.delete_duplicate(tags_list)\n    remove_list = []\n    for item in tags_list:\n        if \"#\" in item:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 16:52:47 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "        if not syn_info == []:\n            for item in syn_info:\n                syn_tags.append(item[\"from_tag\"])\n            # The query of synonymous tags can't return the input tag\n            syn_tags.append(tag.lower())\n            syn_list[tag] = syn_tags\n            print(\"The synonymous tags of tag {} are {}\".format(tag,syn_tags))\n        else:\n            # The tags of Stack overflow are lowercase\n            syn_list[tag] = tag.lower()\n            print(\"The synonymous tags of tag {} not found\".format(tag))\n\n    return syn_list\n\n\nif __name__ == '__main__':\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_info.json'\n    f = open(info_file, encoding='utf-8')\n    git_info = json.load(f)\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-11 14:52:13 +0800",
      "file": "ast/AST_Visualization.py",
      "code_snippet": "import re\n\nRE_AZ = re.compile(r'-(.*?) ')\nRE_C = re.compile(r'/(.*).c')\n\ndef node_graph(code_path, preprocess, same_list):\n    \"\"\"Show the syntax tree and display the same part of tow trees\"\"\"",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-10 20:43:28 +0800",
      "file": "git/user/README.md",
      "code_snippet": "For the comparison of tags, the tag score is used. By finding the number of tags which are related according to the synonymous tags list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\n* #### Threshold<br>\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7, 1.0 and 1.5.<br><br>\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome):<br> \nFor threshold 0.7, the matching rate is 81.43% (57/70);<br>\nFor threshold 1.0, the matching rate is 71.43% (50/70); <br>",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 21:15:40 +0800",
      "file": "git/user/README.md",
      "code_snippet": "* #### Threshold<br>\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7 and 1.0.<br><br>\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome):<br> \nFor threshold 0.7, the matching rate is 81.43% (57/70);<br>\nFor threshold 1.0, the matching rate is 71.43% (50/70); <br>\nFor threshold 1.5, the matching rate is 52.86% (37/70).<br><br>\nFor the developers selected by the threshold, their user id and score are recorded as \"userid_score\" in a list for further verification. The reason for not using the form \"username_score\" is that there are developers with same username but different user ids on Stack Overflow.\n\n## Future Work\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 21:07:21 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\n`Input`: The name of a github repo or a list of github developers' name.<br>\n`Output`: A json file including github users\u2019 name, login, location, language, tags, email and Stack Overflow dispaly name or possible user id.\n\n## Usage:<br>\n1 Find the information of github developers who committed to a certain project.<br>\n2 Find github developers\u2019 Stack Overflow account. **(Identity Linkage)**  \n\n## Script Description<br>\n* `get_info_git.py` dumps the Github developers' name, login, company, location, e-mail, language and topics. <br>\n* `get_info_stackoverflow.py` dumps the Stack Overflow developers' display name, location, tags, github associated account and possible user id for identity linkage.<br>\n* `name_form.py` lists the possible Stack Overflow display name for a Github developer.<br>\n* `syn_tags.py` gets the synonymous tags for comparsion of tags between github and Stach Overflow users. <br>\n* Run the script `main.py` and you can get a json file containing developers' info of github and Stack Overflow display_name.\n\n## Get the Information of Github Developers\nUsing `get_info_git.py` to dump the developers' name, login, company, location, e-mail, languages and topics using github API.\n\n![Image](https://github.com/AlvinZSJ/codeTracker/blob/master/get_info.png)\n\nThe arrow means getting the info through API.\n## Mapping between Github and Stack Overflow Account\n### 1. Get Possible Usernames<br>\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username, location, language and tags of a developer can be obtained, which means we should list different possible usernames for each github user. <br>\n![Image](https://github.com/AlvinZSJ/histo/blob/master/name_form.png)\nThe username Generation splits the input name or login of github user into several parts and recombines them.<br><br>\nFor name which is 1 word long, like \"Kazhnuz\", the possible name forms are:<br>\n`Kaz, Kazhnuz, nuz(the last three letters)` <br>\nThe reason for this generating method is that the Stack Overflow API for the query of user info returns **all users whose name contains the input username**. That means, for name \"nuz\", it returns a list: Nuz, nuzar, Nuzair, nuzahat... So for the uername that is 1 word long, we can simply split it into several words.<br><br>\nFor name which is 2 words long, like \"Sindre Sorhus\", the possible usernames are: <br>\n`Sindre Sorhus, sindresorhus, sorhus, sindre` <br>\nwhich are generated by different combination of the First and Last name.<br><br>\nFor name which is 3 words long (few cases are like that), like \"Victor Laerte Oliveira\", the possible usernames are: <br>\n`laerte, oliveira, victor` <br>\nSimply split the name into three parts can also get a lot of different possible usernames because the Stack Overflow API returns all users whose name contains the input name. \n\n### 2. Find associated account of Github\nFortunately, the associated github account has been found in the Stack Overflow users' profile, which, however, is not accessible through Stack Overflow API but can be extracted from the source code of the users' profile page, of which the url is something like:<br><br>\nhttps://stackoverflow.com/users/user_id<br><br>\nThat is to say, we can get the github account using user_id. For possible usernames of developers on Stack Overflow, the user_id can be obtained through API. And then the github account can be extracted from the source code of the web page using Regular Expression.<br><br>\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish. (For **71** github developers in the commit history of [awesome](https://github.com/sindresorhus/awesome), **33.8% (24)** developers are found provided github account on their Stack overflow profile)\n\n### 3. Find Possible Github Accounts through Tags Comparison<br>\nFor the github users whose account are not provided on their Stack Overflow profile, their location and behavior features can be used for mapping. And for the location and tags commparsion, the score is used to evaluate the similarity between the github and Stack Overflow users.\n* #### Location Comparison<br>\nConsidering the name of a place can be presented as different forms, like `Lagos, Nigeria`, which can be written as `Lagos, lagos, Nigeria, and Federal Republic of Nigeria...` So if the string of github users\u2019 location is contained in that of a possible Stack Overflow account, or the opposite, location score is 1, otherwise, the normalized [Levenstein distance](https://github.com/AlvinZSJ/python-Levenshtein) is used to evaluate the location similarity.\n* #### Behavior Features Comparison<br>\nThe developers behavior features can be exhibited by the languages they use and the topics of their repositories on github, and the tags of questions they asked and answered on Stack Overflow. However, according to paper [_Mining Developer Behavior Across GitHub and StackOverflow_](https://www.researchgate.net/publication/319052899_Mining_Developer_Behavior_Across_GitHub_and_StackOverflow), there are 21300 tags which are marked by users themselves on Stack Overflow, and 57 topics and languages marked by the system automatically on Github. Therefore, it\u2019s necessary to find the synonymous tags between the two communities.<br><br>\nThere is a Stack overflow API which returns the synonymous tags of the input tag. To find the linkage of tags on both communities, the languages and topics of a github developer is set as input, then we can get the list of synonymous Stack Overflow tags, like: <br>\n![Image](https://github.com/AlvinZSJ/histo/blob/master/syn_list.png)\nAlthough the Stack overflow API can be applied to find the synonymous tags of a certain tag, there are big differences between the name patterns of tags on the two communities, which makes the synonymous tag list incomplete. <br><br>\nFor the comparison of tags, the tag score is used. By finding the number of tags which are related according to the synonymous tags list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\n* #### Threshold<br>\nThe incomplete synonymous tag list and the different naming pattern of tags makes the matching of tags difficult. So there should be different weights of the two scores. The final score is the sum of the location score and twice of the tags score, and an appropriate threshold should be set to improve the matching rate.<br><br>\nConsidering that there are developers who use the same username and location on both communities, but few tags are matched. The threshold has been set as 0.7 and 1.0.<br><br>\nStill use the developers in commit history of [awesome](https://github.com/sindresorhus/awesome), for threshold 0.7, the matching rate is 81.43% (57/70), and for threshold 1.0, the matching rate is 71.43% (50/70). <br><br>\nFor the developers selected by the threshold, their user id and score are recorded as \"userid_score\" in a list for further verification. The reason for not using the form \"username_score\" is that there are developers with same username but different user ids on Stack Overflow. **(\uff9f\u0414\uff9f*)\uff89**\n\n## Future Work\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.\n\n\n**Author: AlvinZSJ**",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 15:41:00 +0800",
      "file": "ast/README.md",
      "code_snippet": "\n    $ python main.py --compare c_file_dir1 c_file_dir2\n\nThe first AST is shown in pdf format:\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\n\nThe second AST is also shown in pdf format as follows:\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\n\nThe same part of two trees is labeled in red. ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n__author__  = 'king-jojo'\n\nimport json\nimport re",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "    for x in range(1, len(node_list_cp)):\n        num = node_list_cp[x]['_nodetype'].find('-')\n        cp_list.append(num)\n        cut = re.findall(RE_AZ, node_list_cp[x]['_nodetype'])\n        if len(cut) > 0:\n            node_list_cp[x]['_nodetype'] = cut[0]\n        else:\n            node_list_cp[x]['_nodetype'] = ''\n    num_list = cp_list[:]\n    for y in range(max(num_list) - 2, 0, -2):\n        for x in range(len(num_list) - 1, -1, -1):",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n__author__  = 'king-jojo'\n\nfrom AST2JSON import to_dict\nfrom AST_Process import Node_extract",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "                    list2.append(index2)\n    return [set1, set2]\n\ndef seq_process(code_path, preprocess):\n    nodes = Node_extract(code_path, preprocess)\n    dd = to_dict(nodes)\n    num_list = dd[1]",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Process.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n__author__  = 'king-jojo'\n\nimport os\nimport re",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Process.py",
      "code_snippet": "    \"\"\"Print AST based on command line\"\"\"\n    if preprocess == True:\n        code_path = AST_preprocess(code_path)\n        command = 'clang-check -ast-dump ' + code_path + ' --extra-arg=\"-fno-color-diagnostics\" --'\n        F = os.popen(command)\n        # (status, output) = commands.getstatusoutput('clang -Xclang -ast-dump -fsyntax-only ' + code_path)\n    else:\n        command = 'clang-check -ast-dump ' + code_path + ' --extra-arg=\"-fno-color-diagnostics\" --'\n        F = os.popen(command)\n        # (status, output) = commands.getstatusoutput('clang -Xclang -ast-dump -fsyntax-only ' + code_path)\n    return F\n\ndef Node_extract(code_path, preprocess):\n    \"\"\"Extract the nodes\"\"\"\n    AST = AST_generate(code_path, preprocess)\n    node_list = []\n    new_line = ''\n    for lines in AST:\n        Node_dict = dict()\n        if len(re.findall(RE_NODE, lines)) > 0:",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Visualization.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n__author__  = 'king-jojo'\n\nfrom graphviz import Digraph\nfrom AST_Process import Node_extract\nimport re\n\nRE_AZ = re.compile(r'-(.*?) ')",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/AST_Visualization.py",
      "code_snippet": "    for x in range(1, len(node_list)):\n        num = node_list[x]['_nodetype'].find('-')\n        num_list.append(num)\n        cut = re.findall(RE_AZ, node_list[x]['_nodetype'])\n        if len(cut) > 0:\n            node_list[x]['_nodetype'] = cut[0]\n        else:\n            node_list[x]['_nodetype'] = ''\n    num_list.insert(0,0)\n    if same_list == None:\n        num_cp = num_list",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/README.md",
      "code_snippet": "    $ sudo pip install graphviz\n\n## Write into json\nThis project can convert syntax tree into json format\n\n    $ python main.py --tojson c_file_dir\n\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2json.png)\n\n## Generate AST graph with Graphviz\n\n    $ python main.py --view c_file_dir\n\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast3.png)\n## Compare two ASTs\n\n    $ python main.py --compare c_file_dir1 c_file_dir2\n\nThe first AST is shown in the pdf format\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\n\nThe second is shown below \n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\n\nThe same part of two trees is labeled in red. ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/example/ast_a.json",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/example/ast_b.json",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/example/test_new.c",
      "code_snippet": "int f(int x){\n  int y = 0;\n  if (x > 0)\n    y = 1;\n  else \n    y = x;\n  return y;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/main.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\n__author__ = 'king-jojo'\n\nimport AST_Compare\nfrom AST_Visualization import node_graph\nfrom AST2JSON import to_json\nfrom AST_Process import Node_extract\nimport sys\nimport os\nimport re\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n\nRE_AZ = re.compile(r'-(.*?) ')\nRE_C = re.compile(r'/(.*?).c')\n\nif __name__ == '__main__':\n    args = sys.argv[1:]\n    if len(args)>0:\n        if args[0] == '--compare':\n            if len(args[1:]) == 2:\n                if os.path.exists(args[1]) and os.path.exists(args[2]):\n                    code_path_a = args[1]\n                    code_path_b = args[2]\n                    sel = True\n                    seq1 = AST_Compare.seq_process(code_path_a, sel)\n                    seq2 = AST_Compare.seq_process(code_path_b, sel)\n                    set = AST_Compare.Seqlist_compare(seq1, seq2)\n                    node_graph(code_path_a, sel, set[0])\n                    node_graph(code_path_b, sel, set[1])\n                if not os.path.exists(args[1]) and os.path.exists(args[2]):\n                    raise SystemExit(\"Error: Could not find the first c/c++ file\")\n                if not os.path.exists(args[2]) and os.path.exists(args[1]):\n                    raise SystemExit(\"Error: Could not find the second c/c++ file\")\n                if not os.path.exists(args[1]) and not os.path.exists(args[2]):\n                    raise SystemExit(\"Error: Could not find both two files\")\n            else:\n                raise SystemExit(\"Usage: python main.py --compare c_file_dir1 c_file_dir2\")\n        elif args[0] == '--view':\n            if len(args[1:]) == 1:\n                if os.path.exists(args[1]):\n                    code_path_a = args[1]\n                    sel = True\n                    seq1 = AST_Compare.seq_process(code_path_a, sel)\n                    node_graph(code_path_a, sel, None)\n                else:\n                    raise SystemExit(\"Error: Could not find c/c++ file\")\n            else:\n                raise SystemExit(\"Usage: python main.py --view c_file_dir\")\n        elif args[0] == '--tojson':\n            if len(args[1:]) == 1:\n                if os.path.exists(args[1]):\n                    code_path_a = args[1]\n                    sel = True\n                    node_list = Node_extract(code_path_a, sel)\n                    json_files_dir = dir_path + '/jsons'\n                    if not os.path.exists(json_files_dir):\n                        os.mkdir(json_files_dir)\n                    json_file = json_files_dir + '/output.json'\n                    to_json(node_list, json_file)\n                    print (\"The json file path: \"+json_files_dir)\n                else:\n                    raise SystemExit(\"Error: Could not find c/c++ file\")\n            else:\n                raise SystemExit(\"Usage: python main.py --tojson c_file_dir\")\n        else:\n            raise SystemExit(\"Usage: python main.py --compare c_file_dir1 c_file_dir2 \\n       python main.py --view c_file_dir \\n       python main.py --tojson c_file_dir \")\n    else:\n        raise SystemExit(\"Usage: python main.py --compare c_file_dir1 c_file_dir2 \\n       python main.py --view c_file_dir \\n       python main.py --tojson c_file_dir \")",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 15:37:21 +0800",
      "file": "ast/output/example/test",
      "code_snippet": "// ['example/test']\ndigraph {\n\t0 [label=TranslationUnitDecl]\n\t1 [label=TypedefDecl]\n\t0 -> 1\n\t3 [label=TypedefDecl]\n\t0 -> 3\n\t5 [label=TypedefDecl]\n\t0 -> 5\n\t8 [label=TypedefDecl]\n\t0 -> 8\n\t12 [label=FunctionDecl]\n\t0 -> 12\n\t2 [label=BuiltinType]\n\t1 -> 2\n\t4 [label=BuiltinType]\n\t3 -> 4\n\t6 [label=PointerType]\n\t5 -> 6\n\t9 [label=ConstantArrayType]\n\t8 -> 9\n\t13 [label=ParmVarDecl]\n\t12 -> 13\n\t14 [label=CompoundStmt]\n\t12 -> 14\n\t7 [label=BuiltinType]\n\t6 -> 7\n\t10 [label=RecordType]\n\t9 -> 10\n\t15 [label=DeclStmt]\n\t14 -> 15\n\t18 [label=IfStmt]\n\t14 -> 18\n\t19 [label=IfStmt]\n\t14 -> 19\n\t31 [label=ReturnStmt]\n\t14 -> 31\n\t11 [label=Record]\n\t10 -> 11\n\t16 [label=VarDecl]\n\t15 -> 16\n\t20 [label=BinaryOperator]\n\t19 -> 20\n\t24 [label=BinaryOperator]\n\t19 -> 24\n\t27 [label=BinaryOperator]\n\t19 -> 27\n\t32 [label=ImplicitCastExpr]\n\t31 -> 32\n\t17 [label=IntegerLiteral]\n\t16 -> 17\n\t21 [label=ImplicitCastExpr]\n\t20 -> 21\n\t23 [label=IntegerLiteral]\n\t20 -> 23\n\t25 [label=DeclRefExpr]\n\t24 -> 25\n\t26 [label=IntegerLiteral]\n\t24 -> 26\n\t28 [label=DeclRefExpr]\n\t27 -> 28\n\t29 [label=ImplicitCastExpr]\n\t27 -> 29\n\t33 [label=DeclRefExpr]\n\t32 -> 33\n\t22 [label=DeclRefExpr]\n\t21 -> 22\n\t30 [label=DeclRefExpr]\n\t29 -> 30\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_info.json",
      "code_snippet": "[\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"name\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_login\": \"sindresorhus\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",\n         \"dark-mode\",\n         \"alfred3-workflow\",\n         \"applescript\",\n         \"alfy\",\n         \"npm-package\",\n         \"emoji\",\n         \"emoji-picker\",\n         \"emoji-searcher\",\n         \"nodejs\",\n         \"lock\",\n         \"c-language\",\n         \"npm\",\n         \"npms\",\n         \"search\",\n         \"search-engine\",\n         \"alfred-theme\",\n         \"theme\",\n         \"simple\",\n         \"minimalistic\",\n         \"light\",\n         \"framework\",\n         \"javascript\",\n         \"workflow\",\n         \"ama\",\n         \"ask-me-anything\",\n         \"question-answering\",\n         \"meta\",\n         \"personal\",\n         \"ask\",\n         \"open-content\",\n         \"questions\",\n         \"answers\",\n         \"questions-and-answers\",\n         \"list\",\n         \"awesome\",\n         \"awesome-list\",\n         \"deprecated\",\n         \"twitter\",\n         \"electron\",\n         \"electron-app\"\n      ],\n      \"email\": \"sindresorhus@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Jupyter Notebook\",\n         \"Python\",\n         \"Shell\",\n         \"C++\",\n         \"IDL\",\n         \"Java\",\n         \"Arduino\",\n         \"Processing\",\n         \"Batchfile\",\n         \"C\",\n         \"CMake\",\n         \"Scheme\",\n         \"GLSL\",\n         \"Makefile\",\n         \"Prolog\",\n         \"XSLT\",\n         \"C#\",\n         \"QMake\"\n      ],\n      \"location\": \"India\",\n      \"name\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"github_login\": \"t27\",\n      \"github_tags\": \"null\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"Python\",\n         \"PHP\",\n         \"JavaScript\",\n         \"Shell\",\n         \"CSS\",\n         \"C\",\n         \"Makefile\",\n         \"C++\",\n         \"PowerShell\"\n      ],\n      \"location\": \"Edinburgh\",\n      \"name\": \"Lukas Michelbacher\",\n      \"company\": null,\n      \"github_login\": \"lmichelbacher\",\n      \"github_tags\": \"null\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Makefile\",\n         \"CSS\",\n         \"M4\",\n         \"Shell\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"location\": null,\n      \"name\": \"Kazhnuz\",\n      \"company\": null,\n      \"github_login\": \"Kazhnuz\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",\n         \"applications\",\n         \"gnome-shell-extension\",\n         \"gtk-theme\",\n         \"css\",\n         \"html\",\n         \"bootstrap\",\n         \"icons\",\n         \"faenza\",\n         \"linux\",\n         \"bootstrap3\",\n         \"css3\",\n         \"html5\",\n         \"education\",\n         \"ressources-educatives\",\n         \"logiciels\",\n         \"libre\",\n         \"culture-libre\"\n      ],\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"company\": null,\n      \"github_login\": \"aleksandar-todorovic\",\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"c\",\n         \"linux\",\n         \"linux-distribution\",\n         \"desktop-environment\",\n         \"x-window-manager\"\n      ],\n      \"email\": \"aleksandar@r3bl.me\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Makefile\",\n         \"Shell\",\n         \"Ruby\",\n         \"Swift\",\n         \"C\",\n         \"JavaScript\",\n         \"CSS\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"location\": null,\n      \"name\": \"Kedan Li\",\n      \"company\": null,\n      \"github_login\": \"likedan\",\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",\n         \"machine-learning\",\n         \"curated-list\",\n         \"coreml-framework\",\n         \"coreml-models\",\n         \"coremltools\",\n         \"awesome-list\",\n         \"models\",\n         \"swift-framework\",\n         \"swift3\",\n         \"swift-library\",\n         \"ios\",\n         \"ios-swift\",\n         \"ios-ui\",\n         \"ios-animation\",\n         \"ios-lib\",\n         \"xib\",\n         \"animation\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [],\n      \"location\": null,\n      \"name\": \"GitHub Web Flow\",\n      \"company\": null,\n      \"github_login\": \"web-flow\",\n      \"github_tags\": \"null\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"Makefile\",\n         \"Shell\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Smarty\"\n      ],\n      \"location\": \"Winchester, VA\",\n      \"name\": \"Kenneth Reitz\",\n      \"company\": \"Heroku\",\n      \"github_login\": \"kennethreitz\",\n      \"github_tags\": [\n         \"environment\",\n         \"cd\",\n         \"shell-extension\",\n         \"shell-scripts\",\n         \"bash\",\n         \"zsh\",\n         \"cdn\",\n         \"cdnjs\",\n         \"js\",\n         \"css\",\n         \"html\",\n         \"html5\",\n         \"cryptocurrency\",\n         \"algorithms\",\n         \"bitcoin\",\n         \"ethereum\",\n         \"awesome\",\n         \"awesome-list\",\n         \"coin\",\n         \"wallet\",\n         \"algo\",\n         \"nicehash\",\n         \"python\",\n         \"background-jobs\",\n         \"background\",\n         \"jobs\",\n         \"tasks\",\n         \"btc\",\n         \"eth\",\n         \"ripple\",\n         \"litecoin\",\n         \"api\",\n         \"for-humans\",\n         \"kennethreitz\"\n      ],\n      \"email\": \"me@kennethreitz.org\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Java\",\n         \"Protocol Buffer\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\"\n      ],\n      \"location\": \"United States\",\n      \"name\": \"John Jago\",\n      \"company\": null,\n      \"github_login\": \"johnjago\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"ad-free\",\n         \"websites\",\n         \"services\",\n         \"applications\",\n         \"awesome\",\n         \"gnu\",\n         \"free-software\",\n         \"fsf\",\n         \"freedom\",\n         \"software-freedom\",\n         \"gpl\",\n         \"libre\",\n         \"theravada\",\n         \"buddhism\",\n         \"dhamma\",\n         \"cc0\",\n         \"uncopyright\",\n         \"public-domain\",\n         \"unlicense\",\n         \"baseball\",\n         \"coach-sheet\",\n         \"pitches\",\n         \"softball\",\n         \"print\",\n         \"cards\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"TeX\",\n         \"Makefile\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Go\",\n         \"Shell\",\n         \"Common Lisp\",\n         \"Awk\",\n         \"Lua\",\n         \"Haskell\",\n         \"Roff\",\n         \"Perl\",\n         \"Batchfile\",\n         \"Smarty\",\n         \"Python\",\n         \"C++\",\n         \"Java\"\n      ],\n      \"location\": \"Germany\",\n      \"name\": \"Stefanus\",\n      \"company\": null,\n      \"github_login\": \"sfischer13\",\n      \"github_tags\": [\n         \"atom\",\n         \"atom-package\",\n         \"bundle\",\n         \"beancount\",\n         \"language-support\",\n         \"formatter\",\n         \"linter\",\n         \"awesome\",\n         \"awesome-list\",\n         \"eta\",\n         \"haskell\",\n         \"list\",\n         \"jvm\",\n         \"frege\",\n         \"guitar\",\n         \"music\",\n         \"ledger\",\n         \"accounting\",\n         \"plaintext\",\n         \"plaintext-accounting\",\n         \"budget-manager\",\n         \"chrome\",\n         \"chrome-extension\",\n         \"chromium\",\n         \"wikipedia\",\n         \"wikimedia\",\n         \"favorite\",\n         \"translation\",\n         \"filter\",\n         \"settings\",\n         \"javascript\",\n         \"go\",\n         \"cli\",\n         \"numbertools\",\n         \"numerical-calculations\",\n         \"golang\",\n         \"console\",\n         \"pipe\",\n         \"stream\",\n         \"number\",\n         \"string-manipulation\",\n         \"stringtools\",\n         \"string\",\n         \"text-manipulation\",\n         \"texttools\",\n         \"text\",\n         \"toolbox\",\n         \"library\",\n         \"golang-library\",\n         \"io\",\n         \"math\",\n         \"os\",\n         \"slice\",\n         \"m17n\",\n         \"persian\",\n         \"input-method\",\n         \"lisp\",\n         \"ibus\",\n         \"uim\",\n         \"transliteration\",\n         \"farsi\",\n         \"scim\",\n         \"keyboard\",\n         \"ppa\",\n         \"launchpad\",\n         \"ubuntu\",\n         \"zesty\",\n         \"python\",\n         \"python-3\",\n         \"arpa\",\n         \"nlp\",\n         \"language-model\",\n         \"lm\",\n         \"computational-linguistics\",\n         \"lorem\",\n         \"ipsum\",\n         \"random-text\",\n         \"placeholder\",\n         \"generator\",\n         \"prompt\",\n         \"separator\",\n         \"delimiter\",\n         \"record\",\n         \"unit\",\n         \"tsv\",\n         \"csv\",\n         \"string-distance\",\n         \"string-metrics\",\n         \"levenshtein-distance\",\n         \"hamming-distance\",\n         \"text-analysis\",\n         \"ttr\",\n         \"type-token-ratio\",\n         \"text-measuring\",\n         \"text-metric\",\n         \"android\",\n         \"openthesaurus\",\n         \"german\",\n         \"antonym\",\n         \"synonym\",\n         \"hypernym\",\n         \"hyponym\",\n         \"synonyms\",\n         \"dictionary\",\n         \"app\",\n         \"template\",\n         \"snakemake\",\n         \"mit-license\",\n         \"workflow-management\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Ruby\",\n         \"Java\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Python\",\n         \"C\",\n         \"Assembly\",\n         \"C++\",\n         \"M4\",\n         \"NSIS\",\n         \"Makefile\",\n         \"Go\",\n         \"DTrace\",\n         \"CMake\",\n         \"Objective-C\",\n         \"PureBasic\",\n         \"Protocol Buffer\",\n         \"PHP\",\n         \"Swift\",\n         \"Batchfile\",\n         \"C#\",\n         \"Puppet\",\n         \"PLpgSQL\",\n         \"ApacheConf\",\n         \"TypeScript\"\n      ],\n      \"location\": \"Volgograd, Russia\",\n      \"name\": \"Sergey Ukustov\",\n      \"company\": \"@machinomy \",\n      \"github_login\": \"ukstv\",\n      \"github_tags\": \"null\",\n      \"email\": \"sergey@ukstv.me\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Rust\",\n         \"Shell\",\n         \"Vim script\",\n         \"TypeScript\"\n      ],\n      \"location\": null,\n      \"name\": \"Selwyn\",\n      \"company\": null,\n      \"github_login\": \"Siilwyn\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"pixel-art\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Batchfile\",\n         \"Inno Setup\",\n         \"Arduino\",\n         \"Tcl\"\n      ],\n      \"location\": \"Stuttgart, Germany\",\n      \"name\": \"Sebastian Raff\",\n      \"company\": null,\n      \"github_login\": \"hobbyquaker\",\n      \"github_tags\": [\n         \"airtunes\",\n         \"airplay\",\n         \"mqtt\",\n         \"apc\",\n         \"ups\",\n         \"apcupsd\",\n         \"battery\",\n         \"voltage\",\n         \"power\",\n         \"vape\",\n         \"mod\",\n         \"arcticfox\",\n         \"node-module\",\n         \"firmware\",\n         \"configuration\",\n         \"temperature-control\",\n         \"config\",\n         \"encode\",\n         \"decode\",\n         \"dmx\",\n         \"artnet\",\n         \"stage-lighting\",\n         \"dmx512\",\n         \"art-net\",\n         \"lighting\",\n         \"homematic\",\n         \"smarthome\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"internet-of-things\",\n         \"rpc\",\n         \"homegear\",\n         \"github\",\n         \"readme\",\n         \"badges\",\n         \"cache\",\n         \"camo\",\n         \"purge\",\n         \"clear\",\n         \"build\",\n         \"images\",\n         \"nagios\",\n         \"icinga\",\n         \"nextcloud\",\n         \"monitoring\",\n         \"security\",\n         \"nagios-plugin\",\n         \"pm2\",\n         \"nodejs\",\n         \"process-manager\",\n         \"check\",\n         \"plugin\",\n         \"speedport\",\n         \"dsl\",\n         \"router\",\n         \"telekom\",\n         \"culfw\",\n         \"usb\",\n         \"fs20\",\n         \"fhem\",\n         \"dna-chipsets\",\n         \"api\",\n         \"serial\"\n      ],\n      \"email\": \"hq@ccu.io\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CMake\",\n         \"Python\",\n         \"JavaScript\",\n         \"Roff\",\n         \"Java\",\n         \"GLSL\",\n         \"Lua\",\n         \"QMake\",\n         \"PHP\",\n         \"Batchfile\",\n         \"HTML\",\n         \"HLSL\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"C\",\n         \"Prolog\",\n         \"C++\",\n         \"CSS\",\n         \"Perl\",\n         \"Shell\",\n         \"NSIS\",\n         \"Makefile\",\n         \"TypeScript\"\n      ],\n      \"location\": null,\n      \"name\": null,\n      \"company\": null,\n      \"github_login\": \"stetso\",\n      \"github_tags\": [\n         \"lua\",\n         \"gamedev\",\n         \"mobile-game\",\n         \"mobile-development\",\n         \"game-engine\",\n         \"awesome\",\n         \"awesome-list\",\n         \"gideros\",\n         \"game-development\",\n         \"mobile\",\n         \"swipe-gestures\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Vim script\",\n         \"Shell\"\n      ],\n      \"location\": \"The Netherlands\",\n      \"name\": \"Roald Nefs\",\n      \"company\": \"@Warpnet\",\n      \"github_login\": \"roaldnefs\",\n      \"github_tags\": [\n         \"prometheus\",\n         \"awesome-list\",\n         \"awesome\",\n         \"dotfiles\"\n      ],\n      \"email\": \"info@roaldnefs.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Nginx\",\n         \"Shell\"\n      ],\n      \"location\": \"Dallas, TX\",\n      \"name\": \"Chase Giunta\",\n      \"company\": \"@simplygoodwork\",\n      \"github_login\": \"chasegiunta\",\n      \"github_tags\": [\n         \"craftcms\",\n         \"craft\",\n         \"awesome-list\",\n         \"awesome\",\n         \"craft-plugin\",\n         \"list\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Scala\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Ruby\",\n         \"Python\",\n         \"Makefile\",\n         \"CMake\",\n         \"Objective-C\",\n         \"C\",\n         \"Shell\",\n         \"C++\",\n         \"PowerShell\",\n         \"Batchfile\",\n         \"Rust\",\n         \"PLpgSQL\",\n         \"Erlang\"\n      ],\n      \"location\": \"Berlin; Twitter @lauritaapplez\",\n      \"name\": \"Lauri Apple\",\n      \"company\": \"Zalando\",\n      \"github_login\": \"LappleApple\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"leadership\",\n         \"management\",\n         \"engineering-managers\",\n         \"hiring\",\n         \"diversity\",\n         \"engineering-management\",\n         \"awesome\",\n         \"tech-culture\",\n         \"retrospectives\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Ruby\",\n         \"Perl\"\n      ],\n      \"location\": \"https://cyberbusking.org/\",\n      \"name\": \"Meitar M.\",\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"github_login\": \"meitar\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"lockpicking\",\n         \"locksport\",\n         \"physec\",\n         \"physical-security\",\n         \"picking-locks\",\n         \"keypicking\",\n         \"locksmith\",\n         \"locksmithing\",\n         \"awesome\",\n         \"buddypress\",\n         \"wordpress-plugin\",\n         \"buddypress-plugin\",\n         \"utilities\",\n         \"crabgrass\",\n         \"0xacab\",\n         \"backup-script\",\n         \"ctf\",\n         \"data-structures\",\n         \"algorithms\",\n         \"educational\",\n         \"practice\",\n         \"programming-style\",\n         \"chrome-extension\",\n         \"web-extension\"\n      ],\n      \"email\": \"meitarm+github@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"C#\",\n         \"XSLT\",\n         \"HTML\",\n         \"Java\",\n         \"Makefile\",\n         \"Shell\",\n         \"CSS\",\n         \"JavaScript\",\n         \"C++\",\n         \"C\",\n         \"Python\",\n         \"TeX\",\n         \"GCC Machine Description\",\n         \"Gnuplot\"\n      ],\n      \"location\": \"Madrid & Granada, Spain\",\n      \"name\": \"Andr\\u00e9s\",\n      \"company\": null,\n      \"github_login\": \"angrykoala\",\n      \"github_tags\": [\n         \"awesome\",\n         \"list\",\n         \"esoteric\",\n         \"awesome-list\",\n         \"esoteric-language\",\n         \"chuck-norris\",\n         \"language\",\n         \"javascript\",\n         \"npm-package\",\n         \"electron\",\n         \"vuejs\",\n         \"task-runner\",\n         \"gui\",\n         \"launcher\",\n         \"nodejs\",\n         \"mp3\",\n         \"music\",\n         \"tags\"\n      ],\n      \"email\": \"angrykoala@outlook.es\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Vue\",\n         \"HTML\",\n         \"Shell\"\n      ],\n      \"location\": \"Lagos, Nigeria\",\n      \"name\": \"Ademola Adegbuyi\",\n      \"company\": null,\n      \"github_login\": \"ooade\",\n      \"github_tags\": [\n         \"challenge\",\n         \"code\",\n         \"portfolio\",\n         \"nextjs\",\n         \"react\",\n         \"simple\",\n         \"apollo\",\n         \"apollo-server\",\n         \"apollo-client\",\n         \"boilerplate\",\n         \"anime\",\n         \"awesome-list\",\n         \"awesome\",\n         \"graphql\",\n         \"apollo-graphql-ecosystem\",\n         \"article\",\n         \"awesomeness\",\n         \"preact\",\n         \"jsx\",\n         \"resources\",\n         \"gif\",\n         \"nodejs\",\n         \"giphy\",\n         \"console\",\n         \"fonsole\",\n         \"log\",\n         \"javascript\",\n         \"formatter\",\n         \"webpack2\",\n         \"service-worker\",\n         \"pwa\",\n         \"css\",\n         \"minify\",\n         \"test\",\n         \"css-minifier\",\n         \"react-toolbox\",\n         \"ssr\",\n         \"development-workflow\",\n         \"webpack\",\n         \"starter-kit\",\n         \"pwa-boilerplate\"\n      ],\n      \"email\": \"ooade96@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Ruby\",\n         \"Makefile\",\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Java\",\n         \"ApacheConf\",\n         \"Smarty\",\n         \"PHP\",\n         \"Shell\"\n      ],\n      \"location\": \"Barcelona, Catalonia\",\n      \"name\": \"Joan Boixad\\u00f3s\",\n      \"company\": null,\n      \"github_login\": \"mezod\",\n      \"github_tags\": [\n         \"indie\",\n         \"indiedev\",\n         \"passive-income\",\n         \"financial-independence\",\n         \"bootstrapper\",\n         \"entrepreneurs\",\n         \"sideproject\",\n         \"awesome\",\n         \"awesome-list\"\n      ],\n      \"email\": \"mezood@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Java\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Python\",\n         \"CSS\",\n         \"Makefile\",\n         \"PHP\",\n         \"Jupyter Notebook\",\n         \"Go\"\n      ],\n      \"location\": null,\n      \"name\": \"Sheon Han\",\n      \"company\": \"@PrincetonUniversity\",\n      \"github_login\": \"sheonhan\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"effective-altruism\",\n         \"philanthropy\"\n      ],\n      \"email\": \"sheon.han@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"ApacheConf\",\n         \"PHP\",\n         \"Java\",\n         \"Shell\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Vue\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"Makefile\"\n      ],\n      \"location\": \"Spain\",\n      \"name\": \"Miguel Piedrafita\",\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"github_login\": \"m1guelpf\",\n      \"github_tags\": [\n         \"php\",\n         \"curl\",\n         \"php-api\",\n         \"mysql\",\n         \"python\",\n         \"activity\",\n         \"logger\",\n         \"log\",\n         \"api\",\n         \"beta\",\n         \"laravel\",\n         \"package\",\n         \"deployment\",\n         \"mode\"\n      ],\n      \"email\": \"github@miguelpiedrafita.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Lua\",\n         \"Shell\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Java\"\n      ],\n      \"location\": \"Hampshire, UK\",\n      \"name\": \"Craig Davison\",\n      \"company\": null,\n      \"github_login\": \"davisonio\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"gif\",\n         \"irc\",\n         \"bacon\",\n         \"mod\",\n         \"bacon-mod\",\n         \"video-game\",\n         \"lua\",\n         \"minetest\",\n         \"minetest-mod\",\n         \"minetest-mods\",\n         \"minetest-engine\",\n         \"minetest-subgame\",\n         \"coloured-stone-bricks\",\n         \"bricks\",\n         \"craig\",\n         \"game\",\n         \"craig-server-game\",\n         \"craig-minetest-server\",\n         \"mods\",\n         \"module\",\n         \"modular\",\n         \"darkage\",\n         \"dark-ages\",\n         \"wtfpl\",\n         \"darkage-mod\",\n         \"gaming\",\n         \"gaming-cms\",\n         \"css\",\n         \"website\",\n         \"www\",\n         \"jekyll\",\n         \"minimalist\",\n         \"devops\",\n         \"devops-tools\",\n         \"devops-services\",\n         \"ansible\",\n         \"ansible-role\",\n         \"ansible-roles\",\n         \"ansible-demo\",\n         \"ansible-tips\",\n         \"ubuntu\",\n         \"deployment\",\n         \"redirect\",\n         \"github\",\n         \"davisonio\",\n         \"github-io\",\n         \"github-api\",\n         \"github-pages\",\n         \"github-page\",\n         \"github-bot\",\n         \"http\",\n         \"https\",\n         \"java\",\n         \"java-8\",\n         \"java-library\",\n         \"java8\",\n         \"java-sample\",\n         \"java-scripts\",\n         \"javafx\",\n         \"learning\",\n         \"learning-java\",\n         \"learn\",\n         \"pixels\",\n         \"simplepixels-texture-pack\",\n         \"texture-pack\",\n         \"simple\",\n         \"pixel-art\",\n         \"pixel\",\n         \"pixel-layout\",\n         \"text\",\n         \"textures\"\n      ],\n      \"email\": \"craig@davison.io\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Ruby\",\n         \"Shell\",\n         \"CoffeeScript\",\n         \"PHP\",\n         \"Perl\",\n         \"Java\"\n      ],\n      \"location\": \"Moscow\",\n      \"name\": \"Vitaliy Potapov\",\n      \"company\": \"Yandex\",\n      \"github_login\": \"vitalets\",\n      \"github_tags\": [\n         \"smart-tv\",\n         \"smarttv\",\n         \"tizen\",\n         \"webos-tv\",\n         \"samsung-smart-tv\",\n         \"chromecast\",\n         \"android-tv\",\n         \"apple-tv\",\n         \"awesome\",\n         \"awesome-list\",\n         \"type-checking\",\n         \"type-safety\",\n         \"type-hints\",\n         \"runtime-code-analysis\",\n         \"babel-plugin\",\n         \"babel\",\n         \"html5-filesystem-api\",\n         \"filesystem-api\",\n         \"eventemitter\",\n         \"event-emitter\",\n         \"subscription\",\n         \"pubsub\",\n         \"events\",\n         \"eventbus\",\n         \"listener\"\n      ],\n      \"email\": \"noginsk@rambler.ru\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Ruby\",\n         \"Shell\",\n         \"Swift\",\n         \"Objective-C\",\n         \"C\",\n         \"Python\",\n         \"ApacheConf\",\n         \"PHP\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"AppleScript\"\n      ],\n      \"location\": null,\n      \"name\": \"Pim Snel\",\n      \"company\": \"Lingewoud B.V.\",\n      \"github_login\": \"mipmip\",\n      \"github_tags\": \"null\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Ruby\",\n         \"Common Lisp\",\n         \"Pascal\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Python\",\n         \"CSS\",\n         \"Makefile\",\n         \"Emacs Lisp\",\n         \"R\",\n         \"Java\",\n         \"C\",\n         \"Shell\",\n         \"Forth\"\n      ],\n      \"location\": \"Germany\",\n      \"name\": \"Andrei Beliankou\",\n      \"company\": null,\n      \"github_login\": \"arbox\",\n      \"github_tags\": [\n         \"ruby\",\n         \"java\",\n         \"interoperability\",\n         \"data-science\",\n         \"data-visualization\",\n         \"data-analysis\",\n         \"data-mining\",\n         \"data-analytics\",\n         \"visualization\",\n         \"awesome\",\n         \"awesome-list\",\n         \"list\",\n         \"ml\",\n         \"machine-learning\",\n         \"ruby-gem\",\n         \"rubyml\",\n         \"rubynlp\",\n         \"natural-language-processing\",\n         \"nlp\",\n         \"sentiment-analysis\",\n         \"pos-tag\",\n         \"computational-linguistics\",\n         \"rails\",\n         \"bbatsov\",\n         \"style-guide\",\n         \"rubydatascience\",\n         \"inter-process-communication\",\n         \"r\",\n         \"rust\",\n         \"c\",\n         \"russian\",\n         \"rubocop\",\n         \"style\",\n         \"tokenizer\"\n      ],\n      \"email\": \"arbox@yandex.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Makefile\"\n      ],\n      \"location\": \"Athens, Greece\",\n      \"name\": \"Nikolaos Kamarinakis\",\n      \"company\": null,\n      \"github_login\": \"k4m4\",\n      \"github_tags\": [\n         \"donations\",\n         \"template\",\n         \"website-template\",\n         \"html\",\n         \"css\",\n         \"bootstrap\",\n         \"hacking\",\n         \"infosec\",\n         \"dictionary-based-attacks\",\n         \"brute-force\",\n         \"security\",\n         \"bounty\",\n         \"networking\",\n         \"arp-spoofing\",\n         \"movies\",\n         \"curated-list\",\n         \"collection\",\n         \"sexy-lists\",\n         \"awesome\",\n         \"awesome-list\",\n         \"list\",\n         \"deep-web\",\n         \"tor\",\n         \"terminal\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"R\",\n         \"Jupyter Notebook\",\n         \"HTML\",\n         \"Ruby\",\n         \"CSS\",\n         \"Python\",\n         \"Batchfile\",\n         \"Shell\",\n         \"C\",\n         \"JavaScript\",\n         \"C++\",\n         \"PHP\"\n      ],\n      \"location\": \"India\",\n      \"name\": \"Akash Tandon\",\n      \"company\": \"@socialcopsdev\",\n      \"github_login\": \"analyticalmonk\",\n      \"github_tags\": [\n         \"data-science-competition\",\n         \"data-science\",\n         \"r\",\n         \"gbm\",\n         \"machine-learning\",\n         \"h2oai\",\n         \"neuroscience\",\n         \"mooc\",\n         \"brain\",\n         \"awesome-list\",\n         \"matlab\",\n         \"python\",\n         \"intelligence\",\n         \"awesome\",\n         \"list\",\n         \"blaze\",\n         \"pydata\",\n         \"pandas\",\n         \"numpy\",\n         \"python3\",\n         \"jupyter-notebook\",\n         \"python-3\",\n         \"dask\",\n         \"reddit\",\n         \"datascience\",\n         \"visualization\",\n         \"castra\",\n         \"ipython-notebook\"\n      ],\n      \"email\": \"akashtndn.acm@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"Python\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Objective-C\",\n         \"C\",\n         \"C++\",\n         \"Fortran\",\n         \"Swift\",\n         \"Makefile\",\n         \"TeX\",\n         \"Ruby\",\n         \"Matlab\",\n         \"Julia\",\n         \"Vue\",\n         \"Jupyter Notebook\"\n      ],\n      \"location\": \"Europe\",\n      \"name\": \"Fabian-Robert St\\u00f6ter\",\n      \"company\": null,\n      \"github_login\": \"faroit\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"python\",\n         \"audio\",\n         \"audio-player\",\n         \"vuejs\",\n         \"electron\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\"\n      ],\n      \"location\": \"East Earl, PA\",\n      \"name\": \"Ryan Zimmerman\",\n      \"company\": \"@ExodusMovement \",\n      \"github_login\": \"RyanZim\",\n      \"github_tags\": [\n         \"npm\",\n         \"awesome\",\n         \"awesome-list\",\n         \"task-runner\",\n         \"list\",\n         \"npm-scripts\",\n         \"static-site-generator\",\n         \"javascript\",\n         \"template-engine\",\n         \"markdown\",\n         \"html\",\n         \"postcss\",\n         \"css-selector\",\n         \"uncss\",\n         \"css\",\n         \"promises\",\n         \"callbacks\",\n         \"nodejs\",\n         \"js\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Ruby\",\n         \"Makefile\",\n         \"CSS\",\n         \"HTML\",\n         \"Shell\",\n         \"Go\"\n      ],\n      \"location\": \"Montr\\u00e9al\",\n      \"name\": \"Richard Littauer\",\n      \"company\": \"@mntnr \",\n      \"github_login\": \"RichardLitt\",\n      \"github_tags\": [\n         \"bear\",\n         \"bears\",\n         \"bearss\",\n         \"land\",\n         \"petition\",\n         \"access-land\",\n         \"access\",\n         \"poetry\"\n      ],\n      \"email\": \"richard.littauer@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Java\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"CoffeeScript\",\n         \"Ruby\",\n         \"Cucumber\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"C\",\n         \"Shell\",\n         \"C++\",\n         \"Makefile\",\n         \"Kotlin\",\n         \"Swift\",\n         \"Python\",\n         \"Gherkin\",\n         \"FreeMarker\"\n      ],\n      \"location\": \"Recife, Pernambuco - Brazil\",\n      \"name\": \"Victor Laerte Oliveira\",\n      \"company\": \"@liferay \",\n      \"github_login\": \"victorlaerte\",\n      \"github_tags\": [\n         \"android\",\n         \"android-seed\",\n         \"template\",\n         \"awesome\",\n         \"awesome-list\",\n         \"quotes\",\n         \"paper\",\n         \"msr\",\n         \"travis-torrent\",\n         \"java\",\n         \"javascript\",\n         \"stories\",\n         \"bad-code\",\n         \"dilmes-ipsum\",\n         \"lorem\",\n         \"python\",\n         \"sublime-text-plugin\",\n         \"sublime\",\n         \"ipsum\",\n         \"trump\",\n         \"trump-ipsum\",\n         \"lorem-ipsum\",\n         \"lorem-ipsum-generator\",\n         \"atom-plugin\",\n         \"asynctask\",\n         \"javafx\"\n      ],\n      \"email\": \"victorlaertedoliveira@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Common Lisp\",\n         \"Lua\",\n         \"TeX\",\n         \"Haskell\",\n         \"Alloy\",\n         \"JavaScript\",\n         \"LiveScript\",\n         \"Java\",\n         \"CoffeeScript\",\n         \"Erlang\",\n         \"CSS\",\n         \"Ruby\",\n         \"Python\",\n         \"Clojure\",\n         \"Julia\",\n         \"Shell\",\n         \"Jupyter Notebook\",\n         \"Makefile\",\n         \"HTML\",\n         \"Emacs Lisp\",\n         \"C\",\n         \"Scala\",\n         \"C++\",\n         \"Scheme\",\n         \"Stata\",\n         \"F#\",\n         \"Visual Basic\",\n         \"Racket\",\n         \"COBOL\",\n         \"Pascal\",\n         \"PigLatin\",\n         \"XSLT\",\n         \"E\",\n         \"Forth\",\n         \"Idris\",\n         \"Isabelle\",\n         \"C#\",\n         \"Objective-C\",\n         \"Mathematica\",\n         \"Brightscript\",\n         \"Vue\",\n         \"Nim\",\n         \"Puppet\",\n         \"R\",\n         \"Matlab\",\n         \"Logtalk\",\n         \"Kotlin\",\n         \"Haxe\",\n         \"Assembly\",\n         \"GLSL\",\n         \"Smalltalk\",\n         \"xBase\",\n         \"XQuery\",\n         \"ColdFusion\",\n         \"Batchfile\",\n         \"Mako\",\n         \"ANTLR\",\n         \"Fortran\",\n         \"Elixir\",\n         \"Gherkin\",\n         \"PHP\",\n         \"SystemVerilog\",\n         \"Perl\",\n         \"GAP\",\n         \"TypeScript\",\n         \"Tcl\",\n         \"Swift\",\n         \"FreeMarker\",\n         \"Clean\",\n         \"Brainfuck\",\n         \"Groff\",\n         \"Cucumber\",\n         \"Agda\",\n         \"OCaml\",\n         \"VimL\",\n         \"CMake\"\n      ],\n      \"location\": \"Singapore\",\n      \"name\": \"Xiao Hanyu\",\n      \"company\": null,\n      \"github_login\": \"xiaohanyu\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"tikz\",\n         \"latex\",\n         \"tex\",\n         \"shell\",\n         \"fun\",\n         \"imagemagick\"\n      ],\n      \"email\": \"xiaohanyu1988@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"HTML\",\n         \"CSS\",\n         \"Ruby\",\n         \"JavaScript\",\n         \"GCC Machine Description\",\n         \"Shell\",\n         \"Logos\",\n         \"ApacheConf\",\n         \"Nginx\",\n         \"XSLT\",\n         \"Perl\"\n      ],\n      \"location\": \"Germany\",\n      \"name\": \"DavidLamabuer\",\n      \"company\": \"@AOEpeople \",\n      \"github_login\": \"DavidLambauer\",\n      \"github_tags\": [\n         \"awesome\",\n         \"magento2\",\n         \"collection\",\n         \"magento-2\",\n         \"magento-extension\",\n         \"php\",\n         \"packages\",\n         \"awesome-list\",\n         \"documentation\",\n         \"documentation-tool\"\n      ],\n      \"email\": \"mail@davidlambauer.de\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\"\n      ],\n      \"location\": \"Sweden\",\n      \"name\": \"Kevin M\\u00e5rtensson\",\n      \"company\": \"@imagemin @yeoman\",\n      \"github_login\": \"kevva\",\n      \"github_tags\": [\n         \"binary\",\n         \"check\",\n         \"nodejs\",\n         \"executable\",\n         \"brightness\",\n         \"brightness-level\",\n         \"screen-brightness\",\n         \"cli\",\n         \"calc\",\n         \"percent\",\n         \"proxy\",\n         \"tunneling-proxies\",\n         \"https-agents\",\n         \"protocol\",\n         \"http\",\n         \"https\",\n         \"tunnel\"\n      ],\n      \"email\": \"kevinmartensson@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Shell\",\n         \"Python\",\n         \"Java\",\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Ruby\",\n         \"PHP\",\n         \"Roff\",\n         \"SQLPL\",\n         \"Perl\",\n         \"XSLT\",\n         \"ASP\",\n         \"Batchfile\",\n         \"ApacheConf\",\n         \"Makefile\",\n         \"Smarty\",\n         \"VimL\"\n      ],\n      \"location\": \"Los Angeles, US\",\n      \"name\": \"Matthew Vita\",\n      \"company\": null,\n      \"github_login\": \"MatthewVita\",\n      \"github_tags\": [\n         \"hl7-parsing\",\n         \"hl7-message\",\n         \"hit\",\n         \"healthcare\",\n         \"hl7\",\n         \"hl7-builder\",\n         \"hapi\",\n         \"emr\"\n      ],\n      \"email\": \"matthewvita@live.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Vim script\",\n         \"Shell\",\n         \"Python\",\n         \"ANTLR\",\n         \"Rust\",\n         \"Java\"\n      ],\n      \"location\": \"Germany, pretty central\",\n      \"name\": null,\n      \"company\": null,\n      \"github_login\": \"kud1ing\",\n      \"github_tags\": [\n         \"rust\",\n         \"jni\",\n         \"java\",\n         \"ffi\",\n         \"tinkerpop\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"Ruby\",\n         \"Python\",\n         \"PHP\",\n         \"TypeScript\",\n         \"Batchfile\",\n         \"Java\",\n         \"ApacheConf\"\n      ],\n      \"location\": null,\n      \"name\": \"Jasper Moelker\",\n      \"company\": \"De Voorhoede\",\n      \"github_login\": \"jbmoelker\",\n      \"github_tags\": [\n         \"svelte\",\n         \"demo\",\n         \"examples\",\n         \"rollup\",\n         \"postcss\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CSS\",\n         \"Python\",\n         \"C\",\n         \"HTML\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"Swift\",\n         \"Shell\",\n         \"TypeScript\"\n      ],\n      \"location\": \"The Netherlands\",\n      \"name\": \"David van Leeuwen\",\n      \"company\": \"Awkward\",\n      \"github_login\": \"davidvanleeuwen\",\n      \"github_tags\": [\n         \"life\",\n         \"personal\"\n      ],\n      \"email\": \"david@madeawkward.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Swift\",\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Vue\",\n         \"Python\",\n         \"Haskell\",\n         \"Shell\",\n         \"Racket\",\n         \"Coq\",\n         \"Makefile\",\n         \"Emacs Lisp\",\n         \"Ruby\",\n         \"PHP\",\n         \"C\",\n         \"Assembly\",\n         \"Go\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"C++\",\n         \"PowerShell\",\n         \"Hack\",\n         \"Nginx\"\n      ],\n      \"location\": \"Taiwan\",\n      \"name\": \"Boik\",\n      \"company\": null,\n      \"github_login\": \"qazbnm456\",\n      \"github_tags\": [\n         \"awesome\",\n         \"cve\",\n         \"poc\",\n         \"awesome-list\",\n         \"list\",\n         \"security\",\n         \"trivia\",\n         \"treasure\",\n         \"web\",\n         \"websecurity\",\n         \"penetration-testing\",\n         \"vuejs2\",\n         \"electron\",\n         \"prototype\",\n         \"docker\",\n         \"wargame\",\n         \"ctf\",\n         \"rails\"\n      ],\n      \"email\": \"boik@tdohacker.org\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Batchfile\",\n         \"Shell\",\n         \"HTML\",\n         \"PHP\"\n      ],\n      \"location\": \"France\",\n      \"name\": \"Quentin Goinaud\",\n      \"company\": null,\n      \"github_login\": \"armaldio\",\n      \"github_tags\": [\n         \"website\",\n         \"armaldio\",\n         \"blog\",\n         \"game-development\",\n         \"tutorial\",\n         \"construct\",\n         \"general-tutorials\",\n         \"platform-game\",\n         \"making-games\",\n         \"games-showcase\",\n         \"itch\",\n         \"engine\",\n         \"construct2\",\n         \"plugin\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"CoffeeScript\",\n         \"HTML\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Makefile\",\n         \"F#\",\n         \"PHP\",\n         \"Java\",\n         \"Groovy\",\n         \"TypeScript\",\n         \"Swift\",\n         \"Batchfile\",\n         \"Scala\",\n         \"C#\"\n      ],\n      \"location\": \"Zagreb, Croatia\",\n      \"name\": \"Mislav Cimper\\u0161ak\",\n      \"company\": null,\n      \"github_login\": \"mislavcimpersak\",\n      \"github_tags\": [\n         \"awesome\",\n         \"jokes\",\n         \"fun\",\n         \"django\",\n         \"lorem-ipsum\",\n         \"docker\",\n         \"docker-image\",\n         \"postgresql\",\n         \"hstore\",\n         \"presentation\",\n         \"reveal-js\",\n         \"aws-lambda\",\n         \"serverless\",\n         \"twitter-bot\",\n         \"zappa\",\n         \"faas\",\n         \"joke\",\n         \"talk\",\n         \"xkcd\",\n         \"excuses\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"CMake\",\n         \"GLSL\",\n         \"C\",\n         \"Shell\",\n         \"Java\",\n         \"Batchfile\",\n         \"C++\",\n         \"Makefile\",\n         \"Ruby\",\n         \"Go\",\n         \"C#\",\n         \"Cuda\",\n         \"Objective-C\"\n      ],\n      \"location\": null,\n      \"name\": \"Spencer\",\n      \"company\": null,\n      \"github_login\": \"sjfricke\",\n      \"github_tags\": [\n         \"webgl-programming\",\n         \"webgl-articles\",\n         \"glsl-editors\",\n         \"webgl-tutorials\",\n         \"webgl\",\n         \"learning-webgl\",\n         \"webgl-references\",\n         \"webgl-spec-sheet\",\n         \"awesome\",\n         \"awesome-list\"\n      ],\n      \"email\": \"sjfricke@wisc.edu\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Perl\",\n         \"VimL\",\n         \"Python\"\n      ],\n      \"location\": \"Central Mass.\",\n      \"name\": \"Quang Van\",\n      \"company\": \"Absent Software\",\n      \"github_login\": \"quangv\",\n      \"github_tags\": [\n         \"couchdb\",\n         \"cloudant\",\n         \"couchdb-wiki\",\n         \"best-practices\",\n         \"couchdb-chat\"\n      ],\n      \"email\": \"quang@absentsoft.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"PHP\",\n         \"Shell\",\n         \"CSS\",\n         \"HTML\",\n         \"Makefile\",\n         \"Perl\",\n         \"Puppet\",\n         \"Python\",\n         \"Batchfile\"\n      ],\n      \"location\": null,\n      \"name\": \"Grzesiek W\",\n      \"company\": null,\n      \"github_login\": \"kminek\",\n      \"github_tags\": [\n         \"markdown\",\n         \"parser\",\n         \"standard\",\n         \"marklink\",\n         \"sublime-text\",\n         \"php\"\n      ],\n      \"email\": \"kontakt@kminek.pl\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"Makefile\",\n         \"Go\",\n         \"HTML\",\n         \"Shell\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Vue\",\n         \"Common Lisp\",\n         \"Batchfile\",\n         \"Roff\",\n         \"ApacheConf\"\n      ],\n      \"location\": \"Columbia, MD\",\n      \"name\": \"Peter Matseykanets\",\n      \"company\": null,\n      \"github_login\": \"pmatseykanets\",\n      \"github_tags\": [\n         \"laravel\",\n         \"laravel-package\",\n         \"beanstalkd\",\n         \"artisan-command\",\n         \"import\",\n         \"database\",\n         \"eloquent\",\n         \"queue\",\n         \"laravel-scout\",\n         \"postgresql\",\n         \"postgres\",\n         \"full-text-search\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"Python\",\n         \"TypeScript\",\n         \"Protocol Buffer\",\n         \"Shell\",\n         \"Dart\",\n         \"HTML\"\n      ],\n      \"location\": \"San Francisco, CA\",\n      \"name\": \"PatrickJS [tipe.io]\",\n      \"company\": \"@TipeIO\",\n      \"github_login\": \"gdi2290\",\n      \"github_tags\": \"null\",\n      \"email\": \"github@gdi2290.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Ruby\"\n      ],\n      \"location\": \"Krak\\u00f3w\",\n      \"name\": \"Adrian Baran\",\n      \"company\": null,\n      \"github_login\": \"bouzlibop\",\n      \"github_tags\": \"null\",\n      \"email\": \"bouzlibop@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Perl\",\n         \"ApacheConf\",\n         \"Makefile\"\n      ],\n      \"location\": null,\n      \"name\": \"Joaqu\\u00edn Serna\",\n      \"company\": null,\n      \"github_login\": \"BubuAnabelas\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"list\",\n         \"markdown\",\n         \"commonmark\",\n         \"resources\",\n         \"webtorrent\",\n         \"bittorrent\",\n         \"webrtc\",\n         \"torrent\",\n         \"p2p\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\"\n      ],\n      \"location\": \"Vilnius, Lithuania\",\n      \"name\": \"Giedrius Jaloveckas\",\n      \"company\": null,\n      \"github_login\": \"podo\",\n      \"github_tags\": [\n         \"framer-prototype\",\n         \"framer-studio\",\n         \"framerjs\",\n         \"prototype\",\n         \"framer\",\n         \"framer-resources\",\n         \"awesome\",\n         \"awesome-list\",\n         \"autocode\",\n         \"video-course\"\n      ],\n      \"email\": \"g.jaloveckas@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Matlab\",\n         \"Python\",\n         \"TeX\",\n         \"Jupyter Notebook\"\n      ],\n      \"location\": \"Waterloo, ON, Canada\",\n      \"name\": \"Terry Taewoong Um\",\n      \"company\": \"University of Waterloo\",\n      \"github_login\": \"terryum\",\n      \"github_tags\": [\n         \"deep-learning\",\n         \"deep-neural-networks\",\n         \"machine-learning\"\n      ],\n      \"email\": \"terry.t.um@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Makefile\",\n         \"Shell\",\n         \"Web Ontology Language\",\n         \"CoffeeScript\",\n         \"Batchfile\",\n         \"Cap'n Proto\"\n      ],\n      \"location\": \"Vit\\u00f3ria - ES\",\n      \"name\": \"Lucas Bassetti\",\n      \"company\": \"@Integration-Alpha\",\n      \"github_login\": \"LucasBassetti\",\n      \"github_tags\": [\n         \"archimate\",\n         \"java\",\n         \"plugin\",\n         \"owl\",\n         \"archi\",\n         \"lesscss\",\n         \"awesome\",\n         \"awesome-list\",\n         \"less\",\n         \"css\",\n         \"transparency\",\n         \"government\",\n         \"web-crawler\",\n         \"ontologia\",\n         \"ontouml\",\n         \"cli\",\n         \"i18n\",\n         \"csv2json\",\n         \"kanban\",\n         \"react\",\n         \"redux\",\n         \"javascript\",\n         \"svg\",\n         \"ibge\",\n         \"mocha\",\n         \"chai\",\n         \"enzyme\",\n         \"movies\",\n         \"tool\",\n         \"pentaho\",\n         \"cdf\",\n         \"angular\",\n         \"boilerplate\",\n         \"started\",\n         \"webpack\",\n         \"airbnb\",\n         \"eslint\",\n         \"airbnb-javascript\",\n         \"loaders\",\n         \"pure-css\",\n         \"react-native\",\n         \"chat\",\n         \"chatbot\",\n         \"conversational-ui\",\n         \"opensource\",\n         \"spa\",\n         \"documentation\"\n      ],\n      \"email\": \"lucasbr.dafonseca@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"CMake\",\n         \"C\",\n         \"Assembly\",\n         \"Perl6\",\n         \"C++\",\n         \"Makefile\",\n         \"Perl\",\n         \"JavaScript\",\n         \"CoffeeScript\",\n         \"PHP\",\n         \"CSS\",\n         \"HTML\",\n         \"Shell\"\n      ],\n      \"location\": \"Cambridge, United Kingdom\",\n      \"name\": \"James Osborn\",\n      \"company\": null,\n      \"github_login\": \"TheJambo\",\n      \"github_tags\": [\n         \"testing\",\n         \"tester\",\n         \"naughty-strings\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\"\n      ],\n      \"email\": \"james@james.am\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Ruby\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"NSIS\",\n         \"Java\",\n         \"Kotlin\",\n         \"Shell\",\n         \"Rust\",\n         \"F#\",\n         \"TeX\",\n         \"Haxe\",\n         \"LLVM\",\n         \"Yacc\",\n         \"COBOL\",\n         \"M4\",\n         \"PigLatin\",\n         \"XSLT\",\n         \"Python\",\n         \"ASP\",\n         \"Forth\",\n         \"xBase\",\n         \"Matlab\",\n         \"Fortran\",\n         \"Objective-C\",\n         \"C\",\n         \"Cuda\",\n         \"Prolog\",\n         \"SystemVerilog\",\n         \"C++\",\n         \"GDB\",\n         \"Perl\",\n         \"GAP\",\n         \"Go\",\n         \"Meson\",\n         \"Scilab\",\n         \"Makefile\",\n         \"ooc\",\n         \"OCaml\",\n         \"TypeScript\",\n         \"Gherkin\"\n      ],\n      \"location\": \"Pune, India\",\n      \"name\": \"Darshak Parikh\",\n      \"company\": null,\n      \"github_login\": \"dar5hak\",\n      \"github_tags\": [\n         \"beautify\",\n         \"typography\",\n         \"yeoman-generator\",\n         \"awesome-list\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Batchfile\",\n         \"AutoHotkey\",\n         \"Shell\",\n         \"Python\",\n         \"C++\",\n         \"Ruby\",\n         \"Java\",\n         \"Go\",\n         \"C\",\n         \"C#\",\n         \"Perl\",\n         \"SourcePawn\"\n      ],\n      \"location\": \"Gandhinagar, India\",\n      \"name\": \"Avi Aryan\",\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"github_login\": \"aviaryan\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"alfred3-workflow\",\n         \"alfred-3\",\n         \"calculator\",\n         \"workflow\",\n         \"imgur\",\n         \"imgur-uploader\",\n         \"jekyll\",\n         \"blog\",\n         \"website\",\n         \"aviaryan\",\n         \"github-pages\",\n         \"awesome\",\n         \"awesomeness\",\n         \"list\",\n         \"web-app\",\n         \"awesome-list\",\n         \"application\",\n         \"applications\",\n         \"portableapps\",\n         \"no-login\",\n         \"no-login-web-apps\",\n         \"autohotkey\",\n         \"clipboard\",\n         \"clipboard-manager\",\n         \"multiple-clipboards\",\n         \"clipjump\",\n         \"sublime-text\",\n         \"sublime-text-3\",\n         \"plugin\",\n         \"sublime-text-plugin\",\n         \"sublime-text-package\",\n         \"potato\",\n         \"competitive-programming\",\n         \"competitive\",\n         \"competitive-programming-contests\",\n         \"competitive-learning\",\n         \"contest\",\n         \"codechef\",\n         \"codeforces\",\n         \"hackerrank\",\n         \"codejam\",\n         \"hackerearth\",\n         \"counter-strike\",\n         \"bots\",\n         \"editor\",\n         \"bot-editor\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"XSLT\",\n         \"PHP\",\n         \"Augeas\",\n         \"C\",\n         \"Roff\",\n         \"HCL\",\n         \"Nginx\",\n         \"Perl\",\n         \"Lua\",\n         \"Python\",\n         \"Ruby\",\n         \"Shell\",\n         \"Vim script\",\n         \"Makefile\",\n         \"HTML\",\n         \"CSS\",\n         \"JavaScript\",\n         \"ApacheConf\",\n         \"Vue\"\n      ],\n      \"location\": \"Area 51\",\n      \"name\": \"Peter Kokot\",\n      \"company\": \"@php-earth \",\n      \"github_login\": \"petk\",\n      \"github_tags\": [\n         \"awesome\",\n         \"community\",\n         \"groups\",\n         \"dojo\",\n         \"javascript\",\n         \"awesome-list\",\n         \"jquery\",\n         \"php\",\n         \"benchmark\"\n      ],\n      \"email\": \"peterkokot@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"TypeScript\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Shell\",\n         \"Dart\",\n         \"CoffeeScript\",\n         \"AppleScript\",\n         \"Python\",\n         \"Smarty\"\n      ],\n      \"location\": \"Twitter - @d3viant0ne \",\n      \"name\": \"Joshua Wiens\",\n      \"company\": null,\n      \"github_login\": \"d3viant0ne\",\n      \"github_tags\": [\n         \"docker\",\n         \"nodejs\",\n         \"circleci\",\n         \"debian-jessie\"\n      ],\n      \"email\": \"wiens.joshua@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"Lua\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Vim script\",\n         \"Makefile\",\n         \"Shell\",\n         \"Python\",\n         \"GLSL\",\n         \"Vue\"\n      ],\n      \"location\": \"Los Angeles, CA\",\n      \"name\": \"Terkel\",\n      \"company\": \"@activetheory\",\n      \"github_login\": \"terkelg\",\n      \"github_tags\": [\n         \"awesome\",\n         \"creative-coding\",\n         \"interaction-design\",\n         \"information-visualization\",\n         \"list\",\n         \"graphics-programming\",\n         \"awesome-list\",\n         \"generative-art\",\n         \"data-visualization\",\n         \"3d-graphics\",\n         \"iot\",\n         \"mqtt-broker\",\n         \"sensor\",\n         \"umbrella\",\n         \"mqtt\",\n         \"game\",\n         \"canvas\",\n         \"nodemcu\",\n         \"tilt-sensor\",\n         \"dotfiles\",\n         \"vim\",\n         \"git\",\n         \"zsh\",\n         \"macos\",\n         \"tmux\",\n         \"awesomeness\",\n         \"bookmarks\",\n         \"bot\",\n         \"twitter-bot\",\n         \"twitter\",\n         \"machine-learning\",\n         \"ai\",\n         \"math\",\n         \"spring\",\n         \"math-snippets\",\n         \"velocity\",\n         \"mathematics\",\n         \"math-toolbox\",\n         \"es2015\",\n         \"leightweight\",\n         \"geometry\",\n         \"math-library\",\n         \"social-network\",\n         \"electron\",\n         \"windows\",\n         \"linux\",\n         \"instagram\",\n         \"ramme\",\n         \"vue\",\n         \"portfolio-website\",\n         \"threejs\",\n         \"webpack2\",\n         \"babel\",\n         \"boilerplate\",\n         \"starter-kit\"\n      ],\n      \"email\": \"terkel@terkel.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"CSS\",\n         \"TypeScript\",\n         \"Shell\",\n         \"PowerShell\",\n         \"Ruby\",\n         \"Makefile\"\n      ],\n      \"location\": \"Kassel, Germany\",\n      \"name\": \"Michael K\\u00fchnel\",\n      \"company\": \"Micromata GmbH\",\n      \"github_login\": \"mischah\",\n      \"github_tags\": \"null\",\n      \"email\": \"mail@michael-kuehnel.de\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"Makefile\",\n         \"JavaScript\",\n         \"Shell\",\n         \"ApacheConf\",\n         \"PHP\",\n         \"Nginx\",\n         \"CSS\",\n         \"Objective-C\",\n         \"C++\",\n         \"Prolog\",\n         \"C\",\n         \"Assembly\",\n         \"HTML\",\n         \"TeX\",\n         \"Perl\",\n         \"Eagle\",\n         \"Batchfile\",\n         \"QMake\",\n         \"C#\",\n         \"Groff\",\n         \"Objective-C++\",\n         \"Java\",\n         \"Haskell\",\n         \"CMake\",\n         \"Jupyter Notebook\",\n         \"TypeScript\",\n         \"Lua\",\n         \"Awk\",\n         \"Visual Basic\",\n         \"Racket\",\n         \"VimL\",\n         \"Elm\",\n         \"PowerShell\",\n         \"Ruby\",\n         \"Standard ML\",\n         \"Hack\",\n         \"OCaml\",\n         \"Emacs Lisp\",\n         \"KiCad\",\n         \"Arduino\",\n         \"OpenSCAD\"\n      ],\n      \"location\": null,\n      \"name\": \"Kaspar Emanuel\",\n      \"company\": null,\n      \"github_login\": \"kasbah\",\n      \"github_tags\": \"null\",\n      \"email\": \"kaspar.emanuel@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Java\",\n         \"Shell\",\n         \"FreeMarker\",\n         \"Objective-C\",\n         \"C\",\n         \"C++\",\n         \"Makefile\",\n         \"M4\",\n         \"CSS\",\n         \"JavaScript\",\n         \"GLSL\",\n         \"CMake\",\n         \"Lua\",\n         \"Objective-C++\",\n         \"Mathematica\",\n         \"C#\",\n         \"Haxe\",\n         \"TeX\",\n         \"Cuda\",\n         \"Processing\",\n         \"Ruby\",\n         \"QMake\"\n      ],\n      \"location\": \"New York, NY\",\n      \"name\": \"Jesse Talavera-Greenberg\",\n      \"company\": null,\n      \"github_login\": \"JesseTG\",\n      \"github_tags\": [\n         \"awesome-list\",\n         \"awesome\",\n         \"qt-framework\",\n         \"qt-applications\",\n         \"qt\",\n         \"list\",\n         \"c-plus-plus\",\n         \"opengl\",\n         \"glsl\",\n         \"shader\",\n         \"cpp\",\n         \"graphics\",\n         \"graphics-programming\",\n         \"graphics-engine\",\n         \"box2d\",\n         \"documentation\",\n         \"mirror\",\n         \"buzzer\",\n         \"web-app\",\n         \"dumb\",\n         \"tutorial\",\n         \"lecture\",\n         \"latex\",\n         \"slides\",\n         \"presentation\",\n         \"cuda\",\n         \"cuda-by-example\",\n         \"c\",\n         \"gpgpu\"\n      ],\n      \"email\": \"jessetalavera@aol.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"Elixir\",\n         \"Swift\",\n         \"Shell\",\n         \"Go\",\n         \"Brainfuck\",\n         \"C\",\n         \"ApacheConf\",\n         \"PHP\",\n         \"VimL\",\n         \"PowerShell\",\n         \"Batchfile\",\n         \"Makefile\",\n         \"Erlang\",\n         \"CSS\"\n      ],\n      \"location\": \"Athens\",\n      \"name\": \"Spiros Gerokostas\",\n      \"company\": \"Binary Level\",\n      \"github_login\": \"sger\",\n      \"github_tags\": [\n         \"programming-elixir\",\n         \"elixir\",\n         \"programming-erlang\",\n         \"erlang\",\n         \"programming-language\",\n         \"books\",\n         \"elixir-books\",\n         \"otp\",\n         \"erlang-vm\",\n         \"elixir-school\",\n         \"elixir-lang\",\n         \"elixir-dropbox\",\n         \"elixir-programming-language\",\n         \"api\",\n         \"api-client\",\n         \"dropbox\",\n         \"dropbox-v2\",\n         \"fault-tolerance\",\n         \"apns\",\n         \"notification-service\",\n         \"apple\",\n         \"ios\",\n         \"golang\",\n         \"go\",\n         \"http2\",\n         \"apns2\",\n         \"channels\",\n         \"hash\",\n         \"go-programming\"\n      ],\n      \"email\": \"spiros.gerokostas@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Shell\",\n         \"Vim script\",\n         \"Python\",\n         \"Java\",\n         \"Makefile\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Tcl\",\n         \"PowerShell\",\n         \"Batchfile\",\n         \"C\",\n         \"Assembly\",\n         \"C++\"\n      ],\n      \"location\": \"__switzerland__\",\n      \"name\": \"Timo Furrer\",\n      \"company\": null,\n      \"github_login\": \"timofurrer\",\n      \"github_tags\": [\n         \"vimrc\",\n         \"vim-configuration\",\n         \"personal\",\n         \"hslu\",\n         \"ad\",\n         \"algorithmen\",\n         \"datenstrukturen\",\n         \"exercise\",\n         \"python-asyncio\",\n         \"coroutines\",\n         \"python\",\n         \"asyncio\",\n         \"awesome\",\n         \"awesome-list\",\n         \"python3\",\n         \"terminal\",\n         \"string\",\n         \"colors\",\n         \"linux\",\n         \"windows\",\n         \"macosx\",\n         \"console\",\n         \"ansi\",\n         \"linux-kernel\",\n         \"linux-kernel-module\",\n         \"fun\",\n         \"cpu\",\n         \"heart\",\n         \"heartbeat\",\n         \"device\"\n      ],\n      \"email\": \"tuxtimo@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CMake\",\n         \"C++\",\n         \"Cuda\",\n         \"Protocol Buffer\",\n         \"M\",\n         \"Lua\",\n         \"Python\",\n         \"OpenEdge ABL\",\n         \"Shell\",\n         \"Matlab\",\n         \"Makefile\",\n         \"HTML\",\n         \"Java\",\n         \"Scala\",\n         \"C\",\n         \"TeX\",\n         \"Mercury\",\n         \"JavaScript\",\n         \"Stata\",\n         \"Lex\",\n         \"Objective-C\",\n         \"Prolog\",\n         \"CSS\",\n         \"M4\",\n         \"Clean\",\n         \"Groff\",\n         \"Fortran\",\n         \"Tcl\",\n         \"Perl6\",\n         \"Groovy\",\n         \"Perl\",\n         \"XSLT\",\n         \"Scheme\",\n         \"Batchfile\"\n      ],\n      \"location\": \"Austin, TX\",\n      \"name\": \"Harshal Priyadarshi\",\n      \"company\": \"University of Texas at Austin\",\n      \"github_login\": \"harpribot\",\n      \"github_tags\": \"null\",\n      \"email\": \"harshal.priyadarshi@utexas.edu\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"XSLT\",\n         \"Groovy\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Java\",\n         \"Batchfile\",\n         \"HTML\",\n         \"CSS\",\n         \"Python\",\n         \"PHP\",\n         \"Smarty\",\n         \"Makefile\",\n         \"Erlang\",\n         \"M4\",\n         \"Perl\"\n      ],\n      \"location\": \"Belarus\",\n      \"name\": \"Aliaksandr Belik\",\n      \"company\": null,\n      \"github_login\": \"aliesbelik\",\n      \"github_tags\": [\n         \"awesome-jmeter\",\n         \"awesome\",\n         \"jmeter\",\n         \"jmeter-plugin\",\n         \"load-testing\",\n         \"performance-measurement\"\n      ],\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"Shell\",\n         \"Ruby\",\n         \"Standard ML\",\n         \"CoffeeScript\",\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Makefile\",\n         \"Nginx\",\n         \"VimL\",\n         \"PHP\",\n         \"Arduino\",\n         \"SaltStack\"\n      ],\n      \"location\": \"Groningen, the Netherlands\",\n      \"name\": \"Henk\",\n      \"company\": \"@wearespindle \",\n      \"github_login\": \"hbokh\",\n      \"github_tags\": [\n         \"saltstack\",\n         \"configuration-management\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"drone-ci\",\n         \"docker\",\n         \"getting-started\",\n         \"typo3\",\n         \"typo3-cms\",\n         \"nginx\",\n         \"vagrant\",\n         \"ansible-tutorial\",\n         \"mysql-ha\"\n      ],\n      \"email\": \"hbokhoven@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"Shell\",\n         \"Ruby\",\n         \"CSS\",\n         \"PHP\",\n         \"PowerShell\",\n         \"ApacheConf\"\n      ],\n      \"location\": \"Toronto, Canada\",\n      \"name\": \"Adnan M.Sagar, PhD\",\n      \"company\": \"Web Semantics, Inc.\",\n      \"github_login\": \"websemantics\",\n      \"github_tags\": [\n         \"atom\",\n         \"styleguide\",\n         \"ui\",\n         \"ui-components\",\n         \"webpack2\",\n         \"pyrocms\",\n         \"pyrocms3\",\n         \"ant\",\n         \"deployer\",\n         \"pyrocms-extenstions\",\n         \"puppeteer\",\n         \"codepen\",\n         \"web-scraping\",\n         \"headless-chrome\"\n      ],\n      \"email\": \"adnan@websemantics.ca\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Arduino\",\n         \"AutoHotkey\",\n         \"PowerShell\",\n         \"CMake\",\n         \"C++\",\n         \"C\",\n         \"Python\",\n         \"Batchfile\",\n         \"Makefile\",\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Go\",\n         \"Ruby\",\n         \"Java\",\n         \"Objective-C\",\n         \"AppleScript\",\n         \"C#\",\n         \"XSLT\",\n         \"GCC Machine Description\",\n         \"PHP\",\n         \"Perl\"\n      ],\n      \"location\": \"Seattle, WA\",\n      \"name\": \"Sergei Vorobev\",\n      \"company\": \"@Dropbox\",\n      \"github_login\": \"vors\",\n      \"github_tags\": \"null\",\n      \"email\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"VimL\",\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"ApacheConf\",\n         \"PHP\"\n      ],\n      \"location\": null,\n      \"name\": \"Nicole Saidy\",\n      \"company\": null,\n      \"github_login\": \"nicolesaidy\",\n      \"github_tags\": [\n         \"design\",\n         \"webdesign\",\n         \"ui-design\",\n         \"ux-design\"\n      ],\n      \"email\": \"nicolesaidy@gmail.com\",\n      \"stackoverflow_login\": \"null\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "[\n   {\n      \"email\": \"sindresorhus@gmail.com\",\n      \"name\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_login\": \"sindresorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "         \"HTML\",\n         \"Swift\"\n      ],\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "      \"stackoverflow_login\": \"Sindre Sorhus\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"github_login\": \"t27\",\n      \"location\": \"India\",\n      \"github_language\": [\n         \"CSS\",\n         \"PHP\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Jupyter Notebook\",\n         \"Python\",\n         \"Shell\",\n         \"C++\",\n         \"IDL\",\n         \"Java\",\n         \"Arduino\",\n         \"Processing\",\n         \"C\",\n         \"Batchfile\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "         \"C#\",\n         \"QMake\"\n      ],\n      \"github_tags\": \"null\",\n      \"stackoverflow_login\": \"Tarang Shah\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Lukas Michelbacher\",\n      \"company\": null,\n      \"github_login\": \"lmichelbacher\",\n      \"location\": \"Edinburgh\",\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"PHP\",\n         \"Shell\",\n         \"JavaScript\",\n         \"Python\",\n         \"CSS\",\n         \"C++\",\n         \"PowerShell\",\n         \"C\",\n         \"Makefile\"\n      ],\n      \"github_tags\": \"null\",\n      \"stackoverflow_login\": [\n         \"355274_1.0\"\n      ]\n   },\n   {\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"name\": \"Kazhnuz\",\n      \"company\": null,\n      \"github_login\": \"Kazhnuz\",\n      \"location\": null,\n      \"github_language\": [\n         \"CSS\",\n         \"Shell\",\n         \"Makefile\",\n         \"M4\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"aleksandar@r3bl.me\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"company\": null,\n      \"github_login\": \"aleksandar-todorovic\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/awesome_match_5.json",
      "code_snippet": "         \"desktop-environment\",\n         \"x-window-manager\"\n      ],\n      \"stackoverflow_login\": [\n         \"8766_0.74\",\n         \"120206_0.78\",\n         \"3666431_0.93\"\n      ]\n   },\n   {\n      \"email\": null,\n      \"name\": \"Kedan Li\",\n      \"company\": null,\n      \"github_login\": \"likedan\",\n      \"location\": null,\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Makefile\",\n         \"Shell\",\n         \"Ruby\",\n         \"Swift\",\n         \"CSS\",\n         \"JavaScript\",\n         \"C\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/git_info_awesome.json",
      "code_snippet": "",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/login_list.json",
      "code_snippet": "[\"sindresorhus\",\"t27\",\"lmichelbacher\",\"Kazhnuz\",\"aleksandar-todorovic\",\"likedan\"]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "{\n   \"dojo\": [\n      \"dojo-store\",\n      \"dojo-layer\",\n      \"dojo.stateful\",\n      \"dojo-require\",\n      \"dojo.data\",\n      \"dijit\",\n      \"dojox\",\n      \"dojo\"\n   ],\n   \"security\": [\n      \"web-security\",\n      \"vulnerabilities\",\n      \"vulnerability\",\n      \"secure\",\n      \"security\"\n   ],\n   \"shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\",\n      \"shell\"\n   ],\n   \"module\": [\n      \"modules\",\n      \"module\"\n   ],\n   \"C#\": [\n      \".cs-file\",\n      \"csharp\",\n      \"visual-c#\",\n      \"c#-language\",\n      \"c#.net\",\n      \"c-sharp\",\n      \"C#\"\n   ],\n   \"aws-lambda\": [\n      \"amazon-lambda\",\n      \"aws-lambda\"\n   ],\n   \"XSLT\": [\n      \"xml-transform\",\n      \"xslt-2.0-processors\",\n      \"xsltprocessor\",\n      \"xsltproc\",\n      \"xsltransform\",\n      \"xsl\",\n      \"XSLT\"\n   ],\n   \"translation\": [\n      \"t9n\",\n      \"translation\"\n   ],\n   \"java-8\": [\n      \"jdk1.8\",\n      \"jdk8\",\n      \"java-8\"\n   ],\n   \"Matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\",\n      \"Matlab\"\n   ],\n   \"r\": [\n      \"r-language\",\n      \"rstats\",\n      \"r\"\n   ],\n   \"JavaScript\": [\n      \"javascript-module\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"javascript-execution\",\n      \".js\",\n      \"ecmascript\",\n      \"js\",\n      \"JavaScript\"\n   ],\n   \"csv\": [\n      \"tsv\",\n      \"comma-separated\",\n      \".csv\",\n      \"csv\"\n   ],\n   \"filter\": [\n      \"filters\",\n      \"filter\"\n   ],\n   \"nlp\": [\n      \"language-processing\",\n      \"computational-linguistics\",\n      \"natural-language\",\n      \"natural-language-process\",\n      \"nlp\"\n   ],\n   \"tags\": [\n      \"tag\",\n      \"tags\"\n   ],\n   \"Python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\",\n      \"Python\"\n   ],\n   \"api\": [\n      \"apis\",\n      \"api\"\n   ],\n   \"resources\": [\n      \"resource\",\n      \"resources\"\n   ],\n   \"reddit\": [\n      \"reddit-api\",\n      \"reddit\"\n   ],\n   \"textures\": [\n      \"texture\",\n      \"textures\"\n   ],\n   \"bots\": [\n      \"bot\",\n      \"bots\"\n   ],\n   \"cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\",\n      \"cuda\"\n   ],\n   \"jmeter\": [\n      \"apache-jmeter\",\n      \"jmeter\"\n   ],\n   \"css3\": [\n      \"css-text-shadow\",\n      \"css-text-overflow\",\n      \"css-box-shadow\",\n      \"css-border-radius\",\n      \"css-border-image\",\n      \"css3\"\n   ],\n   \"go\": [\n      \"golang\",\n      \"go-language\",\n      \"go\"\n   ],\n   \"build\": [\n      \"builds\",\n      \"build\"\n   ],\n   \"learning\": [\n      \"learn\",\n      \"learning\"\n   ],\n   \"Processing\": [\n      \"processing.org\",\n      \"Processing\"\n   ],\n   \"Shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\",\n      \"Shell\"\n   ],\n   \"penetration-testing\": [\n      \"pen-testing\",\n      \"penetration-testing\"\n   ],\n   \"audio\": [\n      \"sounds\",\n      \"sound-api\",\n      \"sound\",\n      \"audio\"\n   ],\n   \"questions\": [\n      \"question\",\n      \"questions\"\n   ],\n   \"matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\",\n      \"matlab\"\n   ],\n   \"generator\": [\n      \"generators\",\n      \"generator\"\n   ],\n   \"bookmarks\": [\n      \"bookmark\",\n      \"bookmarks\"\n   ],\n   \"testing\": [\n      \"test\",\n      \"tests\",\n      \"software-testing\",\n      \"testing\"\n   ],\n   \"database\": [\n      \"dbms\",\n      \"database-structure\",\n      \"db\",\n      \"databases\",\n      \"database\"\n   ],\n   \"Cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\",\n      \"Cuda\"\n   ],\n   \"audio-player\": [\n      \"audio-playing\",\n      \"audio-player\"\n   ],\n   \"css\": [\n      \"css-font-weight\",\n      \"dynamic-css\",\n      \"css-borders\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"css-attributes\",\n      \"css-background-image\",\n      \"css-layout\",\n      \"cascading-style-sheet\",\n      \"css\"\n   ],\n   \"deployment\": [\n      \"deploy\",\n      \"deployment\"\n   ],\n   \"web-scraping\": [\n      \"webpagescraping\",\n      \"web-scraping\"\n   ],\n   \"slice\": [\n      \"string-slice\",\n      \"array-slice\",\n      \"slices\",\n      \"slicing\",\n      \"slice\"\n   ],\n   \"vim\": [\n      \"viml\",\n      \"vimscript\",\n      \"gvim\",\n      \"gvimrc\",\n      \"vimrc\",\n      \"vim\"\n   ],\n   \"string\": [\n      \"empty-string\",\n      \"str\",\n      \"string-manipulation\",\n      \"strings\",\n      \"string\"\n   ],\n   \"HTML\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\",\n      \"HTML\"\n   ],\n   \"minify\": [\n      \"minification\",\n      \"minifier\",\n      \"minify\"\n   ],\n   \"python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\",\n      \"python\"\n   ],\n   \"Racket\": [\n      \"drracket\",\n      \"plt-scheme\",\n      \"drscheme\",\n      \"Racket\"\n   ],\n   \"jquery\": [\n      \"jquery-css\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"toggleclass\",\n      \"addclass\",\n      \"jquery-live\",\n      \"jquery-core\",\n      \"jquery\"\n   ],\n   \"website\": [\n      \"websites\",\n      \"website\"\n   ],\n   \"dsl\": [\n      \"domain-specific-languages\",\n      \"dsl\"\n   ],\n   \"documentation\": [\n      \"docs\",\n      \"documentation\"\n   ],\n   \"prototype\": [\n      \"prototypes\",\n      \"prototype\"\n   ],\n   \"ansible\": [\n      \"ansible-playbook\",\n      \"ansible\"\n   ],\n   \"io\": [\n      \"input-output\",\n      \"io\"\n   ],\n   \"challenge\": [\n      \"code-challenge\",\n      \"challenge\"\n   ],\n   \"jobs\": [\n      \"job\",\n      \"jobs\"\n   ],\n   \"usb\": [\n      \"usbdevice\",\n      \"usb\"\n   ],\n   \"windows\": [\n      \"windows-application\",\n      \"windows-programming\",\n      \"windows\"\n   ],\n   \"math\": [\n      \"arithmetic\",\n      \"mathematical\",\n      \"maths\",\n      \"mathematics\",\n      \"math\"\n   ],\n   \"ubuntu\": [\n      \"lubuntu\",\n      \"kubuntu\",\n      \"xubuntu\",\n      \"ubuntu\"\n   ],\n   \"C++\": [\n      \"cpp\",\n      \"C++\"\n   ],\n   \"graphics\": [\n      \"computer-graphics\",\n      \"graphics\"\n   ],\n   \"angular\": [\n      \"angular4.x\",\n      \"angular4\",\n      \"angular2\",\n      \"angular\"\n   ],\n   \"html5\": [\n      \"time-tag\",\n      \"xhtml5\",\n      \"html5\"\n   ],\n   \"fun\": [\n      \"humour\",\n      \"humor\",\n      \"fun\"\n   ],\n   \"keyboard\": [\n      \"keyboards\",\n      \"keyboard\"\n   ],\n   \"load-testing\": [\n      \"loadtest\",\n      \"load-testing\"\n   ],\n   \"list\": [\n      \"ilist\",\n      \"lists\",\n      \"list\"\n   ],\n   \"dictionary\": [\n      \"map\",\n      \"dictionaries\",\n      \"dict\",\n      \"dictionary\"\n   ],\n   \"PowerShell\": [\n      \"windows-powershell\",\n      \"PowerShell\"\n   ],\n   \"Java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",\n      \"jdk\",\n      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\",\n      \"Java\"\n   ],\n   \"terminal\": [\n      \"terminals\",\n      \"terminal\"\n   ],\n   \"data-structures\": [\n      \"data-structure\",\n      \"data-structures\"\n   ],\n   \"binary\": [\n      \"binary-system\",\n      \"binary-number\",\n      \"binary\"\n   ],\n   \"html\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\",\n      \"html\"\n   ],\n   \"import\": [\n      \"imports\",\n      \"importing\",\n      \"import\"\n   ],\n   \"icons\": [\n      \"icon\",\n      \"icons\"\n   ],\n   \"spring\": [\n      \"spring-framework\",\n      \"spring\"\n   ],\n   \"hash\": [\n      \"hashes\",\n      \"hashing\",\n      \"hash\"\n   ],\n   \"javascript\": [\n      \"javascript-module\",\n      \"vanilla-javascript\",\n      \"javascript-runtime\",\n      \"javascript-library\",\n      \"javascript-disabled\",\n      \"javascript-dom\",\n      \"javascript-alert\",\n      \"classic-javascript\",\n      \"javascript-execution\",\n      \".js\",\n      \"ecmascript\",\n      \"js\",\n      \"javascript\"\n   ],\n   \"ios\": [\n      \"ios-sdk\",\n      \"apple-ios\",\n      \"iphone-os\",\n      \"ios\"\n   ],\n   \"mysql\": [\n      \"mysqldump\",\n      \"mysqlclient\",\n      \"mysqld\",\n      \"mysql-table\",\n      \"mysql-server\",\n      \"mysql-query\",\n      \"my-sql\",\n      \"mysql\"\n   ],\n   \"svg\": [\n      \"svg-path\",\n      \"svgz\",\n      \"svg\"\n   ],\n   \"PHP\": [\n      \"php-include\",\n      \"phtml\",\n      \"php-fpm\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"php-frameworks\",\n      \"php5\",\n      \"php-date\",\n      \"php-oop\",\n      \"PHP\"\n   ],\n   \"full-text-search\": [\n      \"fulltext\",\n      \"fts\",\n      \"fulltext-searching\",\n      \"full-text-search\"\n   ],\n   \"postgresql\": [\n      \"sql-postgres\",\n      \"pgsql\",\n      \"postgres\",\n      \"postgresql\"\n   ],\n   \"stream\": [\n      \"streams\",\n      \"stream\"\n   ],\n   \"events\": [\n      \"event\",\n      \"events\"\n   ],\n   \"web\": [\n      \"www\",\n      \"web\"\n   ],\n   \"less\": [\n      \"lesscss\",\n      \"less\"\n   ],\n   \"colors\": [\n      \"colours\",\n      \"colour\",\n      \"color\",\n      \"colors\"\n   ],\n   \"Clojure\": [\n      \"cljx\",\n      \"cljc\",\n      \"clj\",\n      \"Clojure\"\n   ],\n   \"search\": [\n      \"searching\",\n      \"search\"\n   ],\n   \"Go\": [\n      \"golang\",\n      \"go-language\",\n      \"Go\"\n   ],\n   \"Swift\": [\n      \"swift1.2\",\n      \"swift-ios\",\n      \"swift-language\",\n      \"Swift\"\n   ],\n   \"p2p\": [\n      \"peer-to-peer\",\n      \"p2p\"\n   ],\n   \"jni\": [\n      \"java-native-interface\",\n      \"jni\"\n   ],\n   \"elixir\": [\n      \"elixir-lang\",\n      \"elixir\"\n   ],\n   \"Makefile\": [\n      \"make\",\n      \"makefiles\",\n      \"Makefile\"\n   ],\n   \"swift3\": [\n      \"swift3.1\",\n      \"swift3.0.2\",\n      \"swift3.0.1\",\n      \"swift3.0\",\n      \"swift3\"\n   ],\n   \"shader\": [\n      \"shaders\",\n      \"shader\"\n   ],\n   \"CoffeeScript\": [\n      \"coffee\",\n      \"CoffeeScript\"\n   ],\n   \"animation\": [\n      \"scaleanimation\",\n      \"rotateanimation\",\n      \"animated\",\n      \"animations\",\n      \"animation\"\n   ],\n   \"redirect\": [\n      \"redirecting\",\n      \"redirection\",\n      \"redirects\",\n      \"redirect\"\n   ],\n   \"F#\": [\n      \"fsharp\",\n      \"F#\"\n   ],\n   \"bash\": [\n      \"bash-function\",\n      \".bash-profile\",\n      \"bash-variables\",\n      \"bash-alias\",\n      \".bashrc\",\n      \"bashrc\",\n      \"bash-script\",\n      \"bash\"\n   ],\n   \"networking\": [\n      \"networks\",\n      \"network\",\n      \"networking\"\n   ],\n   \"twitter\": [\n      \"twitter-api\",\n      \"twitter\"\n   ],\n   \"java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\",\n      \"java\"\n   ],\n   \"pipe\": [\n      \"pipes\",\n      \"pipe\"\n   ],\n   \"levenshtein-distance\": [\n      \"levenstein\",\n      \"levenshtein\",\n      \"levenshtein-distance\"\n   ],\n   \"Assembly\": [\n      \"assembly-language\",\n      \"assembler\",\n      \"asm\",\n      \"Assembly\"\n   ],\n   \"Elixir\": [\n      \"elixir-lang\",\n      \"Elixir\"\n   ],\n   \"CSS\": [\n      \"css-font-weight\",\n      \"dynamic-css\",\n      \"css-borders\",\n      \"css-reset\",\n      \"css-menu\",\n      \"font-weight\",\n      \"css-box-model\",\n      \"inline-block\",\n      \"alternate-stylesheets\",\n      \"css-overflow\",\n      \"css-line-height\",\n      \"css-display\",\n      \"css-validation\",\n      \"style.css-template-file\",\n      \"box-model\",\n      \"max-width\",\n      \"max-height\",\n      \"min-width\",\n      \"min-height\",\n      \"css-centering\",\n      \"css-inheritance\",\n      \"css-columns\",\n      \"css2\",\n      \"css-height\",\n      \"css-classes\",\n      \"css-attributes\",\n      \"css-background-image\",\n      \"css-layout\",\n      \"cascading-style-sheet\",\n      \"CSS\"\n   ],\n   \"deprecated\": [\n      \"deprecation\",\n      \"deprecated\"\n   ],\n   \"visualization\": [\n      \"visualisation\",\n      \"visualization\"\n   ],\n   \"github-pages\": [\n      \"gh-pages\",\n      \"github-pages\"\n   ],\n   \"php\": [\n      \"php-include\",\n      \"phtml\",\n      \"php-fpm\",\n      \"php-session\",\n      \"php-readfile\",\n      \"php-functions\",\n      \"php-cgi\",\n      \"php-mail\",\n      \"php-errors\",\n      \"php-cli\",\n      \"php.ini\",\n      \"hypertext-preprocessor\",\n      \"php-frameworks\",\n      \"php5\",\n      \"php-date\",\n      \"php-oop\",\n      \"php\"\n   ],\n   \"web-crawler\": [\n      \"spider\",\n      \"crawl\",\n      \"crawling\",\n      \"crawler\",\n      \"webcrawling\",\n      \"web-spider\",\n      \"webspiders\",\n      \"web-crawler\"\n   ],\n   \"Objective-C\": [\n      \"objc\",\n      \"Objective-C\"\n   ],\n   \"ant\": [\n      \"apache-ant\",\n      \"ant\"\n   ],\n   \"android\": [\n      \"android-framework\",\n      \"android-ui\",\n      \"android-application\",\n      \"android-device\",\n      \"android-api\",\n      \"android-sdk\",\n      \"android-mobile\",\n      \"android\"\n   ],\n   \"R\": [\n      \"r-language\",\n      \"rstats\",\n      \"R\"\n   ]\n}",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "def get_langtags(user):\n    language = []\n    tags = []\n    print(\"Finding languages and tags used of github user: {}\".format(user[\"github_login\"]))\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\"github_login\"])\n    repos = request_url(repo_api,30)\n\n    for item in repos:\n        #can be  parallel tags & language\n        repo_name = item[\"name\"]\n        repo_tags = requests.get('https://api.github.com/repos/{}/{}/topics?'\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    cTime = time.time()\n    print(\"Getting info of users in the commit history...\")\n    for item in developer_info:\n        ### For a list of developers, find their url\n        author_api = (item[\"author\"][\"url\"] if not item[\"author\"] == None else \"null\")\n        committer_api = (item[\"committer\"][\"url\"] if not item[\"committer\"] == None else \"null\")",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "\ndef search_info(developer_login):\n    Info = []\n    print(\"Getting info of users in the name list...\")\n    cTime = time.time()\n    for login in developer_login:\n        api = 'https://api.github.com/users/{}'.format(login)\n        developer_info = request_url(api,100)\n        developer_info = extract_dict(developer_info)\n        Info.append(developer_info)\n    print(time.time() - cTime)\n\n    git_info = []\n    cTime = time.time()\n    for git_developer in Info:\n        git_developer = get_langtags(git_developer)\n        git_info.append(git_developer)\n    print(time.time() - cTime)\n    return git_info\n\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "               '&site=stackoverflow'.format(name,name)\n    info = request_api(user_api)\n\n    user_info = info[\"items\"]\n    if not user_info == None:\n        for item in user_info:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "            if 'https://github.com/' in href:\n                git_account = re.findall('href\\=\\\"https\\:\\/\\/github\\.com\\/(.*?)\\\"', href, re.S)\n                git_account = git_account[0]\n        if not git_account == None:\n            return git_account\n        else:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\n    tags_git = git_developer[\"github_tags\"]\n    tags_stk = stk_developer[\"tags\"]\n\n    match_count = git_count = 0\n    if not tags_stk == [] and not tags_git == \"null\":\n        for tag in tags_git:\n            git_count = git_count + 1\n            if tag in syn_list:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "                    if stk_tags in tags_stk:\n                        match_count = match_count + 1\n                        break\n\n            elif tag in tags_stk:\n                match_count = match_count + 1\n    else:\n        match_count = 0\n        git_count = 1\n\n    tag_score = match_count / git_count * 2\n    final_score = round(location_score + tag_score, 2)\n\n    if final_score >= 0.7:\n        match_name = str(stk_developer[\"user_id\"]) + \"_\" + str(final_score)\n        return match_name\n    else:\n        return []",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\n            if not stk_info == default_info:\n                print(\"The possible info of Stack Overflow user {} is {}\".format(name, stk_info))\n                cTime = time.time()\n\n                for stk_developer in stk_info:\n                    user_id = stk_developer['user_id']",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "\n                    if git_account == git_developer[\"github_login\"]:\n                        git_developer[\"stackoverflow_login\"] = stk_developer[\"display_name\"]\n                        print(time.time() - cTime)\n                        break\n\n                # Continue to establish mapping if the possible match has been found?\n                if git_developer[\"stackoverflow_login\"] == \"null\" or git_developer[\"stackoverflow_login\"] == []:\n                    git_developer[\"stackoverflow_login\"] = []\n                    print(\"Mapping the users with tags and location...\")\n\n                    cTime = time.time()\n                    for stk_developer in stk_info:\n                        developer_tags = get_tags(stk_developer)\n                        stk_developer[\"tags\"] = developer_tags\n                        match_name = match_info(git_developer,stk_developer,syn_list)\n                        if not match_name == []:\n                            git_developer[\"stackoverflow_login\"].append(match_name)\n                    print(time.time() - cTime)\n                else:\n                    break\n\n            # else:\n            #     print(\"The Stack Overflow info of possible username {} for github user {} can not be found\".format(name,git_developer[\"name\"]))\n\n\n\n        if not git_developer[\"stackoverflow_login\"] == \"null\" and not git_developer[\"stackoverflow_login\"] == []:\n            print(\"The Stack Overflow display_name for github user {}: {}\".format(git_developer[\"name\"],git_developer['stackoverflow_login']))\n        else:\n            git_developer[\"stackoverflow_login\"] = \"null\"\n            print(\"The Stack Overflow display_name for github user {} not found\".format(git_developer[\"name\"]))\n\n        new_info.append(git_developer)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "import time\nimport json\nimport types\nimport sys\nimport os\n\nInfo_path = sys.path[0] + \"/Info\"\nif not os.path.exists(Info_path):\n    os.mkdir(Info_path)\n\nname_file = Info_path + '/login_list.json'\nname_list = open(name_file,encoding='utf-8')\nname_list = json.load(name_list)\ngit_info = gt.search_info(name_list)\n\ngit_api = 'https://api.github.com/repos/{}/commits'.format('sindresorhus/awesome')\n# git_info = gt.get_info(git_api)\n\ninfo_file = Info_path + '/awesome_match_5.json'\nsyn_file = Info_path + '/syn_list.json'\ncTime = time.time()\nprint(\"Dumping the info...\")\nwith open(info_file, 'w') as ctfile:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 13:48:03 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "match_info = st.match_account(git_info,syn_list)\nprint(time.time() - cTime)\n\nfor item in match_info:\n    if not item[\"stackoverflow_login\"] == \"null\":\n        stk_count = stk_count + 1\n    total_count = total_count +1\n\nprint(\"\\n The number of developers with Stack Overflow account is {}\".format(stk_count))\nprint(\"The number of developers is {}\".format(total_count))\nprint(\"Ratio:{}\".format(round(stk_count/total_count,4)))\n\nprint(\"Saving the results of matching...\")\ncTime = time.time()\nwith open(info_file, 'w') as ctfile:\n    json.dump(match_info, ctfile, indent=3)\nprint(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 12:17:00 +0800",
      "file": "git/history/main.py",
      "code_snippet": "# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUSAGE: %(program)s input_code_file output_dir <--fsearch|--search|--mapping>\n\"\"\"\n\nimport json",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:17:00 +0800",
      "file": "git/history/main.py",
      "code_snippet": "    # check and process input arguments\n    if len(sys.argv) != 4:\n        print(len(sys.argv))\n        raise SystemExit(\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\")\n    input_file, output_dir, func_argv = sys.argv[1:4]\n    if not os.path.exists(output_dir):\n        try:",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:17:00 +0800",
      "file": "git/history/main.py",
      "code_snippet": "        search_commit_history.print_match_result(search_result)\n    else:\n        print(\"Wrong argument!\")\n        print(\"Usage: python main.py input_code_file output_dir <--fsearch|--search|--mapping>\")\n\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "        snippet_remain = regex_remain.findall(line)\n        if len(snippet_plus):\n            snippet = snippet_plus\n        # elif len(snippet_minus):\n            # snippet = snippet_minus\n        elif len(snippet_remain):\n            snippet = snippet_remain\n        else:\n            snippet = str()\n        if regex_pause.findall(line):\n            break\n        if len(snippet):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "    return snippet_list\n\n\ndef get_date(line):\n    regex = re.compile(\"date:\\s([0-9\\-:+\\s]*)\\sauthor:\")\n    date = regex.findall(line)\n    return date\n\n\ndef get_change_section(line):\n    regex = re.compile(\"^@@\")\n    if regex.findall(line):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "    else:\n        return 0\n\n\ndef get_line_index(inp):\n    a_start_line_list = list()\n    a_total_line_list = list()\n    b_start_line_list = list()\n    b_total_line_list = list()\n    lines = inp.split(\"\\n\")\n    regex_a_start = re.compile(\"@@\\s-(\\d+),\\d+\\s\")\n    regex_a_total = re.compile(\"@@\\s-\\d+,(\\d+)\\s\")\n    regex_b_start = re.compile(\"\\+(\\d+),\\d+\\s@@\")\n    regex_b_total = re.compile(\"\\+\\d+,(\\d+)\\s@@\")\n    for line in lines:\n        a_start_line = regex_a_start.findall(line)\n        a_total_line = regex_a_total.findall(line)\n        b_start_line = regex_b_start.findall(line)\n        b_total_line = regex_b_total.findall(line)\n        a_start_line_list.extend(a_start_line)\n        a_total_line_list.extend(a_total_line)\n        b_start_line_list.extend(b_start_line)\n        b_total_line_list.extend(b_total_line)\n    return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "              # + \" > \" + outp + \"/log.txt\"\n    input_data = os.popen(command)\n    data = input_data.read()\n    lines = data.split(\"\\n\")\n    for index, line in enumerate(lines):\n        code_dict = dict()",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "            email = get_info.get_email(line)\n            if len(email):\n                commit_author = author[0]\n                commit_email = email[0]\n                commit_date = get_info.get_date(line)\n                if len(commit_date):\n                    commit_date = commit_date[0]\n        elif get_info.get_change_file(line):\n            commit_file = get_info.get_change_file(line)\n            # code_dict['file'] = commit_file[0]\n        elif get_info.get_change_section(line):\n            code_dict['file'] = commit_file[0]\n            code_dict['author'] = commit_author\n            # print(commit_author)\n            code_dict['email'] = commit_email\n            code_dict['commit_date'] = commit_date\n            # print(commit_email)\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n            code_dict['code_snippet'] = \"\\n\".join(code_snippet)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Commit Date: {}\".format(code['commit_date']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        print(code[\"code_snippet\"])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/git_search/search_commit_history.py",
      "code_snippet": "\n\ndef print_match_result(data_list):\n    print('\\033[1;34m')\n    print(\"Found {} match result\".format(len(data_list)))\n    for data in data_list:\n        print('\\033[1;31m')",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 12:11:20 +0800",
      "file": "git/history/git_search/search_commit_history.py",
      "code_snippet": "        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Commit Date: {}\".format(data['commit_date']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        print(data[\"code_snippet\"])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-09 00:15:43 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\nInput: The name of a github repo or a list of github developers' name.\nOutput: A json file which includes the name, login, location, language, tags, email and Stack Overflow dispaly name. \n\nThe script get_info_git.py is used for dumping the developers' name, login, company, location and e-mail.\nThe script get_info_stackoverflow.py is used for dumping the developers' display_name, location and github account.\nThe script name_form.py lists the possible Stack Overflow display_name for a developer found in the github commit history.\nThe script syn_tags.py gets the synonymous tags which can be used in the comparsion of tags between github and Stach Overflow users. \nRun the script main.py and you can get a json file containing developers' info of github and Stack Overflow display_name.\n\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username and location of a developer can be obtained, which means we should list different possible usernames for each user in the commit history. Possible name forms need to be found, and the range of related users can only be narrowed by info of location now, which is insufficient.",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-09 00:15:43 +0800",
      "file": "git/user/README.md",
      "code_snippet": "And then, possible usernames have been replenished. The possible forms of usernames are generated like:\n\nFor name which is 1 word long, like \"Kazhnuz\", the possible name forms are:\nKaz, Kazhnuz, nuz(the last three letters)\nThe reason for this generating method is that the Stack Overflow API for the query of user info can find all users whose name contains the input username, so for the uername that is 1 word long, we can simply split it into several words.\n\nFor name which is 2 words long, like \"Sindre Sorhus\", the possible usernames are:\nSindre Sorhus, sindresorhus, sorhus, sindre\nwhich are generated by different combination of the First and Last name.\n\nFor name which is 3 words long (few cases are like that), like \"Victor Laerte Oliveira\", the possible usernames are:\nlaerte, oliveira, victor\nSimply split the name into three parts can also get a lot of different possible name because the Stack Overflow API returns all users whose name contains the input username.After using the possible names, the matching rate is 31%(22/71).\n\nFor the location and tags commparsion, the score is used to evaluate the similarity between the github and Stack Overflow users. For those whose locations are 100% matched, the location_score is 1; And for those whose locations are partly matched, the levenstein distance, which is recognized as the minimum edit distance, is used to evaluate the similarity between the two locations, and the distance has been normalized for the evaluation. \n\nFor the comparison of tags, the synonymous tags list is used. By finding the number of tags which are related according to the list, the tags_score can be obtained by the ratio of matched_count to total_count, where the total_count is the number of github users' tags.\n\nThe final score is the sum of the location_score and tags_score, and an appropriate threshold should be set to improve the matching rate.\n\nThe next step is to find more synonymous tags, set an appropriate threshold and verify the linkage between the users matched by the score.\n\nAuthor: AlvinZSJ",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/Info/awesome_match.json",
      "code_snippet": "[\n   {\n      \"github_language\": [\n         \"JavaScript\",\n         \"Objective-C\",\n         \"Shell\",\n         \"CSS\",\n         \"TypeScript\",\n         \"HTML\",\n         \"Swift\"\n      ],\n      \"name\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"github_login\": \"sindresorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"email\": \"sindresorhus@gmail.com\",\n      \"github_tags\": [\n         \"alfred\",\n         \"alfred-workflow\",\n         \"macos\",\n         \"dark-mode\",\n         \"alfred3-workflow\",\n         \"applescript\",\n         \"alfy\",\n         \"npm-package\",\n         \"emoji\",\n         \"emoji-picker\",\n         \"emoji-searcher\",\n         \"nodejs\",\n         \"lock\",\n         \"c-language\",\n         \"npm\",\n         \"npms\",\n         \"search\",\n         \"search-engine\",\n         \"alfred-theme\",\n         \"theme\",\n         \"simple\",\n         \"minimalistic\",\n         \"light\",\n         \"framework\",\n         \"javascript\",\n         \"workflow\",\n         \"ama\",\n         \"ask-me-anything\",\n         \"question-answering\",\n         \"meta\",\n         \"personal\",\n         \"ask\",\n         \"open-content\",\n         \"questions\",\n         \"answers\",\n         \"questions-and-answers\",\n         \"list\",\n         \"awesome\",\n         \"awesome-list\",\n         \"deprecated\",\n         \"twitter\",\n         \"electron\",\n         \"electron-app\"\n      ],\n      \"stackoverflow_login\": \"Sindre Sorhus\"\n   },\n   {\n      \"github_language\": [\n         \"HTML\",\n         \"JavaScript\",\n         \"PHP\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"Jupyter Notebook\",\n         \"C++\",\n         \"IDL\",\n         \"Arduino\",\n         \"Java\",\n         \"Processing\",\n         \"C\",\n         \"Batchfile\",\n         \"CMake\",\n         \"GLSL\",\n         \"Scheme\",\n         \"Makefile\",\n         \"Prolog\",\n         \"XSLT\",\n         \"C#\",\n         \"QMake\"\n      ],\n      \"name\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"github_login\": \"t27\",\n      \"location\": \"India\",\n      \"email\": null,\n      \"github_tags\": \"null\",\n      \"stackoverflow_login\": \"Tarang Shah\"\n   },\n   {\n      \"github_language\": [\n         \"Emacs Lisp\",\n         \"Shell\",\n         \"JavaScript\",\n         \"Python\",\n         \"PHP\",\n         \"CSS\",\n         \"PowerShell\",\n         \"C++\",\n         \"C\",\n         \"Makefile\"\n      ],\n      \"name\": \"Lukas Michelbacher\",\n      \"company\": null,\n      \"github_login\": \"lmichelbacher\",\n      \"location\": \"Edinburgh\",\n      \"email\": null,\n      \"github_tags\": \"null\",\n      \"stackoverflow_login\": \"lmichelbacher_1.0\"\n   },\n   {\n      \"github_language\": [\n         \"M4\",\n         \"Shell\",\n         \"JavaScript\",\n         \"Makefile\",\n         \"CSS\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"name\": \"Kazhnuz\",\n      \"company\": null,\n      \"github_login\": \"Kazhnuz\",\n      \"location\": null,\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"github_tags\": [\n         \"awesome\",\n         \"awesome-list\",\n         \"gnome\",\n         \"applications\",\n         \"gnome-shell-extension\",\n         \"gtk-theme\",\n         \"css\",\n         \"html\",\n         \"bootstrap\",\n         \"icons\",\n         \"faenza\",\n         \"linux\",\n         \"bootstrap3\",\n         \"css3\",\n         \"html5\",\n         \"education\",\n         \"ressources-educatives\",\n         \"logiciels\",\n         \"libre\",\n         \"culture-libre\"\n      ],\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"company\": null,\n      \"github_login\": \"aleksandar-todorovic\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"email\": \"aleksandar@r3bl.me\",\n      \"github_tags\": [\n         \"automation\",\n         \"home-automation\",\n         \"web-scraping\",\n         \"awesome-list\",\n         \"awesome\",\n         \"list\",\n         \"c\",\n         \"linux\",\n         \"linux-distribution\",\n         \"desktop-environment\",\n         \"x-window-manager\"\n      ],\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"github_language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Shell\",\n         \"Makefile\",\n         \"Ruby\",\n         \"Swift\",\n         \"JavaScript\",\n         \"C\",\n         \"CSS\",\n         \"C++\",\n         \"Erlang\"\n      ],\n      \"name\": \"Kedan Li\",\n      \"company\": null,\n      \"github_login\": \"likedan\",\n      \"location\": null,\n      \"email\": null,\n      \"github_tags\": [\n         \"coreml\",\n         \"coreml-model\",\n         \"apple\",\n         \"machine-learning\",\n         \"curated-list\",\n         \"coreml-framework\",\n         \"coreml-models\",\n         \"coremltools\",\n         \"awesome-list\",\n         \"models\",\n         \"swift-framework\",\n         \"swift3\",\n         \"swift-library\",\n         \"ios\",\n         \"ios-swift\",\n         \"ios-ui\",\n         \"ios-animation\",\n         \"ios-lib\",\n         \"xib\",\n         \"animation\"\n      ],\n      \"stackoverflow_login\": \"null\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/Info/git_info_awesome.json",
      "code_snippet": "[\n   {\n      \"login\": \"t27\",\n      \"company\": \"BITS Pilani\",\n      \"name\": \"Tarang Shah\",\n      \"location\": \"India\",\n      \"stackoverflow_login\": \"Tarang Shah\",\n      \"email\": null\n   },\n   {\n      \"login\": \"sindresorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"name\": \"Sindre Sorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"stackoverflow_login\": \"Sindre Sorhus\",\n      \"email\": \"sindresorhus@gmail.com\"\n   },\n   {\n      \"login\": \"lmichelbacher\",\n      \"company\": null,\n      \"name\": \"Lukas Michelbacher\",\n      \"location\": \"Edinburgh\",\n      \"language\": [\n         \"Emacs Lisp\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"PHP\",\n         \"Makefile\",\n         \"C++\",\n         \"C\",\n         \"PowerShell\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"Kazhnuz\",\n      \"company\": null,\n      \"name\": \"Kazhnuz\",\n      \"location\": null,\n      \"language\": [\n         \"Makefile\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Shell\",\n         \"M4\",\n         \"HTML\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Python\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"kazhnuz@openmailbox.org\"\n   },\n   {\n      \"login\": \"aleksandar-todorovic\",\n      \"company\": null,\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"language\": [\n         \"CoffeeScript\",\n         \"CSS\",\n         \"Python\",\n         \"Shell\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Ruby\",\n         \"Visual Basic\",\n         \"Vala\",\n         \"PHP\",\n         \"C++\",\n         \"Makefile\",\n         \"Batchfile\",\n         \"Groff\",\n         \"NSIS\",\n         \"Nginx\",\n         \"C\",\n         \"LiveScript\",\n         \"M4\",\n         \"Objective-C\",\n         \"Assembly\",\n         \"eC\",\n         \"Matlab\",\n         \"Perl\",\n         \"XS\",\n         \"Java\",\n         \"Prolog\",\n         \"IDL\",\n         \"Perl6\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"aleksandar@r3bl.me\"\n   },\n   {\n      \"login\": \"likedan\",\n      \"company\": null,\n      \"name\": \"Kedan Li\",\n      \"location\": null,\n      \"language\": [\n         \"Python\",\n         \"HTML\",\n         \"Objective-C\",\n         \"Makefile\",\n         \"Shell\",\n         \"Swift\",\n         \"Ruby\",\n         \"JavaScript\",\n         \"CSS\",\n         \"C\",\n         \"Erlang\",\n         \"C++\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"web-flow\",\n      \"company\": null,\n      \"name\": \"GitHub Web Flow\",\n      \"location\": null,\n      \"language\": [],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"kennethreitz\",\n      \"company\": \"Heroku\",\n      \"name\": \"Kenneth Reitz\",\n      \"location\": \"Winchester, VA\",\n      \"language\": [\n         \"Python\",\n         \"Makefile\",\n         \"Shell\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Smarty\",\n         \"Java\",\n         \"Ruby\",\n         \"Perl\",\n         \"Go\",\n         \"Roff\",\n         \"PowerShell\",\n         \"C\",\n         \"Vim script\",\n         \"Batchfile\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"me@kennethreitz.org\"\n   },\n   {\n      \"login\": \"johnjago\",\n      \"company\": null,\n      \"name\": \"John Jago\",\n      \"location\": \"United States\",\n      \"stackoverflow_login\": \"John Jago\",\n      \"email\": null\n   },\n   {\n      \"login\": \"sfischer13\",\n      \"company\": null,\n      \"name\": \"Stefanus\",\n      \"location\": \"Germany\",\n      \"stackoverflow_login\": \"Stefanus\",\n      \"email\": null\n   },\n   {\n      \"login\": \"ukstv\",\n      \"company\": \"@machinomy \",\n      \"name\": \"Sergey Ukustov\",\n      \"location\": \"Volgograd, Russia\",\n      \"language\": [\n         \"JavaScript\",\n         \"Ruby\",\n         \"Shell\",\n         \"Java\",\n         \"HTML\",\n         \"CSS\",\n         \"Python\",\n         \"Go\",\n         \"Assembly\",\n         \"M4\",\n         \"C\",\n         \"Makefile\",\n         \"C++\",\n         \"NSIS\",\n         \"PureBasic\",\n         \"Batchfile\",\n         \"DTrace\",\n         \"Swift\",\n         \"C#\",\n         \"CMake\",\n         \"Protocol Buffer\",\n         \"PHP\",\n         \"Objective-C\",\n         \"Puppet\",\n         \"PLpgSQL\",\n         \"ApacheConf\",\n         \"TypeScript\",\n         \"Scala\",\n         \"Nginx\",\n         \"XSLT\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"sergey@ukstv.me\"\n   },\n   {\n      \"login\": \"Siilwyn\",\n      \"company\": null,\n      \"name\": \"Selwyn\",\n      \"location\": null,\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Rust\",\n         \"Shell\",\n         \"Vim script\",\n         \"TypeScript\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"hobbyquaker\",\n      \"company\": null,\n      \"name\": \"Sebastian Raff\",\n      \"location\": \"Stuttgart, Germany\",\n      \"language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Batchfile\",\n         \"Arduino\",\n         \"Inno Setup\",\n         \"Tcl\",\n         \"Makefile\",\n         \"Java\",\n         \"Python\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"hq@ccu.io\"\n   },\n   {\n      \"login\": \"stetso\",\n      \"company\": null,\n      \"name\": null,\n      \"location\": null,\n      \"language\": [\n         \"Objective-C++\",\n         \"Python\",\n         \"Batchfile\",\n         \"JavaScript\",\n         \"QMake\",\n         \"Prolog\",\n         \"Makefile\",\n         \"C++\",\n         \"GLSL\",\n         \"NSIS\",\n         \"Lua\",\n         \"CMake\",\n         \"C\",\n         \"Shell\",\n         \"HTML\",\n         \"HLSL\",\n         \"Perl\",\n         \"CSS\",\n         \"Objective-C\",\n         \"Java\",\n         \"PHP\",\n         \"Roff\",\n         \"TypeScript\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"roaldnefs\",\n      \"company\": \"@Warpnet\",\n      \"name\": \"Roald Nefs\",\n      \"location\": \"The Netherlands\",\n      \"stackoverflow_login\": \"Roald Nefs\",\n      \"email\": \"info@roaldnefs.com\"\n   },\n   {\n      \"login\": \"chasegiunta\",\n      \"company\": null,\n      \"name\": \"Chase Giunta\",\n      \"location\": \"Dallas, TX\",\n      \"language\": [\n         \"HTML\",\n         \"PHP\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Shell\",\n         \"Nginx\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"LappleApple\",\n      \"company\": \"Zalando\",\n      \"name\": \"Lauri Apple\",\n      \"location\": \"Berlin; Twitter @lauritaapplez\",\n      \"language\": [\n         \"JavaScript\",\n         \"Scala\",\n         \"HTML\",\n         \"CSS\",\n         \"Ruby\",\n         \"Python\",\n         \"Makefile\",\n         \"PowerShell\",\n         \"C++\",\n         \"Objective-C\",\n         \"CMake\",\n         \"Shell\",\n         \"C\",\n         \"Batchfile\",\n         \"Rust\",\n         \"PLpgSQL\",\n         \"Erlang\",\n         \"Go\",\n         \"Java\",\n         \"M4\",\n         \"Perl\",\n         \"Protocol Buffer\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"meitar\",\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"name\": \"Meitar M.\",\n      \"location\": \"https://cyberbusking.org/\",\n      \"language\": [\n         \"PHP\",\n         \"CSS\",\n         \"JavaScript\",\n         \"HTML\",\n         \"Python\",\n         \"Shell\",\n         \"Ruby\",\n         \"Perl\",\n         \"R\",\n         \"Assembly\",\n         \"C++\",\n         \"Groovy\",\n         \"Objective-C\",\n         \"Java\",\n         \"C\",\n         \"Makefile\",\n         \"Clojure\",\n         \"Scala\",\n         \"Swift\",\n         \"Scilab\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"meitarm+github@gmail.com\"\n   },\n   {\n      \"login\": \"angrykoala\",\n      \"company\": null,\n      \"name\": \"Andr\\u00e9s\",\n      \"location\": \"Madrid & Granada, Spain\",\n      \"stackoverflow_login\": \"angrykoala\",\n      \"email\": \"angrykoala@outlook.es\"\n   },\n   {\n      \"login\": \"ooade\",\n      \"company\": null,\n      \"name\": \"Ademola Adegbuyi\",\n      \"location\": \"Lagos, Nigeria\",\n      \"stackoverflow_login\": \"Ademola Adegbuyi\",\n      \"email\": \"ooade96@gmail.com\"\n   },\n   {\n      \"login\": \"mezod\",\n      \"company\": null,\n      \"name\": \"Joan Boixad\\u00f3s\",\n      \"location\": \"Barcelona, Catalonia\",\n      \"language\": [\n         \"Makefile\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"CSS\",\n         \"HTML\",\n         \"Java\",\n         \"ApacheConf\",\n         \"Smarty\",\n         \"PHP\",\n         \"Shell\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"mezood@gmail.com\"\n   },\n   {\n      \"login\": \"sheonhan\",\n      \"company\": \"@PrincetonUniversity\",\n      \"name\": \"Sheon Han\",\n      \"location\": null,\n      \"stackoverflow_login\": \"Sheon Han\",\n      \"email\": \"sheon.han@gmail.com\"\n   },\n   {\n      \"login\": \"m1guelpf\",\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"name\": \"Miguel Piedrafita\",\n      \"location\": \"Spain\",\n      \"language\": [\n         \"ApacheConf\",\n         \"PHP\",\n         \"Java\",\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\",\n         \"Vue\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"Makefile\",\n         \"Assembly\",\n         \"AutoIt\",\n         \"Gherkin\",\n         \"Python\",\n         \"C#\",\n         \"C\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"github@miguelpiedrafita.com\"\n   },\n   {\n      \"login\": \"davisonio\",\n      \"company\": null,\n      \"name\": \"Craig Davison\",\n      \"location\": \"Hampshire, UK\",\n      \"language\": [\n         \"Lua\",\n         \"Shell\",\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Python\",\n         \"Java\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"craig@davison.io\"\n   },\n   {\n      \"login\": \"vitalets\",\n      \"company\": \"Yandex\",\n      \"name\": \"Vitaliy Potapov\",\n      \"location\": \"Moscow\",\n      \"stackoverflow_login\": \"vitalets\",\n      \"email\": \"noginsk@rambler.ru\"\n   },\n   {\n      \"login\": \"mipmip\",\n      \"company\": \"Lingewoud B.V.\",\n      \"name\": \"Pim Snel\",\n      \"location\": null,\n      \"language\": [\n         \"Ruby\",\n         \"Shell\",\n         \"Swift\",\n         \"C\",\n         \"Objective-C\",\n         \"Python\",\n         \"CSS\",\n         \"ApacheConf\",\n         \"HTML\",\n         \"PHP\",\n         \"JavaScript\",\n         \"AppleScript\",\n         \"Batchfile\",\n         \"C++\",\n         \"Groff\",\n         \"D\",\n         \"Vue\",\n         \"Makefile\",\n         \"VimL\",\n         \"C#\",\n         \"ASP\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"arbox\",\n      \"company\": null,\n      \"name\": \"Andrei Beliankou\",\n      \"location\": \"Germany\",\n      \"stackoverflow_login\": \"Andrei Beliankou\",\n      \"email\": \"arbox@yandex.com\"\n   },\n   {\n      \"login\": \"k4m4\",\n      \"company\": null,\n      \"name\": \"Nikolaos Kamarinakis\",\n      \"location\": \"Athens, Greece\",\n      \"stackoverflow_login\": \"k4m4\",\n      \"email\": null\n   },\n   {\n      \"login\": \"analyticalmonk\",\n      \"company\": \"@socialcopsdev\",\n      \"name\": \"Akash Tandon\",\n      \"location\": \"India\",\n      \"stackoverflow_login\": \"Analytical Monk\",\n      \"email\": \"akashtndn.acm@gmail.com\"\n   },\n   {\n      \"login\": \"faroit\",\n      \"company\": null,\n      \"name\": \"Fabian-Robert St\\u00f6ter\",\n      \"location\": \"Europe\",\n      \"language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"Python\",\n         \"CoffeeScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Fortran\",\n         \"C++\",\n         \"C\",\n         \"Objective-C\",\n         \"Swift\",\n         \"Makefile\",\n         \"TeX\",\n         \"Ruby\",\n         \"Matlab\",\n         \"Julia\",\n         \"Vue\",\n         \"Jupyter Notebook\",\n         \"Batchfile\",\n         \"QMake\",\n         \"OpenEdge ABL\",\n         \"Rebol\",\n         \"Module Management System\",\n         \"Groff\",\n         \"Java\",\n         \"Pascal\",\n         \"Alloy\",\n         \"Clojure\",\n         \"ApacheConf\",\n         \"TypeScript\",\n         \"Nginx\",\n         \"PHP\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"RyanZim\",\n      \"company\": \"@ExodusMovement \",\n      \"name\": \"Ryan Zimmerman\",\n      \"location\": \"East Earl, PA\",\n      \"stackoverflow_login\": \"RyanZim\",\n      \"email\": null\n   },\n   {\n      \"login\": \"RichardLitt\",\n      \"company\": \"@mntnr \",\n      \"name\": \"Richard Littauer\",\n      \"location\": \"Montr\\u00e9al\",\n      \"language\": [\n         \"JavaScript\",\n         \"Ruby\",\n         \"CSS\",\n         \"Makefile\",\n         \"Shell\",\n         \"HTML\",\n         \"Go\",\n         \"Groff\",\n         \"Python\",\n         \"Java\",\n         \"CoffeeScript\",\n         \"Perl\",\n         \"Clojure\",\n         \"ApacheConf\",\n         \"TeX\",\n         \"R\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"richard.littauer@gmail.com\"\n   },\n   {\n      \"login\": \"victorlaerte\",\n      \"company\": \"@liferay \",\n      \"name\": \"Victor Laerte Oliveira\",\n      \"location\": \"Recife, Pernambuco - Brazil\",\n      \"language\": [\n         \"Java\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"CoffeeScript\",\n         \"Ruby\",\n         \"Cucumber\",\n         \"Makefile\",\n         \"Objective-C++\",\n         \"C++\",\n         \"C\",\n         \"Shell\",\n         \"Objective-C\",\n         \"Kotlin\",\n         \"Swift\",\n         \"Python\",\n         \"Gherkin\",\n         \"FreeMarker\",\n         \"Inno Setup\",\n         \"Roff\",\n         \"C#\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"victorlaertedoliveira@gmail.com\"\n   },\n   {\n      \"login\": \"xiaohanyu\",\n      \"company\": null,\n      \"name\": \"Xiao Hanyu\",\n      \"location\": \"Singapore\",\n      \"stackoverflow_login\": \"Xiao Hanyu\",\n      \"email\": \"xiaohanyu1988@gmail.com\"\n   },\n   {\n      \"login\": \"DavidLambauer\",\n      \"company\": \"@AOEpeople \",\n      \"name\": \"DavidLamabuer\",\n      \"location\": \"Germany\",\n      \"language\": [\n         \"PHP\",\n         \"HTML\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Ruby\",\n         \"GCC Machine Description\",\n         \"Shell\",\n         \"ApacheConf\",\n         \"Nginx\",\n         \"Logos\",\n         \"Perl\",\n         \"XSLT\",\n         \"Python\",\n         \"CoffeeScript\",\n         \"Makefile\",\n         \"Roff\",\n         \"TeX\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"mail@davidlambauer.de\"\n   },\n   {\n      \"login\": \"kevva\",\n      \"company\": \"@imagemin @yeoman\",\n      \"name\": \"Kevin M\\u00e5rtensson\",\n      \"location\": \"Sweden\",\n      \"language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"CSS\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"kevinmartensson@gmail.com\"\n   },\n   {\n      \"login\": \"MatthewVita\",\n      \"company\": null,\n      \"name\": \"Matthew Vita\",\n      \"location\": \"Los Angeles, US\",\n      \"stackoverflow_login\": \"Matthew Vita\",\n      \"email\": \"matthewvita@live.com\"\n   },\n   {\n      \"login\": \"kud1ing\",\n      \"company\": null,\n      \"name\": null,\n      \"location\": \"Germany, pretty central\",\n      \"language\": [\n         \"Vim script\",\n         \"Shell\",\n         \"ANTLR\",\n         \"Python\",\n         \"Rust\",\n         \"Java\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"jbmoelker\",\n      \"company\": \"De Voorhoede\",\n      \"name\": \"Jasper Moelker\",\n      \"location\": null,\n      \"language\": [\n         \"CSS\",\n         \"JavaScript\",\n         \"Shell\",\n         \"HTML\",\n         \"Python\",\n         \"Ruby\",\n         \"PHP\",\n         \"TypeScript\",\n         \"Batchfile\",\n         \"ApacheConf\",\n         \"Java\",\n         \"Makefile\",\n         \"Go\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"davidvanleeuwen\",\n      \"company\": \"Awkward\",\n      \"name\": \"David van Leeuwen\",\n      \"location\": \"The Netherlands\",\n      \"language\": [\n         \"JavaScript\",\n         \"CoffeeScript\",\n         \"Ruby\",\n         \"CSS\",\n         \"C\",\n         \"Python\",\n         \"HTML\",\n         \"Swift\",\n         \"Objective-C++\",\n         \"Objective-C\",\n         \"Shell\",\n         \"TypeScript\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"david@madeawkward.com\"\n   },\n   {\n      \"login\": \"qazbnm456\",\n      \"company\": null,\n      \"name\": \"Boik\",\n      \"location\": \"Taiwan\",\n      \"language\": [\n         \"Swift\",\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Vue\",\n         \"Makefile\",\n         \"Racket\",\n         \"Python\",\n         \"Emacs Lisp\",\n         \"Coq\",\n         \"Haskell\",\n         \"Shell\",\n         \"Assembly\",\n         \"Ruby\",\n         \"C\",\n         \"PHP\",\n         \"Go\",\n         \"Objective-C++\",\n         \"C++\",\n         \"PowerShell\",\n         \"Objective-C\",\n         \"Hack\",\n         \"Nginx\",\n         \"Lex\",\n         \"Yacc\",\n         \"CMake\",\n         \"TypeScript\",\n         \"Batchfile\",\n         \"OpenEdge ABL\",\n         \"Perl\",\n         \"C#\",\n         \"CoffeeScript\",\n         \"ApacheConf\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"boik@tdohacker.org\"\n   },\n   {\n      \"login\": \"armaldio\",\n      \"company\": null,\n      \"name\": \"Quentin Goinaud\",\n      \"location\": \"France\",\n      \"language\": [\n         \"JavaScript\",\n         \"CSS\",\n         \"Shell\",\n         \"HTML\",\n         \"Batchfile\",\n         \"PHP\",\n         \"C++\",\n         \"Python\",\n         \"C\",\n         \"Makefile\",\n         \"Java\",\n         \"Objective-C\",\n         \"CMake\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"mislavcimpersak\",\n      \"company\": null,\n      \"name\": \"Mislav Cimper\\u0161ak\",\n      \"location\": \"Zagreb, Croatia\",\n      \"stackoverflow_login\": \"mislav\",\n      \"email\": null\n   },\n   {\n      \"login\": \"sjfricke\",\n      \"company\": null,\n      \"name\": \"Spencer\",\n      \"location\": null,\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Makefile\",\n         \"Java\",\n         \"Batchfile\",\n         \"GLSL\",\n         \"C++\",\n         \"CMake\",\n         \"Shell\",\n         \"C\",\n         \"Ruby\",\n         \"Go\",\n         \"C#\",\n         \"Cuda\",\n         \"Objective-C\",\n         \"PowerShell\",\n         \"Objective-C++\",\n         \"Python\",\n         \"Protocol Buffer\",\n         \"PHP\",\n         \"Assembly\",\n         \"QMake\",\n         \"Lua\",\n         \"MAXScript\",\n         \"Roff\",\n         \"M4\",\n         \"NSIS\",\n         \"Perl\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"sjfricke@wisc.edu\"\n   },\n   {\n      \"login\": \"quangv\",\n      \"company\": \"Absent Software\",\n      \"name\": \"Quang Van\",\n      \"location\": \"Central Mass.\",\n      \"stackoverflow_login\": \"Quang Van\",\n      \"email\": \"quang@absentsoft.com\"\n   },\n   {\n      \"login\": \"kminek\",\n      \"company\": null,\n      \"name\": \"Grzesiek W\",\n      \"location\": null,\n      \"language\": [\n         \"JavaScript\",\n         \"PHP\",\n         \"Shell\",\n         \"CSS\",\n         \"HTML\",\n         \"Makefile\",\n         \"Perl\",\n         \"Puppet\",\n         \"Python\",\n         \"Batchfile\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"kontakt@kminek.pl\"\n   },\n   {\n      \"login\": \"pmatseykanets\",\n      \"company\": null,\n      \"name\": \"Peter Matseykanets\",\n      \"location\": \"Columbia, MD\",\n      \"language\": [\n         \"PHP\",\n         \"Makefile\",\n         \"Go\",\n         \"Shell\",\n         \"HTML\",\n         \"Vue\",\n         \"JavaScript\",\n         \"CSS\",\n         \"Common Lisp\",\n         \"Roff\",\n         \"Batchfile\",\n         \"ApacheConf\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"gdi2290\",\n      \"company\": \"@TipeIO\",\n      \"name\": \"PatrickJS [tipe.io]\",\n      \"location\": \"San Francisco, CA\",\n      \"stackoverflow_login\": \"gdi2290\",\n      \"email\": \"github@gdi2290.com\"\n   },\n   {\n      \"login\": \"bouzlibop\",\n      \"company\": null,\n      \"name\": \"Adrian Baran\",\n      \"location\": \"Krak\\u00f3w\",\n      \"language\": [\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\",\n         \"Ruby\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"bouzlibop@gmail.com\"\n   },\n   {\n      \"login\": \"BubuAnabelas\",\n      \"company\": null,\n      \"name\": \"Joaqu\\u00edn Serna\",\n      \"location\": null,\n      \"language\": [\n         \"JavaScript\",\n         \"CSS\",\n         \"HTML\",\n         \"Makefile\",\n         \"Python\",\n         \"Perl\",\n         \"ApacheConf\",\n         \"Shell\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"podo\",\n      \"company\": null,\n      \"name\": \"Giedrius Jaloveckas\",\n      \"location\": \"Vilnius, Lithuania\",\n      \"language\": [\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"g.jaloveckas@gmail.com\"\n   },\n   {\n      \"login\": \"terryum\",\n      \"company\": \"University of Waterloo\",\n      \"name\": \"Terry Taewoong Um\",\n      \"location\": \"Waterloo, ON, Canada\",\n      \"language\": [\n         \"Matlab\",\n         \"TeX\",\n         \"Python\",\n         \"Jupyter Notebook\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"terry.t.um@gmail.com\"\n   },\n   {\n      \"login\": \"LucasBassetti\",\n      \"company\": \"@Integration-Alpha\",\n      \"name\": \"Lucas Bassetti\",\n      \"location\": \"Vit\\u00f3ria - ES\",\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Java\",\n         \"Ruby\",\n         \"PHP\",\n         \"Makefile\",\n         \"Shell\",\n         \"Web Ontology Language\",\n         \"CoffeeScript\",\n         \"Batchfile\",\n         \"Cap'n Proto\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"lucasbr.dafonseca@gmail.com\"\n   },\n   {\n      \"login\": \"TheJambo\",\n      \"company\": null,\n      \"name\": \"James Osborn\",\n      \"location\": \"Cambridge, United Kingdom\",\n      \"language\": [\n         \"Makefile\",\n         \"Python\",\n         \"Assembly\",\n         \"Perl\",\n         \"C++\",\n         \"Perl6\",\n         \"CMake\",\n         \"C\",\n         \"JavaScript\",\n         \"CSS\",\n         \"CoffeeScript\",\n         \"HTML\",\n         \"PHP\",\n         \"Shell\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"james@james.am\"\n   },\n   {\n      \"login\": \"dar5hak\",\n      \"company\": null,\n      \"name\": \"Darshak Parikh\",\n      \"location\": \"Pune, India\",\n      \"language\": [\n         \"Ruby\",\n         \"CSS\",\n         \"HTML\",\n         \"JavaScript\",\n         \"NSIS\",\n         \"Kotlin\",\n         \"Java\",\n         \"Shell\",\n         \"SystemVerilog\",\n         \"M4\",\n         \"xBase\",\n         \"Python\",\n         \"Fortran\",\n         \"Forth\",\n         \"LLVM\",\n         \"Meson\",\n         \"Prolog\",\n         \"Makefile\",\n         \"Haxe\",\n         \"Scilab\",\n         \"OCaml\",\n         \"C++\",\n         \"Rust\",\n         \"Yacc\",\n         \"ASP\",\n         \"COBOL\",\n         \"GAP\",\n         \"ooc\",\n         \"PigLatin\",\n         \"TeX\",\n         \"C\",\n         \"Go\",\n         \"Matlab\",\n         \"F#\",\n         \"GDB\",\n         \"Cuda\",\n         \"Perl\",\n         \"XSLT\",\n         \"Objective-C\",\n         \"TypeScript\",\n         \"Gherkin\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"aviaryan\",\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"name\": \"Avi Aryan\",\n      \"location\": \"Gandhinagar, India\",\n      \"language\": [\n         \"CSS\",\n         \"HTML\",\n         \"PHP\",\n         \"JavaScript\",\n         \"AutoHotkey\",\n         \"Batchfile\",\n         \"Shell\",\n         \"Python\",\n         \"C++\",\n         \"Ruby\",\n         \"Java\",\n         \"Go\",\n         \"C#\",\n         \"C\",\n         \"Perl\",\n         \"SourcePawn\",\n         \"Mako\",\n         \"Makefile\",\n         \"DIGITAL Command Language\",\n         \"Assembly\",\n         \"TeX\",\n         \"Smarty\",\n         \"Lua\",\n         \"M4\",\n         \"Ragel\",\n         \"Inno Setup\",\n         \"Awk\",\n         \"Protocol Buffer\",\n         \"Objective-C++\",\n         \"Ada\",\n         \"CMake\",\n         \"Yacc\",\n         \"1C Enterprise\",\n         \"PostScript\",\n         \"AppleScript\",\n         \"Matlab\",\n         \"Visual Basic\",\n         \"GAP\",\n         \"Smalltalk\",\n         \"Vim script\",\n         \"Scala\",\n         \"Objective-C\",\n         \"XSLT\",\n         \"Roff\",\n         \"Lex\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"petk\",\n      \"company\": \"@php-earth \",\n      \"name\": \"Peter Kokot\",\n      \"location\": \"Area 51\",\n      \"language\": [\n         \"Lua\",\n         \"Augeas\",\n         \"Python\",\n         \"HCL\",\n         \"Vim script\",\n         \"C\",\n         \"Shell\",\n         \"Nginx\",\n         \"Makefile\",\n         \"Ruby\",\n         \"Roff\",\n         \"Perl\",\n         \"XSLT\",\n         \"PHP\",\n         \"HTML\",\n         \"CSS\",\n         \"JavaScript\",\n         \"Vue\",\n         \"ApacheConf\",\n         \"Go\",\n         \"TypeScript\",\n         \"XQuery\",\n         \"ActionScript\",\n         \"Java\",\n         \"C++\",\n         \"Assembly\",\n         \"TeX\",\n         \"M4\",\n         \"Fortran\",\n         \"CMake\",\n         \"Objective-C\",\n         \"Batchfile\",\n         \"Yacc\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"peterkokot@gmail.com\"\n   },\n   {\n      \"login\": \"d3viant0ne\",\n      \"company\": null,\n      \"name\": \"Joshua Wiens\",\n      \"location\": \"Twitter - @d3viant0ne \",\n      \"stackoverflow_login\": \"d3viant0ne\",\n      \"email\": \"wiens.joshua@gmail.com\"\n   },\n   {\n      \"login\": \"terkelg\",\n      \"company\": \"@activetheory\",\n      \"name\": \"Terkel\",\n      \"location\": \"Los Angeles, CA\",\n      \"stackoverflow_login\": \"Terkel Gjervig\",\n      \"email\": \"terkel@terkel.com\"\n   },\n   {\n      \"login\": \"mischah\",\n      \"company\": \"Micromata GmbH\",\n      \"name\": \"Michael K\\u00fchnel\",\n      \"location\": \"Kassel, Germany\",\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"TypeScript\",\n         \"Shell\",\n         \"PowerShell\",\n         \"Ruby\",\n         \"Makefile\",\n         \"VimL\",\n         \"Vue\",\n         \"CoffeeScript\",\n         \"Scala\",\n         \"Harbour\",\n         \"Handlebars\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"mail@michael-kuehnel.de\"\n   },\n   {\n      \"login\": \"kasbah\",\n      \"company\": null,\n      \"name\": \"Kaspar Emanuel\",\n      \"location\": null,\n      \"language\": [\n         \"Python\",\n         \"Makefile\",\n         \"JavaScript\",\n         \"Shell\",\n         \"CSS\",\n         \"ApacheConf\",\n         \"Nginx\",\n         \"PHP\",\n         \"C++\",\n         \"Assembly\",\n         \"C\",\n         \"Prolog\",\n         \"Objective-C\",\n         \"HTML\",\n         \"Batchfile\",\n         \"Eagle\",\n         \"TeX\",\n         \"Perl\",\n         \"QMake\",\n         \"C#\",\n         \"Objective-C++\",\n         \"Java\",\n         \"Groff\",\n         \"Haskell\",\n         \"CMake\",\n         \"Jupyter Notebook\",\n         \"TypeScript\",\n         \"Lua\",\n         \"Racket\",\n         \"Visual Basic\",\n         \"Awk\",\n         \"VimL\",\n         \"Elm\",\n         \"Standard ML\",\n         \"PowerShell\",\n         \"Emacs Lisp\",\n         \"OCaml\",\n         \"Ruby\",\n         \"Hack\",\n         \"KiCad\",\n         \"Arduino\",\n         \"OpenSCAD\",\n         \"GAP\",\n         \"Rust\",\n         \"D\",\n         \"Game Maker Language\",\n         \"Rebol\",\n         \"CoffeeScript\",\n         \"Fortran\",\n         \"Clojure\",\n         \"PureScript\",\n         \"AGS Script\",\n         \"M4\",\n         \"R\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"kaspar.emanuel@gmail.com\"\n   },\n   {\n      \"login\": \"JesseTG\",\n      \"company\": null,\n      \"name\": \"Jesse Talavera-Greenberg\",\n      \"location\": \"New York, NY\",\n      \"stackoverflow_login\": \"JesseTG\",\n      \"email\": \"jessetalavera@aol.com\"\n   },\n   {\n      \"login\": \"sger\",\n      \"company\": \"Binary Level\",\n      \"name\": \"Spiros Gerokostas\",\n      \"location\": \"Athens\",\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"Elixir\",\n         \"Swift\",\n         \"Shell\",\n         \"Go\",\n         \"Brainfuck\",\n         \"C\",\n         \"ApacheConf\",\n         \"PHP\",\n         \"VimL\",\n         \"Makefile\",\n         \"Erlang\",\n         \"Batchfile\",\n         \"PowerShell\",\n         \"CSS\",\n         \"Objective-C\",\n         \"C++\",\n         \"Ruby\",\n         \"TeX\",\n         \"Objective-C++\",\n         \"Python\",\n         \"DTrace\",\n         \"LLVM\",\n         \"Vim script\",\n         \"Assembly\",\n         \"Emacs Lisp\",\n         \"Perl\",\n         \"CMake\",\n         \"D\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"spiros.gerokostas@gmail.com\"\n   },\n   {\n      \"login\": \"timofurrer\",\n      \"company\": null,\n      \"name\": \"Timo Furrer\",\n      \"location\": \"__switzerland__\",\n      \"language\": [\n         \"Shell\",\n         \"Vim script\",\n         \"Python\",\n         \"Makefile\",\n         \"Java\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Tcl\",\n         \"Batchfile\",\n         \"PowerShell\",\n         \"C\",\n         \"Assembly\",\n         \"C++\",\n         \"TeX\",\n         \"Ruby\",\n         \"ASP\",\n         \"C#\",\n         \"Perl\",\n         \"Groff\",\n         \"PHP\",\n         \"PostScript\",\n         \"RAML\",\n         \"PLSQL\",\n         \"XS\",\n         \"XSLT\",\n         \"VimL\",\n         \"GAP\",\n         \"Mako\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"tuxtimo@gmail.com\"\n   },\n   {\n      \"login\": \"harpribot\",\n      \"company\": \"University of Texas at Austin\",\n      \"name\": \"Harshal Priyadarshi\",\n      \"location\": \"Austin, TX\",\n      \"stackoverflow_login\": \"harpribot\",\n      \"email\": \"harshal.priyadarshi@utexas.edu\"\n   },\n   {\n      \"login\": \"aliesbelik\",\n      \"company\": null,\n      \"name\": \"Aliaksandr Belik\",\n      \"location\": \"Belarus\",\n      \"stackoverflow_login\": \"Aliaksandr Belik\",\n      \"email\": null\n   },\n   {\n      \"login\": \"hbokh\",\n      \"company\": \"@wearespindle \",\n      \"name\": \"Henk\",\n      \"location\": \"Groningen, the Netherlands\",\n      \"language\": [\n         \"Python\",\n         \"Shell\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Ruby\",\n         \"CoffeeScript\",\n         \"Standard ML\",\n         \"Makefile\",\n         \"Nginx\",\n         \"VimL\",\n         \"PHP\",\n         \"Arduino\",\n         \"SaltStack\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"hbokhoven@gmail.com\"\n   },\n   {\n      \"login\": \"websemantics\",\n      \"company\": \"Web Semantics, Inc.\",\n      \"name\": \"Adnan M.Sagar, PhD\",\n      \"location\": \"Toronto, Canada\",\n      \"language\": [\n         \"JavaScript\",\n         \"HTML\",\n         \"Shell\",\n         \"Ruby\",\n         \"CSS\",\n         \"PHP\",\n         \"PowerShell\",\n         \"ApacheConf\",\n         \"Go\",\n         \"TypeScript\",\n         \"Makefile\",\n         \"TeX\",\n         \"Python\",\n         \"Jupyter Notebook\",\n         \"Nginx\",\n         \"Vue\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"adnan@websemantics.ca\"\n   },\n   {\n      \"login\": \"vors\",\n      \"company\": \"@Dropbox\",\n      \"name\": \"Sergei Vorobev\",\n      \"location\": \"Seattle, WA\",\n      \"language\": [\n         \"Arduino\",\n         \"AutoHotkey\",\n         \"PowerShell\",\n         \"C++\",\n         \"CMake\",\n         \"C\",\n         \"Makefile\",\n         \"Python\",\n         \"Batchfile\",\n         \"JavaScript\",\n         \"HTML\",\n         \"CSS\",\n         \"Shell\",\n         \"Go\",\n         \"Ruby\",\n         \"Java\",\n         \"AppleScript\",\n         \"Objective-C\",\n         \"C#\",\n         \"XSLT\",\n         \"GCC Machine Description\",\n         \"Perl\",\n         \"PHP\",\n         \"ASP\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": null\n   },\n   {\n      \"login\": \"nicolesaidy\",\n      \"company\": null,\n      \"name\": \"Nicole Saidy\",\n      \"location\": null,\n      \"language\": [\n         \"JavaScript\",\n         \"Shell\",\n         \"VimL\",\n         \"CSS\",\n         \"HTML\",\n         \"ApacheConf\",\n         \"PHP\"\n      ],\n      \"stackoverflow_login\": \"null\",\n      \"email\": \"nicolesaidy@gmail.com\"\n   },\n   {\n      \"login\": \"tandavas\",\n      \"company\": \"@Famolus \",\n      \"name\": \"Thanakron Tandavas\",\n      \"location\": \"Bangkok, Thailand\",\n      \"stackoverflow_login\": \"Thanakron Tandavas\",\n      \"email\": \"tandavas@famolus.com\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/Info/git_info_list.json",
      "code_snippet": "",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/Info/syn_list.json",
      "code_snippet": "{\n   \"R\": [\n      \"r-language\",\n      \"rstats\"\n   ],\n   \"filter\": [\n      \"filters\"\n   ],\n   \"hash\": [\n      \"hashes\",\n      \"hashing\"\n   ],\n   \"penetration-testing\": [\n      \"pen-testing\"\n   ],\n   \"Racket\": [\n      \"drracket\",\n      \"plt-scheme\",\n      \"drscheme\"\n   ],\n   \"JavaScript\": [\n      \"javascript-module\",\n      \"vanilla-javascript\",\n      \"javascript-runtime\",\n      \"javascript-library\",\n      \"javascript-disabled\",\n      \"javascript-dom\",\n      \"javascript-alert\",\n      \"classic-javascript\",\n      \"javascript-execution\",\n      \".js\",\n      \"ecmascript\",\n      \"js\"\n   ],\n   \"Matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\"\n   ],\n   \"svg\": [\n      \"svg-path\",\n      \"svgz\"\n   ],\n   \"XSLT\": [\n      \"xml-transform\",\n      \"xslt-2.0-processors\",\n      \"xsltprocessor\",\n      \"xsltproc\",\n      \"xsltransform\",\n      \"xsl\"\n   ],\n   \"HTML\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\"\n   ],\n   \"bookmarks\": [\n      \"bookmark\"\n   ],\n   \"html\": [\n      \"span\",\n      \"html-comments\",\n      \"div-layouts\",\n      \"nested-divs\",\n      \"divs\",\n      \"div\",\n      \"html-attributes\",\n      \"html-tag\"\n   ],\n   \"prototype\": [\n      \"prototypes\"\n   ],\n   \"jobs\": [\n      \"job\"\n   ],\n   \"Go\": [\n      \"golang\",\n      \"go-language\"\n   ],\n   \"stream\": [\n      \"streams\"\n   ],\n   \"PHP\": [\n      \"php-include\",\n      \"phtml\",\n      \"php-fpm\",\n      \"php-session\",\n      \"php-readfile\",\n      \"php-functions\",\n      \"php-cgi\",\n      \"php-mail\",\n      \"php-errors\",\n      \"php-cli\",\n      \"php.ini\",\n      \"hypertext-preprocessor\",\n      \"php-frameworks\",\n      \"php5\",\n      \"php-date\",\n      \"php-oop\"\n   ],\n   \"database\": [\n      \"dbms\",\n      \"database-structure\",\n      \"db\",\n      \"databases\"\n   ],\n   \"textures\": [\n      \"texture\"\n   ],\n   \"Elixir\": [\n      \"elixir-lang\"\n   ],\n   \"ansible\": [\n      \"ansible-playbook\"\n   ],\n   \"challenge\": [\n      \"code-challenge\"\n   ],\n   \"aws-lambda\": [\n      \"amazon-lambda\"\n   ],\n   \"go\": [\n      \"golang\",\n      \"go-language\"\n   ],\n   \"javascript\": [\n      \"javascript-module\",\n      \"vanilla-javascript\",\n      \"javascript-runtime\",\n      \"javascript-library\",\n      \"javascript-disabled\",\n      \"javascript-dom\",\n      \"javascript-alert\",\n      \"classic-javascript\",\n      \"javascript-execution\",\n      \".js\",\n      \"ecmascript\",\n      \"js\"\n   ],\n   \"build\": [\n      \"builds\"\n   ],\n   \"Processing\": [\n      \"processing.org\"\n   ],\n   \"python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\"\n   ],\n   \"Clojure\": [\n      \"cljx\",\n      \"cljc\",\n      \"clj\"\n   ],\n   \"java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",\n      \"jdk\",\n      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\"\n   ],\n   \"events\": [\n      \"event\"\n   ],\n   \"keyboard\": [\n      \"keyboards\"\n   ],\n   \"api\": [\n      \"apis\"\n   ],\n   \"ios\": [\n      \"ios-sdk\",\n      \"apple-ios\",\n      \"iphone-os\"\n   ],\n   \"shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\"\n   ],\n   \"visualization\": [\n      \"visualisation\"\n   ],\n   \"C++\": [\n      \"cpp\"\n   ],\n   \"cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\"\n   ],\n   \"vim\": [\n      \"viml\",\n      \"vimscript\",\n      \"gvim\",\n      \"gvimrc\",\n      \"vimrc\"\n   ],\n   \"io\": [\n      \"input-output\"\n   ],\n   \"CSS\": [\n      \"css-font-weight\",\n      \"dynamic-css\",\n      \"css-borders\",\n      \"css-reset\",\n      \"css-menu\",\n      \"font-weight\",\n      \"css-box-model\",\n      \"inline-block\",\n      \"alternate-stylesheets\",\n      \"css-overflow\",\n      \"css-line-height\",\n      \"css-display\",\n      \"css-validation\",\n      \"style.css-template-file\",\n      \"box-model\",\n      \"max-width\",\n      \"max-height\",\n      \"min-width\",\n      \"min-height\",\n      \"css-centering\",\n      \"css-inheritance\",\n      \"css-columns\",\n      \"css2\",\n      \"css-height\",\n      \"css-classes\",\n      \"css-attributes\",\n      \"css-background-image\",\n      \"css-layout\",\n      \"cascading-style-sheet\"\n   ],\n   \"import\": [\n      \"imports\",\n      \"importing\"\n   ],\n   \"redirect\": [\n      \"redirecting\",\n      \"redirection\",\n      \"redirects\"\n   ],\n   \"java-8\": [\n      \"jdk1.8\",\n      \"jdk8\"\n   ],\n   \"bash\": [\n      \"bash-function\",\n      \".bash-profile\",\n      \"bash-variables\",\n      \"bash-alias\",\n      \".bashrc\",\n      \"bashrc\",\n      \"bash-script\"\n   ],\n   \"r\": [\n      \"r-language\",\n      \"rstats\"\n   ],\n   \"resources\": [\n      \"resource\"\n   ],\n   \"ant\": [\n      \"apache-ant\"\n   ],\n   \"html5\": [\n      \"time-tag\",\n      \"xhtml5\"\n   ],\n   \"csv\": [\n      \"tsv\",\n      \"comma-separated\",\n      \".csv\"\n   ],\n   \"usb\": [\n      \"usbdevice\"\n   ],\n   \"css\": [\n      \"css-font-weight\",\n      \"dynamic-css\",\n      \"css-borders\",\n      \"css-reset\",\n      \"css-menu\",\n      \"font-weight\",\n      \"css-box-model\",\n      \"inline-block\",\n      \"alternate-stylesheets\",\n      \"css-overflow\",\n      \"css-line-height\",\n      \"css-display\",\n      \"css-validation\",\n      \"style.css-template-file\",\n      \"box-model\",\n      \"max-width\",\n      \"max-height\",\n      \"min-width\",\n      \"min-height\",\n      \"css-centering\",\n      \"css-inheritance\",\n      \"css-columns\",\n      \"css2\",\n      \"css-height\",\n      \"css-classes\",\n      \"css-attributes\",\n      \"css-background-image\",\n      \"css-layout\",\n      \"cascading-style-sheet\"\n   ],\n   \"math\": [\n      \"arithmetic\",\n      \"mathematical\",\n      \"maths\",\n      \"mathematics\"\n   ],\n   \"jquery\": [\n      \"jquery-css\",\n      \"jquery-find\",\n      \"jquery-post\",\n      \"jquery-get\",\n      \"jquery-hasclass\",\n      \"jquery-after\",\n      \"jquery-callback\",\n      \"removeclass\",\n      \"toggleclass\",\n      \"addclass\",\n      \"jquery-live\",\n      \"jquery-core\"\n   ],\n   \"full-text-search\": [\n      \"fulltext\",\n      \"fts\",\n      \"fulltext-searching\"\n   ],\n   \"tags\": [\n      \"tag\"\n   ],\n   \"deprecated\": [\n      \"deprecation\"\n   ],\n   \"list\": [\n      \"ilist\",\n      \"lists\"\n   ],\n   \"spring\": [\n      \"spring-framework\"\n   ],\n   \"load-testing\": [\n      \"loadtest\"\n   ],\n   \"bots\": [\n      \"bot\"\n   ],\n   \"jni\": [\n      \"java-native-interface\"\n   ],\n   \"website\": [\n      \"websites\"\n   ],\n   \"string\": [\n      \"empty-string\",\n      \"str\",\n      \"string-manipulation\",\n      \"strings\"\n   ],\n   \"ubuntu\": [\n      \"lubuntu\",\n      \"kubuntu\",\n      \"xubuntu\"\n   ],\n   \"mysql\": [\n      \"mysqldump\",\n      \"mysqlclient\",\n      \"mysqld\",\n      \"mysql-table\",\n      \"mysql-server\",\n      \"mysql-query\",\n      \"my-sql\"\n   ],\n   \"angular\": [\n      \"angular4.x\",\n      \"angular4\",\n      \"angular2\"\n   ],\n   \"learning\": [\n      \"learn\"\n   ],\n   \"nlp\": [\n      \"language-processing\",\n      \"computational-linguistics\",\n      \"natural-language\",\n      \"natural-language-process\"\n   ],\n   \"colors\": [\n      \"colours\",\n      \"colour\",\n      \"color\"\n   ],\n   \"Python\": [\n      \"python-shell\",\n      \"python-interpreter\",\n      \"pythonic\"\n   ],\n   \"web-crawler\": [\n      \"spider\",\n      \"crawl\",\n      \"crawling\",\n      \"crawler\",\n      \"webcrawling\",\n      \"web-spider\",\n      \"webspiders\"\n   ],\n   \"questions\": [\n      \"question\"\n   ],\n   \"swift3\": [\n      \"swift3.1\",\n      \"swift3.0.2\",\n      \"swift3.0.1\",\n      \"swift3.0\"\n   ],\n   \"documentation\": [\n      \"docs\"\n   ],\n   \"matlab\": [\n      \"m-file\",\n      \"mlint\",\n      \"matlab-toolbox\",\n      \"matlab-ide\",\n      \"matlab-path\"\n   ],\n   \"fun\": [\n      \"humour\",\n      \"humor\"\n   ],\n   \"Makefile\": [\n      \"make\",\n      \"makefiles\"\n   ],\n   \"binary\": [\n      \"binary-system\",\n      \"binary-number\"\n   ],\n   \"elixir\": [\n      \"elixir-lang\"\n   ],\n   \"CoffeeScript\": [\n      \"coffee\"\n   ],\n   \"audio\": [\n      \"sounds\",\n      \"sound-api\",\n      \"sound\"\n   ],\n   \"postgresql\": [\n      \"sql-postgres\",\n      \"pgsql\",\n      \"postgres\"\n   ],\n   \"terminal\": [\n      \"terminals\"\n   ],\n   \"php\": [\n      \"php-include\",\n      \"phtml\",\n      \"php-fpm\",\n      \"php-session\",\n      \"php-readfile\",\n      \"php-functions\",\n      \"php-cgi\",\n      \"php-mail\",\n      \"php-errors\",\n      \"php-cli\",\n      \"php.ini\",\n      \"hypertext-preprocessor\",\n      \"php-frameworks\",\n      \"php5\",\n      \"php-date\",\n      \"php-oop\"\n   ],\n   \"animation\": [\n      \"scaleanimation\",\n      \"rotateanimation\",\n      \"animated\",\n      \"animations\"\n   ],\n   \"android\": [\n      \"android-framework\",\n      \"android-ui\",\n      \"android-application\",\n      \"android-device\",\n      \"android-api\",\n      \"android-sdk\",\n      \"android-mobile\"\n   ],\n   \"Cuda\": [\n      \"cudamalloc\",\n      \"cuda-kernel\"\n   ],\n   \"pipe\": [\n      \"pipes\"\n   ],\n   \"dsl\": [\n      \"domain-specific-languages\"\n   ],\n   \"levenshtein-distance\": [\n      \"levenstein\",\n      \"levenshtein\"\n   ],\n   \"graphics\": [\n      \"computer-graphics\"\n   ],\n   \"icons\": [\n      \"icon\"\n   ],\n   \"security\": [\n      \"web-security\",\n      \"vulnerabilities\",\n      \"vulnerability\",\n      \"secure\"\n   ],\n   \"reddit\": [\n      \"reddit-api\"\n   ],\n   \"Assembly\": [\n      \"assembly-language\",\n      \"assembler\",\n      \"asm\"\n   ],\n   \"generator\": [\n      \"generators\"\n   ],\n   \"p2p\": [\n      \"peer-to-peer\"\n   ],\n   \"shader\": [\n      \"shaders\"\n   ],\n   \"testing\": [\n      \"test\",\n      \"tests\",\n      \"software-testing\"\n   ],\n   \"less\": [\n      \"lesscss\"\n   ],\n   \"Swift\": [\n      \"swift1.2\",\n      \"swift-ios\",\n      \"swift-language\"\n   ],\n   \"dictionary\": [\n      \"map\",\n      \"dictionaries\",\n      \"dict\"\n   ],\n   \"networking\": [\n      \"networks\",\n      \"network\"\n   ],\n   \"Objective-C\": [\n      \"objc\"\n   ],\n   \"Java\": [\n      \"oraclejdk\",\n      \"java-libraries\",\n      \"jre\",\n      \"jdk\",\n      \"core-java\",\n      \"j2se\",\n      \".java\",\n      \"java-se\"\n   ],\n   \"deployment\": [\n      \"deploy\"\n   ],\n   \"slice\": [\n      \"string-slice\",\n      \"array-slice\",\n      \"slices\",\n      \"slicing\"\n   ],\n   \"module\": [\n      \"modules\"\n   ],\n   \"github-pages\": [\n      \"gh-pages\"\n   ],\n   \"Shell\": [\n      \"shellscript\",\n      \"shell-commands\",\n      \"shell-command\",\n      \"shell-scripting\",\n      \"shell-script\"\n   ],\n   \"twitter\": [\n      \"twitter-api\"\n   ],\n   \"audio-player\": [\n      \"audio-playing\"\n   ],\n   \"css3\": [\n      \"css-text-shadow\",\n      \"css-text-overflow\",\n      \"css-box-shadow\",\n      \"css-border-radius\",\n      \"css-border-image\"\n   ],\n   \"web-scraping\": [\n      \"webpagescraping\"\n   ],\n   \"jmeter\": [\n      \"apache-jmeter\"\n   ],\n   \"search\": [\n      \"searching\"\n   ],\n   \"translation\": [\n      \"t9n\"\n   ],\n   \"PowerShell\": [\n      \"windows-powershell\"\n   ],\n   \"data-structures\": [\n      \"data-structure\"\n   ],\n   \"minify\": [\n      \"minification\",\n      \"minifier\"\n   ],\n   \"web\": [\n      \"www\"\n   ],\n   \"windows\": [\n      \"windows-application\",\n      \"windows-programming\"\n   ],\n   \"dojo\": [\n      \"dojo-store\",\n      \"dojo-layer\",\n      \"dojo.stateful\",\n      \"dojo-require\",\n      \"dojo.data\",\n      \"dijit\",\n      \"dojox\"\n   ],\n   \"C#\":[\n      \".cs-file\",\n      \"csharp\",\n      \"visual-c#\",\n      \"c#-language\",\n      \"c#.net\",\n      \"c-sharp\"\n   ],\n   \"F#\":[\n      \"fsharp\"\n   ]\n}",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "import requests\nimport time\nimport json\n\n\ndef delete_duplicate(dict):",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "            Info.append(item)\n    return Info\n\ndef request_url(url,pagesize):\n    app = '?per_page={}&client_id=ff50be78bda6f9fd0f2f' \\\n          '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'.format(pagesize)\n    res = requests.get(url+app)\n    res.encoding = 'utf-8'\n    info = res.json()",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "\ndef extract_dict(res):\n    # The info for comparsion with that in other open source community\n    dict_info = {\"name\":res[\"name\"],\"github_login\":res[\"login\"],\n                 \"company\":res[\"company\"],\"location\":res[\"location\"],\n                 \"email\":res[\"email\"],\"stackoverflow_login\":\"null\"}\n    return dict_info\n\ndef get_langtags(user):\n    language = []\n    tags = []\n    print(\"Finding languages used of github user: {}\".format(user[\"github_login\"]))\n    repo_api = 'https://api.github.com/users/{}/repos'.format(user[\"github_login\"])\n    repos = request_url(repo_api,30)\n    print(\"The repo API is {}\".format(repo_api))\n\n    for item in repos:\n        print(item)\n        #can be  parallel tags&language\n        repo_name = item[\"name\"]\n        repo_tags = requests.get('https://api.github.com/repos/{}/{}/topics?'\n                                 'per_page=10&client_id=ff50be78bda6f9fd0f2f'\n                                 '&client_secret=ef64972c0688bd6e7f9a15436e372053b95b44a0'\n                                 .format(user[\"github_login\"],repo_name),\n                                 headers = {\"Accept\":\"application/vnd.github.mercy-preview+json\"})\n        repo_tags = repo_tags.json()[\"names\"]\n        tags.extend(repo_tags)\n\n        if not item[\"languages_url\"] == None:\n            language_api = item[\"languages_url\"]\n            language_dict = request_url(language_api,100)\n        else:\n            language_dict = None\n        language.extend(language_dict)\n\n    tags = delete_duplicate(tags)\n    language = delete_duplicate(language)\n\n    print(\"Github user {} languages: {}\".format(user[\"github_login\"],language))\n    print(\"Github user {} tags: {}\".format(user[\"github_login\"], tags))\n    user[\"github_language\"] = language\n    user[\"github_tags\"] = (tags if not tags == [] else \"null\")\n    return user\n\n\ndef get_info(commit_api):\n    developer_info = request_url(commit_api,5)\n    Info = []\n    cTime = time.time()\n    print(\"Getting info of users in the commit history...\")\n    for item in developer_info:\n        print(item)\n        ### For a list of developers, find their url\n        author_api = (item[\"author\"][\"url\"] if not item[\"author\"] == None else \"null\")\n        committer_api = (item[\"committer\"][\"url\"] if not item[\"committer\"] == None else \"null\")\n\n        if not author_api == \"null\":\n            author_info = request_url(author_api,100)\n            author_info = extract_dict(author_info)\n            Info.append(author_info)\n\n        if not committer_api == \"null\":\n            committer_info = request_url(committer_api,100)\n            committer_info = extract_dict(committer_info)\n            Info.append(committer_info)\n\n    print(time.time() - cTime)\n    Info = delete_duplicate(Info)\n\n    git_info = []\n    cTime = time.time()\n    for git_developer in Info:\n        git_developer = get_langtags(git_developer)\n        git_info.append(git_developer)\n    print(time.time() - cTime)\n    return git_info\n\ndef search_info(developer_login):\n    Info = []\n    for login in developer_login:\n        api = 'https://api.github.com/users/{}'.format(login)\n        developer_info = request_url(api,100)\n        developer_info = extract_dict(developer_info)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n    # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n    git_info = get_info(git_api)\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_language.json'\n    cTime = time.time()\n    print(\"Dumping the info...\")\n    with open(info_file, 'w') as ctfile:\n        json.dump(git_info, ctfile, indent=3)\n    print(time.time() - cTime)\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import Get_Info.get_info_git as gt\nimport Get_Info.name_form as nf\nimport Get_Info.levenshtein as le\nimport re\nimport requests\nimport urllib\nimport time\n\n\ndef request_api(api):\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\n    user_info = requests.get(api + app_key)\n    user_info = user_info.json()\n    return user_info\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "def InfoByName(name):\n    Info = []\n    default_info = {\"display_name\":\"\",\"location\":\"\",\"user_id\":0}\n    #THe API returns info of all possible Stack Overflow usernames which contain the input name\n\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\n               '&site=stackoverflow'.format(name,name)\n    info = request_api(user_api)\n\n    print(\"Getting possible Stack Overflow user info from api: {}\".format(user_api))\n    user_info = info[\"items\"]\n    if not user_info == None:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    if not user_id == None:\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\n        user_source = request_source(stk_url)\n        user_href = re.findall(r\"<a.*?href=.*?<\\/a>\", user_source, re.I | re.S | re.M)\n        # find it directly\n        git_account = None",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "            if 'https://github.com/' in href:\n                git_account = re.findall('href\\=\\\"https\\:\\/\\/github\\.com\\/(.*?)\\\"', href, re.S)\n                git_account = git_account[0]\n                print(\"The linked github account: {}\".format(git_account))\n        if not git_account == None:\n            return git_account\n        else:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    else:\n        return default\n\n\ndef get_tags(stk_developer):\n    tags = []\n    tags_api = 'https://api.stackexchange.com/2.2/users/{}/tags' \\\n               '?pagesize=40&order=desc&sort=popular' \\\n               '&site=stackoverflow'.format(stk_developer['user_id'])\n    tags_info = request_api(tags_api)\n    tags_info = tags_info[\"items\"]\n    for tag in tags_info:\n        tag_name = tag[\"name\"]\n        tags.append(tag_name)\n    return tags\n\n\ndef match_info(git_developer,stk_developer,syn_list):\n    location_stk = stk_developer[\"location\"]\n    location_git = git_developer[\"location\"]\n\n    if not location_git == \"null\" and not location_stk == \"null\":\n        try:\n            if location_git in location_stk:\n                location_score = 1\n            elif location_stk in location_git:\n                location_score = 1\n            else:\n                # Levenshtein distance between two places\n                distance = le.lev(location_stk, location_git)\n                len_git = len(location_git)\n                location_score = distance / len_git\n        except TypeError:\n            location_score = 0\n    else:\n        location_score = 0\n\n    tags_git = git_developer[\"github_tags\"]\n    tags_stk = stk_developer[\"tags\"]\n    print(syn_list)\n    match_count = git_count = 0\n    if not tags_stk == \"null\":\n        print(\"Tags: {}\".format(tags_stk))\n        for tag in tags_git:\n            git_count = git_count + 1\n            if tag in syn_list:\n                stk_syn = syn_list[tag]\n                for stk_tags in stk_syn:\n                    if stk_tags in tags_stk:\n                        match_count = match_count + 1\n                        break\n    else:\n        match_count = 0\n\n    tag_score = match_count / git_count * 2\n    final_score = location_score + tag_score\n    print(\"Tag score for {} is {}\".format(stk_developer[\"display_name\"],tag_score))\n    print(\"Final score for {} is {}\".format(stk_developer[\"display_name\"],final_score))\n\n    if final_score >= 0.7:\n        match_name = stk_developer[\"display_name\"] + \"_\" + str(final_score)\n        return match_name\n    else:\n        return []\n\ndef match_account(git_info,syn_list):\n    default_info = []\n    new_info = []\n\n    for git_developer in git_info:\n        print(\"\\n\")\n        print(\"finding Github user {} on Stack Overflow...\".format(git_developer[\"name\"]))\n        possible_name = nf.possible_names(git_developer[\"name\"], git_developer[\"github_login\"])\n        print(\"possible name:{}\".format(possible_name))\n\n        for name in possible_name:\n            #All info of developers whose username contains the input name\n            stk_info = InfoByName(name)\n            stk_info = gt.delete_duplicate(stk_info)\n\n            if not stk_info == default_info:\n                print(\"The possible info of Stack Overflow user {} is {}\".format(name, stk_info))\n\n                for stk_developer in stk_info:\n                    user_id = stk_developer['user_id']\n                    git_account = GetGitAccount(user_id)\n\n                    if git_account == git_developer[\"github_login\"]:\n                        git_developer[\"stackoverflow_login\"] = stk_developer[\"display_name\"]\n                        break\n\n                if git_developer[\"stackoverflow_login\"] == \"null\":\n                    print(\"Mapping the users with tags and location...\")\n                    cTime = time.time()\n                    possible_match = []\n\n                    print(\"STK_INFO :{}\".format(stk_info))\n                    for stk_developer in stk_info:\n                        developer_tags = get_tags(stk_developer)\n                        print(\"the tags of Stack Overflow user {} are {}\".format(stk_developer[\"display_name\"],developer_tags))\n                        stk_developer[\"tags\"] = developer_tags\n                        match_name = match_info(git_developer,stk_developer,syn_list)\n                        possible_match.extend(match_name)\n                    git_developer[\"stackoverflow_login\"] = (match_name if not match_name == [] else \"null\")\n                    print(time.time() - cTime)\n                else:\n                    break\n\n            else:\n                print(\"The Stack Overflow info of possible username {} for github user {} can not be found\".format(name,git_developer[\"name\"]))\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/levenshtein.py",
      "code_snippet": "#!/usr/bin/env python\n# coding: utf-8\n\n'''\nCreated: 2014-9-17\nAuthor: niR@github (https://github.com/hentaiPanda)\nVersion: 0.0.1\nLicense: MIT\n\n\nThis is a straightforward implementation of Levenshitein\nDistance and Damerau-Levenshtein Distance.\n\nThe code is based on the examples on the Wikipedia\nYou can get more infomation from\nhttp://en.wikipedia.org/wiki/Levenshtein_distance\nhttp://en.wikipedia.org/wiki/Damerau-Levenshtein_distance\n'''\n\n\n# Levenshtein Distance\ndef lev(str1, str2):\n    \"\"\"Make a Levenshtein Distances Matrix\"\"\"\n    n1, n2 = len(str1), len(str2)\n    lev_matrix = [ [ 0 for i1 in range(n1 + 1) ] for i2 in range(n2 + 1) ]\n    for i1 in range(1, n1 + 1):\n        lev_matrix[0][i1] = i1\n    for i2 in range(1, n2 + 1):\n        lev_matrix[i2][0] = i2\n    for i2 in range(1, n2 + 1):\n        for i1 in range(1, n1 + 1):\n            cost = 0 if str1[i1-1] == str2[i2-1] else 1\n            elem = min( lev_matrix[i2-1][i1] + 1,\n                        lev_matrix[i2][i1-1] + 1,\n                        lev_matrix[i2-1][i1-1] + cost )\n            lev_matrix[i2][i1] = elem\n    return lev_matrix[-1][-1]\n\n\n# Optimal string alignment distance\ndef osa(str1, str2):\n    n1, n2 = len(str1), len(str2)\n    matrix = [ [ 0 for i1 in range(n1 + 1) ] for i2 in range(n2 + 1) ]\n    for i1 in range(1, n1 + 1):\n        matrix[0][i1] = i1\n    for i2 in range(1, n2 + 1):\n        matrix[i2][0] = i2\n    for i2 in range(1, n2 + 1):\n        for i1 in range(1, n1 + 1):\n            cost = 0 if str1[i1-1] == str2[i2-1] else 1\n            elem = min( matrix[i2-1][i1] + 1,\n                        matrix[i2][i1-1] + 1,\n                        matrix[i2-1][i1-1] + cost )\n            if (i1 > 1 and i2 > 1 and\n                str1[i1-2] == str2[i2-1] and\n                str1[i1-1] == str2[i2-2]):\n                elem = min( elem,\n                            matrix[i2-3][i1-3] + cost )\n            matrix[i2][i1] = elem\n    return matrix[-1][-1]\n\n\n# Damerau-Levenshtein Distance\ndef dalev(str1, str2):\n    # Suppose we have two strings 'ac' and 'cba'\n    # This is the initialized matrix:\n    #\n    #                    str1\n    #                    a c\n    #              * * * * * *\n    #              * 5 5 5 5 *\n    #              * 5 0 1 2 *\n    #            c * 5 1 5 5 *\n    #      str2  b * 5 2 5 5 *\n    #            a * 5 3 5 5 *\n    #              * * * * * *\n    #\n    # If we wanna transpose 'ac' to 'ca', the starting point is (2, 2),\n    # And we need to compute the distance, so we must start at the point\n    # (1, 1), that's where the number 0 is, and it's the initial position\n    # of (p2-1, p1-1).\n    # The reason we use p2=ORIGIN, p1=ORIGIN (here ORIGIN is 1) as the\n    # initial value is that we must ensure if we don't have the proper\n    # pair of strings ('abc' and 'ga' etc.), the distance with adjacent\n    # transposition is always bigger than the number of other edit operations\n    # ( because no matter which variable (p2 or p1) is 0, matrix[p2-1][p1-1]\n    # is always the biggest number, here it is 5).\n    # (i1-p1-1) / (i2-p2-1) is the edit distance of the substrings.\n    n1, n2 = len(str1), len(str2)\n    max_dis = n1 + n2\n    letters = {} # pointer of the last row where a[i] == b[j]\n    INIT_POS = 2 # initial position of two str ('some'[0] etc.) in the matrix\n    ORIGIN = INIT_POS - 1 # the position of '0' in the matrix\n    matrix = [ [ max_dis for i1 in range(n1 + INIT_POS) ]\n               for i2 in range(n2 + INIT_POS) ]\n    for i1 in range(ORIGIN, n1 + INIT_POS):\n        matrix[1][i1] = i1 -ORIGIN\n    for i2 in range(ORIGIN, n2 + INIT_POS):\n        matrix[i2][1] = i2 -ORIGIN\n    for i2 in range(INIT_POS, n2 + INIT_POS):\n        temp = ORIGIN # pointer of the last column where b[j] == a[i]\n        for i1 in range(INIT_POS, n1 + INIT_POS):\n            p2 = letters.get(str1[i1-INIT_POS], ORIGIN)\n            p1 = temp\n            cost = 0 if str1[i1-INIT_POS] == str2[i2-INIT_POS] else 1\n            if not cost:\n                temp = i1\n            elem = min( matrix[i2-1][i1] + 1,\n                        matrix[i2][i1-1] + 1,\n                        matrix[i2-1][i1-1] + cost,\n                        matrix[p2-1][p1-1] + 1 + (i1-p1-1) + (i2-p2-1) )\n            matrix[i2][i1] = elem\n        letters[str2[i2-INIT_POS]] = i2\n    return matrix[-1][-1]\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n# git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\ngit_info = gt.get_info(git_api)\ninfo_file = '/home/ace/zsj/Get_Info/Info/awesome_test.json'\nsyn_file = '/home/ace/zsj/Get_Info/Info/syn_list.json'\ncTime = time.time()\nprint(\"Dumping the info...\")\nwith open(info_file, 'w') as ctfile:\n    json.dump(git_info, ctfile, indent=3)\nprint(time.time() - cTime)\n\n# git_info = open(info_file,encoding='utf-8')\nsyn_list = open(syn_file,encoding='utf-8')\n# git_info = json.load(git_info)\nsyn_list = json.load(syn_list)\nstk_count = total_count = 0\n\ncTime = time.time()\nprint(\"Matching developers between Github and Stack Overflow...\")\nmatch_info = st.match_account(git_info,syn_list)\nprint(time.time() - cTime)\n\ncTime = time.time()\n# new_info = []\nfor item in match_info:\n    if not item[\"stackoverflow_login\"] == \"null\":\n        stk_count = stk_count + 1\n    # new_info.append(item)\n    total_count = total_count +1\nprint(time.time() - cTime)\n\nprint(\"The number of developers with Stack Overflow account is {}\".format(stk_count))\nprint(\"The number of developers is {}\".format(total_count))\nprint(\"Ratio:{}\".format(float(stk_count/total_count)))\n\nprint(\"Saving the results of matching...\")\ncTime = time.time()\nfile = '/home/ace/zsj/Get_Info/Info/awesome_match.json'\nwith open(file, 'w') as ctfile:\n    json.dump(match_info, ctfile, indent=3)\nprint(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "        single_name = name_split[0]\n        len_single = len(single_name)\n        if len_single >= 3:\n            form.append(single_name[0:3])\n            form.append(single_name[len_single-3:len_single])\n        else:\n            form = single_name\n\n    elif len(name_split) == 2:\n        form.append(name_split[0].lower())\n        form.append(name_split[1].lower())\n\n    elif len(name_split) == 3:\n        form.append(name_split[1].lower())\n        form.append(name_split[0].lower())\n        form.append(name_split[2].lower())\n\n    else:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 22:05:59 +0800",
      "file": "git/user/Get_Info/syn_tags.py",
      "code_snippet": "import requests\nimport json\nimport Get_Info.get_info_git as gt\nimport time\n\ndef request_api(api):\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\n    info = requests.get(api + app_key)\n    info = info.json()\n    return info\n\ndef get_syn(git_info):\n    tags_list = []\n    for item in git_info:\n        language = (item[\"github_language\"] if not item[\"github_language\"] == \"null\" else [])\n        tags = (item[\"github_tags\"] if not item[\"github_tags\"] == \"null\" else [])\n        print(language)\n        print(tags)\n        tags_list.extend(language)\n        tags_list.extend(tags)\n\n    print(\"Tags before: {}\".format(tags_list))\n    tags_list = gt.delete_duplicate(tags_list)\n    # The tags containing \"#\" should be removed or the query of api will be failed\n    remove_list = []\n    for item in tags_list:\n        if \"#\" in item:\n            remove_list.append(item)\n            tags_list.remove(item)\n    print(\"Remove list: {}\".format(remove_list))\n    print(\"Tags: {}\".format(tags_list))\n\n    syn_list = {}\n    for tag in tags_list:\n        syn_tags = []\n        api = 'https://api.stackexchange.com/2.2/tags/{}/synonyms' \\\n              '?pagesize=100&order=desc&sort=creation&site=stackoverflow'.format(tag)\n        syn_info = request_api(api)\n        print(\"Finding tag {}: {}\".format(tag,syn_info))\n        syn_info = syn_info[\"items\"]\n        if not syn_info == []:\n            for item in syn_info:\n                syn_tags.append(item[\"from_tag\"])\n            syn_list[tag] = syn_tags\n            print(\"The synonymous tags of tag {} are {}\".format(tag,syn_tags))\n        else:\n            print(\"The synonymous tags of tag {} not found\".format(tag))\n\n    return syn_list\n\n\nif __name__ == '__main__':\n    info_file = '/home/ace/zsj/Get_Info/Info/awesome_test.json'\n    f = open(info_file, encoding='utf-8')\n    git_info = json.load(f)\n\n    print(\"Getting the Stack Overflow synonymous tags of github tags...\")\n    cTime = time.time()\n    syn_list = get_syn(git_info)\n    print(time.time() - cTime)\n\n    print(\"Dumping the syn_list...\")\n    cTime = time.time()\n    file = '/home/ace/zsj/Get_Info/Info/syn_list.json'\n    with open(file, 'w') as ctfile:\n        json.dump(syn_list, ctfile, indent=3)\n    print(time.time() - cTime)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-08 20:25:33 +0800",
      "file": "ast/README.md",
      "code_snippet": "The first AST is shown in the pdf format\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\n\nThe second AST is also shown in the pdf format as follows\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\n\nThe same part of two trees is labeled in red. ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "\ndef to_dict(node_list):\n    \"\"\"Transform the node list into nested dictionary\"\"\"\n    node_list_cp = node_list[:]\n    cp_list = []\n    AST_dict = dict()\n    AST_dict['_nodetype'] = node_list_cp[0]['_nodetype']\n    AST_dict['coord'] = node_list_cp[0]['coord']\n    first_sublist = []\n    for x in range(1, len(node_list_cp)):\n        num = node_list_cp[x]['_nodetype'].find('-')\n        cp_list.append(num)\n        node_list_cp[x]['_nodetype'] = re.findall(RE_AZ, node_list_cp[x]['_nodetype'])[0]\n    num_list = cp_list[:]\n    for y in range(max(num_list) - 2, 0, -2):\n        for x in range(len(num_list) - 1, -1, -1):",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "                subnode_list = []\n                for z in range(len(num_list) - 1, x - 1, -1):\n                    if num_list[z] == y + 2:\n                        subnode_list.append(node_list_cp[z + 1])\n                        num_list[z] = 0\n                node_list_cp[x + 1]['_subnode'] = subnode_list\n\n    for x in range(0, len(num_list)):\n        if num_list[x] == 1:\n            first_sublist.append(node_list_cp[x + 1])\n\n    AST_dict['_subnode'] = first_sublist\n    return [AST_dict, cp_list, node_list]\n\ndef to_json(node_list, json_name):\n    \"\"\"Write into json format\"\"\"\n    node_list_new = node_list[:]\n    AST_dict = to_dict(node_list_new)\n    with open(json_name, 'w+') as f:\n        json.dump(AST_dict[0], f, ensure_ascii=False, indent=4)\n    f.close()",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\nfrom AST2JSON import to_dict\nfrom AST_Process import Node_extract\n\ndef list_all_node(dict_a, num_list):\n    \"\"\"Using recursive function to traverse the nodes and dump them into list\"\"\"\n    node_list = []\n    if isinstance(dict_a,dict):",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "    return node_list\n\ndef Sequence_generate(node_list, num_list):\n    \"\"\"From the root to the leaves, we traverse the tree to get all the sequences\"\"\"\n    seque_list = []\n    index_list = []\n    for y in range(max(num_list), 1, -2):",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "                            sequence.append(node_list[i + 1]['_nodetype'])\n                            index.append(i+1)\n                            break\n                index.append(0)\n                sequence.append(node_list[0]['_nodetype'])\n                seque_list.append(sequence)\n                index_list.append(index)\n    return [seque_list, index_list]\n\ndef Sequence_compare(seq1, seq2):\n    \"\"\"Compare the sequence and return the same part they share\"\"\"\n    seq1_cp = seq1[0][:]\n    seq2_cp = seq2[0][:]\n    num1_cp = seq1[1][:]\n    num2_cp = seq2[1][:]\n    len_seq1 = len(seq1_cp)\n    len_seq2 = len(seq2_cp)\n    same_list = []\n    same_num1 = []\n    same_num2 = []\n    same_num = []\n    for i in range(min(len_seq1,len_seq2)):\n        if seq1_cp[i] == seq2_cp[i]:\n            same_list.insert(0, seq1_cp[i])\n            same_num1.insert(0, num1_cp[i])\n            same_num2.insert(0, num2_cp[i])\n        else:\n            break\n    if len(same_num1) > 1:\n        same_num = [same_num1, same_num2]\n    return same_num\n\ndef Seqlist_compare(seq_list1, seq_list2):\n    \"\"\"Compare the sequence lists and merge the same nodes they share\"\"\"\n    seq_list1_cp = seq_list1[0][:]\n    seq_list2_cp = seq_list2[0][:]\n    num_list1_cp = seq_list1[1][:]\n    num_list2_cp = seq_list2[1][:]\n    set1 = []\n    set2 = []\n    list1 = []\n    list2 = []\n    for index1,seq1 in enumerate(seq_list1_cp):\n        for index2,seq2 in enumerate(seq_list2_cp):\n            if index1 not in list1 and index2 not in list2:\n                seq_collect1 = [seq1, num_list1_cp[index1]]\n                seq_collect2 = [seq2, num_list2_cp[index2]]\n                same_num = Sequence_compare(seq_collect1, seq_collect2)\n                if len(same_num) > 0:\n                    set1 = list(set(set1).union(set(same_num[0])))\n                    set2 = list(set(set2).union(set(same_num[1])))\n                    list1.append(index1)\n                    list2.append(index2)\n    return [set1, set2]\n\ndef seq_process(code_path, json_path, preprocess):\n    nodes = Node_extract(code_path, preprocess)\n    dd = to_dict(nodes)\n    num_list = dd[1]\n    node_list = dd[2]\n    seq = Sequence_generate(node_list, num_list)\n    return seq",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Process.py",
      "code_snippet": "\n\ndef AST_preprocess(code_path):\n    \"\"\"Preprocess of the code. Remove the head files and standard libraries\"\"\"\n    path_new = './example/test_new.c'\n    with open(code_path , 'r') as f:\n        lines = f.readlines()",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Process.py",
      "code_snippet": "        F = os.popen(command)\n    return F\n\ndef Node_extract(code_path, preprocess):\n    \"\"\"Extract the nodes\"\"\"\n    AST = AST_generate(code_path, preprocess)\n    node_list = []\n    for lines in AST:\n        Node_dict = dict()",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/AST_Visualization.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\nfrom graphviz import Digraph\nfrom AST_Process import Node_extract\nfrom AST_Compare import Seqlist_compare\nimport re\n\nRE_AZ = re.compile(r'-(.*?) ')\nRE_C = re.compile(r'/(.*?).c')\n\ndef node_graph(code_path, preprocess, same_list):\n    \"\"\"Show the syntax tree and display the same part of tow trees\"\"\"\n    node_list = Node_extract(code_path, preprocess)\n    num_list = []\n    name = re.findall(RE_C, code_path)\n    for x in range(1, len(node_list)):\n        num = node_list[x]['_nodetype'].find('-')\n        num_list.append(num)\n        node_list[x]['_nodetype'] = re.findall(RE_AZ, node_list[x]['_nodetype'])[0]\n    num_list.insert(0,0)\n    if same_list == None:\n        num_cp = num_list\n        dot = Digraph(comment = name, format=\"pdf\")\n        dot.node('0', 'TranslationUnitDecl')\n        for y in range(1, max(num_cp)+1, 2):\n            if y == 1:\n                for x in range(len(node_list)):\n                    if num_list[x] == y:\n                        dot.node(str(x), node_list[x]['_nodetype'])\n                        dot.edge('0', str(x))\n            if y > 1:\n                for x in range(len(num_cp)):\n                    if num_list[x] == y:\n                        dot.node(str(x), node_list[x]['_nodetype'])\n                        for z in range(x, 0, -1):\n                            if num_list[z] == y-2:\n                                dot.edge(str(z), str(x))\n                                break\n    else:\n        num_cp = num_list\n        same_cp = same_list\n        dot = Digraph(comment = name, format=\"pdf\")\n        if 0 in same_cp:\n            dot.node('0', 'TranslationUnitDecl', _attributes={\"color\":\"red\"})\n        else:\n            dot.node('0', 'TranslationUnitDecl')\n        for y in range(1, max(num_cp) + 1, 2):\n            if y == 1:\n                for x in range(len(node_list)):\n                    if num_list[x] == y:\n                        if x in same_cp:\n                            dot.node(str(x), node_list[x]['_nodetype'], _attributes={\"color\":\"red\"})\n                            dot.edge('0', str(x))\n                        else:\n                            dot.node(str(x), node_list[x]['_nodetype'])\n                            dot.edge('0', str(x))\n            if y > 1:\n                for x in range(len(num_cp)):\n                    if num_list[x] == y:\n                        if x in same_cp:\n                            dot.node(str(x), node_list[x]['_nodetype'], _attributes={\"color\":\"red\"})\n                            for z in range(x, 0, -1):\n                                if num_list[z] == y - 2:\n                                    dot.edge(str(z), str(x))\n                                    break\n                        else:\n                            dot.node(str(x), node_list[x]['_nodetype'])\n                            for z in range(x, 0, -1):\n                                if num_list[z] == y - 2:\n                                    dot.edge(str(z), str(x))\n                                    break\n    save_name = './output/'+str(name[0])\n    dot.view(save_name)\n\n\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/README.md",
      "code_snippet": "# Use abstract syntax tree for code plagiarism detection\nAuthor: king-jojo\ne-mail: kimwhu@outlook.com\n\nClang is a useful tool to show complete information of the syntax tree of a program. This project intends to apply Clang to generating syntax tree of programs. By comparing different syntax trees, we can find the same nodes and parts of two programs so that we can detect which program is suspected of plagiarising. The same parts two syntax trees share will be distinguished by red nodes shown in graph. However, this project has just started for a short time and some functions haven't realized yet. \n\n## Usage\nFirst install Clang and Graphviz with: \n\n    $ sudo apt-get install clang\n    $ sudo pip install graphviz\n\n## Write into json\nThis project can convert syntax tree into json format, like this: \n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2json.png)\n\n## Generate AST with Graphviz\nThe first AST is shown in the pdf format\n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast1.png)\n\nThe second is shown below \n![Image text](https://github.com/king-jojo/Screenshots/blob/master/codetracker/ast2.png)\n\nThe same part of two trees is labeled in red. \n\n## In future \nThere are so many things to do to complete this project in a perfect version. \n### Extract the subtrees two programs share\nThis function can help programmer understand some program fast. By extracting the same subtree, we can know the same function of two programs. \n### Establish a code dictionary\nWe will establish a dictionary, which contains the syntax tree of many classical programs. Just compare the syntax tree of the program and the dictionary, we can find some classical algorithm used in the program so that it is easy to understand it. Further more, we can let the computer to program just by importing the function you want and the computer will combine the syntax trees of classical algorithm to generate the final code of the program with the help of AI or other things. \n### Plagiarism detection\nThere are several strategies for us to detect plagiarism by comparing syntax trees\n#### Syntax tree transform\nWe will apply some code plagiarism strategies to transform the syntax tree into standard shape. For example, normalize all the syntax trees of if...else... into switch... and all the while circulation into for circulation. \n#### Map into Hash table\nWe transform syntax tree into arraylist and assign value to the specific node and finally mapping into the Hash table\n#### Top Down Unordered Maximum Common Subtree Isomorphism(TDUMCSI)\nLigaarden(2007) process an AST based approach to detect plagiarism in JAVA source code. AST is generated for each of the source code files and a preorder traversal is done through the ASTs to be compared as done to generate node sequences. TDUMCSI algorithm along with sequence matching algorithms - NW algorithm and LCS algorithm, are then used to compare the node sequences and find matches. ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/main.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\nimport AST_Compare\nfrom AST_Visualization import node_graph\nimport os\nimport sys\n\nsel = True\ncode_path_a = './example/test.c'\njson_name_a = './example/ast_a.json'\n\ncode_path_b = './example/test2.c'\njson_name_b = './example/ast_b.json'\n\nseq1 = AST_Compare.seq_process(code_path_a, json_name_a, sel)\nseq2 = AST_Compare.seq_process(code_path_b, json_name_b, sel)\nset = AST_Compare.Seqlist_compare(seq1,seq2)\nnode_graph(code_path_a, sel, set[0])\nnode_graph(code_path_b, sel, set[1])",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/output/example/test",
      "code_snippet": "// ['example/test']\ndigraph {\n\t0 [label=TranslationUnitDecl color=red]\n\t1 [label=TypedefDecl color=red]\n\t0 -> 1\n\t3 [label=TypedefDecl color=red]\n\t0 -> 3\n\t5 [label=TypedefDecl color=red]\n\t0 -> 5\n\t8 [label=TypedefDecl color=red]\n\t0 -> 8\n\t12 [label=FunctionDecl color=red]\n\t0 -> 12\n\t2 [label=BuiltinType color=red]\n\t1 -> 2\n\t4 [label=BuiltinType color=red]\n\t3 -> 4\n\t6 [label=PointerType color=red]\n\t5 -> 6\n\t9 [label=ConstantArrayType color=red]\n\t8 -> 9\n\t13 [label=ParmVarDecl color=red]\n\t12 -> 13\n\t14 [label=CompoundStmt color=red]\n\t12 -> 14\n\t7 [label=BuiltinType color=red]\n\t6 -> 7\n\t10 [label=RecordType color=red]\n\t9 -> 10\n\t15 [label=DeclStmt color=red]\n\t14 -> 15\n\t18 [label=IfStmt]\n\t14 -> 18\n\t19 [label=IfStmt]\n\t14 -> 19\n\t31 [label=ReturnStmt color=red]\n\t14 -> 31\n\t11 [label=Record color=red]\n\t10 -> 11\n\t16 [label=VarDecl color=red]\n\t15 -> 16\n\t20 [label=BinaryOperator color=red]\n\t19 -> 20\n\t24 [label=BinaryOperator color=red]\n\t19 -> 24\n\t27 [label=BinaryOperator color=red]\n\t19 -> 27\n\t32 [label=ImplicitCastExpr color=red]\n\t31 -> 32\n\t17 [label=IntegerLiteral]\n\t16 -> 17\n\t21 [label=ImplicitCastExpr color=red]\n\t20 -> 21\n\t23 [label=IntegerLiteral color=red]\n\t20 -> 23\n\t25 [label=DeclRefExpr]\n\t24 -> 25\n\t26 [label=IntegerLiteral color=red]\n\t24 -> 26\n\t28 [label=DeclRefExpr]\n\t27 -> 28\n\t29 [label=ImplicitCastExpr color=red]\n\t27 -> 29\n\t33 [label=DeclRefExpr]\n\t32 -> 33\n\t22 [label=DeclRefExpr color=red]\n\t21 -> 22\n\t30 [label=DeclRefExpr color=red]\n\t29 -> 30\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-08 20:23:22 +0800",
      "file": "ast/output/example/test2",
      "code_snippet": "// ['example/test2']\ndigraph {\n\t0 [label=TranslationUnitDecl color=red]\n\t1 [label=TypedefDecl color=red]\n\t0 -> 1\n\t3 [label=TypedefDecl color=red]\n\t0 -> 3\n\t5 [label=TypedefDecl color=red]\n\t0 -> 5\n\t8 [label=TypedefDecl color=red]\n\t0 -> 8\n\t12 [label=FunctionDecl color=red]\n\t0 -> 12\n\t2 [label=BuiltinType color=red]\n\t1 -> 2\n\t4 [label=BuiltinType color=red]\n\t3 -> 4\n\t6 [label=PointerType color=red]\n\t5 -> 6\n\t9 [label=ConstantArrayType color=red]\n\t8 -> 9\n\t13 [label=ParmVarDecl color=red]\n\t12 -> 13\n\t14 [label=CompoundStmt color=red]\n\t12 -> 14\n\t7 [label=BuiltinType color=red]\n\t6 -> 7\n\t10 [label=RecordType color=red]\n\t9 -> 10\n\t15 [label=DeclStmt color=red]\n\t14 -> 15\n\t25 [label=ReturnStmt color=red]\n\t14 -> 25\n\t11 [label=Record color=red]\n\t10 -> 11\n\t16 [label=VarDecl color=red]\n\t15 -> 16\n\t26 [label=ImplicitCastExpr color=red]\n\t25 -> 26\n\t17 [label=ParenExpr]\n\t16 -> 17\n\t27 [label=DeclRefExpr color=red]\n\t26 -> 27\n\t18 [label=BinaryOperator color=red]\n\t17 -> 18\n\t19 [label=ParenExpr]\n\t18 -> 19\n\t24 [label=IntegerLiteral color=red]\n\t18 -> 24\n\t20 [label=BinaryOperator color=red]\n\t19 -> 20\n\t21 [label=ImplicitCastExpr color=red]\n\t20 -> 21\n\t23 [label=IntegerLiteral color=red]\n\t20 -> 23\n\t22 [label=DeclRefExpr color=red]\n\t21 -> 22\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\nimport json\nimport re\n\nRE_AZ = re.compile(r'-(.*?) ')\n\ndef to_dict(node_list):\n    \"\"\"Transform the node list into nested dictionary\"\"\"\n    cp_list = []\n    AST_dict = dict()\n    AST_dict['_nodetype'] = node_list[0]['_nodetype']\n    AST_dict['coord'] = node_list[0]['coord']\n    first_sublist = []\n    for x in range(1, len(node_list)):\n        num = node_list[x]['_nodetype'].find('-')\n        cp_list.append(num)\n        node_list[x]['_nodetype'] = re.findall(RE_AZ, node_list[x]['_nodetype'])[0]\n    num_list = cp_list[:]\n    for y in range(max(num_list) - 2, 0, -2):\n        for x in range(len(num_list) - 1, -1, -1):\n            if num_list[x] == y:\n                subnode_list = []\n                for z in range(len(num_list) - 1, x - 1, -1):\n                    if num_list[z] == y + 2:\n                        subnode_list.append(node_list[z + 1])\n                        num_list[z] = 0\n                node_list[x + 1]['_subnode'] = subnode_list\n\n    for x in range(0, len(num_list)):\n        if num_list[x] == 1:\n            first_sublist.append(node_list[x + 1])\n\n    AST_dict['_subnode'] = first_sublist\n    return [AST_dict, cp_list, len(node_list)]\n\ndef to_json(node_list, json_name):\n    \"\"\"Write into json format\"\"\"\n    AST_dict = to_dict(node_list)\n    with open(json_name, 'w+') as f:\n        json.dump(AST_dict[0], f, ensure_ascii=False, indent=4)\n    f.close()\n    return [AST_dict[1],AST_dict[2]]",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/AST_Compare.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\ndef list_all_node(dict_a):\n    \"\"\"Using recursive function to traverse the nodes and dump them into list\"\"\"\n    node_list = []\n    if isinstance(dict_a,dict):\n        for x in range(len(dict_a)):\n            temp_key = dict_a.keys()[x]\n            temp_value = dict_a[temp_key]\n            if isinstance(temp_value, list):\n                for y in temp_value:\n                    node_list.append(list_all_node(y))\n            else:\n                if temp_key == '_nodetype':\n                    node_list.append(temp_value)\n    return node_list\n\ndef Sequence_generate(node_list, num_list):\n\n    seque_list = []\n    index_list = []\n    for y in range(max(num_list), 1, -2):\n        for x in range(len(num_list)-1, -1, -1):\n            if num_list[x] == y:\n                sequence = []\n                index = []\n                sequence.append(node_list[x + 1]['_nodetype'])\n                index.append(x+1)\n                for z in range(y-2, 0, -2):\n                    for i in range(x-1, -1, -1):\n                        if num_list[i] == z:\n                            sequence.append(node_list[i + 1]['_nodetype'])\n                            index.append(i+1)\n                            break\n                sequence.append(node_list[0]['_nodetype'])\n                seque_list.append(sequence)\n                index_list.append(index)\n    return [seque_list, index_list]\n\ndef Sequence_compare(seq1, seq2):\n    list1 = []\n    list2 = []\n    for index1,str1 in enumerate(seq1):\n        for index2,str2 in enumerate(seq2):\n            if str1 == str2:\n                list1.append(index1)\n                list2.append(index2)\n    return [is_arith_progression(list1,list2), list1, list2]\n\ndef is_arith_progression(index1, index2):\n    s = False\n    length = len(index1)\n    if length > 1:\n        for i in range(0, length-1):\n            if index1[i+1] - index1[i] != 1:\n                s = False\n                break\n            elif index2[i+1] - index2[i] != 1:\n                s = False\n                break\n            else:\n                s = True\n    else:\n        s = False\n    return s\n\ndef Seqlist_compare(seq_list1, seq_list2):\n    set1 = []\n    set2 = []\n    exit = []\n    for index1,seq1 in enumerate(seq_list1[0]):\n        for index2,seq2 in enumerate(seq_list2[0]):\n            if Sequence_compare(seq1, seq2):\n                if index2 not in exit:\n                    set1 = list(set(set1).union(set(seq_list1[1][index1])))\n                    set2 = list(set(set2).union(set(seq_list2[1][index2])))\n                    exit.append(index2)\n                    break\n    return [set1, set2]\n\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/AST_Process.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n#__author__ :king-jojo\n\nimport os\nimport re\n\nRE_NODE = re.compile(r'(.*?)0x')\nRE_LINE = re.compile(r'<(\\w.*?)>')\n\n\ndef AST_preprocess(code_path):\n    \"\"\"Preprocess of the code. Remove the header files and standard libraries\"\"\"\n    path_new = './example/test_new.c'\n    with open(code_path , 'r') as f:\n        lines = f.readlines()\n    f.close()\n\n    with open(path_new , 'w') as f_new:\n        for line in lines:\n            if '#include' in line:\n                line = '\\n'\n            f_new.write(line)\n    f_new.close()\n    return path_new\n\ndef AST_generate(code_path, preprocess):\n    \"\"\"Print AST based on command line\"\"\"\n    if preprocess == True:\n        code_path = AST_preprocess(code_path)\n        command = 'clang -Xclang -ast-dump -fsyntax-only ' + code_path\n        F = os.popen(command)\n    else:\n        command = 'clang -Xclang -ast-dump -fsyntax-only ' + code_path\n        F = os.popen(command)\n    return F\n\ndef Node_extract(AST):\n    \"\"\"Extract the nodes\"\"\"\n    node_list = []\n    for lines in AST:\n        Node_dict = dict()\n        if len(re.findall(RE_NODE, lines)) > 0:\n            new_line = re.findall(RE_NODE, lines)[0]\n        Node_dict['_nodetype'] = new_line\n        line_info = re.findall(RE_LINE, lines)\n        if len(line_info) > 0:\n            Node_dict['coord'] = line_info[0]\n        else:\n            Node_dict['coord'] = 'null'\n        node_list.append(Node_dict)\n    return node_list\n\n\n\n\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/GenerateHash.py",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/PrintAST.py",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/ast_a.json",
      "code_snippet": "{\n    \"coord\": \"invalid sloc\", \n    \"_nodetype\": \"TranslationUnitDecl \", \n    \"_subnode\": [\n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"PointerType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"BuiltinType\", \n                            \"_subnode\": []\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"ConstantArrayType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"RecordType\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"null\", \n                                    \"_nodetype\": \"Record\", \n                                    \"_subnode\": []\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"null\", \n            \"_nodetype\": \"FunctionDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"col:13, line:8:1\", \n                    \"_nodetype\": \"CompoundStmt\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"line:7:3, col:10\", \n                            \"_nodetype\": \"ReturnStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:10\", \n                                    \"_nodetype\": \"ImplicitCastExpr\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:10\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, \n                        {\n                            \"coord\": \"NULL\", \n                            \"_nodetype\": \"IfStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"line:6:5, col:9\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:9\", \n                                            \"_nodetype\": \"ImplicitCastExpr\", \n                                            \"_subnode\": [\n                                                {\n                                                    \"coord\": \"col:9\", \n                                                    \"_nodetype\": \"DeclRefExpr\"\n                                                }\n                                            ]\n                                        }, \n                                        {\n                                            \"coord\": \"col:5\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }, \n                                {\n                                    \"coord\": \"line:4:5, col:9\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:9\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }, \n                                        {\n                                            \"coord\": \"col:5\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }, \n                                {\n                                    \"coord\": \"line:3:7, col:11\", \n                                    \"_nodetype\": \"BinaryOperator\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:11\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }, \n                                        {\n                                            \"coord\": \"col:7\", \n                                            \"_nodetype\": \"ImplicitCastExpr\", \n                                            \"_subnode\": [\n                                                {\n                                                    \"coord\": \"col:7\", \n                                                    \"_nodetype\": \"DeclRefExpr\"\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, \n                        {\n                            \"coord\": \"line:3:3, line:6:9\", \n                            \"_nodetype\": \"IfStmt\", \n                            \"_subnode\": []\n                        }, \n                        {\n                            \"coord\": \"line:2:3, col:12\", \n                            \"_nodetype\": \"DeclStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:3, col:11\", \n                                    \"_nodetype\": \"VarDecl\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:11\", \n                                            \"_nodetype\": \"IntegerLiteral\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }, \n                {\n                    \"coord\": \"col:7, col:11\", \n                    \"_nodetype\": \"ParmVarDecl\", \n                    \"_subnode\": []\n                }\n            ]\n        }\n    ]\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/ast_b.json",
      "code_snippet": "{\n    \"coord\": \"invalid sloc\", \n    \"_nodetype\": \"TranslationUnitDecl \", \n    \"_subnode\": [\n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"BuiltinType\", \n                    \"_subnode\": []\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"PointerType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"BuiltinType\", \n                            \"_subnode\": []\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"invalid sloc\", \n            \"_nodetype\": \"TypedefDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"null\", \n                    \"_nodetype\": \"ConstantArrayType\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"null\", \n                            \"_nodetype\": \"RecordType\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"null\", \n                                    \"_nodetype\": \"Record\", \n                                    \"_subnode\": []\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }, \n        {\n            \"coord\": \"null\", \n            \"_nodetype\": \"FunctionDecl\", \n            \"_subnode\": [\n                {\n                    \"coord\": \"col:13, line:4:1\", \n                    \"_nodetype\": \"CompoundStmt\", \n                    \"_subnode\": [\n                        {\n                            \"coord\": \"line:3:3, col:10\", \n                            \"_nodetype\": \"ReturnStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:10\", \n                                    \"_nodetype\": \"ImplicitCastExpr\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:10\", \n                                            \"_nodetype\": \"DeclRefExpr\", \n                                            \"_subnode\": []\n                                        }\n                                    ]\n                                }\n                            ]\n                        }, \n                        {\n                            \"coord\": \"line:2:3, col:30\", \n                            \"_nodetype\": \"DeclStmt\", \n                            \"_subnode\": [\n                                {\n                                    \"coord\": \"col:3, col:29\", \n                                    \"_nodetype\": \"VarDecl\", \n                                    \"_subnode\": [\n                                        {\n                                            \"coord\": \"col:16, col:29\", \n                                            \"_nodetype\": \"ParenExpr\", \n                                            \"_subnode\": [\n                                                {\n                                                    \"coord\": \"col:17, col:27\", \n                                                    \"_nodetype\": \"BinaryOperator\", \n                                                    \"_subnode\": [\n                                                        {\n                                                            \"coord\": \"col:27\", \n                                                            \"_nodetype\": \"IntegerLiteral\", \n                                                            \"_subnode\": []\n                                                        }, \n                                                        {\n                                                            \"coord\": \"col:17, col:23\", \n                                                            \"_nodetype\": \"ParenExpr\", \n                                                            \"_subnode\": [\n                                                                {\n                                                                    \"coord\": \"col:18, col:22\", \n                                                                    \"_nodetype\": \"BinaryOperator\", \n                                                                    \"_subnode\": [\n                                                                        {\n                                                                            \"coord\": \"col:22\", \n                                                                            \"_nodetype\": \"IntegerLiteral\", \n                                                                            \"_subnode\": []\n                                                                        }, \n                                                                        {\n                                                                            \"coord\": \"col:18\", \n                                                                            \"_nodetype\": \"ImplicitCastExpr\", \n                                                                            \"_subnode\": [\n                                                                                {\n                                                                                    \"coord\": \"col:18\", \n                                                                                    \"_nodetype\": \"DeclRefExpr\"\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    ]\n                                                                }\n                                                            ]\n                                                        }\n                                                    ]\n                                                }\n                                            ]\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }, \n                {\n                    \"coord\": \"col:7, col:11\", \n                    \"_nodetype\": \"ParmVarDecl\", \n                    \"_subnode\": []\n                }\n            ]\n        }\n    ]\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/bcon.c",
      "code_snippet": "/* bcon.c */\n\n/*    Copyright 2009-2012 10gen Inc.\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <assert.h>\n#include \"bcon.h\"\n\n#ifndef NOT_REACHED\n#define NOT_REACHED 0\n#endif\n\n#define ARRAY_INDEX_BUFFER_SIZE 9\n\nconst char *bcon_errstr[] = {\n    \"OK\",\n    \"ERROR\",\n    \"bcon document or nesting incomplete\",\n    \"bson finish error\"\n};\n\nbcon_error_t bson_append_bcon_array(bson *b, const bcon *bc);\n\n/* should be static, but it used by test files */\nbcon_token_t bcon_token(char *s);\n\nbcon_token_t bcon_token(char *s) {\n    if (s == 0) return Token_EOD;\n    switch (s[0]) {\n    case ':': if (s[1] != '\\0' && s[2] != '\\0' && s[3] != '\\0' && s[4] == '\\0' &&\n                      s[3] == ':' && (s[1] == '_' || s[1] == 'P' || s[1] == 'R'))\n            return Token_Typespec; break;\n    case '{': if (s[1] == '\\0') return Token_OpenBrace; break;\n    case '}': if (s[1] == '\\0') return Token_CloseBrace; break;\n    case '[': if (s[1] == '\\0') return Token_OpenBracket; break;\n    case ']': if (s[1] == '\\0') return Token_CloseBracket; break;\n    case '.': if (s[1] == '\\0') return Token_End; break;\n    }\n    return Token_Default;\n}\n\nstatic bcon_error_t bson_bcon_key_value(bson *b, const char *key, const char *typespec, const bcon bci) {\n    bcon_error_t ret = BCON_OK;\n    bson_oid_t oid;\n    char ptype = typespec ? typespec[1] : '_';\n    char utype = typespec ? typespec[2] : '_';\n    switch (ptype) {\n    case '_': /* kv(b, key, utype, bci) */\n        switch (utype) {\n        case '_': /* fall through */\n        case 's': bson_append_string( b, key, bci.s ); break; /* common case */\n        case 'f': bson_append_double( b, key, bci.f ); break;\n        case 'D':\n            bson_append_start_object( b, key );\n            ret = bson_append_bcon( b, bci.D );\n            bson_append_finish_object( b );\n            break;\n        case 'A':\n            bson_append_start_array( b, key );\n            ret = bson_append_bcon_array( b, bci.A );\n            bson_append_finish_array( b );\n            break;\n        case 'o': if (*bci.o == '\\0') bson_oid_gen( &oid ); else bson_oid_from_string( &oid, bci.o ); bson_append_oid( b, key, &oid ); break;\n        case 'b': bson_append_bool( b, key, bci.b ); break;\n        case 't': bson_append_time_t( b, key, bci.t ); break;\n        case 'v': bson_append_null( b, key ); break; /* void */\n        case 'x': bson_append_symbol( b, key, bci.x ); break;\n        case 'i': bson_append_int( b, key, bci.i ); break;\n        case 'l': bson_append_long( b, key, bci.l ); break;\n        default: printf(\"\\nptype:'%c' utype:'%c'\\n\", ptype, utype); assert(NOT_REACHED); break;\n        }\n        break;\n    case 'R': /* krv(b, key, utype, bci) */\n        switch (utype) {\n        case 'f': bson_append_double( b, key, *bci.Rf ); break;\n        case 's': bson_append_string( b, key, bci.Rs ); break;\n        case 'D':\n            bson_append_start_object( b, key );\n            ret = bson_append_bcon( b, bci.RD );\n            bson_append_finish_object( b );\n            break;\n        case 'A':\n            bson_append_start_array( b, key );\n            ret = bson_append_bcon_array( b, bci.RA );\n            bson_append_finish_array( b );\n            break;\n        case 'o': if (*bci.o == '\\0') bson_oid_gen( &oid ); else bson_oid_from_string( &oid, bci.o ); bson_append_oid( b, key, &oid ); break;\n        case 'b': bson_append_bool( b, key, *bci.Rb ); break;\n        case 't': bson_append_time_t( b, key, *bci.Rt ); break;\n        case 'x': bson_append_symbol( b, key, bci.Rx ); break;\n        case 'i': bson_append_int( b, key, *bci.Ri ); break;\n        case 'l': bson_append_long( b, key, *bci.Rl ); break;\n        default: printf(\"\\nptype:'%c' utype:'%c'\\n\", ptype, utype); assert(NOT_REACHED); break;\n        }\n        break;\n    case 'P': /* kpv(b, key, utype, bci) */\n        if (*bci.Pv != 0) {\n            switch (utype) {\n            case 'f': bson_append_double( b, key, **bci.Pf ); break;\n            case 's': bson_append_string( b, key, *bci.Ps ); break;\n            case 'D':\n                bson_append_start_object( b, key );\n                ret = bson_append_bcon( b, *bci.PD );\n                bson_append_finish_object( b );\n                break;\n            case 'A':\n                bson_append_start_array( b, key );\n                ret = bson_append_bcon_array( b, *bci.PA );\n                bson_append_finish_array( b );\n                break;\n            case 'o': if (**bci.Po == '\\0') bson_oid_gen( &oid );\n                else bson_oid_from_string( &oid, *bci.Po );\n                bson_append_oid( b, key, &oid );\n                break;\n            case 'b': bson_append_bool( b, key, **bci.Pb ); break;\n            case 't': bson_append_time_t( b, key, **bci.Pt ); break;\n            case 'x': if (*bci.Px != 0) bson_append_symbol( b, key, *bci.Px ); break;\n            case 'i': bson_append_int( b, key, **bci.Pi ); break;\n            case 'l': bson_append_long( b, key, **bci.Pl ); break;\n            default: printf(\"\\nptype:'%c' utype:'%c'\\n\", ptype, utype); assert(NOT_REACHED); break;\n            }\n        }\n        break;\n    default:\n        printf(\"\\nptype:'%c' utype:'%c'\\n\", ptype, utype); assert(NOT_REACHED);\n        break;\n    }\n    return ret;\n}\n\ntypedef enum bcon_state_t {\n    State_Element, State_DocSpecValue, State_DocValue,\n    State_ArraySpecValue, State_ArrayValue\n} bcon_state_t;\n\n#define DOC_STACK_SIZE 1024\n#define ARRAY_INDEX_STACK_SIZE 1024\n\n#define DOC_PUSH_STATE(return_state) ( doc_stack[doc_stack_pointer++] = (return_state) )\n#define DOC_POP_STATE ( state = doc_stack[--doc_stack_pointer] )\n#define ARRAY_PUSH_RESET_INDEX_STATE(return_state) ( array_index_stack[array_index_stack_pointer++] = array_index, array_index = 0, DOC_PUSH_STATE(return_state) )\n#define ARRAY_POP_INDEX_STATE ( array_index = array_index_stack[--array_index_stack_pointer], DOC_POP_STATE )\n\n#define ARRAY_KEY_STRING(l) (bson_numstr(array_index_buffer, (int)(l)), array_index_buffer)\n\n/*\n * simplified FSM to parse BCON structure, uses stacks for sub-documents and sub-arrays\n */\nstatic bcon_error_t bson_append_bcon_with_state(bson *b, const bcon *bc, bcon_state_t start_state) {\n    bcon_error_t ret = BCON_OK;\n    bcon_state_t state = start_state;\n    char *key = 0;\n    char *typespec = 0;\n    unsigned char doc_stack[DOC_STACK_SIZE];\n    size_t doc_stack_pointer = 0;\n    size_t array_index = 0;\n    size_t array_index_stack[ARRAY_INDEX_STACK_SIZE];\n    size_t array_index_stack_pointer = 0;\n    char array_index_buffer[ARRAY_INDEX_BUFFER_SIZE]; /* max BSON size */\n    int end_of_data;\n    const bcon *bcp;\n    for (end_of_data = 0, bcp = bc; ret == BCON_OK && !end_of_data; bcp++) {\n        bcon bci = *bcp;\n        char *s = bci.s;\n        switch (state) {\n        case State_Element:\n            switch (bcon_token(s)) {\n            case Token_CloseBrace:\n                bson_append_finish_object( b );\n                DOC_POP_STATE; /* state = ...; */\n                break;\n            case Token_End:\n                end_of_data = 1;\n                break;\n            default:\n                key = s;\n                state = State_DocSpecValue;\n                break;\n            }\n            break;\n        case State_DocSpecValue:\n            switch (bcon_token(s)) {\n            case Token_Typespec:\n                typespec = s;\n                state = State_DocValue;\n                break;\n            case Token_OpenBrace:\n                bson_append_start_object( b, key );\n                DOC_PUSH_STATE(State_Element);\n                state = State_Element;\n                break;\n            case Token_OpenBracket:\n                bson_append_start_array( b, key );\n                ARRAY_PUSH_RESET_INDEX_STATE(State_Element);\n                state = State_ArraySpecValue;\n                break;\n            case Token_End:\n                end_of_data = 1;\n                break;\n            default:\n                ret = bson_bcon_key_value(b, key, typespec, bci);\n                state = State_Element;\n                break;\n            }\n            break;\n        case State_DocValue:\n            ret = bson_bcon_key_value(b, key, typespec, bci);\n            state = State_Element;\n            typespec = 0;\n            break;\n        case State_ArraySpecValue:\n            switch (bcon_token(s)) {\n            case Token_Typespec:\n                typespec = s;\n                state = State_ArrayValue;\n                break;\n            case Token_OpenBrace:\n                key = ARRAY_KEY_STRING(array_index++);\n                bson_append_start_object( b, key );\n                DOC_PUSH_STATE(State_ArraySpecValue);\n                state = State_Element;\n                break;\n            case Token_OpenBracket:\n                key = ARRAY_KEY_STRING(array_index++);\n                bson_append_start_array( b, key );\n                ARRAY_PUSH_RESET_INDEX_STATE(State_ArraySpecValue);\n                /* state = State_ArraySpecValue; */\n                break;\n            case Token_CloseBracket:\n                bson_append_finish_array( b );\n                ARRAY_POP_INDEX_STATE; /* state = ...; */\n                break;\n            case Token_End:\n                end_of_data = 1;\n                break;\n            default:\n                key = ARRAY_KEY_STRING(array_index++);\n                ret = bson_bcon_key_value(b, key, typespec, bci);\n                /* state = State_ArraySpecValue; */\n                break;\n            }\n            break;\n        case State_ArrayValue:\n            key = ARRAY_KEY_STRING(array_index++);\n            ret = bson_bcon_key_value(b, key, typespec, bci);\n            state = State_ArraySpecValue;\n            typespec = 0;\n            break;\n        default: assert(NOT_REACHED); break;\n        }\n    }\n    return state == start_state ? BCON_OK : BCON_DOCUMENT_INCOMPLETE;\n}\n\nbcon_error_t bson_append_bcon(bson *b, const bcon *bc) {\n    return bson_append_bcon_with_state(b, bc, State_Element);\n}\n\nbcon_error_t bson_append_bcon_array(bson *b, const bcon *bc) {\n    return bson_append_bcon_with_state(b, bc, State_ArraySpecValue);\n}\n\n/**\n * Generate BSON from BCON\n * @param b a BSON object\n * @param bc a BCON object\n * match with bson_destroy\n */\nbcon_error_t bson_from_bcon(bson *b, const bcon *bc) {\n    bcon_error_t ret = BSON_OK;\n    bson_init( b );\n    ret = bson_append_bcon_with_state( b, bc, State_Element );\n    if (ret != BCON_OK) return ret;\n    ret = bson_finish( b );\n    return ( ret == BSON_OK ? BCON_OK : BCON_BSON_ERROR );\n}\n\nvoid bcon_print(const bcon *bc) { /* prints internal representation, not JSON */\n    char *typespec = 0;\n    const char *delim = \"\";\n    int end_of_data;\n    bcon *bcp;\n    putchar('{');\n    for (end_of_data = 0, bcp = (bcon*)bc; !end_of_data; bcp++) {\n        bcon bci = *bcp;\n        char *typespec_next = 0;\n        if (typespec) {\n            switch (typespec[1]) {\n            case '_':\n                switch (typespec[2]) {\n                case 'f': printf(\"%s%f\", delim, bci.f); break;\n                case 's': printf(\"%s\\\"%s\\\"\", delim, bci.s); break;\n                case 'D': printf(\"%sPD(0x%lx,..)\", delim, (unsigned long)bci.D); break;\n                case 'A': printf(\"%sPA(0x%lx,....)\", delim, (unsigned long)bci.A); break;\n                case 'o': printf(\"%s\\\"%s\\\"\", delim, bci.o); break;\n                case 'b': printf(\"%s%d\", delim, bci.b); break;\n                case 't': printf(\"%s%ld\", delim, (long)bci.t); break;\n                case 'v': printf(\"%s\\\"%s\\\"\", delim, bci.v); break;\n                case 'x': printf(\"%s\\\"%s\\\"\", delim, bci.x); break;\n                case 'i': printf(\"%s%d\", delim, bci.i); break;\n                case 'l': printf(\"%s%ld\", delim, bci.l); break;\n                default: printf(\"\\ntypespec:\\\"%s\\\"\\n\", typespec); assert(NOT_REACHED); break;\n                }\n                break;\n            case 'R':\n                switch (typespec[2]) {\n                case 'f': printf(\"%sRf(0x%lx,%f)\", delim, (unsigned long)bci.Rf, *bci.Rf); break;\n                case 's': printf(\"%sRs(0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Rs, bci.Rs); break;\n                case 'D': printf(\"%sRD(0x%lx,..)\", delim, (unsigned long)bci.RD); break;\n                case 'A': printf(\"%sRA(0x%lx,....)\", delim, (unsigned long)bci.RA); break;\n                case 'o': printf(\"%sRo(0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Ro, bci.Ro); break;\n                case 'b': printf(\"%sRb(0x%lx,%d)\", delim, (unsigned long)bci.Rb, *bci.Rb); break;\n                case 't': printf(\"%sRt(0x%lx,%ld)\", delim, (unsigned long)bci.Rt, (long)*bci.Rt); break;\n                case 'x': printf(\"%sRx(0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Rx, bci.Rx); break;\n                case 'i': printf(\"%sRi(0x%lx,%d)\", delim, (unsigned long)bci.Ri, *bci.Ri); break;\n                case 'l': printf(\"%sRl(0x%lx,%ld)\", delim, (unsigned long)bci.Rl, *bci.Rl); break;\n                default: printf(\"\\ntypespec:\\\"%s\\\"\\n\", typespec); assert(NOT_REACHED); break;\n                }\n                break;\n            case 'P':\n                switch (typespec[2]) {\n                case 'f': printf(\"%sPf(0x%lx,0x%lx,%f)\", delim, (unsigned long)bci.Pf, (unsigned long)(bci.Pf ? *bci.Pf : 0), bci.Pf && *bci.Pf ? **bci.Pf : 0.0); break;\n                case 's': printf(\"%sPs(0x%lx,0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Ps, (unsigned long)(bci.Ps ? *bci.Ps : 0), bci.Ps && *bci.Ps ? *bci.Ps : \"\"); break;\n                case 'D': printf(\"%sPD(0x%lx,0x%lx,..)\", delim, (unsigned long)bci.PD, (unsigned long)(bci.PD ? *bci.PD : 0)); break;\n                case 'A': printf(\"%sPA(0x%lx,0x%lx,....)\", delim, (unsigned long)bci.PA, (unsigned long)(bci.PA ? *bci.PA : 0)); break;\n                case 'o': printf(\"%sPo(0x%lx,0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Po, (unsigned long)(bci.Po ? *bci.Po : 0), bci.Po && *bci.Po ? *bci.Po : \"\"); break;\n                case 'b': printf(\"%sPb(0x%lx,0x%lx,%d)\", delim, (unsigned long)bci.Pb, (unsigned long)(bci.Pb ? *bci.Pb : 0), bci.Pb && *bci.Pb ? **bci.Pb : 0); break;\n                case 't': printf(\"%sPt(0x%lx,0x%lx,%ld)\", delim, (unsigned long)bci.Pt, (unsigned long)(bci.Pt ? *bci.Pt : 0), bci.Pt && *bci.Pt ? (long)**bci.Pt : 0); break;\n                case 'x': printf(\"%sPx(0x%lx,0x%lx,\\\"%s\\\")\", delim, (unsigned long)bci.Px, (unsigned long)(bci.Px ? *bci.Px : 0), bci.Px && *bci.Px ? *bci.Px : \"\"); break;\n                case 'i': printf(\"%sPi(0x%lx,0x%lx,%d)\", delim, (unsigned long)bci.Pi, (unsigned long)(bci.Pi ? *bci.Pi : 0), bci.Pi && *bci.Pi ? **bci.Pi : 0); break;\n                case 'l': printf(\"%sPl(0x%lx,0x%lx,%ld)\", delim, (unsigned long)bci.Pl, (unsigned long)(bci.Pl ? *bci.Pl : 0), bci.Pl && *bci.Pl ? **bci.Pl : 0); break;\n\n                default: printf(\"\\ntypespec:\\\"%s\\\"\\n\", typespec); assert(NOT_REACHED); break;\n                }\n                break;\n            default:\n                printf(\"\\ntypespec:\\\"%s\\\"\\n\", typespec); assert(NOT_REACHED);\n                break;\n            }\n        }\n        else {\n            char *s = bci.s;\n            switch (s[0]) {\n            case '.':\n                end_of_data = (s[1] == '\\0');\n                break;\n            case ':':\n                typespec_next = bcon_token(s) == Token_Typespec ? s : 0;\n                break;\n            }\n            printf(\"%s\\\"%s\\\"\", delim, s);\n        }\n        typespec = typespec_next;\n        delim = \",\";\n    }\n    putchar('}');\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/heapSort.c",
      "code_snippet": "\n\n#include <stdio.h>\n\nvoid thePrintf(int array[], int size)\n{\n    int i;\n\n    for (i = 0;i < size;i++)\n    {\n        printf (\"%d \", array[i]);\n    }\n    printf (\"\\r\\n\\r\\n\");\n}\n\nvoid maxHeapFilterDown (int array[], int index, int size)\n{\n    int dad, son, temp;\n\n    dad = index;\n    temp = array[dad];\n    son = dad * 2 +1;\n    while(son < size)\n    {\n        if (son + 1 < size && array[son + 1] > array[son])  //\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d\u5bfb\u627e\u8f83\u5927\u952e\u503c\n        {\n            son++;\n        }\n\n        if (array[son] <= temp) //\u65b0\u7684\u7236\u8282\u70b9\u503c\n        {\n            break;\n        }\n        array[dad] = array[son];\n        dad = son;\n        son = dad * 2 + 1;\n    }\n    array[dad] = temp;\n}\n\nvoid buildMaxHeap (int array[], int size)\n{\n    int index;\n\n    for (index = size / 2 - 1;index >= 0;index--)\n    {\n        maxHeapFilterDown (array, index, size);\n    }\n}\n\nvoid heapSortInc (int array[], int size)\n{\n    int temp;\n    int n;\n    buildMaxHeap (array, size);\n    for (n = size - 1;n >0;n--)\n    {\n    \ttemp = array[n];\n        array[n] = array[0];\n        array[0] = temp;\n        maxHeapFilterDown (array, 0, n);\n        \n    }\n}\n\nint main (void)\n{\n    FILE *thisArray;\n    int *array, size, i, value;\n    char thisString[128];\n    \n    thisArray = fopen(\"randNums.txt\", \"rb\");\n    if (NULL == thisArray)\n    {\n        fprintf (stderr, \"File Open Error.\\r\\n\");\n        return -1;\n    }\n\n    fscanf(thisArray, \"%d\", &size);\n    array = (int *)malloc(size * sizeof(int));\n    if (NULL == array)\n    {\n        fprintf (stderr, \"Malloc Array Error.\\r\\n\");\n        return -1;\n    }\n    for (i = 0;i < size;i++)\n    {\n        fscanf (thisArray, \"%d\", &value);\n        array[i] = value;\n    }\n\n    thePrintf(array, size);\n    heapSortInc(array, size);\n    thePrintf(array, size);\n    free(array);\n    getchar();\n    return 0;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/test.c",
      "code_snippet": "int f(int x){\n  int y = 0;\n  if (x > 0)\n    y = 1;\n  else \n    y = x;\n  return y;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/test.cc",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/test2.c",
      "code_snippet": "int f(int x){\n  int result = ((x * 2) / 42);\n  return result;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/example/test_new.c",
      "code_snippet": "int f(int x){\n  int result = ((x * 2) / 42);\n  return result;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 22:09:00 +0800",
      "file": "ast/main.py",
      "code_snippet": "import AST_Process\nimport AST2JSON\nimport AST_Compare\n\ncode_path_a = './example/test.c'\njson_name_a = './example/ast_a.json'\nfile_a = AST_Process.AST_generate(code_path_a,True)\nsource1 = AST_Process.Node_extract(file_a)\nnode_list_a = source1\ndd_a = AST2JSON.to_json(node_list_a, json_name_a)\nnum_list_a = dd_a[0]\nnode_num_a = dd_a[1]\n\ncode_path_b = './example/test2.c'\njson_name_b = './example/ast_b.json'\nfile_b = AST_Process.AST_generate(code_path_b,True)\nsource2 = AST_Process.Node_extract(file_b)\nnode_list_b = source2\ndd_b = AST2JSON.to_json(node_list_b, json_name_b)\nnum_list_b = dd_b[0]\nnode_num_b = dd_b[1]\n\nseq1 = AST_Compare.Sequence_generate(node_list_a, num_list_a)\nseq2 = AST_Compare.Sequence_generate(node_list_b, num_list_b)\nset = AST_Compare.Seqlist_compare(seq1,seq2)\n\n\"\"\"show the same nodes that two programs share\"\"\"\nprint (set[0])\nprint (set[1])\nprint (node_num_a)\nprint (node_num_b)\n\n#\n#\n# print (num_list_a)\n# print (num_list_b)\n# list = AST_Compare.Sequence_compare(seq1[0],seq2[0])\n# list1 = list[1]\n# list2 = list[2]\n# print (list1)\n# print (list2)\n# print (list[0])\n# print (seq1)\n# print (seq2)\n# print (source1)",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-07 21:49:49 +0800",
      "file": "git/history/README.md",
      "code_snippet": "# Map Git Commit History to Authors\n\nAuthor: ch-chiu\n\n## Usage",
      "email": "CNPG-qzm@hotmail.com",
      "author": "Zimeng Qiu"
   },
   {
      "commit_date": "2017-10-07 21:49:49 +0800",
      "file": "git/history/README.md",
      "code_snippet": "cd a folder which is a git repository, then run like this:\n\n```\n$ python your_dir_of_main.py input output_dir <--mapping|--fsearch|--search>\n```\n\n## Mapping Mode\n\nThis mode use command like this:\n\n```\n$ python your_dir_of_main.py input_code_file/folder output_dir --mapping\n```\n\nThe script will generate a JSON file in output directory including author, file name and committed code snippets of every commit.\n\nYou can explore all time commit history by either scrolling screen or looking up generated JSON file.\n\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.32.12%20PM.png)\n\n## Code File Search Mode\n\nRun like this:\n\n```\n$ python your_dir_of_main.py input_code_file output_dir --fsearch\n```\n\nThis mode enable you to search a code snippet in git commit history of a file or whole directory and find who created this code snippet and which file is this snippet in.\n\nAttention: The input code file of this mode is not a complete file from git repository, it actually stores a copy of code snippet that you might come across from somewhere of web but you are not sure which project or file it belongs to. At this time, you can copy this code snippet and save it as a .txt file as input code file of this mode. Then the script will automatically find the information you want.\n\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.14%20PM.png)\n\n## Code Search Mode\n\nRun like this:\n\n```\n$ python your_dir_of_main.py \"your code snippet\" output_dir --search\n```\n\nThis mode generally has the same function with ```--fsearch``` mode. However, unlike that mode, this one enables you avoid save code snippet as a .txt file, instead, you can copy them in terminal and run command directly.\n\nAttention: Remember to add \"\" to declare your code snippet as a string.\n\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-07%20at%209.31.32%20PM.png)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "Zimeng Qiu"
   },
   {
      "commit_date": "2017-10-07 21:33:30 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n            code_dict['code_snippet'] = \"\\n\".join(code_snippet)\n            code_list.append(code_dict)\n    return code_list\n\n\ndef print_code_list(code_list):\n    for code in code_list:\n        print('\\033[1;31m')\n        print('*' * 150)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 21:33:30 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "        # snippet = code[\"code_snippet\"]\n        # for line in snippet:\n        #     print(line)\n        print(code[\"code_snippet\"])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 21:33:30 +0800",
      "file": "git/history/git_search/search_commit_history.py",
      "code_snippet": "        if input_code in code['code_snippet']:\n            match_data = code\n            match_data_list.append(match_data)\n    return match_data_list\n\n\ndef print_match_result(data_list):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 21:33:30 +0800",
      "file": "git/history/main.py",
      "code_snippet": "            raise SystemExit(\"Error: Could not create the output dir.\")\n\n    if func_argv == \"--mapping\":\n        if not os.path.exists(input_file):\n            print(\"{}: No such file or directory\".format(input_file))\n        else:\n            commit_history = mapping.get_code(input_file)\n            mapping.print_code_list(commit_history)\n            history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\n            with open(history_file, 'w') as f:\n                json.dump(commit_history, f, indent=3)\n    elif func_argv == \"--fsearch\":\n        commit_history = mapping.get_code(dir_path)\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\n        with open(history_file, 'w') as f:\n            json.dump(commit_history, f, indent=3)\n        input_code = search_commit_history.get_input_code(input_file)\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\n        search_commit_history.print_match_result(search_result)\n    elif func_argv == \"--search\":\n        commit_history = mapping.get_code(dir_path)\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\n        with open(history_file, 'w') as f:\n            json.dump(commit_history, f, indent=3)\n        input_code = input_file\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\n        search_commit_history.print_match_result(search_result)\n    else:\n        print(\"Wrong argument!\")\n        print(\"Usage: python main.py input_code_file output_dir <--search|--mapping>\")\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 21:33:30 +0800",
      "file": "git/history/test.txt",
      "code_snippet": "from commit_history import mapping\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n\nif __name__ == '__main__':\n    program = os.path.basename(sys.argv[0])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "    return email\n\n\ndef get_file_name(line):\n    regex = re.compile(\"\\+{3}\\sb/(.*)$\")\n    file_name = regex.findall(line)\n    return file_name\n\n\ndef get_code_snippet(lines):\n    snippet_list = list()\n    snippet = list()\n    regex_plus = re.compile(\"^\\+(?!\\+\\+)(.*)$\")\n    regex_minus = re.compile(\"^-(?!--)(.*)$\")\n    regex_remain = re.compile(\"^\\s(.*)\")\n    regex_pause = re.compile(\"^(@@|hash)\")\n    for line in lines:\n        snippet_plus = regex_plus.findall(line)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "        if len(snippet_plus):\n            snippet = snippet_plus\n        elif len(snippet_minus):\n            snippet = str()\n            # snippet = snippet_minus\n        elif len(snippet_remain):\n            snippet = snippet_remain\n        if regex_pause.findall(line):",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "    else:\n        return 0\n\n\ndef get_change_file(line):\n    regex = re.compile(\"diff\\s--git\\sa/.*\\sb/(.*)$\")\n    file_name = regex.findall(line)\n    if file_name:\n        return file_name\n    else:\n        return 0\n\n# def get_line_index(inp):\n#     a_start_line_list = list()\n#     a_total_line_list = list()",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "#         a_total_line_list.extend(a_total_line)\n#         b_start_line_list.extend(b_start_line)\n#         b_total_line_list.extend(b_total_line)\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "    lines = data.split(\"\\n\")\n    for index, line in enumerate(lines):\n        code_dict = dict()\n        author = get_info.get_author(line)\n        if len(author):\n            email = get_info.get_email(line)\n            if len(email):\n                commit_author = author[0]\n                # code_dict['author'] = commit_author\n                # print(commit_author)\n                commit_email = email[0]\n                # code_dict['email'] = commit_email\n                # print(commit_email)\n                # code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n                # code_dict['code_snippet'] = code_snippet\n        elif get_info.get_change_file(line):\n            commit_file = get_info.get_change_file(line)\n            code_dict['file'] = commit_file[0]\n        elif get_info.get_change_section(line):\n            code_dict['file'] = commit_file[0]\n            code_dict['author'] = commit_author\n            # print(commit_author)\n            code_dict['email'] = commit_email\n            # print(commit_email)\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n            code_dict['code_snippet'] = \"\\n\".join(code_snippet)\n            code_list.append(code_dict)\n    for code in code_list:\n        print('\\033[1;31m')",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"File Name: {}\".format(code['file']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        # snippet = code[\"code_snippet\"]\n        # for line in snippet:\n        #     print(line)\n        print(code[\"code_snippet\"])\n    return code_list",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/git_search/search_commit_history.py",
      "code_snippet": "#!~/anaconda3/bin/ python\n# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUtility for searching code snippet in git commit history\n\"\"\"\n\nimport os\nimport json\n\n\ndef get_input_code(input_file):\n    input_code = open(input_file).read()\n    return input_code\n\n\ndef search_in_history(input_code, output_dir):\n    history_file = os.path.join(output_dir, 'commit_history.json')\n    with open(history_file) as f:\n        history = json.load(f)\n    match_data_list = list()\n    for code in history:\n        if input_code in code['code_snippet']:\n            match_data = code\n            match_data_list.append(match_data)\n    if len(match_data_list):\n        return match_data_list\n    else:\n        return \"Error! No data in this git repository match with input code.\"\n\n\ndef print_match_result(data_list):\n    print(\"Found {} match result\".format(len(data_list)))\n    for data in data_list:\n        print('\\033[1;31m')\n        print('*' * 150)\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Author: {}\".format(data['author']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Email: {}\".format(data['email']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"File Name: {}\".format(data['file']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        print(data[\"code_snippet\"])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/main.py",
      "code_snippet": "# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUSAGE: %(program)s input_code_file output_dir <--search|--mapping>\n\"\"\"\n\nimport json\nimport logging\nimport os\nimport sys\n\nfrom commit_history import mapping\nfrom git_search import search_commit_history\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-07 18:49:18 +0800",
      "file": "git/history/main.py",
      "code_snippet": "    logger.info(\"running %s \" % ' '.join(sys.argv))\n\n    # check and process input arguments\n    if len(sys.argv) != 4:\n        print(len(sys.argv))\n        raise SystemExit(\"Usage: python main.py input_code_file output_dir <--search|--mapping>\")\n    input_file, output_dir, func_argv = sys.argv[1:4]\n    if not os.path.exists(output_dir):\n        try:\n            os.makedirs(output_dir)\n        except OSError as exception:\n            raise SystemExit(\"Error: Could not create the output dir.\")\n\n    if func_argv == \"--mapping\":\n        commit_history = mapping.get_code(input_file)\n        history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\n        with open(history_file, 'w') as f:\n            json.dump(commit_history, f, indent=3)\n    elif func_argv == \"--search\":\n        if not os.path.exists(os.path.join(output_dir, 'commit_history.json')):\n            try:\n                commit_history = mapping.get_code(input_file)\n                history_file = os.path.join(dir_path, output_dir, 'commit_history.json')\n                with open(history_file, 'w') as f:\n                    json.dump(commit_history, f, indent=3)\n            except OSError as exception:\n                raise SystemExit(\"Error: Search failed\")\n        input_code = search_commit_history.get_input_code(input_file)\n        search_result = search_commit_history.search_in_history(input_code, output_dir)\n        search_commit_history.print_match_result(search_result)\n    else:\n        print(\"Lack of argument\")\n        print(\"Usage: python main.py input_code_file output_dir <--search|--mapping>\")\n\n\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-05 21:22:45 +0800",
      "file": "git/user/README.md",
      "code_snippet": "laerteoliveira, laerte-oliveira, oliveira, vloliveira\nwhich are mainly generated by the middle and last name.\n\nNow the matching rate is 31%(22/71).\n\nThe next step is to establish the identity linkage between Github and Stack Overflow users who can not be matched by the linked account. And the link can be found by the users' behavior features and writing style features.\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 21:20:04 +0800",
      "file": "git/user/Get_Info/Info/git_info_awesome.json",
      "code_snippet": "[\n   {\n      \"email\": null,\n      \"location\": \"India\",\n      \"login\": \"t27\",\n      \"stackoverflow_login\": \"t27\",\n      \"company\": \"BITS Pilani\",\n      \"name\": \"Tarang Shah\"\n   },\n   {\n      \"email\": \"sindresorhus@gmail.com\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"login\": \"sindresorhus\",\n      \"stackoverflow_login\": \"sindresorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"name\": \"Sindre Sorhus\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Edinburgh\",\n      \"login\": \"lmichelbacher\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Lukas Michelbacher\"\n   },\n   {\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"location\": null,\n      \"login\": \"Kazhnuz\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Kazhnuz\"\n   },\n   {\n      \"email\": \"aleksandar@r3bl.me\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"login\": \"aleksandar-todorovic\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"likedan\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Kedan Li\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"web-flow\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"GitHub Web Flow\"\n   },\n   {\n      \"email\": \"me@kennethreitz.org\",\n      \"location\": \"Winchester, VA\",\n      \"login\": \"kennethreitz\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Heroku\",\n      \"name\": \"Kenneth Reitz\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"United States\",\n      \"login\": \"johnjago\",\n      \"stackoverflow_login\": \"johnjago\",\n      \"company\": null,\n      \"name\": \"John Jago\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Germany\",\n      \"login\": \"sfischer13\",\n      \"stackoverflow_login\": \"sfischer13\",\n      \"company\": null,\n      \"name\": \"Stefanus\"\n   },\n   {\n      \"email\": \"sergey@ukstv.me\",\n      \"location\": \"Volgograd, Russia\",\n      \"login\": \"ukstv\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@machinomy \",\n      \"name\": \"Sergey Ukustov\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"Siilwyn\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Selwyn\"\n   },\n   {\n      \"email\": \"hq@ccu.io\",\n      \"location\": \"Stuttgart, Germany\",\n      \"login\": \"hobbyquaker\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Sebastian Raff\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"stetso\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": null\n   },\n   {\n      \"email\": \"info@roaldnefs.com\",\n      \"location\": \"The Netherlands\",\n      \"login\": \"roaldnefs\",\n      \"stackoverflow_login\": \"roaldnefs\",\n      \"company\": \"@Warpnet\",\n      \"name\": \"Roald Nefs\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Dallas, TX\",\n      \"login\": \"chasegiunta\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Chase Giunta\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Berlin; Twitter @lauritaapplez\",\n      \"login\": \"LappleApple\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Zalando\",\n      \"name\": \"Lauri Apple\"\n   },\n   {\n      \"email\": \"meitarm+github@gmail.com\",\n      \"location\": \"https://cyberbusking.org/\",\n      \"login\": \"meitar\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"name\": \"Meitar M.\"\n   },\n   {\n      \"email\": \"angrykoala@outlook.es\",\n      \"location\": \"Madrid & Granada, Spain\",\n      \"login\": \"angrykoala\",\n      \"stackoverflow_login\": \"angrykoala\",\n      \"company\": null,\n      \"name\": \"Andr\\u00e9s\"\n   },\n   {\n      \"email\": \"ooade96@gmail.com\",\n      \"location\": \"Lagos, Nigeria\",\n      \"login\": \"ooade\",\n      \"stackoverflow_login\": \"ooade\",\n      \"company\": null,\n      \"name\": \"Ademola Adegbuyi\"\n   },\n   {\n      \"email\": \"mezood@gmail.com\",\n      \"location\": \"Barcelona, Catalonia\",\n      \"login\": \"mezod\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Joan Boixad\\u00f3s\"\n   },\n   {\n      \"email\": \"sheon.han@gmail.com\",\n      \"location\": null,\n      \"login\": \"sheonhan\",\n      \"stackoverflow_login\": \"sheonhan\",\n      \"company\": \"@PrincetonUniversity\",\n      \"name\": \"Sheon Han\"\n   },\n   {\n      \"email\": \"github@miguelpiedrafita.com\",\n      \"location\": \"Spain\",\n      \"login\": \"m1guelpf\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"name\": \"Miguel Piedrafita\"\n   },\n   {\n      \"email\": \"craig@davison.io\",\n      \"location\": \"Hampshire, UK\",\n      \"login\": \"davisonio\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Craig Davison\"\n   },\n   {\n      \"email\": \"noginsk@rambler.ru\",\n      \"location\": \"Moscow\",\n      \"login\": \"vitalets\",\n      \"stackoverflow_login\": \"vitalets\",\n      \"company\": \"Yandex\",\n      \"name\": \"Vitaliy Potapov\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"mipmip\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Lingewoud B.V.\",\n      \"name\": \"Pim Snel\"\n   },\n   {\n      \"email\": \"arbox@yandex.com\",\n      \"location\": \"Germany\",\n      \"login\": \"arbox\",\n      \"stackoverflow_login\": \"arbox\",\n      \"company\": null,\n      \"name\": \"Andrei Beliankou\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Athens, Greece\",\n      \"login\": \"k4m4\",\n      \"stackoverflow_login\": \"k4m4\",\n      \"company\": null,\n      \"name\": \"Nikolaos Kamarinakis\"\n   },\n   {\n      \"email\": \"akashtndn.acm@gmail.com\",\n      \"location\": \"India\",\n      \"login\": \"analyticalmonk\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@socialcopsdev\",\n      \"name\": \"Akash Tandon\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Europe\",\n      \"login\": \"faroit\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Fabian-Robert St\\u00f6ter\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"East Earl, PA\",\n      \"login\": \"RyanZim\",\n      \"stackoverflow_login\": \"RyanZim\",\n      \"company\": \"@ExodusMovement \",\n      \"name\": \"Ryan Zimmerman\"\n   },\n   {\n      \"email\": \"richard.littauer@gmail.com\",\n      \"location\": \"Montr\\u00e9al\",\n      \"login\": \"RichardLitt\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@mntnr \",\n      \"name\": \"Richard Littauer\"\n   },\n   {\n      \"email\": \"victorlaertedoliveira@gmail.com\",\n      \"location\": \"Recife, Pernambuco - Brazil\",\n      \"login\": \"victorlaerte\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@liferay \",\n      \"name\": \"Victor Laerte Oliveira\"\n   },\n   {\n      \"email\": \"xiaohanyu1988@gmail.com\",\n      \"location\": \"Singapore\",\n      \"login\": \"xiaohanyu\",\n      \"stackoverflow_login\": \"xiaohanyu\",\n      \"company\": null,\n      \"name\": \"Xiao Hanyu\"\n   },\n   {\n      \"email\": \"mail@davidlambauer.de\",\n      \"location\": \"Germany\",\n      \"login\": \"DavidLambauer\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@AOEpeople \",\n      \"name\": \"DavidLamabuer\"\n   },\n   {\n      \"email\": \"kevinmartensson@gmail.com\",\n      \"location\": \"Sweden\",\n      \"login\": \"kevva\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@imagemin @yeoman\",\n      \"name\": \"Kevin M\\u00e5rtensson\"\n   },\n   {\n      \"email\": \"matthewvita@live.com\",\n      \"location\": \"Los Angeles, US\",\n      \"login\": \"MatthewVita\",\n      \"stackoverflow_login\": \"MatthewVita\",\n      \"company\": null,\n      \"name\": \"Matthew Vita\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Germany, pretty central\",\n      \"login\": \"kud1ing\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": null\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"jbmoelker\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"De Voorhoede\",\n      \"name\": \"Jasper Moelker\"\n   },\n   {\n      \"email\": \"david@madeawkward.com\",\n      \"location\": \"The Netherlands\",\n      \"login\": \"davidvanleeuwen\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Awkward\",\n      \"name\": \"David van Leeuwen\"\n   },\n   {\n      \"email\": \"boik@tdohacker.org\",\n      \"location\": \"Taiwan\",\n      \"login\": \"qazbnm456\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Boik\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"France\",\n      \"login\": \"armaldio\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Quentin Goinaud\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Zagreb, Croatia\",\n      \"login\": \"mislavcimpersak\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Mislav Cimper\\u0161ak\"\n   },\n   {\n      \"email\": \"sjfricke@wisc.edu\",\n      \"location\": null,\n      \"login\": \"sjfricke\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Spencer\"\n   },\n   {\n      \"email\": \"quang@absentsoft.com\",\n      \"location\": \"Central Mass.\",\n      \"login\": \"quangv\",\n      \"stackoverflow_login\": \"quangv\",\n      \"company\": \"Absent Software\",\n      \"name\": \"Quang Van\"\n   },\n   {\n      \"email\": \"kontakt@kminek.pl\",\n      \"location\": null,\n      \"login\": \"kminek\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Grzesiek W\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Columbia, MD\",\n      \"login\": \"pmatseykanets\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Peter Matseykanets\"\n   },\n   {\n      \"email\": \"github@gdi2290.com\",\n      \"location\": \"San Francisco, CA\",\n      \"login\": \"gdi2290\",\n      \"stackoverflow_login\": \"gdi2290\",\n      \"company\": \"@TipeIO\",\n      \"name\": \"PatrickJS [tipe.io]\"\n   },\n   {\n      \"email\": \"bouzlibop@gmail.com\",\n      \"location\": \"Krak\\u00f3w\",\n      \"login\": \"bouzlibop\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Adrian Baran\"\n   },\n   {\n      \"email\": null,\n      \"location\": null,\n      \"login\": \"BubuAnabelas\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Joaqu\\u00edn Serna\"\n   },\n   {\n      \"email\": \"g.jaloveckas@gmail.com\",\n      \"location\": \"Vilnius, Lithuania\",\n      \"login\": \"podo\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Giedrius Jaloveckas\"\n   },\n   {\n      \"email\": \"terry.t.um@gmail.com\",\n      \"location\": \"Waterloo, ON, Canada\",\n      \"login\": \"terryum\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"University of Waterloo\",\n      \"name\": \"Terry Taewoong Um\"\n   },\n   {\n      \"email\": \"lucasbr.dafonseca@gmail.com\",\n      \"location\": \"Vit\\u00f3ria - ES\",\n      \"login\": \"LucasBassetti\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@Integration-Alpha\",\n      \"name\": \"Lucas Bassetti\"\n   },\n   {\n      \"email\": \"james@james.am\",\n      \"location\": \"Cambridge, United Kingdom\",\n      \"login\": \"TheJambo\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"James Osborn\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Pune, India\",\n      \"login\": \"dar5hak\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Darshak Parikh\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Gandhinagar, India\",\n      \"login\": \"aviaryan\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"name\": \"Avi Aryan\"\n   },\n   {\n      \"email\": \"peterkokot@gmail.com\",\n      \"location\": \"Area 51\",\n      \"login\": \"petk\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@php-earth \",\n      \"name\": \"Peter Kokot\"\n   },\n   {\n      \"email\": \"wiens.joshua@gmail.com\",\n      \"location\": \"Twitter - @d3viant0ne \",\n      \"login\": \"d3viant0ne\",\n      \"stackoverflow_login\": \"d3viant0ne\",\n      \"company\": null,\n      \"name\": \"Joshua Wiens\"\n   },\n   {\n      \"email\": \"terkel@terkel.com\",\n      \"location\": \"Los Angeles, CA\",\n      \"login\": \"terkelg\",\n      \"stackoverflow_login\": \"terkelg\",\n      \"company\": \"@activetheory\",\n      \"name\": \"Terkel\"\n   },\n   {\n      \"email\": \"mail@michael-kuehnel.de\",\n      \"location\": \"Kassel, Germany\",\n      \"login\": \"mischah\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Micromata GmbH\",\n      \"name\": \"Michael K\\u00fchnel\"\n   },\n   {\n      \"email\": \"kaspar.emanuel@gmail.com\",\n      \"location\": null,\n      \"login\": \"kasbah\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Kaspar Emanuel\"\n   },\n   {\n      \"email\": \"jessetalavera@aol.com\",\n      \"location\": \"New York, NY\",\n      \"login\": \"JesseTG\",\n      \"stackoverflow_login\": \"JesseTG\",\n      \"company\": null,\n      \"name\": \"Jesse Talavera-Greenberg\"\n   },\n   {\n      \"email\": \"spiros.gerokostas@gmail.com\",\n      \"location\": \"Athens\",\n      \"login\": \"sger\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Binary Level\",\n      \"name\": \"Spiros Gerokostas\"\n   },\n   {\n      \"email\": \"tuxtimo@gmail.com\",\n      \"location\": \"__switzerland__\",\n      \"login\": \"timofurrer\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Timo Furrer\"\n   },\n   {\n      \"email\": \"harshal.priyadarshi@utexas.edu\",\n      \"location\": \"Austin, TX\",\n      \"login\": \"harpribot\",\n      \"stackoverflow_login\": \"harpribot\",\n      \"company\": \"University of Texas at Austin\",\n      \"name\": \"Harshal Priyadarshi\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Belarus\",\n      \"login\": \"aliesbelik\",\n      \"stackoverflow_login\": \"aliesbelik\",\n      \"company\": null,\n      \"name\": \"Aliaksandr Belik\"\n   },\n   {\n      \"email\": \"hbokhoven@gmail.com\",\n      \"location\": \"Groningen, the Netherlands\",\n      \"login\": \"hbokh\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@wearespindle \",\n      \"name\": \"Henk\"\n   },\n   {\n      \"email\": \"adnan@websemantics.ca\",\n      \"location\": \"Toronto, Canada\",\n      \"login\": \"websemantics\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"Web Semantics, Inc.\",\n      \"name\": \"Adnan M.Sagar, PhD\"\n   },\n   {\n      \"email\": null,\n      \"location\": \"Seattle, WA\",\n      \"login\": \"vors\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": \"@Dropbox\",\n      \"name\": \"Sergei Vorobev\"\n   },\n   {\n      \"email\": \"nicolesaidy@gmail.com\",\n      \"location\": null,\n      \"login\": \"nicolesaidy\",\n      \"stackoverflow_login\": \"null\",\n      \"company\": null,\n      \"name\": \"Nicole Saidy\"\n   },\n   {\n      \"email\": \"tandavas@famolus.com\",\n      \"location\": \"Bangkok, Thailand\",\n      \"login\": \"tandavas\",\n      \"stackoverflow_login\": \"tandavas\",\n      \"company\": \"@Famolus \",\n      \"name\": \"Thanakron Tandavas\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/Info/git_info_awesome.json",
      "code_snippet": "[\n   {\n      \"email\": null,\n      \"name\": \"Tarang Shah\",\n      \"company\": \"BITS Pilani\",\n      \"login\": \"t27\",\n      \"location\": \"India\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"sindresorhus@gmail.com\",\n      \"name\": \"Sindre Sorhus\",\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"login\": \"sindresorhus\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Lukas Michelbacher\",\n      \"company\": null,\n      \"login\": \"lmichelbacher\",\n      \"location\": \"Edinburgh\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"name\": \"Kazhnuz\",\n      \"company\": null,\n      \"login\": \"Kazhnuz\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"aleksandar@r3bl.me\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"company\": null,\n      \"login\": \"aleksandar-todorovic\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Kedan Li\",\n      \"company\": null,\n      \"login\": \"likedan\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"GitHub Web Flow\",\n      \"company\": null,\n      \"login\": \"web-flow\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"me@kennethreitz.org\",\n      \"name\": \"Kenneth Reitz\",\n      \"company\": \"Heroku\",\n      \"login\": \"kennethreitz\",\n      \"location\": \"Winchester, VA\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"John Jago\",\n      \"company\": null,\n      \"login\": \"johnjago\",\n      \"location\": \"United States\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Stefanus\",\n      \"company\": null,\n      \"login\": \"sfischer13\",\n      \"location\": \"Germany\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"sergey@ukstv.me\",\n      \"name\": \"Sergey Ukustov\",\n      \"company\": \"@machinomy \",\n      \"login\": \"ukstv\",\n      \"location\": \"Volgograd, Russia\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Selwyn\",\n      \"company\": null,\n      \"login\": \"Siilwyn\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"hq@ccu.io\",\n      \"name\": \"Sebastian Raff\",\n      \"company\": null,\n      \"login\": \"hobbyquaker\",\n      \"location\": \"Stuttgart, Germany\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": null,\n      \"company\": null,\n      \"login\": \"stetso\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"info@roaldnefs.com\",\n      \"name\": \"Roald Nefs\",\n      \"company\": \"@Warpnet\",\n      \"login\": \"roaldnefs\",\n      \"location\": \"The Netherlands\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Chase Giunta\",\n      \"company\": null,\n      \"login\": \"chasegiunta\",\n      \"location\": \"Dallas, TX\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Lauri Apple\",\n      \"company\": \"Zalando\",\n      \"login\": \"LappleApple\",\n      \"location\": \"Berlin; Twitter @lauritaapplez\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"meitarm+github@gmail.com\",\n      \"name\": \"Meitar M.\",\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"login\": \"meitar\",\n      \"location\": \"https://cyberbusking.org/\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"angrykoala@outlook.es\",\n      \"name\": \"Andr\\u00e9s\",\n      \"company\": null,\n      \"login\": \"angrykoala\",\n      \"location\": \"Madrid & Granada, Spain\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"ooade96@gmail.com\",\n      \"name\": \"Ademola Adegbuyi\",\n      \"company\": null,\n      \"login\": \"ooade\",\n      \"location\": \"Lagos, Nigeria\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"mezood@gmail.com\",\n      \"name\": \"Joan Boixad\\u00f3s\",\n      \"company\": null,\n      \"login\": \"mezod\",\n      \"location\": \"Barcelona, Catalonia\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"sheon.han@gmail.com\",\n      \"name\": \"Sheon Han\",\n      \"company\": \"@PrincetonUniversity\",\n      \"login\": \"sheonhan\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"github@miguelpiedrafita.com\",\n      \"name\": \"Miguel Piedrafita\",\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"login\": \"m1guelpf\",\n      \"location\": \"Spain\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"craig@davison.io\",\n      \"name\": \"Craig Davison\",\n      \"company\": null,\n      \"login\": \"davisonio\",\n      \"location\": \"Hampshire, UK\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"noginsk@rambler.ru\",\n      \"name\": \"Vitaliy Potapov\",\n      \"company\": \"Yandex\",\n      \"login\": \"vitalets\",\n      \"location\": \"Moscow\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Pim Snel\",\n      \"company\": \"Lingewoud B.V.\",\n      \"login\": \"mipmip\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"arbox@yandex.com\",\n      \"name\": \"Andrei Beliankou\",\n      \"company\": null,\n      \"login\": \"arbox\",\n      \"location\": \"Germany\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Nikolaos Kamarinakis\",\n      \"company\": null,\n      \"login\": \"k4m4\",\n      \"location\": \"Athens, Greece\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"akashtndn.acm@gmail.com\",\n      \"name\": \"Akash Tandon\",\n      \"company\": \"@socialcopsdev\",\n      \"login\": \"analyticalmonk\",\n      \"location\": \"India\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Fabian-Robert St\\u00f6ter\",\n      \"company\": null,\n      \"login\": \"faroit\",\n      \"location\": \"Europe\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Ryan Zimmerman\",\n      \"company\": \"@ExodusMovement \",\n      \"login\": \"RyanZim\",\n      \"location\": \"East Earl, PA\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"richard.littauer@gmail.com\",\n      \"name\": \"Richard Littauer\",\n      \"company\": \"@mntnr \",\n      \"login\": \"RichardLitt\",\n      \"location\": \"Montr\\u00e9al\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"victorlaertedoliveira@gmail.com\",\n      \"name\": \"Victor Laerte Oliveira\",\n      \"company\": \"@liferay \",\n      \"login\": \"victorlaerte\",\n      \"location\": \"Recife, Pernambuco - Brazil\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"xiaohanyu1988@gmail.com\",\n      \"name\": \"Xiao Hanyu\",\n      \"company\": null,\n      \"login\": \"xiaohanyu\",\n      \"location\": \"Singapore\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"mail@davidlambauer.de\",\n      \"name\": \"DavidLamabuer\",\n      \"company\": \"@AOEpeople \",\n      \"login\": \"DavidLambauer\",\n      \"location\": \"Germany\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"kevinmartensson@gmail.com\",\n      \"name\": \"Kevin M\\u00e5rtensson\",\n      \"company\": \"@imagemin @yeoman\",\n      \"login\": \"kevva\",\n      \"location\": \"Sweden\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"matthewvita@live.com\",\n      \"name\": \"Matthew Vita\",\n      \"company\": null,\n      \"login\": \"MatthewVita\",\n      \"location\": \"Los Angeles, US\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": null,\n      \"company\": null,\n      \"login\": \"kud1ing\",\n      \"location\": \"Germany, pretty central\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Jasper Moelker\",\n      \"company\": \"De Voorhoede\",\n      \"login\": \"jbmoelker\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"david@madeawkward.com\",\n      \"name\": \"David van Leeuwen\",\n      \"company\": \"Awkward\",\n      \"login\": \"davidvanleeuwen\",\n      \"location\": \"The Netherlands\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"boik@tdohacker.org\",\n      \"name\": \"Boik\",\n      \"company\": null,\n      \"login\": \"qazbnm456\",\n      \"location\": \"Taiwan\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Quentin Goinaud\",\n      \"company\": null,\n      \"login\": \"armaldio\",\n      \"location\": \"France\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Mislav Cimper\\u0161ak\",\n      \"company\": null,\n      \"login\": \"mislavcimpersak\",\n      \"location\": \"Zagreb, Croatia\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"sjfricke@wisc.edu\",\n      \"name\": \"Spencer\",\n      \"company\": null,\n      \"login\": \"sjfricke\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"quang@absentsoft.com\",\n      \"name\": \"Quang Van\",\n      \"company\": \"Absent Software\",\n      \"login\": \"quangv\",\n      \"location\": \"Central Mass.\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"kontakt@kminek.pl\",\n      \"name\": \"Grzesiek W\",\n      \"company\": null,\n      \"login\": \"kminek\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Peter Matseykanets\",\n      \"company\": null,\n      \"login\": \"pmatseykanets\",\n      \"location\": \"Columbia, MD\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"github@gdi2290.com\",\n      \"name\": \"PatrickJS [tipe.io]\",\n      \"company\": \"@TipeIO\",\n      \"login\": \"gdi2290\",\n      \"location\": \"San Francisco, CA\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"bouzlibop@gmail.com\",\n      \"name\": \"Adrian Baran\",\n      \"company\": null,\n      \"login\": \"bouzlibop\",\n      \"location\": \"Krak\\u00f3w\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Joaqu\\u00edn Serna\",\n      \"company\": null,\n      \"login\": \"BubuAnabelas\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"g.jaloveckas@gmail.com\",\n      \"name\": \"Giedrius Jaloveckas\",\n      \"company\": null,\n      \"login\": \"podo\",\n      \"location\": \"Vilnius, Lithuania\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"terry.t.um@gmail.com\",\n      \"name\": \"Terry Taewoong Um\",\n      \"company\": \"University of Waterloo\",\n      \"login\": \"terryum\",\n      \"location\": \"Waterloo, ON, Canada\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"lucasbr.dafonseca@gmail.com\",\n      \"name\": \"Lucas Bassetti\",\n      \"company\": \"@Integration-Alpha\",\n      \"login\": \"LucasBassetti\",\n      \"location\": \"Vit\\u00f3ria - ES\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"james@james.am\",\n      \"name\": \"James Osborn\",\n      \"company\": null,\n      \"login\": \"TheJambo\",\n      \"location\": \"Cambridge, United Kingdom\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Darshak Parikh\",\n      \"company\": null,\n      \"login\": \"dar5hak\",\n      \"location\": \"Pune, India\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Avi Aryan\",\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"login\": \"aviaryan\",\n      \"location\": \"Gandhinagar, India\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"peterkokot@gmail.com\",\n      \"name\": \"Peter Kokot\",\n      \"company\": \"@php-earth \",\n      \"login\": \"petk\",\n      \"location\": \"Area 51\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"wiens.joshua@gmail.com\",\n      \"name\": \"Joshua Wiens\",\n      \"company\": null,\n      \"login\": \"d3viant0ne\",\n      \"location\": \"Twitter - @d3viant0ne \",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"terkel@terkel.com\",\n      \"name\": \"Terkel\",\n      \"company\": \"@activetheory\",\n      \"login\": \"terkelg\",\n      \"location\": \"Los Angeles, CA\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"mail@michael-kuehnel.de\",\n      \"name\": \"Michael K\\u00fchnel\",\n      \"company\": \"Micromata GmbH\",\n      \"login\": \"mischah\",\n      \"location\": \"Kassel, Germany\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"kaspar.emanuel@gmail.com\",\n      \"name\": \"Kaspar Emanuel\",\n      \"company\": null,\n      \"login\": \"kasbah\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"jessetalavera@aol.com\",\n      \"name\": \"Jesse Talavera-Greenberg\",\n      \"company\": null,\n      \"login\": \"JesseTG\",\n      \"location\": \"New York, NY\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"spiros.gerokostas@gmail.com\",\n      \"name\": \"Spiros Gerokostas\",\n      \"company\": \"Binary Level\",\n      \"login\": \"sger\",\n      \"location\": \"Athens\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"tuxtimo@gmail.com\",\n      \"name\": \"Timo Furrer\",\n      \"company\": null,\n      \"login\": \"timofurrer\",\n      \"location\": \"__switzerland__\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"harshal.priyadarshi@utexas.edu\",\n      \"name\": \"Harshal Priyadarshi\",\n      \"company\": \"University of Texas at Austin\",\n      \"login\": \"harpribot\",\n      \"location\": \"Austin, TX\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Aliaksandr Belik\",\n      \"company\": null,\n      \"login\": \"aliesbelik\",\n      \"location\": \"Belarus\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"hbokhoven@gmail.com\",\n      \"name\": \"Henk\",\n      \"company\": \"@wearespindle \",\n      \"login\": \"hbokh\",\n      \"location\": \"Groningen, the Netherlands\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"adnan@websemantics.ca\",\n      \"name\": \"Adnan M.Sagar, PhD\",\n      \"company\": \"Web Semantics, Inc.\",\n      \"login\": \"websemantics\",\n      \"location\": \"Toronto, Canada\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": null,\n      \"name\": \"Sergei Vorobev\",\n      \"company\": \"@Dropbox\",\n      \"login\": \"vors\",\n      \"location\": \"Seattle, WA\",\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"nicolesaidy@gmail.com\",\n      \"name\": \"Nicole Saidy\",\n      \"company\": null,\n      \"login\": \"nicolesaidy\",\n      \"location\": null,\n      \"stackoverflow_login\": \"null\"\n   },\n   {\n      \"email\": \"tandavas@famolus.com\",\n      \"name\": \"Thanakron Tandavas\",\n      \"company\": \"@Famolus \",\n      \"login\": \"tandavas\",\n      \"location\": \"Bangkok, Thailand\",\n      \"stackoverflow_login\": \"null\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    default_info = {\"display_name\":\"\",\"location\":\"\",\"user_id\":0}\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\n               '&site=stackoverflow'.format(name,name)\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\n    #try:\n    info = request_api(user_api + app_key)\n    print(\"Getting possible Stack Overflow user info from api: {}\".format(user_api))\n    user_info = info[\"items\"]\n    if not user_info == None:\n        for item in user_info:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "        user_source = request_source(stk_url)\n        # user_source = request_url(stk_url)\n        user_href = re.findall(r\"<a.*?href=.*?<\\/a>\", user_source, re.I | re.S | re.M)\n        # find it directly\n        git_account = None\n        for href in user_href:\n            if 'https://github.com/' in href:",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    default_info = []\n    new_info = []\n    for git_developer in git_info:\n        print(\"finding Github user {} on Stack Overflow...\".format(git_developer[\"name\"]))\n        possible_name = nf.possible_names(git_developer[\"name\"], git_developer[\"login\"])\n        print(\"possible name:{}\".format(possible_name))\n        for name in possible_name:\n            # the info of developers with the same name but different info\n            stk_info = InfoByName(name)\n            if not stk_info == default_info:\n                print(\"The possible info of Stack Overflow user {} is {}\".format(name, stk_info))\n                for stk_developer in stk_info:\n                    user_id = stk_developer['user_id']\n                    git_account = GetGitAccount(user_id)",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "                if not git_developer[\"stackoverflow_login\"] == \"null\":\n                    break\n            else:\n                print(\"The Stack Overflow info of possible username {} for github user {} can not be found\".format(name,git_developer[\"name\"]))\n\n        if not git_developer[\"stackoverflow_login\"] == \"null\":\n            print(\"The Stack Overflow display_name for github user {} is {}\".format(git_developer[\"name\"],git_developer['stackoverflow_login']))",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "import json\nimport types\n\ngit_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n# git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\ngit_info = gt.get_info(git_api)\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_awesome.json'\ncTime = time.time()\nprint(\"Dumping the info...\")\nwith open(info_file, 'w') as ctfile:\n    json.dump(git_info, ctfile, indent=3)\nprint(time.time() - cTime)\n\nf = open(info_file,encoding='utf-8')\ngit_info = json.load(f)\nstk_count = total_count = 0\n\ncTime = time.time()\nprint(\"Matching developers between Github and Stack Overflow...\")\nnew_info = st.match_info(git_info)\nprint(time.time() - cTime)\n\nprint(\"Saving the results of matching...\")\ncTime = time.time()\nwith open(info_file, 'w') as ctfile:\n    json.dump(new_info, ctfile, indent=3)\nprint(time.time() - cTime)\n\nfor item in new_info:\n    if not item[\"stackoverflow_login\"] == \"null\":",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:05:48 +0800",
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "import Get_Info.get_info_git as gt\n\n\ndef name_form(name):\n    name_split = name.split()\n    form = []\n\n    if len(name_split) == 1:\n        single_name = name_split[0]\n        len_single = len(single_name)\n        if len_single >= 3:\n            for i in range(1,len_single -1):\n                form.append(single_name[0:i+2])\n            form.append(single_name[len_single-4:len_single-1])\n        else:\n            form = single_name\n\n    elif len(name_split) == 2:\n        form.append(name_split[0][0].upper() + name_split[1].lower())\n        form.append(name_split[0][0].lower() + name_split[1].lower())\n        form.append(name_split[1].lower() + name_split[0][0].lower())\n        form.append(name_split[1].lower() + name_split[0][0].upper())\n        form.append(name_split[0].lower() + name_split[1].lower())\n        form.append(name_split[0].lower() + '_' + name_split[1].lower())\n\n    elif len(name_split) == 3:\n        form.append(name_split[1].lower() + name_split[2].lower())\n        form.append(name_split[1].lower() + '-' + name_split[2].lower())\n        form.append(name_split[0][0].lower() + name_split[1][0].lower() + name_split[2].lower())\n        form.append(name_split[2].lower())\n\n    else:\n        form = name\n\n    possible_name = [name]\n    for username in form:\n        possible_name.append(username)\n\n    return possible_name\n\ndef possible_names(name,login):\n    possible_name = [name,login]\n    if not name == None:\n        possible_name.extend(name_form(name))\n    else:\n        possible_name.extend(name_form(login))\n    possible_name = gt.delete_duplicate(possible_name)\n    return possible_name\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 19:03:46 +0800",
      "file": "git/user/README.md",
      "code_snippet": "\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish.\n\nWhen the input of possible usernames are only name and login, the matching rate is 15.49%(11/71), and the 11 matched developers are 100% matched because their github account and Stack Overflow account are linked.\n\nAnd then, possible usernames have been replenished. The possible forms of usernames are generated like:\n\nFor name which is 1 word long, like \"Kazhnuz\", the possible name forms are:\nKaz, Kazh, Kazhn, Kazhnu, Kazhnuz, nuz(the last three letters)\nThe reason for this generating method is that the Stack Overflow API for the query of user info can find all users whose name contains the input username, so for the uername that is 1 word long, we can simply split it into several words.\n\nFor name which is 2 words long, like \"Sindre Sorhus\", the possible usernames are:\n'Sindre Sorhus', 'sindresorhus', 'Ssorhus', 'ssorhus', 'sorhuss', 'sorhusS', 'sindre_sorhus'\nwhich are generated by different combination of the First and Last name.\n\nFor name which is 3 words long (few cases are like that), like \"Victor Laerte Oliveira\", the possible usernames are:\nlaerteoliveira, laerte-oliveira, oliveira, vloliveira\nwhich are mainly generated by the middle and last name.\n\nNow the matching rate is 29.58%(21/71).\n\nThe next step is to establish the identity linkage between Github and Stack Overflow users who can not be matched by the linked account. And the link can be found by the users' behavior features and writing style features.\n\nAuthor: AlvinZSJ",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/Info/git_info_awesome.json",
      "code_snippet": "[\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Lukas Michelbacher\",\n      \"login\": \"lmichelbacher\",\n      \"email\": null,\n      \"location\": \"Edinburgh\"\n   },\n   {\n      \"company\": \"@avajs @chalk @yeoman\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sindre Sorhus\",\n      \"login\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\",\n      \"location\": \"\\u00b0 \\u263e \\u2606 \\u00b8. \\u00b8\\u3000\\u2605  :.\\u3000 . \\u2022 \\u25cb \\u00b0 \\u2605\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Kazhnuz\",\n      \"login\": \"Kazhnuz\",\n      \"email\": \"kazhnuz@openmailbox.org\",\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Aleksandar Todorovi\\u0107 (r3bl)\",\n      \"login\": \"aleksandar-todorovic\",\n      \"email\": \"aleksandar@r3bl.me\",\n      \"location\": \"Br\\u010dko, Bosnia & Herzegovina\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Kedan Li\",\n      \"login\": \"likedan\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"GitHub Web Flow\",\n      \"login\": \"web-flow\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": \"Heroku\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Kenneth Reitz\",\n      \"login\": \"kennethreitz\",\n      \"email\": \"me@kennethreitz.org\",\n      \"location\": \"Winchester, VA\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"John Jago\",\n      \"login\": \"johnjago\",\n      \"email\": null,\n      \"location\": \"United States\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Stefanus\",\n      \"login\": \"sfischer13\",\n      \"email\": null,\n      \"location\": \"Germany\"\n   },\n   {\n      \"company\": \"@machinomy \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sergey Ukustov\",\n      \"login\": \"ukstv\",\n      \"email\": \"sergey@ukstv.me\",\n      \"location\": \"Volgograd, Russia\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Selwyn\",\n      \"login\": \"Siilwyn\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sebastian Raff\",\n      \"login\": \"hobbyquaker\",\n      \"email\": \"hq@ccu.io\",\n      \"location\": \"Stuttgart, Germany\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": null,\n      \"login\": \"stetso\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": \"@Warpnet\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Roald Nefs\",\n      \"login\": \"roaldnefs\",\n      \"email\": \"info@roaldnefs.com\",\n      \"location\": \"The Netherlands\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Chase Giunta\",\n      \"login\": \"chasegiunta\",\n      \"email\": null,\n      \"location\": \"Dallas, TX\"\n   },\n   {\n      \"company\": \"Zalando\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Lauri Apple\",\n      \"login\": \"LappleApple\",\n      \"email\": null,\n      \"location\": \"Berlin; Twitter @lauritaapplez\"\n   },\n   {\n      \"company\": \"Code signing GPG key: C42F 2F04 C42D 489E 23DD  71CE 07EF AA28 AB94 BC85\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Meitar M.\",\n      \"login\": \"meitar\",\n      \"email\": \"meitarm+github@gmail.com\",\n      \"location\": \"https://cyberbusking.org/\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"angrykoala\",\n      \"name\": \"Andr\\u00e9s\",\n      \"login\": \"angrykoala\",\n      \"email\": \"angrykoala@outlook.es\",\n      \"location\": \"Madrid & Granada, Spain\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Ademola Adegbuyi\",\n      \"login\": \"ooade\",\n      \"email\": \"ooade96@gmail.com\",\n      \"location\": \"Lagos, Nigeria\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Joan Boixad\\u00f3s\",\n      \"login\": \"mezod\",\n      \"email\": \"mezood@gmail.com\",\n      \"location\": \"Barcelona, Catalonia\"\n   },\n   {\n      \"company\": \"@PrincetonUniversity\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sheon Han\",\n      \"login\": \"sheonhan\",\n      \"email\": \"sheon.han@gmail.com\",\n      \"location\": null\n   },\n   {\n      \"company\": \"@UnMarkDocs || @DependenCI || @OrgManager || Miguel Piedrafita\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Miguel Piedrafita\",\n      \"login\": \"m1guelpf\",\n      \"email\": \"github@miguelpiedrafita.com\",\n      \"location\": \"Spain\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Craig Davison\",\n      \"login\": \"davisonio\",\n      \"email\": \"craig@davison.io\",\n      \"location\": \"Hampshire, UK\"\n   },\n   {\n      \"company\": \"Yandex\",\n      \"stackoverflow_login\": \"vitalets\",\n      \"name\": \"Vitaliy Potapov\",\n      \"login\": \"vitalets\",\n      \"email\": \"noginsk@rambler.ru\",\n      \"location\": \"Moscow\"\n   },\n   {\n      \"company\": \"Lingewoud B.V.\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Pim Snel\",\n      \"login\": \"mipmip\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"arbox\",\n      \"name\": \"Andrei Beliankou\",\n      \"login\": \"arbox\",\n      \"email\": \"arbox@yandex.com\",\n      \"location\": \"Germany\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"k4m4\",\n      \"name\": \"Nikolaos Kamarinakis\",\n      \"login\": \"k4m4\",\n      \"email\": null,\n      \"location\": \"Athens, Greece\"\n   },\n   {\n      \"company\": \"@socialcopsdev\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Akash Tandon\",\n      \"login\": \"analyticalmonk\",\n      \"email\": \"akashtndn.acm@gmail.com\",\n      \"location\": \"India\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Fabian-Robert St\\u00f6ter\",\n      \"login\": \"faroit\",\n      \"email\": null,\n      \"location\": \"Europe\"\n   },\n   {\n      \"company\": \"@ExodusMovement \",\n      \"stackoverflow_login\": \"RyanZim\",\n      \"name\": \"Ryan Zimmerman\",\n      \"login\": \"RyanZim\",\n      \"email\": null,\n      \"location\": \"East Earl, PA\"\n   },\n   {\n      \"company\": \"@mntnr \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Richard Littauer\",\n      \"login\": \"RichardLitt\",\n      \"email\": \"richard.littauer@gmail.com\",\n      \"location\": \"Montr\\u00e9al\"\n   },\n   {\n      \"company\": \"@liferay \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Victor Laerte Oliveira\",\n      \"login\": \"victorlaerte\",\n      \"email\": \"victorlaertedoliveira@gmail.com\",\n      \"location\": \"Recife, Pernambuco - Brazil\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Xiao Hanyu\",\n      \"login\": \"xiaohanyu\",\n      \"email\": \"xiaohanyu1988@gmail.com\",\n      \"location\": \"Singapore\"\n   },\n   {\n      \"company\": \"@AOEpeople \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"DavidLamabuer\",\n      \"login\": \"DavidLambauer\",\n      \"email\": \"mail@davidlambauer.de\",\n      \"location\": \"Germany\"\n   },\n   {\n      \"company\": \"@imagemin @yeoman\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Kevin M\\u00e5rtensson\",\n      \"login\": \"kevva\",\n      \"email\": \"kevinmartensson@gmail.com\",\n      \"location\": \"Sweden\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Matthew Vita\",\n      \"login\": \"MatthewVita\",\n      \"email\": \"matthewvita@live.com\",\n      \"location\": \"Los Angeles, US\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": null,\n      \"login\": \"kud1ing\",\n      \"email\": null,\n      \"location\": \"Germany, pretty central\"\n   },\n   {\n      \"company\": \"De Voorhoede\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Jasper Moelker\",\n      \"login\": \"jbmoelker\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": \"Awkward\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"David van Leeuwen\",\n      \"login\": \"davidvanleeuwen\",\n      \"email\": \"david@madeawkward.com\",\n      \"location\": \"The Netherlands\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Boik\",\n      \"login\": \"qazbnm456\",\n      \"email\": \"boik@tdohacker.org\",\n      \"location\": \"Taiwan\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Quentin Goinaud\",\n      \"login\": \"armaldio\",\n      \"email\": null,\n      \"location\": \"France\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Mislav Cimper\\u0161ak\",\n      \"login\": \"mislavcimpersak\",\n      \"email\": null,\n      \"location\": \"Zagreb, Croatia\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Spencer\",\n      \"login\": \"sjfricke\",\n      \"email\": \"sjfricke@wisc.edu\",\n      \"location\": null\n   },\n   {\n      \"company\": \"Absent Software\",\n      \"stackoverflow_login\": \"quangv\",\n      \"name\": \"Quang Van\",\n      \"login\": \"quangv\",\n      \"email\": \"quang@absentsoft.com\",\n      \"location\": \"Central Mass.\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Grzesiek W\",\n      \"login\": \"kminek\",\n      \"email\": \"kontakt@kminek.pl\",\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Peter Matseykanets\",\n      \"login\": \"pmatseykanets\",\n      \"email\": null,\n      \"location\": \"Columbia, MD\"\n   },\n   {\n      \"company\": \"@TipeIO\",\n      \"stackoverflow_login\": \"gdi2290\",\n      \"name\": \"PatrickJS [tipe.io]\",\n      \"login\": \"gdi2290\",\n      \"email\": \"github@gdi2290.com\",\n      \"location\": \"San Francisco, CA\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Adrian Baran\",\n      \"login\": \"bouzlibop\",\n      \"email\": \"bouzlibop@gmail.com\",\n      \"location\": \"Krak\\u00f3w\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Joaqu\\u00edn Serna\",\n      \"login\": \"BubuAnabelas\",\n      \"email\": null,\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Giedrius Jaloveckas\",\n      \"login\": \"podo\",\n      \"email\": \"g.jaloveckas@gmail.com\",\n      \"location\": \"Vilnius, Lithuania\"\n   },\n   {\n      \"company\": \"University of Waterloo\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Terry Taewoong Um\",\n      \"login\": \"terryum\",\n      \"email\": \"terry.t.um@gmail.com\",\n      \"location\": \"Waterloo, ON, Canada\"\n   },\n   {\n      \"company\": \"@Integration-Alpha\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Lucas Bassetti\",\n      \"login\": \"LucasBassetti\",\n      \"email\": \"lucasbr.dafonseca@gmail.com\",\n      \"location\": \"Vit\\u00f3ria - ES\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"James Osborn\",\n      \"login\": \"TheJambo\",\n      \"email\": \"james@james.am\",\n      \"location\": \"Cambridge, United Kingdom\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Darshak Parikh\",\n      \"login\": \"dar5hak\",\n      \"email\": null,\n      \"location\": \"Pune, India\"\n   },\n   {\n      \"company\": \"@iiitv @fossasia @appbaseio\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Avi Aryan\",\n      \"login\": \"aviaryan\",\n      \"email\": null,\n      \"location\": \"Gandhinagar, India\"\n   },\n   {\n      \"company\": \"@php-earth \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Peter Kokot\",\n      \"login\": \"petk\",\n      \"email\": \"peterkokot@gmail.com\",\n      \"location\": \"Area 51\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"d3viant0ne\",\n      \"name\": \"Joshua Wiens\",\n      \"login\": \"d3viant0ne\",\n      \"email\": \"wiens.joshua@gmail.com\",\n      \"location\": \"Twitter - @d3viant0ne \"\n   },\n   {\n      \"company\": \"@activetheory\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Terkel\",\n      \"login\": \"terkelg\",\n      \"email\": \"terkel@terkel.com\",\n      \"location\": \"Los Angeles, CA\"\n   },\n   {\n      \"company\": \"Micromata GmbH\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Michael K\\u00fchnel\",\n      \"login\": \"mischah\",\n      \"email\": \"mail@michael-kuehnel.de\",\n      \"location\": \"Kassel, Germany\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Kaspar Emanuel\",\n      \"login\": \"kasbah\",\n      \"email\": \"kaspar.emanuel@gmail.com\",\n      \"location\": null\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"JesseTG\",\n      \"name\": \"Jesse Talavera-Greenberg\",\n      \"login\": \"JesseTG\",\n      \"email\": \"jessetalavera@aol.com\",\n      \"location\": \"New York, NY\"\n   },\n   {\n      \"company\": \"Binary Level\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Spiros Gerokostas\",\n      \"login\": \"sger\",\n      \"email\": \"spiros.gerokostas@gmail.com\",\n      \"location\": \"Athens\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Timo Furrer\",\n      \"login\": \"timofurrer\",\n      \"email\": \"tuxtimo@gmail.com\",\n      \"location\": \"__switzerland__\"\n   },\n   {\n      \"company\": \"University of Texas at Austin\",\n      \"stackoverflow_login\": \"harpribot\",\n      \"name\": \"Harshal Priyadarshi\",\n      \"login\": \"harpribot\",\n      \"email\": \"harshal.priyadarshi@utexas.edu\",\n      \"location\": \"Austin, TX\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Aliaksandr Belik\",\n      \"login\": \"aliesbelik\",\n      \"email\": null,\n      \"location\": \"Belarus\"\n   },\n   {\n      \"company\": \"@wearespindle \",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Henk\",\n      \"login\": \"hbokh\",\n      \"email\": \"hbokhoven@gmail.com\",\n      \"location\": \"Groningen, the Netherlands\"\n   },\n   {\n      \"company\": \"Web Semantics, Inc.\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Adnan M.Sagar, PhD\",\n      \"login\": \"websemantics\",\n      \"email\": \"adnan@websemantics.ca\",\n      \"location\": \"Toronto, Canada\"\n   },\n   {\n      \"company\": \"@Dropbox\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sergei Vorobev\",\n      \"login\": \"vors\",\n      \"email\": null,\n      \"location\": \"Seattle, WA\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Nicole Saidy\",\n      \"login\": \"nicolesaidy\",\n      \"email\": \"nicolesaidy@gmail.com\",\n      \"location\": null\n   },\n   {\n      \"company\": \"@Famolus \",\n      \"stackoverflow_login\": \"tandavas\",\n      \"name\": \"Thanakron Tandavas\",\n      \"login\": \"tandavas\",\n      \"email\": \"tandavas@famolus.com\",\n      \"location\": \"Bangkok, Thailand\"\n   },\n   {\n      \"company\": null,\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Nir Galon\",\n      \"login\": \"nirgn975\",\n      \"email\": \"nir@galon.io\",\n      \"location\": \"Israel\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/Info/git_info_list.json",
      "code_snippet": "[\n   {\n      \"location\": \"Pittsburgh, PA\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"flacjacket\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sean Vig\"\n   },\n   {\n      \"location\": \"Mountain View, CA\",\n      \"company\": \"@google @tensorflow \",\n      \"email\": null,\n      \"login\": \"frankchn\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Frank Chen\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"web-flow\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"GitHub Web Flow\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": \"pavelchristof@gmail.com\",\n      \"login\": \"pavelchristof\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Pavel Christof\"\n   },\n   {\n      \"location\": \"South Korea\",\n      \"company\": \"Seoul National University\",\n      \"email\": \"me@taehoonlee.com\",\n      \"login\": \"taehoonlee\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Taehoon Lee\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"tensorflower-gardener\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"TensorFlower Gardener\"\n   },\n   {\n      \"location\": \"Sunnyvale, CA\",\n      \"company\": \"Azul Systems\",\n      \"email\": \"sanjoy@playingwithpointers.com\",\n      \"login\": \"sanjoy\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sanjoy Das\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"case540\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Michael Case\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"wujingyue\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": null\n   },\n   {\n      \"location\": \"San Francisco, CA\",\n      \"company\": null,\n      \"email\": \"derek.murray@gmail.com\",\n      \"login\": \"mrry\",\n      \"stackoverflow_login\": \"mrry\",\n      \"name\": \"Derek Murray\"\n   },\n   {\n      \"location\": \"New York City\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"langmore\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Ian Langmore\"\n   },\n   {\n      \"location\": \"Laniakea Supercluster\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"caisq\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Shanqing Cai\"\n   },\n   {\n      \"location\": \"San Francisco\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"martinwicke\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Martin Wicke\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"ispirmustafa\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": null\n   },\n   {\n      \"location\": \"San Francisco\",\n      \"company\": \"@google \",\n      \"email\": \"rohan100jain@gmail.com\",\n      \"login\": \"rohan100jain\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Rohan Jain\"\n   },\n   {\n      \"location\": \"Mountain View\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"sb2nov\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sourabh Bajaj\"\n   },\n   {\n      \"location\": \"New Mexico\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"jimpallomeni\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"John Impallomeni\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"gunan\",\n      \"stackoverflow_login\": \"gunan\",\n      \"name\": null\n   },\n   {\n      \"location\": \"Munich, Germany\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"vladmos\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Vladimir Moskva\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"hawkinsp\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Peter Hawkins\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"jpienaar\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": null\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": \"chris@ckennelly.com\",\n      \"login\": \"ckennelly\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Chris Kennelly\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"asimshankar\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Asim Shankar\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"allenlavoie\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Allen Lavoie\"\n   },\n   {\n      \"location\": \"Mountain View, CA\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"rryan\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"RJ Skerry-Ryan\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": \"xiejw0217@gmail.com\",\n      \"login\": \"xiejw\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"xiejw\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"annarev\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": null\n   },\n   {\n      \"location\": \"New York\",\n      \"company\": null,\n      \"email\": \"chris1tava@gmail.com\",\n      \"login\": \"ctava\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Chris Tava\"\n   },\n   {\n      \"location\": \"San Diego, CA\",\n      \"company\": \"UCSD\",\n      \"email\": null,\n      \"login\": \"chrisdonahue\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Chris Donahue\"\n   },\n   {\n      \"location\": \"Chicago, IL, US\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"terrytangyuan\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Yuan (Terry) Tang\"\n   },\n   {\n      \"location\": \"San Francisco, CA\",\n      \"company\": \"@tensorflow @google\",\n      \"email\": \"vomjom@vomjom.net\",\n      \"login\": \"jhseu\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Jonathan Hseu\"\n   },\n   {\n      \"location\": null,\n      \"company\": \"@google \",\n      \"email\": null,\n      \"login\": \"ebrevdo\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": null\n   },\n   {\n      \"location\": \"Mountain View\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"isaprykin\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Igor\"\n   },\n   {\n      \"location\": \"Mountain View, CA\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"jlebar\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Justin Lebar\"\n   },\n   {\n      \"location\": \"United States\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"sguada\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Sergio Guadarrama\"\n   },\n   {\n      \"location\": \"London, UK\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"anight\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Andrei Nigmatulin\"\n   },\n   {\n      \"location\": \"Ithaca, NY, USA\",\n      \"company\": \"Cornell University\",\n      \"email\": \"andru@cs.cornell.edu\",\n      \"login\": \"andrewcmyers\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Andrew Myers\"\n   },\n   {\n      \"location\": \"San Francisco, CA\",\n      \"company\": \".\",\n      \"email\": \"yaroslavvb@gmail.com\",\n      \"login\": \"yaroslavvb\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Yaroslav Bulatov\"\n   },\n   {\n      \"location\": \"Beijing, China.\",\n      \"company\": \"weibo, sina.\",\n      \"email\": null,\n      \"login\": \"facaiy\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Yan Facai (\\u989c\\u53d1\\u624d)\"\n   },\n   {\n      \"location\": null,\n      \"company\": \"@tensorflow \",\n      \"email\": \"akshayka@cs.stanford.edu\",\n      \"login\": \"akshayka\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Akshay Agrawal\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"saeta\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Brennan Saeta\"\n   },\n   {\n      \"location\": \"Mountain View, CA, USA\",\n      \"company\": \"Google\",\n      \"email\": null,\n      \"login\": \"aselle\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Andrew Selle\"\n   },\n   {\n      \"location\": null,\n      \"company\": \"@google \",\n      \"email\": null,\n      \"login\": \"learyg\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"Chris Leary\"\n   },\n   {\n      \"location\": \"Mountain View, CA\",\n      \"company\": null,\n      \"email\": null,\n      \"login\": \"yifeif\",\n      \"stackoverflow_login\": \"yifeif\",\n      \"name\": \"Yifei Feng\"\n   },\n   {\n      \"location\": null,\n      \"company\": null,\n      \"email\": \"dev@davidsoergel.com\",\n      \"login\": \"davidsoergel\",\n      \"stackoverflow_login\": \"null\",\n      \"name\": \"David Soergel\"\n   }\n]",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    app = '?per_page=100&client_id=8c3d71c8826d42e7cdf6' \\\n          '&client_secret=ae3a7ca2c74dffbf9558fff3b367e32e22140547'\n    res = requests.get(url+app)\n    res.encoding = 'utf-8'\n    info = res.json()\n    return info\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "    cTime = time.time()\n    print(\"Getting info of users in the commit history...\")\n    for item in developer_info:\n        print(item)\n        author_api = (item[\"author\"][\"url\"] if not item[\"author\"] == None else \"null\")\n        committer_api = (item[\"committer\"][\"url\"] if not item[\"committer\"] == None else \"null\")\n\n        if not author_api == \"null\":\n            author_info = request_url(author_api)\n            author_info = extract_dict(author_info)\n            Info.append(author_info)\n\n        if not committer_api == \"null\":\n            committer_info = request_url(committer_api)\n            committer_info = extract_dict(committer_info)\n            Info.append(committer_info)\n\n    print(time.time() - cTime)\n    Info = delete_duplicate(Info)\n    return Info",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import urllib\nimport Get_Info.name_form as nf\n\ndef request_api(api):\n    user_info = requests.get(api)\n    user_info = user_info.json()\n    return user_info\n\ndef request_source(source_url):\n    request2 = urllib.request.Request(source_url)\n    request2.add_header('user-agent', 'Mozilla/5.0')\n    response2 = urllib.request.urlopen(request2)\n    html2 = response2.read()",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "    default_info = {\"display_name\":\"\",\"location\":\"\",\"user_id\":0}\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\n               '&site=stackoverflow&key=ZEaUTt2btGSROV8q3NeOQg(('.format(name,name)\n    app_key = '&key=ZEaUTt2btGSROV8q3NeOQg(('\n    #try:\n    info = request_api(user_api + app_key)\n    print(user_api)\n    user_info = info[\"items\"]\n    if not user_info == None:\n        for item in user_info:\n            dict_info = {\"display_name\": item['display_name'],\n                         \"location\": (item[\"location\"] if \"location\" in item.keys() else \"null\"),\n                         \"user_id\": item[\"user_id\"]}\n            Info.append(dict_info)\n        Info = gt.delete_duplicate(Info)\n        return Info\n    else:\n        return default_info\n\ndef GetGitAccount(user_id):\n    default = \"null\"\n    if not user_id == None:\n        stk_url = 'https://stackoverflow.com/users/{}'.format(user_id)\n        user_source = request_source(stk_url)\n        # user_source = request_url(stk_url)\n        user_href = re.findall(r\"<a.*?href=.*?<\\/a>\", user_source, re.I | re.S | re.M)\n        # find it directly?\n        git_account = None\n        for href in user_href:\n            if 'https://github.com/' in href:\n                git_account = re.findall('href\\=\\\"https\\:\\/\\/github\\.com\\/(.*?)\\\"', href, re.S)\n                git_account = git_account[0]\n                print(git_account)\n        if not git_account == None:\n            return git_account\n        else:\n            return default\n    else:\n        return default\n\ndef match_info(git_info):\n    default_info = []\n    new_info = []\n    for git_developer in git_info:\n        possible_name = nf.name_form(git_developer[\"name\"], git_developer[\"login\"])\n        for name in possible_name:\n            # the info of developers with the same name but different info\n            stk_info = InfoByName(name)\n            print(stk_info)\n            if not stk_info == default_info:\n                for stk_developer in stk_info:\n                    user_id = stk_developer['user_id']\n                    git_account = GetGitAccount(user_id)\n                    if git_account == git_developer[\"login\"]:\n                        git_developer[\"stackoverflow_login\"] = git_account\n                        break\n                if not git_developer[\"stackoverflow_login\"] == \"null\":\n                    break\n            else:\n                break\n\n        if not git_developer[\"stackoverflow_login\"] == \"null\":\n            print(\"The Stack Overflow display_name for github user {} is {}\".format(git_developer[\"name\"],git_developer['stackoverflow_login']))\n        else:\n            print(\"The Stack Overflow display_name for github user {} not found\".format(git_developer[\"name\"]))\n\n        new_info.append(git_developer)\n    return new_info\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "import Get_Info.name_form as nf\nimport time\nimport json\nimport types\n\n# git_api = 'https://api.github.com/repos/sindresorhus/awesome/commits'\n# # git_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\n# git_info = gt.get_info(git_api)\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_awesome.json'\n# cTime = time.time()\n# print(\"Dumping the info...\")\n# with open(info_file, 'w') as ctfile:\n#     json.dump(git_info, ctfile, indent=3)\n# print(time.time() - cTime)\n\nf = open(info_file,encoding='utf-8')\ngit_info = json.load(f)\nstk_count = total_count = 0\n\nnew_info = st.match_info(git_info)\nwith open(info_file, 'w') as ctfile:\n    json.dump(new_info, ctfile, indent=3)\n\nfor item in new_info:\n    if not item[\"stackoverflow_login\"] == \"null\":\n        stk_count = stk_count + 1\n    total_count = total_count +1\n\nprint(\"The number of developers with Stack Overflow account is {}\".format(stk_count))\nprint(\"The number of developers is {}\".format(total_count))\nprint(\"Ratio:{}\".format(float(stk_count/total_count)))",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 18:27:32 +0800",
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "\n\ndef name_form(name,login):\n    \n    possible_name = [login,name]\n    return possible_name\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-05 14:50:59 +0800",
      "file": "git/history/commit_history/get_info.py",
      "code_snippet": "#!~/anaconda3/bin/ python\n# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUtilities to get some information from github commit history\n\"\"\"\n\nimport re\n\n\ndef get_author(line):\n    regex = re.compile(\"author:\\s(.*)?\\semail\")\n    author = regex.findall(line)\n    return author\n\n\ndef get_email(line):\n    # TODO: resolve \".com.cn\" or \".edu.cn\" case\n    regex = re.compile(\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+)\")\n    email = regex.findall(line)\n    return email\n\n\ndef get_code_snippet(lines):\n    snippet_list = list()\n    snippet = list()\n    regex_plus = re.compile(\"^\\+(?!\\+\\+)(.*)$\")\n    regex_minus = re.compile(\"^-(?!--)(.*)$\")\n    regex_remain = re.compile(\"^\\s+(.*)\")\n    regex_pause = re.compile(\"^(@@|hash)\")\n    for line in lines:\n        snippet_plus = regex_plus.findall(line)\n        snippet_minus = regex_minus.findall(line)\n        snippet_remain = regex_remain.findall(line)\n        if len(snippet_plus):\n            snippet = snippet_plus\n        elif len(snippet_minus):\n            snippet = snippet_minus\n        elif len(snippet_remain):\n            snippet = snippet_remain\n        if regex_pause.findall(line):\n            break\n        if len(snippet):\n            snippet_list.append(snippet[0])\n    return snippet_list\n\n\ndef get_change_section(line):\n    regex = re.compile(\"^@@\")\n    if regex.findall(line):\n        return 1\n    else:\n        return 0\n\n# def get_line_index(inp):\n#     a_start_line_list = list()\n#     a_total_line_list = list()\n#     b_start_line_list = list()\n#     b_total_line_list = list()\n#     lines = inp.split(\"\\n\")\n#     regex_a_start = re.compile(\"@@\\s-(\\d+),\\d+\\s\")\n#     regex_a_total = re.compile(\"@@\\s-\\d+,(\\d+)\\s\")\n#     regex_b_start = re.compile(\"\\+(\\d+),\\d+\\s@@\")\n#     regex_b_total = re.compile(\"\\+\\d+,(\\d+)\\s@@\")\n#     for line in lines:\n#         a_start_line = regex_a_start.findall(line)\n#         a_total_line = regex_a_total.findall(line)\n#         b_start_line = regex_b_start.findall(line)\n#         b_total_line = regex_b_total.findall(line)\n#         a_start_line_list.extend(a_start_line)\n#         a_total_line_list.extend(a_total_line)\n#         b_start_line_list.extend(b_start_line)\n#         b_total_line_list.extend(b_total_line)\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-05 14:50:59 +0800",
      "file": "git/history/commit_history/mapping.py",
      "code_snippet": "#!~/anaconda3/bin/ python\n# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUtilities mapping code snippets of every commit with author\n\"\"\"\n\nimport os\nfrom commit_history import get_info\n\n\ndef get_code(inp):\n    code_list = list()\n    command = \"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \" \\\n              \"--abbrev-commit -p \" + inp\\\n              # + \" > \" + outp + \"/log.txt\"\n    input_data = os.popen(command)\n    data = input_data.read()\n    # print(data)\n    lines = data.split(\"\\n\")\n    for index, line in enumerate(lines):\n        code_dict = dict()\n        tmp = get_info.get_author(line)\n        if len(tmp):\n            commit_author = tmp[0]\n            tmp = get_info.get_email(line)\n            if len(tmp):\n                code_dict['author'] = commit_author\n                # print(commit_author)\n                commit_email = tmp[0]\n                code_dict['email'] = commit_email\n                # print(commit_email)\n                code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n                code_dict['code_snippet'] = code_snippet\n                # code_list.append(code_dict)\n        elif get_info.get_change_section(line):\n            code_dict['author'] = commit_author\n            # print(commit_author)\n            code_dict['email'] = commit_email\n            # print(commit_email)\n            code_snippet = get_info.get_code_snippet(lines[(index + 1):len(lines)])\n            code_dict['code_snippet'] = code_snippet\n            code_list.append(code_dict)\n    for code in code_list:\n        print('\\033[1;31m')\n        print('*' * 150)\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Author: {}\".format(code['author']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Email: {}\".format(code['email']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        snippet = code[\"code_snippet\"]\n        for line in snippet:\n            print(line)\n    return code_list",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-05 14:50:59 +0800",
      "file": "git/history/main.py",
      "code_snippet": "import logging\nimport os\nimport sys\n\nfrom commit_history import mapping\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n\nif __name__ == '__main__':\n    program = os.path.basename(sys.argv[0])",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-05 14:50:59 +0800",
      "file": "git/history/main.py",
      "code_snippet": "        except OSError as exception:\n            raise SystemExit(\"Error: Could not create the output dir.\")\n\n    commit_history = mapping.get_code(input_file)\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-05 10:11:44 +0800",
      "file": "ast/README.md",
      "code_snippet": "First install Clang and pycparser with: \n\n    $ sudo apt-get install clang\n    $ pip install pycparser\n\n    ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-04 11:55:03 +0800",
      "file": "ast/AST2JSON.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nfrom __future__ import print_function\nfrom pycparser import parse_file, c_ast\nfrom pycparser.plyparser import Coord\nfrom PrintAST import AST_preprocess\nimport json\nimport sys\nimport re\n\nsys.path.extend(['.', '..'])\nRE_CHILD_ARRAY = re.compile(r'(.*)\\[(.*)\\]')\nRE_INTERNAL_ATTR = re.compile('__.*__')\n\nclass CJsonError(Exception):\n    pass\n\n\ndef memodict(fn):\n    \"\"\" Fast memoization decorator for a function taking a single argument \"\"\"\n    class memodict(dict):\n        def __missing__(self, key):\n            ret = self[key] = fn(key)\n            return ret\n    return memodict().__getitem__\n\n\n@memodict\ndef child_attrs_of(klass):\n    \"\"\"\n    Given a Node class, get a set of child attrs.\n    Memoized to avoid highly repetitive string manipulation\n\n    \"\"\"\n    non_child_attrs = set(klass.attr_names)\n    all_attrs = set([i for i in klass.__slots__ if not RE_INTERNAL_ATTR.match(i)])\n    return all_attrs - non_child_attrs\n\n\ndef to_dict(node):\n    \"\"\" Recursively convert an ast into dict representation. \"\"\"\n    klass = node.__class__\n\n    result = {}\n\n    # Metadata\n    result['_nodetype'] = klass.__name__\n\n    # Local node attributes\n    for attr in klass.attr_names:\n        result[attr] = getattr(node, attr)\n\n    # Coord object\n    if node.coord:\n        result['coord'] = str(node.coord)\n    else:\n        result['coord'] = None\n\n    # Child attributes\n    for child_name, child in node.children():\n        # Child strings are either simple (e.g. 'value') or arrays (e.g. 'block_items[1]')\n        match = RE_CHILD_ARRAY.match(child_name)\n        if match:\n            array_name, array_index = match.groups()\n            array_index = int(array_index)\n            # arrays come in order, so we verify and append.\n            result[array_name] = result.get(array_name, [])\n            if array_index != len(result[array_name]):\n                raise CJsonError('Internal ast error. Array {} out of order. '\n                    'Expected index {}, got {}'.format(\n                    array_name, len(result[array_name]), array_index))\n            result[array_name].append(to_dict(child))\n        else:\n            result[child_name] = to_dict(child)\n\n    # Any child attributes that were missing need \"None\" values in the json.\n    for child_attr in child_attrs_of(klass):\n        if child_attr not in result:\n            result[child_attr] = None\n\n    return result\n\n\ndef to_json(node, **kwargs):\n    \"\"\" Convert ast node to json string \"\"\"\n    return json.dumps(to_dict(node), **kwargs)\n\n\ndef file_to_dict(filename):\n    \"\"\" Load C file into dict representation of ast \"\"\"\n    ast = parse_file(filename, use_cpp=True)\n    return to_dict(ast)\n\n\ndef file_to_json(filename, **kwargs):\n    \"\"\" Load C file into json string representation of ast \"\"\"\n    ast = parse_file(filename, use_cpp=True)\n    return to_json(ast, **kwargs)\n\n\ndef _parse_coord(coord_str):\n    \"\"\" Parse coord string (file:line[:column]) into Coord object. \"\"\"\n    if coord_str is None:\n        return None\n\n    vals = coord_str.split(':')\n    vals.extend([None] * 3)\n    filename, line, column = vals[:3]\n    return Coord(filename, line, column)\n\n\ndef _convert_to_obj(value):\n    \"\"\"\n    Convert an object in the dict representation into an object.\n    Note: Mutually recursive with from_dict.\n\n    \"\"\"\n    value_type = type(value)\n    if value_type == dict:\n        return from_dict(value)\n    elif value_type == list:\n        return [_convert_to_obj(item) for item in value]\n    else:\n        # String\n        return value\n\n\ndef from_dict(node_dict):\n    \"\"\" Recursively build an ast from dict representation \"\"\"\n    class_name = node_dict.pop('_nodetype')\n\n    klass = getattr(c_ast, class_name)\n\n    # Create a new dict containing the key-value pairs which we can pass\n    # to node constructors.\n    objs = {}\n    for key, value in node_dict.items():\n        if key == 'coord':\n            objs[key] = _parse_coord(value)\n        else:\n            objs[key] = _convert_to_obj(value)\n\n    # Use keyword parameters, which works thanks to beautifully consistent\n    # ast Node initializers.\n    return klass(**objs)\n\ndef write_json(file_name):\n    path = AST_preprocess(file_name)\n    ast_dict = file_to_dict(path)\n    ast = from_dict(ast_dict)\n    ast_json = to_json(ast, sort_keys=True, indent=4)\n    with open('./example/ast.json', 'w+') as f:\n        f.write(ast_json)\n    f.close()\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-04 11:55:03 +0800",
      "file": "ast/GenerateHash.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nfrom __future__ import print_function\nfrom pycparser import c_parser, c_ast\nfrom PrintAST import AST_preprocess\nfrom AST2JSON import write_json\nimport sys\n\nfile_name = './example/test.cc'\nwrite_json(file_name)\n\n\n",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-04 11:55:03 +0800",
      "file": "ast/PrintAST.py",
      "code_snippet": "#!/usr/bin/python\n# -*- coding: UTF-8 -*-\nimport os\n\ndef AST_preprocess(code_path):\n    '''Preprocess of the code. Remove the header files and standard libraries'''\n    path_new = './example/test_new.cc'\n    with open(code_path , 'r') as f:\n        lines = f.readlines()\n    f.close()\n\n    with open(path_new , 'w') as f_new:\n        for line in lines:\n            if '#include' in line:\n                line = '\\n'\n            f_new.write(line)\n    f_new.close()\n    return path_new\n\ndef AST_print(code_path):\n    '''Print AST based on command line'''\n    command = 'clang -Xclang -ast-dump -fsyntax-only ' + path\n    F = os.popen(command)\n    print (F.read())",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-04 11:55:03 +0800",
      "file": "ast/README.md",
      "code_snippet": "# Use abstract syntax tree for code similarity detection\nAuthor: king-jojo\n\nClang is a useful tool to show complete information of the syntax tree of a program. However, in order to find the same pattern of the syntax tree of two different programs, we should tailor the syntax tree to preserve the information we really need. We apply pycparser to generate the shrinked syntax tree and save it in the json format. Next, we will use the json file to work out the hash table of the tree. \n\nFirst install Clang and pycparser with: \n\n    $ sudo apt-get install clang\n    $ sudo apt-get install pycparser\n\n    ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-04 11:55:03 +0800",
      "file": "ast/example/test_new.cc",
      "code_snippet": "",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-03 16:43:31 +0800",
      "file": "git/history/README.md",
      "code_snippet": "cd a folder which is a git repository, then run like this:\n\n```\n$ python your_dir_of_main.py input_code_file/folder output_dir\n```\n\n## Output\n\n![img](http://oscaak8qx.bkt.clouddn.com/Screen%20Shot%202017-10-03%20at%204.31.52%20PM.png)\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "Zimeng Qiu"
   },
   {
      "commit_date": "2017-10-03 16:26:55 +0800",
      "file": "git/history/README.md",
      "code_snippet": "cd a folder which is a git repository, then run like this:\n\n```\npython your_dir_of_main.py input_code_file/folder output_dir\n```",
      "email": "CNPG-qzm@hotmail.com",
      "author": "Zimeng Qiu"
   },
   {
      "commit_date": "2017-10-03 16:26:09 +0800",
      "file": "git/history/README.md",
      "code_snippet": "# Map Git Commit History to Authors\nAuthor: ch-chiu\n\n## Usage\n\ncd a folder which is a git repository, then run like this:\n\n```\n%(program)s input_code_file/folder output_dir\n```",
      "email": "CNPG-qzm@hotmail.com",
      "author": "Zimeng Qiu"
   },
   {
      "commit_date": "2017-10-03 16:21:52 +0800",
      "file": "git/history/main.py",
      "code_snippet": "dir_path = os.path.dirname(os.path.realpath(__file__))\n\n\ndef get_author(line):\n    regex = re.compile(\"author:\\s(.*)?\\semail\")\n    author = regex.findall(line)\n    return author\n\n\ndef get_email(line):\n    # TODO: resolve \".com.cn\" or \".edu.cn\" case\n    regex = re.compile(\".+?([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+)\")\n    email = regex.findall(line)\n    return email\n\n\ndef get_code_snippet(lines):\n    snippet_list = list()\n    snippet = list()\n    regex_plus = re.compile(\"^\\+(?!\\+\\+)(.*)$\")\n    regex_minus = re.compile(\"^-(?!--)(.*)$\")\n    regex_remain = re.compile(\"^\\s+(.*)\")\n    regex_pause = re.compile(\"^(@@|hash)\")\n    for line in lines:\n        snippet_plus = regex_plus.findall(line)\n        snippet_minus = regex_minus.findall(line)\n        snippet_remain = regex_remain.findall(line)\n        if len(snippet_plus):\n            snippet = snippet_plus\n        elif len(snippet_minus):\n            snippet = snippet_minus\n        elif len(snippet_remain):\n            snippet = snippet_remain\n        if regex_pause.findall(line):\n            break\n        if len(snippet):\n            snippet_list.append(snippet[0])\n    return snippet_list\n\n\ndef get_change_section(line):\n    regex = re.compile(\"^@@\")\n    if regex.findall(line):\n        return 1\n    else:\n        return 0\n\n# def get_line_index(inp):\n#     a_start_line_list = list()\n#     a_total_line_list = list()\n#     b_start_line_list = list()\n#     b_total_line_list = list()\n#     lines = inp.split(\"\\n\")\n#     regex_a_start = re.compile(\"@@\\s-(\\d+),\\d+\\s\")\n#     regex_a_total = re.compile(\"@@\\s-\\d+,(\\d+)\\s\")\n#     regex_b_start = re.compile(\"\\+(\\d+),\\d+\\s@@\")\n#     regex_b_total = re.compile(\"\\+\\d+,(\\d+)\\s@@\")\n#     for line in lines:\n#         a_start_line = regex_a_start.findall(line)\n#         a_total_line = regex_a_total.findall(line)\n#         b_start_line = regex_b_start.findall(line)\n#         b_total_line = regex_b_total.findall(line)\n#         a_start_line_list.extend(a_start_line)\n#         a_total_line_list.extend(a_total_line)\n#         b_start_line_list.extend(b_start_line)\n#         b_total_line_list.extend(b_total_line)\n#     return a_start_line_list, a_total_line_list, b_start_line_list, b_total_line_list\n\n\ndef get_code(inp):\n    code_list = list()\n    command = \"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email: %ae' \" \\\n              \"--abbrev-commit -p \" + inp\\\n              # + \" > \" + outp + \"/log.txt\"\n    input_data = os.popen(command)\n    data = input_data.read()\n    # print(data)\n    lines = data.split(\"\\n\")\n    for index, line in enumerate(lines):\n        code_dict = dict()\n        tmp = get_author(line)\n        if len(tmp):\n            commit_author = tmp[0]\n            tmp = get_email(line)\n            if len(tmp):\n                code_dict['author'] = commit_author\n                # print(commit_author)\n                commit_email = tmp[0]\n                code_dict['email'] = commit_email\n                # print(commit_email)\n                code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\n                code_dict['code_snippet'] = code_snippet\n                # code_list.append(code_dict)\n        elif get_change_section(line):\n            code_dict['author'] = commit_author\n            # print(commit_author)\n            code_dict['email'] = commit_email\n            # print(commit_email)\n            code_snippet = get_code_snippet(lines[(index + 1):len(lines)])\n            code_dict['code_snippet'] = code_snippet\n            code_list.append(code_dict)\n    # (fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list) = get_line_index(data)\n    # code_data = zip(commit_author, commit_email, fa_start_line_list, fa_total_line_list, fb_start_line_list, fb_total_line_list)\n    # code_dict = [{\"author\": author, \"email\": email, \"a_start_line\": a_start_line, \"a_total_line\": a_total_line,\n    #                  \"b_start_line\": b_start_line, \"b_total_line\": b_total_line}\n    #              for author, email, a_start_line, a_total_line, b_start_line, b_total_line in code_data]\n    # print(code_list)\n    for code in code_list:\n        print('\\033[1;31m')\n        print('*' * 150)\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Author: {}\".format(code['author']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print(\"Email: {}\".format(code['email']))\n        print(\"\")\n        print(\"\")\n        print(\"\")\n        print('*' * 150)\n        print('\\033[0m')\n        snippet = code[\"code_snippet\"]\n        for line in snippet:\n            print(line)\n    return code_list\n\n\nif __name__ == '__main__':\n    program = os.path.basename(sys.argv[0])\n    logger = logging.getLogger(program)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-03 16:21:52 +0800",
      "file": "git/history/main.py",
      "code_snippet": "            raise SystemExit(\"Error: Could not create the output dir.\")\n\n    commit_history = get_code(input_file)\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 22:43:47 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\nThe script get_info_git.py is used for dumping the developers' name, login, company, location and e-mail.\nThe script get_info_stackoverflow.py is used for dumping the developers' display_name, location and github account.\nThe script name_form.py lists the possible Stack Overflow display_name for a developer found in the github commit history.\nRun the script main.py and you can get a json file containing developers' info of github and Stack Overflow display_name.\n\nIt is easy to get the info of developers in the github commit history using github API. However, it's complicated to get the corresponding info of the same user on Stack Overflow since the info for mapping is limited. Only the username and location of a developer can be obtained, which means we should list different possible usernames for each user in the commit history. Possible name forms need to be found, and the range of related users can only be narrowed by info of location now, which is insufficient.\n\nFortunately, the relating github account has been found in the Stack Overflow users' profile, which, however, is not accessible through Stack Overflow API but can be extracted from the source code of the users' profile page, of which the url is something like:\n\nhttps://stackoverflow.com/users/user_id\n\nThat is to say, we can get the github account using user_id. For the possible username of developers on Stack Overflow, the user_id can be obtained through API. And then the github account can be extracted from the source code of the web page using Regular Expression.\n\nHowever, few users have been found to provide their github account on their profile page, which makes the mapping between developers on github and stack overflow hard to finish.\n\nThe next step is to establish the possible username list using a generally form which can be used for all users.\n\nAuthor: AlvinZSJ",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:50:34 +0800",
      "file": "git/user/Get_Info/__init__.py",
      "code_snippet": "#package",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:50:34 +0800",
      "file": "git/user/Get_Info/get_info_git.py",
      "code_snippet": "import requests\nimport types\nimport time\n\n\ndef delete_duplicate(dict):\n    Info = []\n    for item in dict:\n        if not item in Info:\n            Info.append(item)\n    return Info\n\ndef request_url(url):\n    app = '?per_page=100&client_id=8c3d71c8826d42e7cdf6' \\\n          '&client_secret=ae3a7ca2c74dffbf9558fff3b367e32e22140547'\n    res = requests.get(url+app)\n    info = res.json()\n    return info\n\ndef extract_dict(res):\n    # The info for comparsion with that in other open source community\n    dict_info = {\"name\":res[\"name\"],\"login\":res[\"login\"],\n                 \"company\":res[\"company\"],\"location\":res[\"location\"],\n                 \"email\":res[\"email\"],\"stackoverflow_login\":\"null\"}\n    return dict_info\n\ndef get_info(commit_api):\n    developer_info = request_url(commit_api)\n    Info = []\n    cTime = time.time()\n    print(\"Getting info of users in the commit history...\")\n    for item in developer_info:\n        author_api = item[\"author\"][\"url\"]\n        committer_api = item[\"committer\"][\"url\"]\n\n        author_info = request_url(author_api)\n        author_info = extract_dict(author_info)\n\n        committer_info = request_url(committer_api)\n        committer_info = extract_dict(committer_info)\n\n        Info.append(author_info)\n        Info.append(committer_info)\n    print(time.time() - cTime)\n    Info = delete_duplicate(Info)\n    return Info\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:50:34 +0800",
      "file": "git/user/Get_Info/get_info_stackoverflow.py",
      "code_snippet": "import Get_Info.get_info_git as gt\nimport re\nimport requests\nimport urllib\nimport Get_Info.name_form as nf\n\ndef request_url(url):\n    request2 = urllib.request.Request(url)\n    request2.add_header('user-agent', 'Mozilla/5.0')\n    response2 = urllib.request.urlopen(request2)\n    html2 = response2.read()\n    user_source = html2.decode(\"utf8\")\n    response2.close()\n    return user_source\n\ndef InfoByName(name):\n    Info = []\n    default_info = {\"display_name\":\"\",\"location\":\"\",\"user_id\":0}\n    user_api = 'https://api.stackexchange.com/2.2/users' \\\n               '?pagesize=10&order=asc&min={}&sort=name&inname={}' \\\n               '&site=stackoverflow'.format(name,name)\n    try:\n        info = request_url(user_api)\n        user_info = info.json()\n        user_info = user_info[\"items\"]\n        for item in user_info:\n            dict_info = {\"display_name\": item['display_name'],\n                         \"location\": item[\"location\"], \"user_id\": item[\"user_id\"]}\n            Info.append(dict_info)\n        Info = gt.delete_duplicate(Info)\n        return Info\n    except:\n        return default_info\n\ndef GetGitAccount(user_id):\n    default = \"null\"\n    if not user_id == None:\n        try:\n            stk_url = 'https://stackoverflow.com/users/{}'.format(1732559)\n            user_source = request_url(stk_url)\n            # user_source = request_url(stk_url)\n            user_href = re.findall(r\"<a.*?href=.*?<\\/a>\", user_source, re.I | re.S | re.M)\n            # find it directly?\n            for href in user_href:\n                if 'https://github.com/' in href:\n                    print(href)\n                    git_account = re.findall(\">(.*?)</a>\", href, re.S)\n                    print(git_account)\n            if not git_account == None:\n                return git_account\n            else:\n                return default\n        except:\n            return default\n    else:\n        return default\n\ndef match_info(git_info):\n    default_info = {\"display_name\": \"\", \"location\": \"\", \"user_id\": 0}\n    new_info = []\n    for git_developer in git_info:\n        possible_name = nf.name_form(git_developer[\"name\"], git_developer[\"login\"])\n        for name in possible_name:\n            # the info of developers with the same name but different info\n            stk_info = InfoByName(name)\n            if not stk_info == default_info:\n                for stk_developer in stk_info:\n                    print(stk_developer)\n                    user_id = stk_developer['user_id']\n                    git_account = GetGitAccount(user_id)\n                    if git_account == git_developer[\"login\"]:\n                        git_developer[\"stackoverflow_login\"] = git_account\n                        break\n                if not git_developer[\"stackoverflow_login\"] == \"null\":\n                    print(\"The Stack Overflow display_name for github user {} is {}\".format(git_developer[\"name\"]),\n                          git_account)\n                    break\n            else:\n                print(\"The Stack Overflow display_name for github user {} not found\".format(git_developer[\"name\"]))\n                break\n        new_info.append(git_developer)\n    return new_info\n\n\n\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:50:34 +0800",
      "file": "git/user/Get_Info/main.py",
      "code_snippet": "import Get_Info.get_info_git as gt\nimport Get_Info.get_info_stackoverflow as st\nimport Get_Info.name_form as nf\nimport time\nimport json\n\n\ngit_api = 'https://api.github.com/repos/tensorflow/tensorflow/commits'\ncTime = time.time()\ngit_info = gt.get_info(git_api)\ninfo_file = '/home/ace/zsj/Get_Info/Info/git_info_list.json'\nwith open(info_file, 'w') as ctfile:\n    json.dump(git_info, ctfile, indent=3)\nprint(time.time() - cTime)\n\n# f = open(info_file,encoding='utf-8')\n# git_info = json.load(f)\n\nnew_info = st.match_info(git_info)\nwith open(info_file, 'w') as ctfile:\n    json.dump(new_info, ctfile, indent=3)\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:50:34 +0800",
      "file": "git/user/Get_Info/name_form.py",
      "code_snippet": "\n\n\ndef name_form(name,login):\n    possible_name = [name,login]\n    return possible_name\n\n",
      "email": "shenjia@whu.edu",
      "author": "AlvinZSJ"
   },
   {
      "commit_date": "2017-10-02 21:28:17 +0800",
      "file": "git/history/main.py",
      "code_snippet": "import logging\nimport os\nimport sys\nimport re\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 21:28:17 +0800",
      "file": "git/history/main.py",
      "code_snippet": "    data = input_data.read()\n    return data\n\n\ndef get_author(inp, outp):\n    author_list = list()\n    command = \"git log --pretty=format:'author: %aN' \" + inp\n    input_data = os.popen(command)\n    lines = input_data.readlines()\n    regex = re.compile(\"author:\\s(.*)?\\n?\")\n    for line in lines:\n        author = regex.findall(line)[0]\n        author_list.append(author)\n    return author_list\n\nif __name__ == '__main__':\n    program = os.path.basename(sys.argv[0])\n    logger = logging.getLogger(program)",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 21:28:17 +0800",
      "file": "git/history/main.py",
      "code_snippet": "\n    commit_history = get_code(input_file)\n    print(commit_history)\n    commit_author = get_author(input_file, output_dir)\n    print(commit_author)\n\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:49:27 +0800",
      "file": "git/history/.idea/history.iml",
      "code_snippet": "",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:49:27 +0800",
      "file": "git/history/.idea/misc.xml",
      "code_snippet": "",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:49:27 +0800",
      "file": "git/history/.idea/modules.xml",
      "code_snippet": "",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:49:27 +0800",
      "file": "git/history/.idea/workspace.xml",
      "code_snippet": "",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:46:30 +0800",
      "file": "git/history/.idea/workspace.xml",
      "code_snippet": "      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"259\">\n              <caret line=\"38\" column=\"33\" lean-forward=\"false\" selection-start-line=\"38\" selection-start-column=\"33\" selection-end-line=\"38\" selection-end-column=\"33\" />\n              <folding>\n                <element signature=\"e#238#252#0\" expanded=\"true\" />\n              </folding>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:46:30 +0800",
      "file": "git/history/.idea/workspace.xml",
      "code_snippet": "    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"259\">\n          <caret line=\"38\" column=\"33\" lean-forward=\"false\" selection-start-line=\"38\" selection-start-column=\"33\" selection-end-line=\"38\" selection-end-column=\"33\" />\n          <folding>\n            <element signature=\"e#238#252#0\" expanded=\"true\" />\n          </folding>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:43:07 +0800",
      "file": "git/history/.idea/history.iml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"TestRunnerService\">\n    <option name=\"projectConfiguration\" value=\"Nosetests\" />\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"Nosetests\" />\n  </component>\n</module>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:43:07 +0800",
      "file": "git/history/.idea/misc.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.5.2 (~/anaconda3/bin/python)\" project-jdk-type=\"Python SDK\" />\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:43:07 +0800",
      "file": "git/history/.idea/modules.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/history.iml\" filepath=\"$PROJECT_DIR$/.idea/history.iml\" />\n    </modules>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:43:07 +0800",
      "file": "git/history/.idea/workspace.xml",
      "code_snippet": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b852bcfd-6593-4ce5-850b-383493b2292f\" name=\"Default\" comment=\"\" />\n    <option name=\"EXCLUDED_CONVERTED_TO_IGNORED\" value=\"true\" />\n    <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CreatePatchCommitExecutor\">\n    <option name=\"PATCH_PATH\" value=\"\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n  <component name=\"FileEditorManager\">\n    <leaf>\n      <file leaf-file-name=\"main.py\" pinned=\"false\" current-in-tab=\"true\">\n        <entry file=\"file://$PROJECT_DIR$/main.py\">\n          <provider selected=\"true\" editor-type-id=\"text-editor\">\n            <state relative-caret-position=\"34\">\n              <caret line=\"23\" column=\"15\" lean-forward=\"true\" selection-start-line=\"23\" selection-start-column=\"15\" selection-end-line=\"23\" selection-end-column=\"15\" />\n              <folding>\n                <element signature=\"e#238#252#0\" expanded=\"true\" />\n              </folding>\n            </state>\n          </provider>\n        </entry>\n      </file>\n    </leaf>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/main.py\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectFrameBounds\">\n    <option name=\"x\" value=\"4\" />\n    <option name=\"y\" value=\"22\" />\n    <option name=\"width\" value=\"1436\" />\n    <option name=\"height\" value=\"878\" />\n  </component>\n  <component name=\"ProjectView\">\n    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\">\n      <flattenPackages />\n      <showMembers />\n      <showModules />\n      <showLibraryContents />\n      <hideEmptyPackages />\n      <abbreviatePackageNames />\n      <autoscrollToSource />\n      <autoscrollFromSource />\n      <sortByType />\n      <manualOrder />\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"Scope\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n          <PATH>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"history\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n            <PATH_ELEMENT>\n              <option name=\"myItemId\" value=\"example\" />\n              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n            </PATH_ELEMENT>\n          </PATH>\n        </subPane>\n      </pane>\n      <pane id=\"Scratches\" />\n    </panes>\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.main\">\n    <configuration default=\"false\" name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"README.md output\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Attests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Nosetests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Unittests\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"PUREUNITTEST\" value=\"true\" />\n      <option name=\"PARAMS\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <method />\n    </configuration>\n    <configuration default=\"true\" type=\"tests\" factoryName=\"py.test\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"history\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"FOLDER_NAME\" value=\"\" />\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\n      <option name=\"PATTERN\" value=\"\" />\n      <option name=\"USE_PATTERN\" value=\"false\" />\n      <option name=\"testToRun\" value=\"\" />\n      <option name=\"keywords\" value=\"\" />\n      <option name=\"params\" value=\"\" />\n      <option name=\"USE_PARAM\" value=\"false\" />\n      <option name=\"USE_KEYWORD\" value=\"false\" />\n      <method />\n    </configuration>\n    <list size=\"1\">\n      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n    </list>\n    <recent_temporary>\n      <list size=\"1\">\n        <item index=\"0\" class=\"java.lang.String\" itemvalue=\"Python.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"ShelveChangesManager\" show_recycled=\"false\">\n    <option name=\"remove_strategy\" value=\"false\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b852bcfd-6593-4ce5-850b-383493b2292f\" name=\"Default\" comment=\"\" />\n      <created>1506936120824</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1506936120824</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"4\" y=\"22\" width=\"1436\" height=\"878\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info id=\"Project\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.24946997\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"TODO\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"6\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Event Log\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Version Control\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"false\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Python Console\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Run\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"true\" show_stripe_button=\"true\" weight=\"0.32951653\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Structure\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Terminal\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Favorites\" active=\"false\" anchor=\"left\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"-1\" side_tool=\"true\" content_ui=\"tabs\" />\n      <window_info id=\"Debug\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.3994911\" sideWeight=\"0.5\" order=\"3\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Cvs\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"4\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Hierarchy\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"2\" side_tool=\"false\" content_ui=\"combo\" />\n      <window_info id=\"Message\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Commander\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"0\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Find\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.33\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Inspection\" active=\"false\" anchor=\"bottom\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.4\" sideWeight=\"0.5\" order=\"5\" side_tool=\"false\" content_ui=\"tabs\" />\n      <window_info id=\"Ant Build\" active=\"false\" anchor=\"right\" auto_hide=\"false\" internal_type=\"DOCKED\" type=\"DOCKED\" visible=\"false\" show_stripe_button=\"true\" weight=\"0.25\" sideWeight=\"0.5\" order=\"1\" side_tool=\"false\" content_ui=\"tabs\" />\n    </layout>\n  </component>\n  <component name=\"VcsContentAnnotationSettings\">\n    <option name=\"myLimit\" value=\"2678400000\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>23</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n      </breakpoints>\n      <option name=\"time\" value=\"3\" />\n    </breakpoint-manager>\n    <watches-manager />\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/example/rusthon_log.txt\">\n      <provider selected=\"true\" editor-type-id=\"LargeFileEditor\">\n        <state />\n      </provider>\n    </entry>\n    <entry file=\"file://$USER_HOME$/anaconda3/lib/python3.5/encodings/ascii.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"210\">\n          <caret line=\"25\" column=\"0\" lean-forward=\"false\" selection-start-line=\"25\" selection-start-column=\"0\" selection-end-line=\"25\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$USER_HOME$/anaconda3/lib/python3.5/codecs.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"148\">\n          <caret line=\"320\" column=\"0\" lean-forward=\"false\" selection-start-line=\"320\" selection-start-column=\"0\" selection-end-line=\"320\" selection-end-column=\"0\" />\n          <folding />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/main.py\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"34\">\n          <caret line=\"23\" column=\"15\" lean-forward=\"true\" selection-start-line=\"23\" selection-start-column=\"15\" selection-end-line=\"23\" selection-end-column=\"15\" />\n          <folding>\n            <element signature=\"e#238#252#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-10-02 19:43:07 +0800",
      "file": "git/history/example/record.json",
      "code_snippet": "{hash: f21727c ref:  (HEAD -> master) commit_title: Add-ast-part-and-generate-ast-of-the-program-based-on-clang date: 1506932084 author: <Zhenghui Jin> email: <zjin@vmware.com>}\n{hash: 9558691 ref:  commit_title: update date: 1506751165 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\n{hash: 4c8f4f0 ref:  commit_title: update date: 1506751106 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\n{hash: 1f567c2 ref:  commit_title: update date: 1506751008 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\n{hash: 3e6cb9c ref:  commit_title: update date: 1506749090 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\n{hash: 4f04f7e ref:  commit_title: update date: 1506748850 author: <ChrisQiu> email: <CNPG-qzm@hotmail.com>}\n{hash: fc3971a ref:  commit_title: Create-README.md date: 1506748071 author: <Zhe Wang> email: <a63188722@163.com>}\n{hash: 018bd60 ref:  commit_title: Initial-commit date: 1506746697 author: <Zhe Wang> email: <a63188722@163.com>}",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "1506746697",
      "file": "git/history/example/rusthon_log.txt",
      "code_snippet": "* f21727c  (HEAD -> master) Add-ast-part-and-generate-ast-of-the-program-based-on-clang 3 hours ago <Zhenghui Jin> <zjin@vmware.com>| \n| diff --git a/ast/PrintAST.py b/ast/PrintAST.py\n| new file mode 100644\n| index 0000000..d2ab21d\n| --- /dev/null\n| +++ b/ast/PrintAST.py\n| @@ -0,0 +1,25 @@\n| +#!/usr/bin/env python\n| +import os\n| +\n| +'''\n| +    Preprocess of the code. Remove the header files and standard libraries\n| +'''\n| +code_path = './example/test.cc'\n| +path_new = './example/test_new.cc'\n| +with open(code_path , 'r') as f:\n| +    lines = f.readlines()\n| +f.close()\n| +\n| +with open(path_new , 'w') as f_new:\n| +    for line in lines:\n| +        if '#include' in line:\n| +            continue\n| +        f_new.write(line)\n| +f_new.close()\n| +\n| +'''\n| +    Print AST based on command line\n| +'''\n| +command = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\n| +F = os.popen(command)\n| +print F.read()\n| diff --git a/ast/README.md b/ast/README.md\n| new file mode 100644\n| index 0000000..59999c1\n| --- /dev/null\n| +++ b/ast/README.md\n| @@ -0,0 +1,10 @@\n| +# Generate abstract syntax tree \n| +Author: king-jojo\n| +\n| +First install Clang with: \n| +\n| +    $ sudo apt-get install clang\n| +\n| +Usage: \n| +\n| +    \n| diff --git a/ast/example/test.cc b/ast/example/test.cc\n| new file mode 100644\n| index 0000000..33955df\n| --- /dev/null\n| +++ b/ast/example/test.cc\n| @@ -0,0 +1,6 @@\n| +#include <stdio.h>\n| +int f(int x){\n| +  int y = (x * 2);\n| +  int result = (y / 42);\n| +  return result;\n| +}\n| diff --git a/ast/example/test_new.cc b/ast/example/test_new.cc\n| new file mode 100644\n| index 0000000..52c0681\n| --- /dev/null\n| +++ b/ast/example/test_new.cc\n| @@ -0,0 +1,5 @@\n| +int f(int x){\n| +  int y = (x * 2);\n| +  int result = (y / 42);\n| +  return result;\n| +}\n\n* 9558691  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \n| diff --git a/git/user/README.md b/git/user/README.md\n| index 1568efa..2337cca 100644\n| --- a/git/user/README.md\n| +++ b/git/user/README.md\n| @@ -1,3 +1,3 @@\n|  # Fetch Other Websites Account via Git Account\n|  \n| -Author: AlvinZSJt\n| +Author: AlvinZSJ\n\n* 4c8f4f0  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \n| diff --git a/git/history/README.md b/git/history/README.md\n| index bf31411..f2fad88 100644\n| --- a/git/history/README.md\n| +++ b/git/history/README.md\n| @@ -1,3 +1,2 @@\n| -# Git Commit History\n| -\n| +# Map Git Commit History to Authors\n|  Author: ch-chiu\n| diff --git a/git/user/README.md b/git/user/README.md\n| index 384c03d..1568efa 100644\n| --- a/git/user/README.md\n| +++ b/git/user/README.md\n| @@ -1,3 +1,3 @@\n| -# Fetch Other Websites Account via Git Accoun\n| +# Fetch Other Websites Account via Git Account\n|  \n|  Author: AlvinZSJt\n\n* 1f567c2  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \n| diff --git a/git/history/README.md b/git/history/README.md\n| new file mode 100644\n| index 0000000..bf31411\n| --- /dev/null\n| +++ b/git/history/README.md\n| @@ -0,0 +1,3 @@\n| +# Git Commit History\n| +\n| +Author: ch-chiu\n| diff --git a/git/user/README.md b/git/user/README.md\n| new file mode 100644\n| index 0000000..384c03d\n| --- /dev/null\n| +++ b/git/user/README.md\n| @@ -0,0 +1,3 @@\n| +# Fetch Other Websites Account via Git Accoun\n| +\n| +Author: AlvinZSJt\n\n* 3e6cb9c  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \n| diff --git a/README.md b/README.md\n| index ab89bcc..b69aded 100644\n| --- a/README.md\n| +++ b/README.md\n| @@ -11,9 +11,7 @@ Our purpose is to make trace open source project more efficient and simple. To r\n|  ## Project Outline\n|  \n|  The whole workflow contains 3 steps.\n| -\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\n| -\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\n| -some other trees of code, another way is applying git log api to mapping code with developer.\n| -\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\n| -visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\n| +* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\n| +* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\n| +* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\n|  \n\n* 4f04f7e  update 2 days ago <ChrisQiu> <CNPG-qzm@hotmail.com>| \n| diff --git a/README.md b/README.md\n| index ad7247e..ab89bcc 100644\n| --- a/README.md\n| +++ b/README.md\n| @@ -1 +1,19 @@\n|  # codeTracker\n| +\n| +## Obejective\n| +\n| +The structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\n| +\n| +## Goals\n| +\n| +Our purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\n| +\n| +## Project Outline\n| +\n| +The whole workflow contains 3 steps.\n| +\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\n| +\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\n| +some other trees of code, another way is applying git log api to mapping code with developer.\n| +\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\n| +visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\n| +\n\n* fc3971a  Create-README.md 2 days ago <Zhe Wang> <a63188722@163.com>| \n| diff --git a/README.md b/README.md\n| new file mode 100644\n| index 0000000..ad7247e\n| --- /dev/null\n| +++ b/README.md\n| @@ -0,0 +1 @@\n| +# codeTracker\n\n* 018bd60  Initial-commit 2 days ago <Zhe Wang> <a63188722@163.com>  \n  diff --git a/LICENSE b/LICENSE\n  new file mode 100644\n  index 0000000..9cecc1d\n  --- /dev/null\n  +++ b/LICENSE\n  @@ -0,0 +1,674 @@\n  +                    GNU GENERAL PUBLIC LICENSE\n  +                       Version 3, 29 June 2007\n  +\n  + Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n  + Everyone is permitted to copy and distribute verbatim copies\n  + of this license document, but changing it is not allowed.\n  +\n  +                            Preamble\n  +\n  +  The GNU General Public License is a free, copyleft license for\n  +software and other kinds of works.\n  +\n  +  The licenses for most software and other practical works are designed\n  +to take away your freedom to share and change the works.  By contrast,\n  +the GNU General Public License is intended to guarantee your freedom to\n  +share and change all versions of a program--to make sure it remains free\n  +software for all its users.  We, the Free Software Foundation, use the\n  +GNU General Public License for most of our software; it applies also to\n  +any other work released this way by its authors.  You can apply it to\n  +your programs, too.\n  +\n  +  When we speak of free software, we are referring to freedom, not\n  +price.  Our General Public Licenses are designed to make sure that you\n  +have the freedom to distribute copies of free software (and charge for\n  +them if you wish), that you receive source code or can get it if you\n  +want it, that you can change the software or use pieces of it in new\n  +free programs, and that you know you can do these things.\n  +\n  +  To protect your rights, we need to prevent others from denying you\n  +these rights or asking you to surrender the rights.  Therefore, you have\n  +certain responsibilities if you distribute copies of the software, or if\n  +you modify it: responsibilities to respect the freedom of others.\n  +\n  +  For example, if you distribute copies of such a program, whether\n  +gratis or for a fee, you must pass on to the recipients the same\n  +freedoms that you received.  You must make sure that they, too, receive\n  +or can get the source code.  And you must show them these terms so they\n  +know their rights.\n  +\n  +  Developers that use the GNU GPL protect your rights with two steps:\n  +(1) assert copyright on the software, and (2) offer you this License\n  +giving you legal permission to copy, distribute and/or modify it.\n  +\n  +  For the developers' and authors' protection, the GPL clearly explains\n  +that there is no warranty for this free software.  For both users' and\n  +authors' sake, the GPL requires that modified versions be marked as\n  +changed, so that their problems will not be attributed erroneously to\n  +authors of previous versions.\n  +\n  +  Some devices are designed to deny users access to install or run\n  +modified versions of the software inside them, although the manufacturer\n  +can do so.  This is fundamentally incompatible with the aim of\n  +protecting users' freedom to change the software.  The systematic\n  +pattern of such abuse occurs in the area of products for individuals to\n  +use, which is precisely where it is most unacceptable.  Therefore, we\n  +have designed this version of the GPL to prohibit the practice for those\n  +products.  If such problems arise substantially in other domains, we\n  +stand ready to extend this provision to those domains in future versions\n  +of the GPL, as needed to protect the freedom of users.\n  +\n  +  Finally, every program is threatened constantly by software patents.\n  +States should not allow patents to restrict development and use of\n  +software on general-purpose computers, but in those that do, we wish to\n  +avoid the special danger that patents applied to a free program could\n  +make it effectively proprietary.  To prevent this, the GPL assures that\n  +patents cannot be used to render the program non-free.\n  +\n  +  The precise terms and conditions for copying, distribution and\n  +modification follow.\n  +\n  +                       TERMS AND CONDITIONS\n  +\n  +  0. Definitions.\n  +\n  +  \"This License\" refers to version 3 of the GNU General Public License.\n  +\n  +  \"Copyright\" also means copyright-like laws that apply to other kinds of\n  +works, such as semiconductor masks.\n  +\n  +  \"The Program\" refers to any copyrightable work licensed under this\n  +License.  Each licensee is addressed as \"you\".  \"Licensees\" and\n  +\"recipients\" may be individuals or organizations.\n  +\n  +  To \"modify\" a work means to copy from or adapt all or part of the work\n  +in a fashion requiring copyright permission, other than the making of an\n  +exact copy.  The resulting work is called a \"modified version\" of the\n  +earlier work or a work \"based on\" the earlier work.\n  +\n  +  A \"covered work\" means either the unmodified Program or a work based\n  +on the Program.\n  +\n  +  To \"propagate\" a work means to do anything with it that, without\n  +permission, would make you directly or secondarily liable for\n  +infringement under applicable copyright law, except executing it on a\n  +computer or modifying a private copy.  Propagation includes copying,\n  +distribution (with or without modification), making available to the\n  +public, and in some countries other activities as well.\n  +\n  +  To \"convey\" a work means any kind of propagation that enables other\n  +parties to make or receive copies.  Mere interaction with a user through\n  +a computer network, with no transfer of a copy, is not conveying.\n  +\n  +  An interactive user interface displays \"Appropriate Legal Notices\"\n  +to the extent that it includes a convenient and prominently visible\n  +feature that (1) displays an appropriate copyright notice, and (2)\n  +tells the user that there is no warranty for the work (except to the\n  +extent that warranties are provided), that licensees may convey the\n  +work under this License, and how to view a copy of this License.  If\n  +the interface presents a list of user commands or options, such as a\n  +menu, a prominent item in the list meets this criterion.\n  +\n  +  1. Source Code.\n  +\n  +  The \"source code\" for a work means the preferred form of the work\n  +for making modifications to it.  \"Object code\" means any non-source\n  +form of a work.\n  +\n  +  A \"Standard Interface\" means an interface that either is an official\n  +standard defined by a recognized standards body, or, in the case of\n  +interfaces specified for a particular programming language, one that\n  +is widely used among developers working in that language.\n  +\n  +  The \"System Libraries\" of an executable work include anything, other\n  +than the work as a whole, that (a) is included in the normal form of\n  +packaging a Major Component, but which is not part of that Major\n  +Component, and (b) serves only to enable use of the work with that\n  +Major Component, or to implement a Standard Interface for which an\n  +implementation is available to the public in source code form.  A\n  +\"Major Component\", in this context, means a major essential component\n  +(kernel, window system, and so on) of the specific operating system\n  +(if any) on which the executable work runs, or a compiler used to\n  +produce the work, or an object code interpreter used to run it.\n  +\n  +  The \"Corresponding Source\" for a work in object code form means all\n  +the source code needed to generate, install, and (for an executable\n  +work) run the object code and to modify the work, including scripts to\n  +control those activities.  However, it does not include the work's\n  +System Libraries, or general-purpose tools or generally available free\n  +programs which are used unmodified in performing those activities but\n  +which are not part of the work.  For example, Corresponding Source\n  +includes interface definition files associated with source files for\n  +the work, and the source code for shared libraries and dynamically\n  +linked subprograms that the work is specifically designed to require,\n  +such as by intimate data communication or control flow between those\n  +subprograms and other parts of the work.\n  +\n  +  The Corresponding Source need not include anything that users\n  +can regenerate automatically from other parts of the Corresponding\n  +Source.\n  +\n  +  The Corresponding Source for a work in source code form is that\n  +same work.\n  +\n  +  2. Basic Permissions.\n  +\n  +  All rights granted under this License are granted for the term of\n  +copyright on the Program, and are irrevocable provided the stated\n  +conditions are met.  This License explicitly affirms your unlimited\n  +permission to run the unmodified Program.  The output from running a\n  +covered work is covered by this License only if the output, given its\n  +content, constitutes a covered work.  This License acknowledges your\n  +rights of fair use or other equivalent, as provided by copyright law.\n  +\n  +  You may make, run and propagate covered works that you do not\n  +convey, without conditions so long as your license otherwise remains\n  +in force.  You may convey covered works to others for the sole purpose\n  +of having them make modifications exclusively for you, or provide you\n  +with facilities for running those works, provided that you comply with\n  +the terms of this License in conveying all material for which you do\n  +not control copyright.  Those thus making or running the covered works\n  +for you must do so exclusively on your behalf, under your direction\n  +and control, on terms that prohibit them from making any copies of\n  +your copyrighted material outside their relationship with you.\n  +\n  +  Conveying under any other circumstances is permitted solely under\n  +the conditions stated below.  Sublicensing is not allowed; section 10\n  +makes it unnecessary.\n  +\n  +  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n  +\n  +  No covered work shall be deemed part of an effective technological\n  +measure under any applicable law fulfilling obligations under article\n  +11 of the WIPO copyright treaty adopted on 20 December 1996, or\n  +similar laws prohibiting or restricting circumvention of such\n  +measures.\n  +\n  +  When you convey a covered work, you waive any legal power to forbid\n  +circumvention of technological measures to the extent such circumvention\n  +is effected by exercising rights under this License with respect to\n  +the covered work, and you disclaim any intention to limit operation or\n  +modification of the work as a means of enforcing, against the work's\n  +users, your or third parties' legal rights to forbid circumvention of\n  +technological measures.\n  +\n  +  4. Conveying Verbatim Copies.\n  +\n  +  You may convey verbatim copies of the Program's source code as you\n  +receive it, in any medium, provided that you conspicuously and\n  +appropriately publish on each copy an appropriate copyright notice;\n  +keep intact all notices stating that this License and any\n  +non-permissive terms added in accord with section 7 apply to the code;\n  +keep intact all notices of the absence of any warranty; and give all\n  +recipients a copy of this License along with the Program.\n  +\n  +  You may charge any price or no price for each copy that you convey,\n  +and you may offer support or warranty protection for a fee.\n  +\n  +  5. Conveying Modified Source Versions.\n  +\n  +  You may convey a work based on the Program, or the modifications to\n  +produce it from the Program, in the form of source code under the\n  +terms of section 4, provided that you also meet all of these conditions:\n  +\n  +    a) The work must carry prominent notices stating that you modified\n  +    it, and giving a relevant date.\n  +\n  +    b) The work must carry prominent notices stating that it is\n  +    released under this License and any conditions added under section\n  +    7.  This requirement modifies the requirement in section 4 to\n  +    \"keep intact all notices\".\n  +\n  +    c) You must license the entire work, as a whole, under this\n  +    License to anyone who comes into possession of a copy.  This\n  +    License will therefore apply, along with any applicable section 7\n  +    additional terms, to the whole of the work, and all its parts,\n  +    regardless of how they are packaged.  This License gives no\n  +    permission to license the work in any other way, but it does not\n  +    invalidate such permission if you have separately received it.\n  +\n  +    d) If the work has interactive user interfaces, each must display\n  +    Appropriate Legal Notices; however, if the Program has interactive\n  +    interfaces that do not display Appropriate Legal Notices, your\n  +    work need not make them do so.\n  +\n  +  A compilation of a covered work with other separate and independent\n  +works, which are not by their nature extensions of the covered work,\n  +and which are not combined with it such as to form a larger program,\n  +in or on a volume of a storage or distribution medium, is called an\n  +\"aggregate\" if the compilation and its resulting copyright are not\n  +used to limit the access or legal rights of the compilation's users\n  +beyond what the individual works permit.  Inclusion of a covered work\n  +in an aggregate does not cause this License to apply to the other\n  +parts of the aggregate.\n  +\n  +  6. Conveying Non-Source Forms.\n  +\n  +  You may convey a covered work in object code form under the terms\n  +of sections 4 and 5, provided that you also convey the\n  +machine-readable Corresponding Source under the terms of this License,\n  +in one of these ways:\n  +\n  +    a) Convey the object code in, or embodied in, a physical product\n  +    (including a physical distribution medium), accompanied by the\n  +    Corresponding Source fixed on a durable physical medium\n  +    customarily used for software interchange.\n  +\n  +    b) Convey the object code in, or embodied in, a physical product\n  +    (including a physical distribution medium), accompanied by a\n  +    written offer, valid for at least three years and valid for as\n  +    long as you offer spare parts or customer support for that product\n  +    model, to give anyone who possesses the object code either (1) a\n  +    copy of the Corresponding Source for all the software in the\n  +    product that is covered by this License, on a durable physical\n  +    medium customarily used for software interchange, for a price no\n  +    more than your reasonable cost of physically performing this\n  +    conveying of source, or (2) access to copy the\n  +    Corresponding Source from a network server at no charge.\n  +\n  +    c) Convey individual copies of the object code with a copy of the\n  +    written offer to provide the Corresponding Source.  This\n  +    alternative is allowed only occasionally and noncommercially, and\n  +    only if you received the object code with such an offer, in accord\n  +    with subsection 6b.\n  +\n  +    d) Convey the object code by offering access from a designated\n  +    place (gratis or for a charge), and offer equivalent access to the\n  +    Corresponding Source in the same way through the same place at no\n  +    further charge.  You need not require recipients to copy the\n  +    Corresponding Source along with the object code.  If the place to\n  +    copy the object code is a network server, the Corresponding Source\n  +    may be on a different server (operated by you or a third party)\n  +    that supports equivalent copying facilities, provided you maintain\n  +    clear directions next to the object code saying where to find the\n  +    Corresponding Source.  Regardless of what server hosts the\n  +    Corresponding Source, you remain obligated to ensure that it is\n  +    available for as long as needed to satisfy these requirements.\n  +\n  +    e) Convey the object code using peer-to-peer transmission, provided\n  +    you inform other peers where the object code and Corresponding\n  +    Source of the work are being offered to the general public at no\n  +    charge under subsection 6d.\n  +\n  +  A separable portion of the object code, whose source code is excluded\n  +from the Corresponding Source as a System Library, need not be\n  +included in conveying the object code work.\n  +\n  +  A \"User Product\" is either (1) a \"consumer product\", which means any\n  +tangible personal property which is normally used for personal, family,\n  +or household purposes, or (2) anything designed or sold for incorporation\n  +into a dwelling.  In determining whether a product is a consumer product,\n  +doubtful cases shall be resolved in favor of coverage.  For a particular\n  +product received by a particular user, \"normally used\" refers to a\n  +typical or common use of that class of product, regardless of the status\n  +of the particular user or of the way in which the particular user\n  +actually uses, or expects or is expected to use, the product.  A product\n  +is a consumer product regardless of whether the product has substantial\n  +commercial, industrial or non-consumer uses, unless such uses represent\n  +the only significant mode of use of the product.\n  +\n  +  \"Installation Information\" for a User Product means any methods,\n  +procedures, authorization keys, or other information required to install\n  +and execute modified versions of a covered work in that User Product from\n  +a modified version of its Corresponding Source.  The information must\n  +suffice to ensure that the continued functioning of the modified object\n  +code is in no case prevented or interfered with solely because\n  +modification has been made.\n  +\n  +  If you convey an object code work under this section in, or with, or\n  +specifically for use in, a User Product, and the conveying occurs as\n  +part of a transaction in which the right of possession and use of the\n  +User Product is transferred to the recipient in perpetuity or for a\n  +fixed term (regardless of how the transaction is characterized), the\n  +Corresponding Source conveyed under this section must be accompanied\n  +by the Installation Information.  But this requirement does not apply\n  +if neither you nor any third party retains the ability to install\n  +modified object code on the User Product (for example, the work has\n  +been installed in ROM).\n  +\n  +  The requirement to provide Installation Information does not include a\n  +requirement to continue to provide support service, warranty, or updates\n  +for a work that has been modified or installed by the recipient, or for\n  +the User Product in which it has been modified or installed.  Access to a\n  +network may be denied when the modification itself materially and\n  +adversely affects the operation of the network or violates the rules and\n  +protocols for communication across the network.\n  +\n  +  Corresponding Source conveyed, and Installation Information provided,\n  +in accord with this section must be in a format that is publicly\n  +documented (and with an implementation available to the public in\n  +source code form), and must require no special password or key for\n  +unpacking, reading or copying.\n  +\n  +  7. Additional Terms.\n  +\n  +  \"Additional permissions\" are terms that supplement the terms of this\n  +License by making exceptions from one or more of its conditions.\n  +Additional permissions that are applicable to the entire Program shall\n  +be treated as though they were included in this License, to the extent\n  +that they are valid under applicable law.  If additional permissions\n  +apply only to part of the Program, that part may be used separately\n  +under those permissions, but the entire Program remains governed by\n  +this License without regard to the additional permissions.\n  +\n  +  When you convey a copy of a covered work, you may at your option\n  +remove any additional permissions from that copy, or from any part of\n  +it.  (Additional permissions may be written to require their own\n  +removal in certain cases when you modify the work.)  You may place\n  +additional permissions on material, added by you to a covered work,\n  +for which you have or can give appropriate copyright permission.\n  +\n  +  Notwithstanding any other provision of this License, for material you\n  +add to a covered work, you may (if authorized by the copyright holders of\n  +that material) supplement the terms of this License with terms:\n  +\n  +    a) Disclaiming warranty or limiting liability differently from the\n  +    terms of sections 15 and 16 of this License; or\n  +\n  +    b) Requiring preservation of specified reasonable legal notices or\n  +    author attributions in that material or in the Appropriate Legal\n  +    Notices displayed by works containing it; or\n  +\n  +    c) Prohibiting misrepresentation of the origin of that material, or\n  +    requiring that modified versions of such material be marked in\n  +    reasonable ways as different from the original version; or\n  +\n  +    d) Limiting the use for publicity purposes of names of licensors or\n  +    authors of the material; or\n  +\n  +    e) Declining to grant rights under trademark law for use of some\n  +    trade names, trademarks, or service marks; or\n  +\n  +    f) Requiring indemnification of licensors and authors of that\n  +    material by anyone who conveys the material (or modified versions of\n  +    it) with contractual assumptions of liability to the recipient, for\n  +    any liability that these contractual assumptions directly impose on\n  +    those licensors and authors.\n  +\n  +  All other non-permissive additional terms are considered \"further\n  +restrictions\" within the meaning of section 10.  If the Program as you\n  +received it, or any part of it, contains a notice stating that it is\n  +governed by this License along with a term that is a further\n  +restriction, you may remove that term.  If a license document contains\n  +a further restriction but permits relicensing or conveying under this\n  +License, you may add to a covered work material governed by the terms\n  +of that license document, provided that the further restriction does\n  +not survive such relicensing or conveying.\n  +\n  +  If you add terms to a covered work in accord with this section, you\n  +must place, in the relevant source files, a statement of the\n  +additional terms that apply to those files, or a notice indicating\n  +where to find the applicable terms.\n  +\n  +  Additional terms, permissive or non-permissive, may be stated in the\n  +form of a separately written license, or stated as exceptions;\n  +the above requirements apply either way.\n  +\n  +  8. Termination.\n  +\n  +  You may not propagate or modify a covered work except as expressly\n  +provided under this License.  Any attempt otherwise to propagate or\n  +modify it is void, and will automatically terminate your rights under\n  +this License (including any patent licenses granted under the third\n  +paragraph of section 11).\n  +\n  +  However, if you cease all violation of this License, then your\n  +license from a particular copyright holder is reinstated (a)\n  +provisionally, unless and until the copyright holder explicitly and\n  +finally terminates your license, and (b) permanently, if the copyright\n  +holder fails to notify you of the violation by some reasonable means\n  +prior to 60 days after the cessation.\n  +\n  +  Moreover, your license from a particular copyright holder is\n  +reinstated permanently if the copyright holder notifies you of the\n  +violation by some reasonable means, this is the first time you have\n  +received notice of violation of this License (for any work) from that\n  +copyright holder, and you cure the violation prior to 30 days after\n  +your receipt of the notice.\n  +\n  +  Termination of your rights under this section does not terminate the\n  +licenses of parties who have received copies or rights from you under\n  +this License.  If your rights have been terminated and not permanently\n  +reinstated, you do not qualify to receive new licenses for the same\n  +material under section 10.\n  +\n  +  9. Acceptance Not Required for Having Copies.\n  +\n  +  You are not required to accept this License in order to receive or\n  +run a copy of the Program.  Ancillary propagation of a covered work\n  +occurring solely as a consequence of using peer-to-peer transmission\n  +to receive a copy likewise does not require acceptance.  However,\n  +nothing other than this License grants you permission to propagate or\n  +modify any covered work.  These actions infringe copyright if you do\n  +not accept this License.  Therefore, by modifying or propagating a\n  +covered work, you indicate your acceptance of this License to do so.\n  +\n  +  10. Automatic Licensing of Downstream Recipients.\n  +\n  +  Each time you convey a covered work, the recipient automatically\n  +receives a license from the original licensors, to run, modify and\n  +propagate that work, subject to this License.  You are not responsible\n  +for enforcing compliance by third parties with this License.\n  +\n  +  An \"entity transaction\" is a transaction transferring control of an\n  +organization, or substantially all assets of one, or subdividing an\n  +organization, or merging organizations.  If propagation of a covered\n  +work results from an entity transaction, each party to that\n  +transaction who receives a copy of the work also receives whatever\n  +licenses to the work the party's predecessor in interest had or could\n  +give under the previous paragraph, plus a right to possession of the\n  +Corresponding Source of the work from the predecessor in interest, if\n  +the predecessor has it or can get it with reasonable efforts.\n  +\n  +  You may not impose any further restrictions on the exercise of the\n  +rights granted or affirmed under this License.  For example, you may\n  +not impose a license fee, royalty, or other charge for exercise of\n  +rights granted under this License, and you may not initiate litigation\n  +(including a cross-claim or counterclaim in a lawsuit) alleging that\n  +any patent claim is infringed by making, using, selling, offering for\n  +sale, or importing the Program or any portion of it.\n  +\n  +  11. Patents.\n  +\n  +  A \"contributor\" is a copyright holder who authorizes use under this\n  +License of the Program or a work on which the Program is based.  The\n  +work thus licensed is called the contributor's \"contributor version\".\n  +\n  +  A contributor's \"essential patent claims\" are all patent claims\n  +owned or controlled by the contributor, whether already acquired or\n  +hereafter acquired, that would be infringed by some manner, permitted\n  +by this License, of making, using, or selling its contributor version,\n  +but do not include claims that would be infringed only as a\n  +consequence of further modification of the contributor version.  For\n  +purposes of this definition, \"control\" includes the right to grant\n  +patent sublicenses in a manner consistent with the requirements of\n  +this License.\n  +\n  +  Each contributor grants you a non-exclusive, worldwide, royalty-free\n  +patent license under the contributor's essential patent claims, to\n  +make, use, sell, offer for sale, import and otherwise run, modify and\n  +propagate the contents of its contributor version.\n  +\n  +  In the following three paragraphs, a \"patent license\" is any express\n  +agreement or commitment, however denominated, not to enforce a patent\n  +(such as an express permission to practice a patent or covenant not to\n  +sue for patent infringement).  To \"grant\" such a patent license to a\n  +party means to make such an agreement or commitment not to enforce a\n  +patent against the party.\n  +\n  +  If you convey a covered work, knowingly relying on a patent license,\n  +and the Corresponding Source of the work is not available for anyone\n  +to copy, free of charge and under the terms of this License, through a\n  +publicly available network server or other readily accessible means,\n  +then you must either (1) cause the Corresponding Source to be so\n  +available, or (2) arrange to deprive yourself of the benefit of the\n  +patent license for this particular work, or (3) arrange, in a manner\n  +consistent with the requirements of this License, to extend the patent\n  +license to downstream recipients.  \"Knowingly relying\" means you have\n  +actual knowledge that, but for the patent license, your conveying the\n  +covered work in a country, or your recipient's use of the covered work\n  +in a country, would infringe one or more identifiable patents in that\n  +country that you have reason to believe are valid.\n  +\n  +  If, pursuant to or in connection with a single transaction or\n  +arrangement, you convey, or propagate by procuring conveyance of, a\n  +covered work, and grant a patent license to some of the parties\n  +receiving the covered work authorizing them to use, propagate, modify\n  +or convey a specific copy of the covered work, then the patent license\n  +you grant is automatically extended to all recipients of the covered\n  +work and works based on it.\n  +\n  +  A patent license is \"discriminatory\" if it does not include within\n  +the scope of its coverage, prohibits the exercise of, or is\n  +conditioned on the non-exercise of one or more of the rights that are\n  +specifically granted under this License.  You may not convey a covered\n  +work if you are a party to an arrangement with a third party that is\n  +in the business of distributing software, under which you make payment\n  +to the third party based on the extent of your activity of conveying\n  +the work, and under which the third party grants, to any of the\n  +parties who would receive the covered work from you, a discriminatory\n  +patent license (a) in connection with copies of the covered work\n  +conveyed by you (or copies made from those copies), or (b) primarily\n  +for and in connection with specific products or compilations that\n  +contain the covered work, unless you entered into that arrangement,\n  +or that patent license was granted, prior to 28 March 2007.\n  +\n  +  Nothing in this License shall be construed as excluding or limiting\n  +any implied license or other defenses to infringement that may\n  +otherwise be available to you under applicable patent law.\n  +\n  +  12. No Surrender of Others' Freedom.\n  +\n  +  If conditions are imposed on you (whether by court order, agreement or\n  +otherwise) that contradict the conditions of this License, they do not\n  +excuse you from the conditions of this License.  If you cannot convey a\n  +covered work so as to satisfy simultaneously your obligations under this\n  +License and any other pertinent obligations, then as a consequence you may\n  +not convey it at all.  For example, if you agree to terms that obligate you\n  +to collect a royalty for further conveying from those to whom you convey\n  +the Program, the only way you could satisfy both those terms and this\n  +License would be to refrain entirely from conveying the Program.\n  +\n  +  13. Use with the GNU Affero General Public License.\n  +\n  +  Notwithstanding any other provision of this License, you have\n  +permission to link or combine any covered work with a work licensed\n  +under version 3 of the GNU Affero General Public License into a single\n  +combined work, and to convey the resulting work.  The terms of this\n  +License will continue to apply to the part which is the covered work,\n  +but the special requirements of the GNU Affero General Public License,\n  +section 13, concerning interaction through a network will apply to the\n  +combination as such.\n  +\n  +  14. Revised Versions of this License.\n  +\n  +  The Free Software Foundation may publish revised and/or new versions of\n  +the GNU General Public License from time to time.  Such new versions will\n  +be similar in spirit to the present version, but may differ in detail to\n  +address new problems or concerns.\n  +\n  +  Each version is given a distinguishing version number.  If the\n  +Program specifies that a certain numbered version of the GNU General\n  +Public License \"or any later version\" applies to it, you have the\n  +option of following the terms and conditions either of that numbered\n  +version or of any later version published by the Free Software\n  +Foundation.  If the Program does not specify a version number of the\n  +GNU General Public License, you may choose any version ever published\n  +by the Free Software Foundation.\n  +\n  +  If the Program specifies that a proxy can decide which future\n  +versions of the GNU General Public License can be used, that proxy's\n  +public statement of acceptance of a version permanently authorizes you\n  +to choose that version for the Program.\n  +\n  +  Later license versions may give you additional or different\n  +permissions.  However, no additional obligations are imposed on any\n  +author or copyright holder as a result of your choosing to follow a\n  +later version.\n  +\n  +  15. Disclaimer of Warranty.\n  +\n  +  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n  +APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\n  +HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\n  +OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\n  +THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  +PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n  +IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\n  +ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n  +\n  +  16. Limitation of Liability.\n  +\n  +  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n  +WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\n  +THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n  +GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\n  +USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\n  +DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n  +PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\n  +EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n  +SUCH DAMAGES.\n  +\n  +  17. Interpretation of Sections 15 and 16.\n  +\n  +  If the disclaimer of warranty and limitation of liability provided\n  +above cannot be given local legal effect according to their terms,\n  +reviewing courts shall apply local law that most closely approximates\n  +an absolute waiver of all civil liability in connection with the\n  +Program, unless a warranty or assumption of liability accompanies a\n  +copy of the Program in return for a fee.\n  +\n  +                     END OF TERMS AND CONDITIONS\n  +\n  +            How to Apply These Terms to Your New Programs\n  +\n  +  If you develop a new program, and you want it to be of the greatest\n  +possible use to the public, the best way to achieve this is to make it\n  +free software which everyone can redistribute and change under these terms.\n  +\n  +  To do so, attach the following notices to the program.  It is safest\n  +to attach them to the start of each source file to most effectively\n  +state the exclusion of warranty; and each file should have at least\n  +the \"copyright\" line and a pointer to where the full notice is found.\n  +\n  +    {one line to give the program's name and a brief idea of what it does.}\n  +    Copyright (C) {year}  {name of author}\n  +\n  +    This program is free software: you can redistribute it and/or modify\n  +    it under the terms of the GNU General Public License as published by\n  +    the Free Software Foundation, either version 3 of the License, or\n  +    (at your option) any later version.\n  +\n  +    This program is distributed in the hope that it will be useful,\n  +    but WITHOUT ANY WARRANTY; without even the implied warranty of\n  +    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  +    GNU General Public License for more details.\n  +\n  +    You should have received a copy of the GNU General Public License\n  +    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  +\n  +Also add information on how to contact you by electronic and paper mail.\n  +\n  +  If the program does terminal interaction, make it output a short\n  +notice like this when it starts in an interactive mode:\n  +\n  +    {project}  Copyright (C) {year}  {fullname}\n  +    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n  +    This is free software, and you are welcome to redistribute it\n  +    under certain conditions; type `show c' for details.\n  +\n  +The hypothetical commands `show w' and `show c' should show the appropriate\n  +parts of the General Public License.  Of course, your program's commands\n  +might be different; for a GUI interface, you would use an \"about box\".\n  +\n  +  You should also get your employer (if you work as a programmer) or school,\n  +if any, to sign a \"copyright disclaimer\" for the program, if necessary.\n  +For more information on this, and how to apply and follow the GNU GPL, see\n  +<http://www.gnu.org/licenses/>.\n  +\n  +  The GNU General Public License does not permit incorporating your program\n  +into proprietary programs.  If your program is a subroutine library, you\n  +may consider it more useful to permit linking proprietary applications with\n  +the library.  If this is what you want to do, use the GNU Lesser General\n  +Public License instead of this License.  But first, please read\n  +<http://www.gnu.org/philosophy/why-not-lgpl.html>.",
      "email": "a63188722@163.com",
      "author": "<Zhe Wang>"
   },
   {
      "commit_date": "1506746697",
      "file": "git/history/main.py",
      "code_snippet": "#!~/anaconda3/bin/ python\n# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2017 Zimeng Qiu <CNPG-qzm@hotmail.com>\n# Licensed under the GNU LGPL v2.1 - http://www.gnu.org/licenses/lgpl.html\n\n\"\"\"\nUSAGE: %(program)s input_code_file output_dir\n\"\"\"\n\nimport logging\nimport os\nimport sys\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\n\n\ndef get_code(inp):\n    command = \"git log --pretty=format:'hash: %h ref: %d commit_title: %f date: %ci author: %aN email:%ae' \" \\\n              \"--abbrev-commit -p --graph \" + inp\\\n              # + \" > \" + outp + \"/log.txt\"\n    input_data = os.popen(command)\n    data = input_data.read()\n    return data\n\nif __name__ == '__main__':\n    program = os.path.basename(sys.argv[0])\n    logger = logging.getLogger(program)\n\n    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s')\n    logging.root.setLevel(level=logging.INFO)\n    logger.info(\"running %s \" % ' '.join(sys.argv))\n\n    # check and process input arguments\n    if len(sys.argv) != 3:\n        print(len(sys.argv))\n        raise SystemExit(\"Usage: python main.py input_code_file output_dir\")\n    input_file, output_dir = sys.argv[1:3]\n    if not os.path.exists(output_dir):\n        try:\n            os.makedirs(output_dir)\n        except OSError as exception:\n            raise SystemExit(\"Error: Could not create the output dir.\")\n\n    commit_history = get_code(input_file)\n    print(commit_history)\n\n",
      "email": "a63188722@163.com",
      "author": "<Zhe Wang>"
   },
   {
      "commit_date": "2017-10-02 16:24:49 +0800",
      "file": "ast/PrintAST.py",
      "code_snippet": "'''\ncommand = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\nF = os.popen(command)\nprint (F.read())",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-02 16:14:44 +0800",
      "file": "ast/PrintAST.py",
      "code_snippet": "#!/usr/bin/env python\nimport os\n\n'''\n    Preprocess of the code. Remove the header files and standard libraries\n'''\ncode_path = './example/test.cc'\npath_new = './example/test_new.cc'\nwith open(code_path , 'r') as f:\n    lines = f.readlines()\nf.close()\n\nwith open(path_new , 'w') as f_new:\n    for line in lines:\n        if '#include' in line:\n            continue\n        f_new.write(line)\nf_new.close()\n\n'''\n    Print AST based on command line\n'''\ncommand = 'clang -Xclang -ast-dump -fsyntax-only ' + path_new\nF = os.popen(command)\nprint F.read()",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-02 16:14:44 +0800",
      "file": "ast/README.md",
      "code_snippet": "# Generate abstract syntax tree \nAuthor: king-jojo\n\nFirst install Clang with: \n\n    $ sudo apt-get install clang\n\nUsage: \n\n    ",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-02 16:14:44 +0800",
      "file": "ast/example/test.cc",
      "code_snippet": "#include <stdio.h>\nint f(int x){\n  int y = (x * 2);\n  int result = (y / 42);\n  return result;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-10-02 16:14:44 +0800",
      "file": "ast/example/test_new.cc",
      "code_snippet": "int f(int x){\n  int y = (x * 2);\n  int result = (y / 42);\n  return result;\n}",
      "email": "zjin@vmware.com",
      "author": "Zhenghui Jin"
   },
   {
      "commit_date": "2017-09-30 13:59:25 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\n\nAuthor: AlvinZSJ",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:58:26 +0800",
      "file": "git/history/README.md",
      "code_snippet": "# Map Git Commit History to Authors\nAuthor: ch-chiu",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:58:26 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Account\n\nAuthor: AlvinZSJt",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:56:48 +0800",
      "file": "git/history/README.md",
      "code_snippet": "# Git Commit History\n\nAuthor: ch-chiu",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:56:48 +0800",
      "file": "git/user/README.md",
      "code_snippet": "# Fetch Other Websites Account via Git Accoun\n\nAuthor: AlvinZSJt",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:24:50 +0800",
      "file": "README.md",
      "code_snippet": "## Project Outline\n\nThe whole workflow contains 3 steps.\n* Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\n* Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or some other trees of code, another way is applying git log api to mapping code with developer.\n* Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can visualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 13:20:50 +0800",
      "file": "README.md",
      "code_snippet": "# codeTracker\n\n## Obejective\n\nThe structure of many open source projects is very complex, leading to analyze their evolution process, to figure out what has happened in this process has become very difficult. Therefore, to help developer learn more about open source world, we aim to build this project to trace open source project.\n\n## Goals\n\nOur purpose is to make trace open source project more efficient and simple. To realize this, we might combine git commit history of open source project and compiler output to bridge the gap between code and developer.\n\n## Project Outline\n\nThe whole workflow contains 3 steps.\n\u2022 Input: Input of the whole project might be 4 kinds: code snippet, file, class or function.\n\u2022 Processing: There are 2 separate ways to process input data. One is using compiler, leading to get AST or\nsome other trees of code, another way is applying git log api to mapping code with developer.\n\u2022 Visualizing/Mapping: After processing of input data, we obtain either code trees or git logs, then we can\nvisualize trees by applying modules like graphviz and mapping code with developer by making use of git log. The final result of the workflow might have other potential applications, which are mentioned in the last chapter of our report.\n",
      "email": "CNPG-qzm@hotmail.com",
      "author": "ChrisQiu"
   },
   {
      "commit_date": "2017-09-30 00:07:51 -0500",
      "file": "README.md",
      "code_snippet": "# codeTracker",
      "email": "a63188722@163.com",
      "author": "Zhe Wang"
   },
   {
      "commit_date": "2017-09-29 23:44:57 -0500",
      "file": "LICENSE",
      "code_snippet": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.",
      "email": "a63188722@163.com",
      "author": "Zhe Wang"
   }
]